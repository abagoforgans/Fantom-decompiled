contract main {




// =====================  Runtime code  =====================


#
#  - sub_62827861(?)
#
function _fallback() payable {
    revert
}

function sub_960d244e(?) {
    require calldata.size - 4 >= 128
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    require ext_code.size(address(arg1))
    staticcall address(arg1).0x70a08231 with:
            gas gas_remaining wei
           args address(arg2)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] < arg4:
        return 0
    require ext_code.size(address(arg1))
    staticcall address(arg1).0xdd62ed3e with:
            gas gas_remaining wei
           args address(arg2), address(arg3)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] < arg4:
        return 0
    require ext_code.size(address(arg1))
    staticcall address(arg1).0x70a08231 with:
            gas gas_remaining wei
           args address(arg2)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function sub_06b68323(?) {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require (32 * ('cd', 4).length) + 128 >= 96 and (32 * ('cd', 4).length) + 128 <= test266151307()
    mem[96] = ('cd', 4).length
    require calldata.size >= cd[4] + (32 * ('cd', 4).length) + 36
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ('cd', 4).length <= test266151307()
    mem[(32 * ('cd', 4).length) + 128] = ('cd', 4).length
    if ('cd', 4).length:
        mem[(32 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    idx = 0
    while uint16(idx) < ('cd', 4).length:
        require uint16(idx) < ('cd', 4).length
        require uint16(idx) < mem[(32 * ('cd', 4).length) + 128]
        mem[(32 * uint16(idx)) + (32 * ('cd', 4).length) + 160] = eth.balance(mem[(32 * uint16(idx)) + 128])
        idx = idx + 1
        continue 
    mem[(64 * ('cd', 4).length) + 160] = 32
    mem[(64 * ('cd', 4).length) + 192] = mem[(32 * ('cd', 4).length) + 128]
    mem[(64 * ('cd', 4).length) + 224 len 32 * mem[(32 * ('cd', 4).length) + 128]] = mem[(32 * ('cd', 4).length) + 160 len 32 * mem[(32 * ('cd', 4).length) + 128]]
    return Array(len=mem[(32 * ('cd', 4).length) + 128], data=mem[(64 * ('cd', 4).length) + 224 len 32 * mem[(32 * ('cd', 4).length) + 128]]), 
}

function balanceOf(address arg1, address[] arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require (32 * arg2.length) + 128 >= 96 and (32 * arg2.length) + 128 <= test266151307()
    mem[96] = arg2.length
    require calldata.size >= arg2 + (32 * arg2.length) + 36
    idx = 0
    s = arg2 + 36
    t = 128
    while idx < arg2.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg2.length <= test266151307()
    mem[(32 * arg2.length) + 128] = arg2.length
    mem[64] = (64 * arg2.length) + 160
    if not arg2.length:
        idx = 0
        while idx < arg2.length:
            require idx < mem[96]
            _59 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            require ext_code.size(arg1)
            staticcall arg1.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_59)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _69 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require idx < mem[(32 * arg2.length) + 128]
            mem[(32 * idx) + (32 * arg2.length) + 160] = mem[_69]
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _64 = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 64 len 32 * _64] = mem[(32 * arg2.length) + 160 len 32 * _64]
        return 32, mem[mem[64] + 32 len (32 * _64) + 32]
    mem[(32 * arg2.length) + 160 len 32 * arg2.length] = call.data[calldata.size len 32 * arg2.length]
    idx = 0
    while idx < arg2.length:
        require idx < mem[96]
        _62 = mem[(32 * idx) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args address(_62)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _71 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require idx < mem[(32 * arg2.length) + 128]
        mem[(32 * idx) + (32 * arg2.length) + 160] = mem[_71]
        idx = idx + 1
        continue 
    mem[mem[64]] = 32
    _66 = mem[(32 * arg2.length) + 128]
    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
    mem[mem[64] + 64 len 32 * _66] = mem[(32 * arg2.length) + 160 len 32 * _66]
    return 32, mem[mem[64] + 32 len (32 * _66) + 32]
}

function sub_dd5e5fbe(?) payable {
    require calldata.size - 4 >= 96
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require (32 * ('cd', 4).length) + 128 >= 96 and (32 * ('cd', 4).length) + 128 <= test266151307()
    mem[96] = ('cd', 4).length
    require calldata.size >= cd[4] + (32 * ('cd', 4).length) + 36
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[36] == address(cd[36])
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 160 >= 128 and (32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160 <= test266151307()
    mem[(32 * ('cd', 4).length) + 128] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = (32 * ('cd', 4).length) + 160
    while idx < ('cd', 68).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ('cd', 68).length
    require ext_code.size(address(cd[36]))
    call address(cd[36]).deposit() with:
       value msg.value wei
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[64] = (32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 224
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160] = 7
    mem[(32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 192] = 'SUCCESS' << 200
    idx = 0
    s = (32 * ('cd', 4).length) + (32 * ('cd', 68).length) + 160
    while idx < ('cd', 68).length:
        _408 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_408 + 32 len 64] = call.data[calldata.size len 64]
        require 0 < mem[_408]
        mem[_408 + 32] = address(cd[36])
        require idx < mem[(32 * ('cd', 4).length) + 128]
        require 1 < mem[_408]
        mem[_408 + 64] = mem[(32 * idx) + (32 * ('cd', 4).length) + 172 len 20]
        require idx < mem[96]
        _415 = mem[(32 * idx) + 128]
        mem[_408 + 100] = mem[(32 * idx) + 140 len 20]
        mem[_408 + 132] = msg.value / ('cd', 68).length
        require ext_code.size(address(cd[36]))
        call address(cd[36]).approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(_415), msg.value / ('cd', 68).length
        mem[_408 + 96] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        mem[64] = _408 + ceil32(return_data.size) + 96
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
        require idx < mem[96]
        _424 = mem[(32 * idx) + 128]
        mem[_408 + ceil32(return_data.size) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
        mem[_408 + ceil32(return_data.size) + 100] = msg.value / ('cd', 68).length / 10
        mem[_408 + ceil32(return_data.size) + 132] = 0
        mem[_408 + ceil32(return_data.size) + 164] = 160
        mem[_408 + ceil32(return_data.size) + 260] = mem[_408]
        t = 0
        u = _408 + 32
        v = _408 + ceil32(return_data.size) + 292
        while t < mem[_408]:
            mem[v] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            v = v + 32
            continue 
        mem[_408 + ceil32(return_data.size) + 196] = this.address
        mem[_408 + ceil32(return_data.size) + 228] = block.timestamp + 1
        require ext_code.size(address(_424))
        call address(_424).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _408 + ceil32(return_data.size) + (32 * mem[_408]) + -mem[64] + 288]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _540 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _542 = mem[_540]
        require mem[_540] <= test266151307()
        require _540 + mem[_540] + 31 < _540 + return_data.size
        _543 = mem[_540 + mem[_540]]
        require mem[_540 + mem[_540]] <= test266151307()
        require (32 * mem[_540 + mem[_540]]) + 32 >= 0 and _540 + ceil32(return_data.size) + (32 * mem[_540 + mem[_540]]) + 32 <= test266151307()
        mem[64] = _540 + ceil32(return_data.size) + (32 * mem[_540 + mem[_540]]) + 32
        mem[_540 + ceil32(return_data.size)] = _543
        require return_data.size >= _542 + (32 * _543) + 32
        u = _540 + _542 + 32
        v = _540 + ceil32(return_data.size) + 32
        t = 0
        while t < _543:
            mem[v] = mem[u]
            u = u + 32
            v = v + 32
            t = t + 1
            continue 
        require _543 - 1 < _543
        _651 = mem[(32 * _543 - 1) + _540 + ceil32(return_data.size) + 32]
        require mem[_408] - 1 < mem[_408]
        _654 = mem[(32 * mem[_408] - 1) + _408 + 32]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_654))
        staticcall address(_654).0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _657 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _658 = mem[_657]
        mem[mem[64] + 4] = msg.sender
        mem[mem[64] + 36] = _658
        require ext_code.size(address(_654))
        call address(_654).0xa9059cbb with:
             gas gas_remaining wei
            args msg.sender, _658
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _661 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_661] == bool(mem[_661])
        require _651
        require idx < mem[96]
        _664 = mem[(32 * idx) + 128]
        mem[mem[64]] = 0x38ed173900000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 9 * msg.value / ('cd', 68).length / 10
        mem[mem[64] + 36] = 0
        mem[mem[64] + 68] = 160
        _666 = mem[_408]
        mem[mem[64] + 164] = mem[_408]
        t = 0
        u = _408 + 32
        v = mem[64] + 196
        while t < _666:
            mem[v] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            v = v + 32
            continue 
        mem[mem[64] + 100] = this.address
        mem[mem[64] + 132] = block.timestamp + 1
        require ext_code.size(address(_664))
        call address(_664).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
             gas gas_remaining wei
            args 9 * msg.value / ('cd', 68).length / 10, 0, 160, address(this.address), block.timestamp + 1, mem[mem[64] + 164 len (32 * _666) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _753 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _754 = mem[_753]
        require mem[_753] <= test266151307()
        require _753 + mem[_753] + 31 < _753 + return_data.size
        _755 = mem[_753 + mem[_753]]
        require mem[_753 + mem[_753]] <= test266151307()
        require (32 * mem[_753 + mem[_753]]) + 32 >= 0 and _753 + ceil32(return_data.size) + (32 * mem[_753 + mem[_753]]) + 32 <= test266151307()
        mem[64] = _753 + ceil32(return_data.size) + (32 * mem[_753 + mem[_753]]) + 32
        mem[_753 + ceil32(return_data.size)] = _755
        require return_data.size >= _754 + (32 * _755) + 32
        u = _753 + _754 + 32
        v = _753 + ceil32(return_data.size) + 32
        t = 0
        while t < _755:
            mem[v] = mem[u]
            u = u + 32
            v = v + 32
            t = t + 1
            continue 
        require _755 - 1 < _755
        require mem[_408] - 1 < mem[_408]
        _841 = mem[(32 * mem[_408] - 1) + _408 + 32]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_841))
        staticcall address(_841).0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _844 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _845 = mem[_844]
        mem[mem[64] + 4] = msg.sender
        mem[mem[64] + 36] = _845
        require ext_code.size(address(_841))
        call address(_841).0xa9059cbb with:
             gas gas_remaining wei
            args msg.sender, _845
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _848 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_848] == bool(mem[_848])
        require mem[(32 * _755 - 1) + _753 + ceil32(return_data.size) + 32]
        if uint16(10000 * _658 / _651) != uint16(10000 * _845 / mem[(32 * _755 - 1) + _753 + ceil32(return_data.size) + 32]):
            _851 = mem[64]
            mem[64] = mem[64] + 64
            mem[_851] = 1
            mem[_851 + 32] = 0x2c00000000000000000000000000000000000000000000000000000000000000
            _853 = mem[64]
            mem[mem[64] + 32 len 100] = call.data[calldata.size len 100]
            mem[mem[64] + 160] = 0
            mem[64] = mem[64] + 192
            _860 = mem[_853 + 160]
            _862 = mem[s]
            require mem[s] + mem[_853 + 160] + 1 <= test266151307()
            mem[_853 + 192] = mem[s] + mem[_853 + 160] + 1
            mem[64] = _853 + floor32(_862 + mem[_853 + 160] + 32) + 224
            if not _862 + _860 + 1:
                _913 = mem[s]
                t = 0
                u = 0
                while t < _913:
                    require t < mem[s]
                    require u < mem[_853 + 192]
                    mem[u + _853 + 224 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _913 = mem[s]
                    t = t + 1
                    u = u + 1
                    continue 
                _1001 = mem[_851]
                s = 0
                t = _913
                while s < _1001:
                    require s < mem[_851]
                    require t < mem[_853 + 192]
                    mem[t + _853 + 224 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _1001 = mem[_851]
                    s = s + 1
                    t = t + 1
                    continue 
                s = 0
                t = _913 + _1001
                while s < mem[_853 + 160]:
                    require s < mem[_853 + 160]
                    require t < mem[_853 + 192]
                    mem[t + _853 + 224 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    s = s + 1
                    t = t + 1
                    continue 
            else:
                mem[_853 + 224 len _862 + _860 + 1] = call.data[calldata.size len _862 + _860 + 1]
                _914 = mem[s]
                t = 0
                u = 0
                while t < _914:
                    require t < mem[s]
                    require u < mem[_853 + 192]
                    mem[u + _853 + 224 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _914 = mem[s]
                    t = t + 1
                    u = u + 1
                    continue 
                _1002 = mem[_851]
                s = 0
                t = _914
                while s < _1002:
                    require s < mem[_851]
                    require t < mem[_853 + 192]
                    mem[t + _853 + 224 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _1002 = mem[_851]
                    s = s + 1
                    t = t + 1
                    continue 
                s = 0
                t = _914 + _1002
                while s < mem[_853 + 160]:
                    require s < mem[_853 + 160]
                    require t < mem[_853 + 192]
                    mem[t + _853 + 224 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    s = s + 1
                    t = t + 1
                    continue 
            idx = idx + 1
            s = _853 + 192
            continue 
        _850 = mem[64]
        mem[64] = mem[64] + 64
        mem[_850] = 1
        mem[_850 + 32] = 0x2c00000000000000000000000000000000000000000000000000000000000000
        _852 = mem[64]
        mem[mem[64]] = 100
        mem[64] = mem[64] + 160
        mem[_852 + 32 len 100] = call.data[calldata.size len 100]
        u = 0
        t = uint16(10000 * _658 / _651)
        while t:
            require u < mem[_852]
            mem[u + _852 + 32 len 8] = Mask(8, -(('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 2), 10))), 0) + 256, 0) << (('mask_shl', 8, 0, 245, ('add', 48, ('mod', ('var', 2), 10))), 0) - 256
            u = u + 1
            t = t / 10
            continue 
        require u <= test266151307()
        _918 = mem[64]
        mem[mem[64]] = u
        mem[64] = mem[64] + ceil32(u) + 32
        if not u:
            t = 0
            while t < u:
                require u + -t - 1 < mem[_852]
                require t < mem[_918]
                mem[t + _918 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                t = t + 1
                continue 
            _1017 = mem[_918]
            _1018 = mem[_850]
            _1019 = mem[s]
            require mem[_850] + mem[s] + mem[_918] <= test266151307()
            _1025 = mem[64]
            mem[mem[64]] = mem[_850] + mem[s] + mem[_918]
            mem[64] = mem[64] + floor32(_1018 + _1019 + _1017 + 31) + 32
            if not _1018 + _1019 + _1017:
                _1079 = mem[s]
                t = 0
                u = 0
                while t < _1079:
                    require t < mem[s]
                    require u < mem[_1025]
                    mem[u + _1025 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _1079 = mem[s]
                    t = t + 1
                    u = u + 1
                    continue 
                _1135 = mem[_850]
                s = 0
                t = _1079
                while s < _1135:
                    require s < mem[_850]
                    require t < mem[_1025]
                    mem[t + _1025 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _1135 = mem[_850]
                    s = s + 1
                    t = t + 1
                    continue 
                _1167 = mem[_918]
                s = 0
                t = _1079 + _1135
                while s < _1167:
                    require s < mem[_918]
                    require t < mem[_1025]
                    mem[t + _1025 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _1167 = mem[_918]
                    s = s + 1
                    t = t + 1
                    continue 
            else:
                mem[_1025 + 32 len _1018 + _1019 + _1017] = call.data[calldata.size len _1018 + _1019 + _1017]
                _1080 = mem[s]
                t = 0
                u = 0
                while t < _1080:
                    require t < mem[s]
                    require u < mem[_1025]
                    mem[u + _1025 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _1080 = mem[s]
                    t = t + 1
                    u = u + 1
                    continue 
                _1136 = mem[_850]
                s = 0
                t = _1080
                while s < _1136:
                    require s < mem[_850]
                    require t < mem[_1025]
                    mem[t + _1025 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _1136 = mem[_850]
                    s = s + 1
                    t = t + 1
                    continue 
                _1168 = mem[_918]
                s = 0
                t = _1080 + _1136
                while s < _1168:
                    require s < mem[_918]
                    require t < mem[_1025]
                    mem[t + _1025 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                    _1168 = mem[_918]
                    s = s + 1
                    t = t + 1
                    continue 
            idx = idx + 1
            s = _1025
            continue 
        mem[_918 + 32 len u] = call.data[calldata.size len u]
        t = 0
        while t < u:
            require u + -t - 1 < mem[_852]
            require t < mem[_918]
            mem[t + _918 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
            t = t + 1
            continue 
        _1020 = mem[_918]
        _1021 = mem[_850]
        _1022 = mem[s]
        require mem[_850] + mem[s] + mem[_918] <= test266151307()
        _1026 = mem[64]
        mem[mem[64]] = mem[_850] + mem[s] + mem[_918]
        mem[64] = mem[64] + floor32(_1021 + _1022 + _1020 + 31) + 32
        if not _1021 + _1022 + _1020:
            _1081 = mem[s]
            t = 0
            u = 0
            while t < _1081:
                require t < mem[s]
                require u < mem[_1026]
                mem[u + _1026 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                _1081 = mem[s]
                t = t + 1
                u = u + 1
                continue 
            _1137 = mem[_850]
            s = 0
            t = _1081
            while s < _1137:
                require s < mem[_850]
                require t < mem[_1026]
                mem[t + _1026 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                _1137 = mem[_850]
                s = s + 1
                t = t + 1
                continue 
            _1169 = mem[_918]
            s = 0
            t = _1081 + _1137
            while s < _1169:
                require s < mem[_918]
                require t < mem[_1026]
                mem[t + _1026 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                _1169 = mem[_918]
                s = s + 1
                t = t + 1
                continue 
        else:
            mem[_1026 + 32 len _1021 + _1022 + _1020] = call.data[calldata.size len _1021 + _1022 + _1020]
            _1082 = mem[s]
            t = 0
            u = 0
            while t < _1082:
                require t < mem[s]
                require u < mem[_1026]
                mem[u + _1026 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                _1082 = mem[s]
                t = t + 1
                u = u + 1
                continue 
            _1138 = mem[_850]
            s = 0
            t = _1082
            while s < _1138:
                require s < mem[_850]
                require t < mem[_1026]
                mem[t + _1026 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                _1138 = mem[_850]
                s = s + 1
                t = t + 1
                continue 
            _1170 = mem[_918]
            s = 0
            t = _1082 + _1138
            while s < _1170:
                require s < mem[_918]
                require t < mem[_1026]
                mem[t + _1026 + 32 len 8] = Mask(8, -(0, 0) + 256, 0) << (0, 0) - 256
                _1170 = mem[_918]
                s = s + 1
                t = t + 1
                continue 
        idx = idx + 1
        s = _1026
        continue 
    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
    mem[mem[64] + 4] = 32
    _411 = mem[s]
    mem[mem[64] + 36] = mem[s]
    mem[mem[64] + 68 len ceil32(_411)] = mem[s + 32 len ceil32(_411)]
    if ceil32(_411) > _411:
        mem[mem[64] + _411 + 68] = 0
    revert with 0, 32, mem[mem[64] + 36 len ceil32(_411) + 32]
}

function getReserves(address[] arg1) {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    require arg1.length <= test266151307()
    mem[96] = arg1.length
    if not arg1.length:
        require arg1.length <= test266151307()
        mem[(32 * arg1.length) + 128] = arg1.length
        if not arg1.length:
            require arg1.length <= test266151307()
            mem[(64 * arg1.length) + 160] = arg1.length
            mem[64] = (98 * arg1.length) + 192
            if not arg1.length:
                idx = 0
                while arg1.length > uint32(idx):
                    require uint32(idx) < arg1.length
                    require cd[((32 * uint32(idx)) + arg1 + 36)] == address(cd[((32 * uint32(idx)) + arg1 + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + arg1 + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + arg1 + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _193 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    require mem[_193] == mem[_193 + 18 len 14]
                    _232 = mem[_193 + 32]
                    require mem[_193 + 32] == mem[_193 + 50 len 14]
                    _248 = mem[_193 + 64]
                    require mem[_193 + 64] == mem[_193 + 92 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = mem[_193 + 18 len 14]
                    require uint32(idx) < mem[(32 * arg1.length) + 128]
                    mem[(32 * uint32(idx)) + (32 * arg1.length) + 160] = Mask(112, 0, _232)
                    require uint32(idx) < mem[(64 * arg1.length) + 160]
                    mem[(32 * uint32(idx)) + (64 * arg1.length) + 192] = uint32(_248)
                    idx = idx + 1
                    continue 
                _144 = mem[64]
                mem[mem[64]] = 96
                _152 = mem[96]
                mem[mem[64] + 96] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 128
                while idx < _152:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * _152) + 128
                _288 = mem[(32 * arg1.length) + 128]
                mem[_144 + (32 * _152) + 128] = mem[(32 * arg1.length) + 128]
                idx = 0
                s = (32 * arg1.length) + 160
                t = _144 + (32 * _152) + 160
                while idx < _288:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_144 + 64] = (32 * _152) + (32 * _288) + 160
                _336 = mem[(64 * arg1.length) + 160]
                mem[_144 + (32 * _152) + (32 * _288) + 160] = mem[(64 * arg1.length) + 160]
                idx = 0
                s = (64 * arg1.length) + 192
                t = _144 + (32 * _152) + (32 * _288) + 192
                while idx < _336:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _144 + (32 * _152) + (32 * _288) + (32 * _336) + -mem[64] + 192
            mem[(64 * arg1.length) + 192 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
            idx = 0
            while arg1.length > uint32(idx):
                require uint32(idx) < arg1.length
                require cd[((32 * uint32(idx)) + arg1 + 36)] == address(cd[((32 * uint32(idx)) + arg1 + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + arg1 + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + arg1 + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _195 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_195] == mem[_195 + 18 len 14]
                _233 = mem[_195 + 32]
                require mem[_195 + 32] == mem[_195 + 50 len 14]
                _249 = mem[_195 + 64]
                require mem[_195 + 64] == mem[_195 + 92 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = mem[_195 + 18 len 14]
                require uint32(idx) < mem[(32 * arg1.length) + 128]
                mem[(32 * uint32(idx)) + (32 * arg1.length) + 160] = Mask(112, 0, _233)
                require uint32(idx) < mem[(64 * arg1.length) + 160]
                mem[(32 * uint32(idx)) + (64 * arg1.length) + 192] = uint32(_249)
                idx = idx + 1
                continue 
            _145 = mem[64]
            mem[mem[64]] = 96
            _153 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _153:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * _153) + 128
            _289 = mem[(32 * arg1.length) + 128]
            mem[_145 + (32 * _153) + 128] = mem[(32 * arg1.length) + 128]
            idx = 0
            s = (32 * arg1.length) + 160
            t = _145 + (32 * _153) + 160
            while idx < _289:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_145 + 64] = (32 * _153) + (32 * _289) + 160
            _337 = mem[(64 * arg1.length) + 160]
            mem[_145 + (32 * _153) + (32 * _289) + 160] = mem[(64 * arg1.length) + 160]
            idx = 0
            s = (64 * arg1.length) + 192
            t = _145 + (32 * _153) + (32 * _289) + 192
            while idx < _337:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _145 + (32 * _153) + (32 * _289) + (32 * _337) + -mem[64] + 192
        mem[(32 * arg1.length) + 160 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
        require arg1.length <= test266151307()
        mem[(64 * arg1.length) + 160] = arg1.length
        mem[64] = (98 * arg1.length) + 192
        if not arg1.length:
            idx = 0
            while arg1.length > uint32(idx):
                require uint32(idx) < arg1.length
                require cd[((32 * uint32(idx)) + arg1 + 36)] == address(cd[((32 * uint32(idx)) + arg1 + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + arg1 + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + arg1 + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _197 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_197] == mem[_197 + 18 len 14]
                _234 = mem[_197 + 32]
                require mem[_197 + 32] == mem[_197 + 50 len 14]
                _250 = mem[_197 + 64]
                require mem[_197 + 64] == mem[_197 + 92 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = mem[_197 + 18 len 14]
                require uint32(idx) < mem[(32 * arg1.length) + 128]
                mem[(32 * uint32(idx)) + (32 * arg1.length) + 160] = Mask(112, 0, _234)
                require uint32(idx) < mem[(64 * arg1.length) + 160]
                mem[(32 * uint32(idx)) + (64 * arg1.length) + 192] = uint32(_250)
                idx = idx + 1
                continue 
            _146 = mem[64]
            mem[mem[64]] = 96
            _154 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _154:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * _154) + 128
            _290 = mem[(32 * arg1.length) + 128]
            mem[_146 + (32 * _154) + 128] = mem[(32 * arg1.length) + 128]
            idx = 0
            s = (32 * arg1.length) + 160
            t = _146 + (32 * _154) + 160
            while idx < _290:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_146 + 64] = (32 * _154) + (32 * _290) + 160
            _338 = mem[(64 * arg1.length) + 160]
            mem[_146 + (32 * _154) + (32 * _290) + 160] = mem[(64 * arg1.length) + 160]
            idx = 0
            s = (64 * arg1.length) + 192
            t = _146 + (32 * _154) + (32 * _290) + 192
            while idx < _338:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _146 + (32 * _154) + (32 * _290) + (32 * _338) + -mem[64] + 192
        mem[(64 * arg1.length) + 192 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
        idx = 0
        while arg1.length > uint32(idx):
            require uint32(idx) < arg1.length
            require cd[((32 * uint32(idx)) + arg1 + 36)] == address(cd[((32 * uint32(idx)) + arg1 + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + arg1 + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + arg1 + 36)]).getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _199 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            require mem[_199] == mem[_199 + 18 len 14]
            _235 = mem[_199 + 32]
            require mem[_199 + 32] == mem[_199 + 50 len 14]
            _251 = mem[_199 + 64]
            require mem[_199 + 64] == mem[_199 + 92 len 4]
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = mem[_199 + 18 len 14]
            require uint32(idx) < mem[(32 * arg1.length) + 128]
            mem[(32 * uint32(idx)) + (32 * arg1.length) + 160] = Mask(112, 0, _235)
            require uint32(idx) < mem[(64 * arg1.length) + 160]
            mem[(32 * uint32(idx)) + (64 * arg1.length) + 192] = uint32(_251)
            idx = idx + 1
            continue 
        _147 = mem[64]
        mem[mem[64]] = 96
        _155 = mem[96]
        mem[mem[64] + 96] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 128
        while idx < _155:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_147 + 32] = (32 * _155) + 128
        _291 = mem[(32 * arg1.length) + 128]
        mem[_147 + (32 * _155) + 128] = mem[(32 * arg1.length) + 128]
        idx = 0
        s = (32 * arg1.length) + 160
        t = _147 + (32 * _155) + 160
        while idx < _291:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_147 + 64] = (32 * _155) + (32 * _291) + 160
        _339 = mem[(64 * arg1.length) + 160]
        mem[_147 + (32 * _155) + (32 * _291) + 160] = mem[(64 * arg1.length) + 160]
        idx = 0
        s = (64 * arg1.length) + 192
        t = _147 + (32 * _155) + (32 * _291) + 192
        while idx < _339:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _147 + (32 * _155) + (32 * _291) + (32 * _339) + -mem[64] + 192
    mem[128 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
    require arg1.length <= test266151307()
    mem[(32 * arg1.length) + 128] = arg1.length
    if not arg1.length:
        require arg1.length <= test266151307()
        mem[(64 * arg1.length) + 160] = arg1.length
        mem[64] = (98 * arg1.length) + 192
        if not arg1.length:
            idx = 0
            while arg1.length > uint32(idx):
                require uint32(idx) < arg1.length
                require cd[((32 * uint32(idx)) + arg1 + 36)] == address(cd[((32 * uint32(idx)) + arg1 + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + arg1 + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + arg1 + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _201 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                require mem[_201] == mem[_201 + 18 len 14]
                _236 = mem[_201 + 32]
                require mem[_201 + 32] == mem[_201 + 50 len 14]
                _252 = mem[_201 + 64]
                require mem[_201 + 64] == mem[_201 + 92 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = mem[_201 + 18 len 14]
                require uint32(idx) < mem[(32 * arg1.length) + 128]
                mem[(32 * uint32(idx)) + (32 * arg1.length) + 160] = Mask(112, 0, _236)
                require uint32(idx) < mem[(64 * arg1.length) + 160]
                mem[(32 * uint32(idx)) + (64 * arg1.length) + 192] = uint32(_252)
                idx = idx + 1
                continue 
            _148 = mem[64]
            mem[mem[64]] = 96
            _156 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _156:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * _156) + 128
            _292 = mem[(32 * arg1.length) + 128]
            mem[_148 + (32 * _156) + 128] = mem[(32 * arg1.length) + 128]
            idx = 0
            s = (32 * arg1.length) + 160
            t = _148 + (32 * _156) + 160
            while idx < _292:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_148 + 64] = (32 * _156) + (32 * _292) + 160
            _340 = mem[(64 * arg1.length) + 160]
            mem[_148 + (32 * _156) + (32 * _292) + 160] = mem[(64 * arg1.length) + 160]
            idx = 0
            s = (64 * arg1.length) + 192
            t = _148 + (32 * _156) + (32 * _292) + 192
            while idx < _340:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _148 + (32 * _156) + (32 * _292) + (32 * _340) + -mem[64] + 192
        mem[(64 * arg1.length) + 192 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
        idx = 0
        while arg1.length > uint32(idx):
            require uint32(idx) < arg1.length
            require cd[((32 * uint32(idx)) + arg1 + 36)] == address(cd[((32 * uint32(idx)) + arg1 + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + arg1 + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + arg1 + 36)]).getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _203 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            require mem[_203] == mem[_203 + 18 len 14]
            _237 = mem[_203 + 32]
            require mem[_203 + 32] == mem[_203 + 50 len 14]
            _253 = mem[_203 + 64]
            require mem[_203 + 64] == mem[_203 + 92 len 4]
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = mem[_203 + 18 len 14]
            require uint32(idx) < mem[(32 * arg1.length) + 128]
            mem[(32 * uint32(idx)) + (32 * arg1.length) + 160] = Mask(112, 0, _237)
            require uint32(idx) < mem[(64 * arg1.length) + 160]
            mem[(32 * uint32(idx)) + (64 * arg1.length) + 192] = uint32(_253)
            idx = idx + 1
            continue 
        _149 = mem[64]
        mem[mem[64]] = 96
        _157 = mem[96]
        mem[mem[64] + 96] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 128
        while idx < _157:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * _157) + 128
        _293 = mem[(32 * arg1.length) + 128]
        mem[_149 + (32 * _157) + 128] = mem[(32 * arg1.length) + 128]
        idx = 0
        s = (32 * arg1.length) + 160
        t = _149 + (32 * _157) + 160
        while idx < _293:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_149 + 64] = (32 * _157) + (32 * _293) + 160
        _341 = mem[(64 * arg1.length) + 160]
        mem[_149 + (32 * _157) + (32 * _293) + 160] = mem[(64 * arg1.length) + 160]
        idx = 0
        s = (64 * arg1.length) + 192
        t = _149 + (32 * _157) + (32 * _293) + 192
        while idx < _341:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _149 + (32 * _157) + (32 * _293) + (32 * _341) + -mem[64] + 192
    mem[(32 * arg1.length) + 160 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
    require arg1.length <= test266151307()
    mem[(64 * arg1.length) + 160] = arg1.length
    mem[64] = (98 * arg1.length) + 192
    if not arg1.length:
        idx = 0
        while arg1.length > uint32(idx):
            require uint32(idx) < arg1.length
            require cd[((32 * uint32(idx)) + arg1 + 36)] == address(cd[((32 * uint32(idx)) + arg1 + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + arg1 + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + arg1 + 36)]).getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _205 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            require mem[_205] == mem[_205 + 18 len 14]
            _238 = mem[_205 + 32]
            require mem[_205 + 32] == mem[_205 + 50 len 14]
            _254 = mem[_205 + 64]
            require mem[_205 + 64] == mem[_205 + 92 len 4]
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = mem[_205 + 18 len 14]
            require uint32(idx) < mem[(32 * arg1.length) + 128]
            mem[(32 * uint32(idx)) + (32 * arg1.length) + 160] = Mask(112, 0, _238)
            require uint32(idx) < mem[(64 * arg1.length) + 160]
            mem[(32 * uint32(idx)) + (64 * arg1.length) + 192] = uint32(_254)
            idx = idx + 1
            continue 
        _150 = mem[64]
        mem[mem[64]] = 96
        _158 = mem[96]
        mem[mem[64] + 96] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 128
        while idx < _158:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * _158) + 128
        _294 = mem[(32 * arg1.length) + 128]
        mem[_150 + (32 * _158) + 128] = mem[(32 * arg1.length) + 128]
        idx = 0
        s = (32 * arg1.length) + 160
        t = _150 + (32 * _158) + 160
        while idx < _294:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_150 + 64] = (32 * _158) + (32 * _294) + 160
        _342 = mem[(64 * arg1.length) + 160]
        mem[_150 + (32 * _158) + (32 * _294) + 160] = mem[(64 * arg1.length) + 160]
        idx = 0
        s = (64 * arg1.length) + 192
        t = _150 + (32 * _158) + (32 * _294) + 192
        while idx < _342:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _150 + (32 * _158) + (32 * _294) + (32 * _342) + -mem[64] + 192
    mem[(64 * arg1.length) + 192 len 32 * arg1.length] = call.data[calldata.size len 32 * arg1.length]
    idx = 0
    while arg1.length > uint32(idx):
        require uint32(idx) < arg1.length
        require cd[((32 * uint32(idx)) + arg1 + 36)] == address(cd[((32 * uint32(idx)) + arg1 + 36)])
        require ext_code.size(address(cd[((32 * uint32(idx)) + arg1 + 36)]))
        staticcall address(cd[((32 * uint32(idx)) + arg1 + 36)]).getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _207 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        require mem[_207] == mem[_207 + 18 len 14]
        _239 = mem[_207 + 32]
        require mem[_207 + 32] == mem[_207 + 50 len 14]
        _255 = mem[_207 + 64]
        require mem[_207 + 64] == mem[_207 + 92 len 4]
        require uint32(idx) < mem[96]
        mem[(32 * uint32(idx)) + 128] = mem[_207 + 18 len 14]
        require uint32(idx) < mem[(32 * arg1.length) + 128]
        mem[(32 * uint32(idx)) + (32 * arg1.length) + 160] = Mask(112, 0, _239)
        require uint32(idx) < mem[(64 * arg1.length) + 160]
        mem[(32 * uint32(idx)) + (64 * arg1.length) + 192] = uint32(_255)
        idx = idx + 1
        continue 
    _151 = mem[64]
    mem[mem[64]] = 96
    _159 = mem[96]
    mem[mem[64] + 96] = mem[96]
    idx = 0
    s = 128
    t = mem[64] + 128
    while idx < _159:
        mem[t] = mem[s + 18 len 14]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[mem[64] + 32] = (32 * _159) + 128
    _295 = mem[(32 * arg1.length) + 128]
    mem[_151 + (32 * _159) + 128] = mem[(32 * arg1.length) + 128]
    idx = 0
    s = (32 * arg1.length) + 160
    t = _151 + (32 * _159) + 160
    while idx < _295:
        mem[t] = mem[s + 18 len 14]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_151 + 64] = (32 * _159) + (32 * _295) + 160
    _343 = mem[(64 * arg1.length) + 160]
    mem[_151 + (32 * _159) + (32 * _295) + 160] = mem[(64 * arg1.length) + 160]
    idx = 0
    s = (64 * arg1.length) + 192
    t = _151 + (32 * _159) + (32 * _295) + 192
    while idx < _343:
        mem[t] = mem[s + 28 len 4]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    return memory
      from mem[64]
       len _151 + (32 * _159) + (32 * _295) + (32 * _343) + -mem[64] + 192
}

function sub_8f6c7a3c(?) {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg3 - arg2 <= test266151307()
    mem[96] = arg3 - arg2
    if not arg3 - arg2:
        require arg3 - arg2 <= test266151307()
        mem[(32 * arg3 - arg2) + 128] = arg3 - arg2
        if not arg3 - arg2:
            require arg3 - arg2 <= test266151307()
            mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
            mem[64] = (98 * arg3) + (-98 * arg2) + 192
            if not arg3 - arg2:
                idx = arg2
                s = 0
                while idx < arg3:
                    mem[mem[64] + 4] = idx
                    require ext_code.size(address(arg1))
                    staticcall address(arg1).allPairs(uint256 arg1) with:
                            gas gas_remaining wei
                           args idx
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _224 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _240 = mem[_224]
                    require mem[_224] == mem[_224 + 12 len 20]
                    require s < mem[96]
                    mem[(32 * s) + 128] = mem[_224 + 12 len 20]
                    require ext_code.size(address(_240))
                    staticcall address(_240).token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _297 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_297] == mem[_297 + 12 len 20]
                    require s < mem[(32 * arg3 - arg2) + 128]
                    mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_297 + 12 len 20]
                    require ext_code.size(address(_240))
                    staticcall address(_240).token1() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _352 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_352] == mem[_352 + 12 len 20]
                    require s < mem[(64 * arg3 - arg2) + 160]
                    mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_352 + 12 len 20]
                    idx = idx + 1
                    s = s + 1
                    continue 
                _200 = mem[64]
                mem[mem[64]] = 96
                _216 = mem[96]
                mem[mem[64] + 96] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 128
                while idx < _216:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * _216) + 128
                _384 = mem[(32 * arg3 - arg2) + 128]
                mem[_200 + (32 * _216) + 128] = mem[(32 * arg3 - arg2) + 128]
                idx = 0
                s = (32 * arg3 - arg2) + 160
                t = _200 + (32 * _216) + 160
                while idx < _384:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_200 + 64] = (32 * _216) + (32 * _384) + 160
                _432 = mem[(64 * arg3 - arg2) + 160]
                mem[_200 + (32 * _216) + (32 * _384) + 160] = mem[(64 * arg3 - arg2) + 160]
                idx = 0
                s = (64 * arg3 - arg2) + 192
                t = _200 + (32 * _216) + (32 * _384) + 192
                while idx < _432:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _200 + (32 * _216) + (32 * _384) + (32 * _432) + -mem[64] + 192
            mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _225 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _241 = mem[_225]
                require mem[_225] == mem[_225 + 12 len 20]
                require s < mem[96]
                mem[(32 * s) + 128] = mem[_225 + 12 len 20]
                require ext_code.size(address(_241))
                staticcall address(_241).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _299 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_299] == mem[_299 + 12 len 20]
                require s < mem[(32 * arg3 - arg2) + 128]
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_299 + 12 len 20]
                require ext_code.size(address(_241))
                staticcall address(_241).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _353 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_353] == mem[_353 + 12 len 20]
                require s < mem[(64 * arg3 - arg2) + 160]
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_353 + 12 len 20]
                idx = idx + 1
                s = s + 1
                continue 
            _201 = mem[64]
            mem[mem[64]] = 96
            _217 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _217:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * _217) + 128
            _385 = mem[(32 * arg3 - arg2) + 128]
            mem[_201 + (32 * _217) + 128] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _201 + (32 * _217) + 160
            while idx < _385:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_201 + 64] = (32 * _217) + (32 * _385) + 160
            _433 = mem[(64 * arg3 - arg2) + 160]
            mem[_201 + (32 * _217) + (32 * _385) + 160] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _201 + (32 * _217) + (32 * _385) + 192
            while idx < _433:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _201 + (32 * _217) + (32 * _385) + (32 * _433) + -mem[64] + 192
        mem[(32 * arg3 - arg2) + 160 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        require arg3 - arg2 <= test266151307()
        mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
        mem[64] = (98 * arg3) + (-98 * arg2) + 192
        if not arg3 - arg2:
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _226 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _242 = mem[_226]
                require mem[_226] == mem[_226 + 12 len 20]
                require s < mem[96]
                mem[(32 * s) + 128] = mem[_226 + 12 len 20]
                require ext_code.size(address(_242))
                staticcall address(_242).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _301 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_301] == mem[_301 + 12 len 20]
                require s < mem[(32 * arg3 - arg2) + 128]
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_301 + 12 len 20]
                require ext_code.size(address(_242))
                staticcall address(_242).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _354 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_354] == mem[_354 + 12 len 20]
                require s < mem[(64 * arg3 - arg2) + 160]
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_354 + 12 len 20]
                idx = idx + 1
                s = s + 1
                continue 
            _202 = mem[64]
            mem[mem[64]] = 96
            _218 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _218:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_202 + 32] = (32 * _218) + 128
            _386 = mem[(32 * arg3 - arg2) + 128]
            mem[_202 + (32 * _218) + 128] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _202 + (32 * _218) + 160
            while idx < _386:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_202 + 64] = (32 * _218) + (32 * _386) + 160
            _434 = mem[(64 * arg3 - arg2) + 160]
            mem[_202 + (32 * _218) + (32 * _386) + 160] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _202 + (32 * _218) + (32 * _386) + 192
            while idx < _434:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _202 + (32 * _218) + (32 * _386) + (32 * _434) + -mem[64] + 192
        mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _227 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _243 = mem[_227]
            require mem[_227] == mem[_227 + 12 len 20]
            require s < mem[96]
            mem[(32 * s) + 128] = mem[_227 + 12 len 20]
            require ext_code.size(address(_243))
            staticcall address(_243).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _303 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_303] == mem[_303 + 12 len 20]
            require s < mem[(32 * arg3 - arg2) + 128]
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_303 + 12 len 20]
            require ext_code.size(address(_243))
            staticcall address(_243).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _355 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_355] == mem[_355 + 12 len 20]
            require s < mem[(64 * arg3 - arg2) + 160]
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_355 + 12 len 20]
            idx = idx + 1
            s = s + 1
            continue 
        _203 = mem[64]
        mem[mem[64]] = 96
        _219 = mem[96]
        mem[mem[64] + 96] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 128
        while idx < _219:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * _219) + 128
        _387 = mem[(32 * arg3 - arg2) + 128]
        mem[_203 + (32 * _219) + 128] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = _203 + (32 * _219) + 160
        while idx < _387:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_203 + 64] = (32 * _219) + (32 * _387) + 160
        _435 = mem[(64 * arg3 - arg2) + 160]
        mem[_203 + (32 * _219) + (32 * _387) + 160] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _203 + (32 * _219) + (32 * _387) + 192
        while idx < _435:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _203 + (32 * _219) + (32 * _387) + (32 * _435) + -mem[64] + 192
    mem[128 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    require arg3 - arg2 <= test266151307()
    mem[(32 * arg3 - arg2) + 128] = arg3 - arg2
    if not arg3 - arg2:
        require arg3 - arg2 <= test266151307()
        mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
        mem[64] = (98 * arg3) + (-98 * arg2) + 192
        if not arg3 - arg2:
            idx = arg2
            s = 0
            while idx < arg3:
                mem[mem[64] + 4] = idx
                require ext_code.size(address(arg1))
                staticcall address(arg1).allPairs(uint256 arg1) with:
                        gas gas_remaining wei
                       args idx
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _228 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _244 = mem[_228]
                require mem[_228] == mem[_228 + 12 len 20]
                require s < mem[96]
                mem[(32 * s) + 128] = mem[_228 + 12 len 20]
                require ext_code.size(address(_244))
                staticcall address(_244).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _305 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_305] == mem[_305 + 12 len 20]
                require s < mem[(32 * arg3 - arg2) + 128]
                mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_305 + 12 len 20]
                require ext_code.size(address(_244))
                staticcall address(_244).token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _356 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_356] == mem[_356 + 12 len 20]
                require s < mem[(64 * arg3 - arg2) + 160]
                mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_356 + 12 len 20]
                idx = idx + 1
                s = s + 1
                continue 
            _204 = mem[64]
            mem[mem[64]] = 96
            _220 = mem[96]
            mem[mem[64] + 96] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 128
            while idx < _220:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * _220) + 128
            _388 = mem[(32 * arg3 - arg2) + 128]
            mem[_204 + (32 * _220) + 128] = mem[(32 * arg3 - arg2) + 128]
            idx = 0
            s = (32 * arg3 - arg2) + 160
            t = _204 + (32 * _220) + 160
            while idx < _388:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_204 + 64] = (32 * _220) + (32 * _388) + 160
            _436 = mem[(64 * arg3 - arg2) + 160]
            mem[_204 + (32 * _220) + (32 * _388) + 160] = mem[(64 * arg3 - arg2) + 160]
            idx = 0
            s = (64 * arg3 - arg2) + 192
            t = _204 + (32 * _220) + (32 * _388) + 192
            while idx < _436:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _204 + (32 * _220) + (32 * _388) + (32 * _436) + -mem[64] + 192
        mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _229 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _245 = mem[_229]
            require mem[_229] == mem[_229 + 12 len 20]
            require s < mem[96]
            mem[(32 * s) + 128] = mem[_229 + 12 len 20]
            require ext_code.size(address(_245))
            staticcall address(_245).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _307 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_307] == mem[_307 + 12 len 20]
            require s < mem[(32 * arg3 - arg2) + 128]
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_307 + 12 len 20]
            require ext_code.size(address(_245))
            staticcall address(_245).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _357 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_357] == mem[_357 + 12 len 20]
            require s < mem[(64 * arg3 - arg2) + 160]
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_357 + 12 len 20]
            idx = idx + 1
            s = s + 1
            continue 
        _205 = mem[64]
        mem[mem[64]] = 96
        _221 = mem[96]
        mem[mem[64] + 96] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 128
        while idx < _221:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * _221) + 128
        _389 = mem[(32 * arg3 - arg2) + 128]
        mem[_205 + (32 * _221) + 128] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = _205 + (32 * _221) + 160
        while idx < _389:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_205 + 64] = (32 * _221) + (32 * _389) + 160
        _437 = mem[(64 * arg3 - arg2) + 160]
        mem[_205 + (32 * _221) + (32 * _389) + 160] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _205 + (32 * _221) + (32 * _389) + 192
        while idx < _437:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _205 + (32 * _221) + (32 * _389) + (32 * _437) + -mem[64] + 192
    mem[(32 * arg3 - arg2) + 160 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    require arg3 - arg2 <= test266151307()
    mem[(64 * arg3 - arg2) + 160] = arg3 - arg2
    mem[64] = (98 * arg3) + (-98 * arg2) + 192
    if not arg3 - arg2:
        idx = arg2
        s = 0
        while idx < arg3:
            mem[mem[64] + 4] = idx
            require ext_code.size(address(arg1))
            staticcall address(arg1).allPairs(uint256 arg1) with:
                    gas gas_remaining wei
                   args idx
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _230 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _246 = mem[_230]
            require mem[_230] == mem[_230 + 12 len 20]
            require s < mem[96]
            mem[(32 * s) + 128] = mem[_230 + 12 len 20]
            require ext_code.size(address(_246))
            staticcall address(_246).token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _309 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_309] == mem[_309 + 12 len 20]
            require s < mem[(32 * arg3 - arg2) + 128]
            mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_309 + 12 len 20]
            require ext_code.size(address(_246))
            staticcall address(_246).token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _358 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_358] == mem[_358 + 12 len 20]
            require s < mem[(64 * arg3 - arg2) + 160]
            mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_358 + 12 len 20]
            idx = idx + 1
            s = s + 1
            continue 
        _206 = mem[64]
        mem[mem[64]] = 96
        _222 = mem[96]
        mem[mem[64] + 96] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 128
        while idx < _222:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * _222) + 128
        _390 = mem[(32 * arg3 - arg2) + 128]
        mem[_206 + (32 * _222) + 128] = mem[(32 * arg3 - arg2) + 128]
        idx = 0
        s = (32 * arg3 - arg2) + 160
        t = _206 + (32 * _222) + 160
        while idx < _390:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_206 + 64] = (32 * _222) + (32 * _390) + 160
        _438 = mem[(64 * arg3 - arg2) + 160]
        mem[_206 + (32 * _222) + (32 * _390) + 160] = mem[(64 * arg3 - arg2) + 160]
        idx = 0
        s = (64 * arg3 - arg2) + 192
        t = _206 + (32 * _222) + (32 * _390) + 192
        while idx < _438:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _206 + (32 * _222) + (32 * _390) + (32 * _438) + -mem[64] + 192
    mem[(64 * arg3 - arg2) + 192 len 32 * arg3 - arg2] = call.data[calldata.size len 32 * arg3 - arg2]
    idx = arg2
    s = 0
    while idx < arg3:
        mem[mem[64] + 4] = idx
        require ext_code.size(address(arg1))
        staticcall address(arg1).allPairs(uint256 arg1) with:
                gas gas_remaining wei
               args idx
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _231 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _247 = mem[_231]
        require mem[_231] == mem[_231 + 12 len 20]
        require s < mem[96]
        mem[(32 * s) + 128] = mem[_231 + 12 len 20]
        require ext_code.size(address(_247))
        staticcall address(_247).token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _311 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_311] == mem[_311 + 12 len 20]
        require s < mem[(32 * arg3 - arg2) + 128]
        mem[(32 * s) + (32 * arg3 - arg2) + 160] = mem[_311 + 12 len 20]
        require ext_code.size(address(_247))
        staticcall address(_247).token1() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _359 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_359] == mem[_359 + 12 len 20]
        require s < mem[(64 * arg3 - arg2) + 160]
        mem[(32 * s) + (64 * arg3 - arg2) + 192] = mem[_359 + 12 len 20]
        idx = idx + 1
        s = s + 1
        continue 
    _207 = mem[64]
    mem[mem[64]] = 96
    _223 = mem[96]
    mem[mem[64] + 96] = mem[96]
    idx = 0
    s = 128
    t = mem[64] + 128
    while idx < _223:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[mem[64] + 32] = (32 * _223) + 128
    _391 = mem[(32 * arg3 - arg2) + 128]
    mem[_207 + (32 * _223) + 128] = mem[(32 * arg3 - arg2) + 128]
    idx = 0
    s = (32 * arg3 - arg2) + 160
    t = _207 + (32 * _223) + 160
    while idx < _391:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_207 + 64] = (32 * _223) + (32 * _391) + 160
    _439 = mem[(64 * arg3 - arg2) + 160]
    mem[_207 + (32 * _223) + (32 * _391) + 160] = mem[(64 * arg3 - arg2) + 160]
    idx = 0
    s = (64 * arg3 - arg2) + 192
    t = _207 + (32 * _223) + (32 * _391) + 192
    while idx < _439:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    return memory
      from mem[64]
       len _207 + (32 * _223) + (32 * _391) + (32 * _439) + -mem[64] + 192
}

function sub_5e63547a(?) {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require (32 * ('cd', 4).length) + 128 >= 96 and (32 * ('cd', 4).length) + 128 <= test266151307()
    mem[96] = ('cd', 4).length
    require calldata.size >= cd[4] + (32 * ('cd', 4).length) + 36
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ('cd', 4).length <= test266151307()
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
            mem[64] = (131 * ('cd', 4).length) + 224
            if not ('cd', 4).length:
                idx = 0
                while idx < ('cd', 4).length:
                    require idx < mem[96]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _559 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_559] == mem[_559 + 12 len 20]
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_559 + 12 len 20]
                    require idx < mem[96]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _655 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_655] == mem[_655 + 12 len 20]
                    require idx < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = mem[_655 + 12 len 20]
                    require idx < mem[96]
                    require ext_code.size(mem[(32 * idx) + 140 len 20])
                    staticcall mem[(32 * idx) + 140 len 20].token1() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _726 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_726] == mem[_726 + 12 len 20]
                    require idx < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_726 + 12 len 20]
                    idx = idx + 1
                    continue 
                _526 = mem[64]
                mem[mem[64]] = 96
                _558 = mem[(32 * ('cd', 4).length) + 128]
                mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = mem[64] + 128
                while idx < _558:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * _558) + 128
                _758 = mem[(64 * ('cd', 4).length) + 160]
                mem[_526 + (32 * _558) + 128] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _526 + (32 * _558) + 160
                while idx < _758:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_526 + 64] = (32 * _558) + (32 * _758) + 160
                _806 = mem[(98 * ('cd', 4).length) + 192]
                mem[_526 + (32 * _558) + (32 * _758) + 160] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _526 + (32 * _558) + (32 * _758) + 192
                while idx < _806:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _526 + (32 * _558) + (32 * _758) + (32 * _806) + -mem[64] + 192
            mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while idx < ('cd', 4).length:
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _561 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_561] == mem[_561 + 12 len 20]
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_561 + 12 len 20]
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _657 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_657] == mem[_657 + 12 len 20]
                require idx < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = mem[_657 + 12 len 20]
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _727 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_727] == mem[_727 + 12 len 20]
                require idx < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_727 + 12 len 20]
                idx = idx + 1
                continue 
            _530 = mem[64]
            mem[mem[64]] = 96
            _560 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + 128
            while idx < _560:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * _560) + 128
            _759 = mem[(64 * ('cd', 4).length) + 160]
            mem[_530 + (32 * _560) + 128] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _530 + (32 * _560) + 160
            while idx < _759:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_530 + 64] = (32 * _560) + (32 * _759) + 160
            _807 = mem[(98 * ('cd', 4).length) + 192]
            mem[_530 + (32 * _560) + (32 * _759) + 160] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _530 + (32 * _560) + (32 * _759) + 192
            while idx < _807:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _530 + (32 * _560) + (32 * _759) + (32 * _807) + -mem[64] + 192
        mem[(64 * ('cd', 4).length) + 192 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
        mem[64] = (128 * ('cd', 4).length) + 224
        if not ('cd', 4).length:
            idx = 0
            while idx < ('cd', 4).length:
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _563 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_563] == mem[_563 + 12 len 20]
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_563 + 12 len 20]
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _659 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_659] == mem[_659 + 12 len 20]
                require idx < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = mem[_659 + 12 len 20]
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _728 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_728] == mem[_728 + 12 len 20]
                require idx < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_728 + 12 len 20]
                idx = idx + 1
                continue 
            _534 = mem[64]
            mem[mem[64]] = 96
            _562 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + 128
            while idx < _562:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * _562) + 128
            _760 = mem[(64 * ('cd', 4).length) + 160]
            mem[_534 + (32 * _562) + 128] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _534 + (32 * _562) + 160
            while idx < _760:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_534 + 64] = (32 * _562) + (32 * _760) + 160
            _808 = mem[(98 * ('cd', 4).length) + 192]
            mem[_534 + (32 * _562) + (32 * _760) + 160] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _534 + (32 * _562) + (32 * _760) + 192
            while idx < _808:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _534 + (32 * _562) + (32 * _760) + (32 * _808) + -mem[64] + 192
        mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        while idx < ('cd', 4).length:
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _565 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_565] == mem[_565 + 12 len 20]
            require idx < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_565 + 12 len 20]
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _661 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_661] == mem[_661 + 12 len 20]
            require idx < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = mem[_661 + 12 len 20]
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _729 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_729] == mem[_729 + 12 len 20]
            require idx < mem[(98 * ('cd', 4).length) + 192]
            mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_729 + 12 len 20]
            idx = idx + 1
            continue 
        _538 = mem[64]
        mem[mem[64]] = 96
        _564 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + 128
        while idx < _564:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * _564) + 128
        _761 = mem[(64 * ('cd', 4).length) + 160]
        mem[_538 + (32 * _564) + 128] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        t = _538 + (32 * _564) + 160
        while idx < _761:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_538 + 64] = (32 * _564) + (32 * _761) + 160
        _809 = mem[(98 * ('cd', 4).length) + 192]
        mem[_538 + (32 * _564) + (32 * _761) + 160] = mem[(98 * ('cd', 4).length) + 192]
        idx = 0
        s = (98 * ('cd', 4).length) + 224
        t = _538 + (32 * _564) + (32 * _761) + 192
        while idx < _809:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _538 + (32 * _564) + (32 * _761) + (32 * _809) + -mem[64] + 192
    mem[(32 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
        mem[64] = (131 * ('cd', 4).length) + 224
        if not ('cd', 4).length:
            idx = 0
            while idx < ('cd', 4).length:
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _567 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_567] == mem[_567 + 12 len 20]
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_567 + 12 len 20]
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _663 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_663] == mem[_663 + 12 len 20]
                require idx < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = mem[_663 + 12 len 20]
                require idx < mem[96]
                require ext_code.size(mem[(32 * idx) + 140 len 20])
                staticcall mem[(32 * idx) + 140 len 20].token1() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _730 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_730] == mem[_730 + 12 len 20]
                require idx < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_730 + 12 len 20]
                idx = idx + 1
                continue 
            _542 = mem[64]
            mem[mem[64]] = 96
            _566 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + 128
            while idx < _566:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * _566) + 128
            _762 = mem[(64 * ('cd', 4).length) + 160]
            mem[_542 + (32 * _566) + 128] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _542 + (32 * _566) + 160
            while idx < _762:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_542 + 64] = (32 * _566) + (32 * _762) + 160
            _810 = mem[(98 * ('cd', 4).length) + 192]
            mem[_542 + (32 * _566) + (32 * _762) + 160] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _542 + (32 * _566) + (32 * _762) + 192
            while idx < _810:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _542 + (32 * _566) + (32 * _762) + (32 * _810) + -mem[64] + 192
        mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        while idx < ('cd', 4).length:
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _569 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_569] == mem[_569 + 12 len 20]
            require idx < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_569 + 12 len 20]
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _665 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_665] == mem[_665 + 12 len 20]
            require idx < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = mem[_665 + 12 len 20]
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _731 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_731] == mem[_731 + 12 len 20]
            require idx < mem[(98 * ('cd', 4).length) + 192]
            mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_731 + 12 len 20]
            idx = idx + 1
            continue 
        _546 = mem[64]
        mem[mem[64]] = 96
        _568 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + 128
        while idx < _568:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * _568) + 128
        _763 = mem[(64 * ('cd', 4).length) + 160]
        mem[_546 + (32 * _568) + 128] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        t = _546 + (32 * _568) + 160
        while idx < _763:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_546 + 64] = (32 * _568) + (32 * _763) + 160
        _811 = mem[(98 * ('cd', 4).length) + 192]
        mem[_546 + (32 * _568) + (32 * _763) + 160] = mem[(98 * ('cd', 4).length) + 192]
        idx = 0
        s = (98 * ('cd', 4).length) + 224
        t = _546 + (32 * _568) + (32 * _763) + 192
        while idx < _811:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _546 + (32 * _568) + (32 * _763) + (32 * _811) + -mem[64] + 192
    mem[(64 * ('cd', 4).length) + 192 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
    mem[64] = (131 * ('cd', 4).length) + 224
    if not ('cd', 4).length:
        idx = 0
        while idx < ('cd', 4).length:
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _571 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_571] == mem[_571 + 12 len 20]
            require idx < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_571 + 12 len 20]
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].token0() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _667 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_667] == mem[_667 + 12 len 20]
            require idx < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = mem[_667 + 12 len 20]
            require idx < mem[96]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].token1() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _732 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_732] == mem[_732 + 12 len 20]
            require idx < mem[(98 * ('cd', 4).length) + 192]
            mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_732 + 12 len 20]
            idx = idx + 1
            continue 
        _550 = mem[64]
        mem[mem[64]] = 96
        _570 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + 128
        while idx < _570:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * _570) + 128
        _764 = mem[(64 * ('cd', 4).length) + 160]
        mem[_550 + (32 * _570) + 128] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        t = _550 + (32 * _570) + 160
        while idx < _764:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_550 + 64] = (32 * _570) + (32 * _764) + 160
        _812 = mem[(98 * ('cd', 4).length) + 192]
        mem[_550 + (32 * _570) + (32 * _764) + 160] = mem[(98 * ('cd', 4).length) + 192]
        idx = 0
        s = (98 * ('cd', 4).length) + 224
        t = _550 + (32 * _570) + (32 * _764) + 192
        while idx < _812:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _550 + (32 * _570) + (32 * _764) + (32 * _812) + -mem[64] + 192
    mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    idx = 0
    while idx < ('cd', 4).length:
        require idx < mem[96]
        require ext_code.size(mem[(32 * idx) + 140 len 20])
        staticcall mem[(32 * idx) + 140 len 20].factory() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _573 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_573] == mem[_573 + 12 len 20]
        require idx < mem[(32 * ('cd', 4).length) + 128]
        mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = mem[_573 + 12 len 20]
        require idx < mem[96]
        require ext_code.size(mem[(32 * idx) + 140 len 20])
        staticcall mem[(32 * idx) + 140 len 20].token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _669 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_669] == mem[_669 + 12 len 20]
        require idx < mem[(64 * ('cd', 4).length) + 160]
        mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = mem[_669 + 12 len 20]
        require idx < mem[96]
        require ext_code.size(mem[(32 * idx) + 140 len 20])
        staticcall mem[(32 * idx) + 140 len 20].token1() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _733 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_733] == mem[_733 + 12 len 20]
        require idx < mem[(98 * ('cd', 4).length) + 192]
        mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_733 + 12 len 20]
        idx = idx + 1
        continue 
    _554 = mem[64]
    mem[mem[64]] = 96
    _572 = mem[(32 * ('cd', 4).length) + 128]
    mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
    idx = 0
    s = (32 * ('cd', 4).length) + 160
    t = mem[64] + 128
    while idx < _572:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[mem[64] + 32] = (32 * _572) + 128
    _765 = mem[(64 * ('cd', 4).length) + 160]
    mem[_554 + (32 * _572) + 128] = mem[(64 * ('cd', 4).length) + 160]
    idx = 0
    s = (64 * ('cd', 4).length) + 192
    t = _554 + (32 * _572) + 160
    while idx < _765:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[_554 + 64] = (32 * _572) + (32 * _765) + 160
    _813 = mem[(98 * ('cd', 4).length) + 192]
    mem[_554 + (32 * _572) + (32 * _765) + 160] = mem[(98 * ('cd', 4).length) + 192]
    idx = 0
    s = (98 * ('cd', 4).length) + 224
    t = _554 + (32 * _572) + (32 * _765) + 192
    while idx < _813:
        mem[t] = mem[s + 12 len 20]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    return memory
      from mem[64]
       len _554 + (32 * _572) + (32 * _765) + (32 * _813) + -mem[64] + 192
}

function sub_b4111654(?) {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require (32 * ('cd', 4).length) + 128 >= 96 and (32 * ('cd', 4).length) + 128 <= test266151307()
    mem[96] = ('cd', 4).length
    require calldata.size >= cd[4] + (32 * ('cd', 4).length) + 36
    idx = 0
    s = cd[4] + 36
    t = 128
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ('cd', 4).length <= test266151307()
    mem[(32 * ('cd', 4).length) + 128] = ('cd', 4).length
    mem[64] = (64 * ('cd', 4).length) + 160
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
        mem[64] = (98 * ('cd', 4).length) + 192
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
            mem[64] = (131 * ('cd', 4).length) + 224
            if not ('cd', 4).length:
                idx = 0
                while idx < ('cd', 4).length:
                    require idx < mem[96]
                    _867 = mem[(32 * idx) + 128]
                    mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_867))
                    staticcall address(_867).name() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _879 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _886 = mem[_879]
                    require mem[_879] <= test266151307()
                    require _879 + mem[_879] + 31 < _879 + return_data.size
                    _901 = mem[_879 + mem[_879]]
                    require mem[_879 + mem[_879]] <= test266151307()
                    require ceil32(mem[_879 + mem[_879]]) + 32 >= 0 and _879 + ceil32(return_data.size) + ceil32(mem[_879 + mem[_879]]) + 32 <= test266151307()
                    mem[64] = _879 + ceil32(return_data.size) + ceil32(mem[_879 + mem[_879]]) + 32
                    mem[_879 + ceil32(return_data.size)] = _901
                    require _886 + _901 + 32 <= return_data.size
                    s = 0
                    while s < _901:
                        mem[s + _879 + ceil32(return_data.size) + 32] = mem[s + _879 + _886 + 32]
                        s = s + 32
                        continue 
                    if ceil32(_901) <= _901:
                        require idx < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _879 + ceil32(return_data.size)
                        require ext_code.size(address(_867))
                        staticcall address(_867).0x313ce567 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1358 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_1358] == mem[_1358 + 31 len 1]
                        require idx < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_1358 + 31 len 1]
                        mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                        require ext_code.size(address(_867))
                        staticcall address(_867).0x95d89b41 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1438 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _1455 = mem[_1438]
                        require mem[_1438] <= test266151307()
                        require _1438 + mem[_1438] + 31 < _1438 + return_data.size
                        _1473 = mem[_1438 + mem[_1438]]
                        require mem[_1438 + mem[_1438]] <= test266151307()
                        require ceil32(mem[_1438 + mem[_1438]]) + 32 >= 0 and _1438 + ceil32(return_data.size) + ceil32(mem[_1438 + mem[_1438]]) + 32 <= test266151307()
                        mem[64] = _1438 + ceil32(return_data.size) + ceil32(mem[_1438 + mem[_1438]]) + 32
                        mem[_1438 + ceil32(return_data.size)] = _1473
                        require _1455 + _1473 + 32 <= return_data.size
                        s = 0
                        while s < _1473:
                            mem[s + _1438 + ceil32(return_data.size) + 32] = mem[s + _1438 + _1455 + 32]
                            s = s + 32
                            continue 
                        if ceil32(_1473) > _1473:
                            mem[_1438 + ceil32(return_data.size) + _1473 + 32] = 0
                        require idx < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = _1438 + ceil32(return_data.size)
                    else:
                        mem[_879 + ceil32(return_data.size) + _901 + 32] = 0
                        require idx < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _879 + ceil32(return_data.size)
                        require ext_code.size(address(_867))
                        staticcall address(_867).0x313ce567 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1370 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_1370] == mem[_1370 + 31 len 1]
                        require idx < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_1370 + 31 len 1]
                        mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                        require ext_code.size(address(_867))
                        staticcall address(_867).0x95d89b41 with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1450 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _1469 = mem[_1450]
                        require mem[_1450] <= test266151307()
                        require _1450 + mem[_1450] + 31 < _1450 + return_data.size
                        _1476 = mem[_1450 + mem[_1450]]
                        require mem[_1450 + mem[_1450]] <= test266151307()
                        require ceil32(mem[_1450 + mem[_1450]]) + 32 >= 0 and _1450 + ceil32(return_data.size) + ceil32(mem[_1450 + mem[_1450]]) + 32 <= test266151307()
                        mem[64] = _1450 + ceil32(return_data.size) + ceil32(mem[_1450 + mem[_1450]]) + 32
                        mem[_1450 + ceil32(return_data.size)] = _1476
                        require _1469 + _1476 + 32 <= return_data.size
                        s = 0
                        while s < _1476:
                            mem[s + _1450 + ceil32(return_data.size) + 32] = mem[s + _1450 + _1469 + 32]
                            s = s + 32
                            continue 
                        if ceil32(_1476) > _1476:
                            mem[_1450 + ceil32(return_data.size) + _1476 + 32] = 0
                        require idx < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = _1450 + ceil32(return_data.size)
                    idx = idx + 1
                    continue 
                _866 = mem[64]
                mem[mem[64]] = 96
                _878 = mem[(32 * ('cd', 4).length) + 128]
                mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = mem[64] + (32 * _878) + 128
                u = mem[64] + 128
                while idx < _878:
                    mem[u] = t + -_866 - 128
                    _1290 = mem[s]
                    _1298 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    while v < _1298:
                        mem[v + t + 32] = mem[v + _1290 + 32]
                        v = v + 32
                        continue 
                    if ceil32(_1298) > _1298:
                        mem[t + _1298 + 32] = 0
                    idx = idx + 1
                    s = s + 32
                    t = ceil32(_1298) + t + 32
                    u = u + 32
                    continue 
                mem[_866 + 32] = t - _866
                _1317 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _1317) + 32
                v = t + 32
                while idx < _1317:
                    mem[v] = u + -t - 32
                    _1684 = mem[s]
                    _1702 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    while t < _1702:
                        mem[t + u + 32] = mem[t + _1684 + 32]
                        t = t + 32
                        continue 
                    if ceil32(_1702) > _1702:
                        mem[u + _1702 + 32] = 0
                    idx = idx + 1
                    s = s + 32
                    u = ceil32(_1702) + u + 32
                    v = v + 32
                    continue 
                mem[_866 + 64] = u - _866
                _1716 = mem[(98 * ('cd', 4).length) + 192]
                mem[u] = mem[(98 * ('cd', 4).length) + 192]
                mem[u + 32 len 32 * _1716] = mem[(98 * ('cd', 4).length) + 224 len 32 * _1716]
                var45001 = _1716
                return memory
                  from mem[64]
                   len u + (32 * _1716) + -mem[64] + 32
            mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while idx < ('cd', 4).length:
                require idx < mem[96]
                _871 = mem[(32 * idx) + 128]
                mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_871))
                staticcall address(_871).name() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _881 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _888 = mem[_881]
                require mem[_881] <= test266151307()
                require _881 + mem[_881] + 31 < _881 + return_data.size
                _903 = mem[_881 + mem[_881]]
                require mem[_881 + mem[_881]] <= test266151307()
                require ceil32(mem[_881 + mem[_881]]) + 32 >= 0 and _881 + ceil32(return_data.size) + ceil32(mem[_881 + mem[_881]]) + 32 <= test266151307()
                mem[64] = _881 + ceil32(return_data.size) + ceil32(mem[_881 + mem[_881]]) + 32
                mem[_881 + ceil32(return_data.size)] = _903
                require _888 + _903 + 32 <= return_data.size
                s = 0
                while s < _903:
                    mem[s + _881 + ceil32(return_data.size) + 32] = mem[s + _881 + _888 + 32]
                    s = s + 32
                    continue 
                if ceil32(_903) <= _903:
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _881 + ceil32(return_data.size)
                    require ext_code.size(address(_871))
                    staticcall address(_871).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1360 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1360] == mem[_1360 + 31 len 1]
                    require idx < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_1360 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_871))
                    staticcall address(_871).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1439 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1456 = mem[_1439]
                    require mem[_1439] <= test266151307()
                    require _1439 + mem[_1439] + 31 < _1439 + return_data.size
                    _1474 = mem[_1439 + mem[_1439]]
                    require mem[_1439 + mem[_1439]] <= test266151307()
                    require ceil32(mem[_1439 + mem[_1439]]) + 32 >= 0 and _1439 + ceil32(return_data.size) + ceil32(mem[_1439 + mem[_1439]]) + 32 <= test266151307()
                    mem[64] = _1439 + ceil32(return_data.size) + ceil32(mem[_1439 + mem[_1439]]) + 32
                    mem[_1439 + ceil32(return_data.size)] = _1474
                    require _1456 + _1474 + 32 <= return_data.size
                    s = 0
                    while s < _1474:
                        mem[s + _1439 + ceil32(return_data.size) + 32] = mem[s + _1439 + _1456 + 32]
                        s = s + 32
                        continue 
                    if ceil32(_1474) > _1474:
                        mem[_1439 + ceil32(return_data.size) + _1474 + 32] = 0
                    require idx < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = _1439 + ceil32(return_data.size)
                else:
                    mem[_881 + ceil32(return_data.size) + _903 + 32] = 0
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _881 + ceil32(return_data.size)
                    require ext_code.size(address(_871))
                    staticcall address(_871).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1371 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1371] == mem[_1371 + 31 len 1]
                    require idx < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * idx) + (98 * ('cd', 4).length) + 224] = mem[_1371 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_871))
                    staticcall address(_871).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1451 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1470 = mem[_1451]
                    require mem[_1451] <= test266151307()
                    require _1451 + mem[_1451] + 31 < _1451 + return_data.size
                    _1477 = mem[_1451 + mem[_1451]]
                    require mem[_1451 + mem[_1451]] <= test266151307()
                    require ceil32(mem[_1451 + mem[_1451]]) + 32 >= 0 and _1451 + ceil32(return_data.size) + ceil32(mem[_1451 + mem[_1451]]) + 32 <= test266151307()
                    mem[64] = _1451 + ceil32(return_data.size) + ceil32(mem[_1451 + mem[_1451]]) + 32
                    mem[_1451 + ceil32(return_data.size)] = _1477
                    require _1470 + _1477 + 32 <= return_data.size
                    s = 0
                    while s < _1477:
                        mem[s + _1451 + ceil32(return_data.size) + 32] = mem[s + _1451 + _1470 + 32]
                        s = s + 32
                        continue 
                    if ceil32(_1477) > _1477:
                        mem[_1451 + ceil32(return_data.size) + _1477 + 32] = 0
                    require idx < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = _1451 + ceil32(return_data.size)
                idx = idx + 1
                continue 
            _870 = mem[64]
            mem[mem[64]] = 96
            _880 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + (32 * _880) + 128
            u = mem[64] + 128
            while idx < _880:
                mem[u] = t + -_870 - 128
                _1292 = mem[s]
                _1299 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                while v < _1299:
                    mem[v + t + 32] = mem[v + _1292 + 32]
                    v = v + 32
                    continue 
                if ceil32(_1299) > _1299:
                    mem[t + _1299 + 32] = 0
                idx = idx + 1
                s = s + 32
                t = ceil32(_1299) + t + 32
                u = u + 32
                continue 
            mem[_870 + 32] = t - _870
            _1318 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _1318) + 32
            v = t + 32
            while idx < _1318:
                mem[v] = u + -t - 32
                _1688 = mem[s]
                _1703 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                while t < _1703:
                    mem[t + u + 32] = mem[t + _1688 + 32]
                    t = t + 32
                    continue 
                if ceil32(_1703) > _1703:
                    mem[u + _1703 + 32] = 0
                idx = idx + 1
                s = s + 32
                u = ceil32(_1703) + u + 32
                v = v + 32
                continue 
            mem[_870 + 64] = u - _870
            _1717 = mem[(98 * ('cd', 4).length) + 192]
            mem[u] = mem[(98 * ('cd', 4).length) + 192]
            mem[u + 32 len 32 * _1717] = mem[(98 * ('cd', 4).length) + 224 len 32 * _1717]
            var46001 = _1717
            return memory
              from mem[64]
               len u + (32 * _1717) + -mem[64] + 32
        mem[(64 * ('cd', 4).length) + 192] = 96
        s = (64 * ('cd', 4).length) + 192
        idx = ('cd', 4).length
        while idx - 1:
            mem[s + 32] = 96
            s = s + 32
            idx = idx - 1
            continue 
        _874 = mem[96]
        require mem[96] <= test266151307()
        _876 = mem[64]
        mem[mem[64]] = mem[96]
        mem[64] = mem[64] + (32 * _874) + 32
        if not _874:
            _1286 = mem[96]
            idx = 0
            while idx < _1286:
                require idx < mem[96]
                _1301 = mem[(32 * idx) + 128]
                mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1301))
                staticcall address(_1301).name() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1323 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1348 = mem[_1323]
                require mem[_1323] <= test266151307()
                require _1323 + mem[_1323] + 31 < _1323 + return_data.size
                _1373 = mem[_1323 + mem[_1323]]
                require mem[_1323 + mem[_1323]] <= test266151307()
                require ceil32(mem[_1323 + mem[_1323]]) + 32 >= 0 and _1323 + ceil32(return_data.size) + ceil32(mem[_1323 + mem[_1323]]) + 32 <= test266151307()
                mem[64] = _1323 + ceil32(return_data.size) + ceil32(mem[_1323 + mem[_1323]]) + 32
                mem[_1323 + ceil32(return_data.size)] = _1373
                require _1348 + _1373 + 32 <= return_data.size
                s = 0
                while s < _1373:
                    mem[s + _1323 + ceil32(return_data.size) + 32] = mem[s + _1323 + _1348 + 32]
                    _1286 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1373) <= _1373:
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1323 + ceil32(return_data.size)
                    require ext_code.size(address(_1301))
                    staticcall address(_1301).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1781 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1781] == mem[_1781 + 31 len 1]
                    require idx < mem[_876]
                    mem[(32 * idx) + _876 + 32] = mem[_1781 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_1301))
                    staticcall address(_1301).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1852 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1864 = mem[_1852]
                    require mem[_1852] <= test266151307()
                    require _1852 + mem[_1852] + 31 < _1852 + return_data.size
                    _1876 = mem[_1852 + mem[_1852]]
                    require mem[_1852 + mem[_1852]] <= test266151307()
                    require ceil32(mem[_1852 + mem[_1852]]) + 32 >= 0 and _1852 + ceil32(return_data.size) + ceil32(mem[_1852 + mem[_1852]]) + 32 <= test266151307()
                    mem[64] = _1852 + ceil32(return_data.size) + ceil32(mem[_1852 + mem[_1852]]) + 32
                    mem[_1852 + ceil32(return_data.size)] = _1876
                    require _1864 + _1876 + 32 <= return_data.size
                    s = 0
                    while s < _1876:
                        mem[s + _1852 + ceil32(return_data.size) + 32] = mem[s + _1852 + _1864 + 32]
                        _1286 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(_1876) > _1876:
                        mem[_1852 + ceil32(return_data.size) + _1876 + 32] = 0
                    require idx < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = _1852 + ceil32(return_data.size)
                else:
                    mem[_1323 + ceil32(return_data.size) + _1373 + 32] = 0
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1323 + ceil32(return_data.size)
                    require ext_code.size(address(_1301))
                    staticcall address(_1301).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1790 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1790] == mem[_1790 + 31 len 1]
                    require idx < mem[_876]
                    mem[(32 * idx) + _876 + 32] = mem[_1790 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_1301))
                    staticcall address(_1301).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1860 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1872 = mem[_1860]
                    require mem[_1860] <= test266151307()
                    require _1860 + mem[_1860] + 31 < _1860 + return_data.size
                    _1880 = mem[_1860 + mem[_1860]]
                    require mem[_1860 + mem[_1860]] <= test266151307()
                    require ceil32(mem[_1860 + mem[_1860]]) + 32 >= 0 and _1860 + ceil32(return_data.size) + ceil32(mem[_1860 + mem[_1860]]) + 32 <= test266151307()
                    mem[64] = _1860 + ceil32(return_data.size) + ceil32(mem[_1860 + mem[_1860]]) + 32
                    mem[_1860 + ceil32(return_data.size)] = _1880
                    require _1872 + _1880 + 32 <= return_data.size
                    s = 0
                    while s < _1880:
                        mem[s + _1860 + ceil32(return_data.size) + 32] = mem[s + _1860 + _1872 + 32]
                        _1286 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(_1880) > _1880:
                        mem[_1860 + ceil32(return_data.size) + _1880 + 32] = 0
                    require idx < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = _1860 + ceil32(return_data.size)
                _1286 = mem[96]
                idx = idx + 1
                continue 
            _1300 = mem[64]
            mem[mem[64]] = 96
            _1322 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + (32 * _1322) + 128
            u = mem[64] + 128
            while idx < _1322:
                mem[u] = t + -_1300 - 128
                _1692 = mem[s]
                _1704 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                while v < _1704:
                    mem[v + t + 32] = mem[v + _1692 + 32]
                    v = v + 32
                    continue 
                if ceil32(_1704) > _1704:
                    mem[t + _1704 + 32] = 0
                idx = idx + 1
                s = s + 32
                t = ceil32(_1704) + t + 32
                u = u + 32
                continue 
            mem[_1300 + 32] = t - _1300
            _1718 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _1718) + 32
            v = t + 32
            while idx < _1718:
                mem[v] = u + -t - 32
                _1980 = mem[s]
                _2000 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                while t < _2000:
                    mem[t + u + 32] = mem[t + _1980 + 32]
                    t = t + 32
                    continue 
                if ceil32(_2000) > _2000:
                    mem[u + _2000 + 32] = 0
                idx = idx + 1
                s = s + 32
                u = ceil32(_2000) + u + 32
                v = v + 32
                continue 
            mem[_1300 + 64] = u - _1300
            _2008 = mem[_876]
            mem[u] = mem[_876]
            mem[u + 32 len 32 * _2008] = mem[_876 + 32 len 32 * _2008]
            var49001 = _2008
            var49002 = _876 + (32 * _2008) + 32
            return memory
              from mem[64]
               len u + (32 * _2008) + -mem[64] + 32
        mem[_876 + 32 len 32 * _874] = call.data[calldata.size len 32 * _874]
        _1287 = mem[96]
        idx = 0
        while idx < _1287:
            require idx < mem[96]
            _1305 = mem[(32 * idx) + 128]
            mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_1305))
            staticcall address(_1305).name() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1325 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1350 = mem[_1325]
            require mem[_1325] <= test266151307()
            require _1325 + mem[_1325] + 31 < _1325 + return_data.size
            _1375 = mem[_1325 + mem[_1325]]
            require mem[_1325 + mem[_1325]] <= test266151307()
            require ceil32(mem[_1325 + mem[_1325]]) + 32 >= 0 and _1325 + ceil32(return_data.size) + ceil32(mem[_1325 + mem[_1325]]) + 32 <= test266151307()
            mem[64] = _1325 + ceil32(return_data.size) + ceil32(mem[_1325 + mem[_1325]]) + 32
            mem[_1325 + ceil32(return_data.size)] = _1375
            require _1350 + _1375 + 32 <= return_data.size
            s = 0
            while s < _1375:
                mem[s + _1325 + ceil32(return_data.size) + 32] = mem[s + _1325 + _1350 + 32]
                _1287 = mem[96]
                s = s + 32
                continue 
            if ceil32(_1375) <= _1375:
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1325 + ceil32(return_data.size)
                require ext_code.size(address(_1305))
                staticcall address(_1305).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1783 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_1783] == mem[_1783 + 31 len 1]
                require idx < mem[_876]
                mem[(32 * idx) + _876 + 32] = mem[_1783 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1305))
                staticcall address(_1305).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1853 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1865 = mem[_1853]
                require mem[_1853] <= test266151307()
                require _1853 + mem[_1853] + 31 < _1853 + return_data.size
                _1877 = mem[_1853 + mem[_1853]]
                require mem[_1853 + mem[_1853]] <= test266151307()
                require ceil32(mem[_1853 + mem[_1853]]) + 32 >= 0 and _1853 + ceil32(return_data.size) + ceil32(mem[_1853 + mem[_1853]]) + 32 <= test266151307()
                mem[64] = _1853 + ceil32(return_data.size) + ceil32(mem[_1853 + mem[_1853]]) + 32
                mem[_1853 + ceil32(return_data.size)] = _1877
                require _1865 + _1877 + 32 <= return_data.size
                s = 0
                while s < _1877:
                    mem[s + _1853 + ceil32(return_data.size) + 32] = mem[s + _1853 + _1865 + 32]
                    _1287 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1877) > _1877:
                    mem[_1853 + ceil32(return_data.size) + _1877 + 32] = 0
                require idx < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = _1853 + ceil32(return_data.size)
            else:
                mem[_1325 + ceil32(return_data.size) + _1375 + 32] = 0
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1325 + ceil32(return_data.size)
                require ext_code.size(address(_1305))
                staticcall address(_1305).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1791 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_1791] == mem[_1791 + 31 len 1]
                require idx < mem[_876]
                mem[(32 * idx) + _876 + 32] = mem[_1791 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1305))
                staticcall address(_1305).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1861 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1873 = mem[_1861]
                require mem[_1861] <= test266151307()
                require _1861 + mem[_1861] + 31 < _1861 + return_data.size
                _1881 = mem[_1861 + mem[_1861]]
                require mem[_1861 + mem[_1861]] <= test266151307()
                require ceil32(mem[_1861 + mem[_1861]]) + 32 >= 0 and _1861 + ceil32(return_data.size) + ceil32(mem[_1861 + mem[_1861]]) + 32 <= test266151307()
                mem[64] = _1861 + ceil32(return_data.size) + ceil32(mem[_1861 + mem[_1861]]) + 32
                mem[_1861 + ceil32(return_data.size)] = _1881
                require _1873 + _1881 + 32 <= return_data.size
                s = 0
                while s < _1881:
                    mem[s + _1861 + ceil32(return_data.size) + 32] = mem[s + _1861 + _1873 + 32]
                    _1287 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1881) > _1881:
                    mem[_1861 + ceil32(return_data.size) + _1881 + 32] = 0
                require idx < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * idx) + (64 * ('cd', 4).length) + 192] = _1861 + ceil32(return_data.size)
            _1287 = mem[96]
            idx = idx + 1
            continue 
        _1304 = mem[64]
        mem[mem[64]] = 96
        _1324 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + (32 * _1324) + 128
        u = mem[64] + 128
        while idx < _1324:
            mem[u] = t + -_1304 - 128
            _1694 = mem[s]
            _1705 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            while v < _1705:
                mem[v + t + 32] = mem[v + _1694 + 32]
                v = v + 32
                continue 
            if ceil32(_1705) > _1705:
                mem[t + _1705 + 32] = 0
            idx = idx + 1
            s = s + 32
            t = ceil32(_1705) + t + 32
            u = u + 32
            continue 
        mem[_1304 + 32] = t - _1304
        _1719 = mem[(64 * ('cd', 4).length) + 160]
        mem[t] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        u = t + (32 * _1719) + 32
        v = t + 32
        while idx < _1719:
            mem[v] = u + -t - 32
            _1984 = mem[s]
            _2001 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            while t < _2001:
                mem[t + u + 32] = mem[t + _1984 + 32]
                t = t + 32
                continue 
            if ceil32(_2001) > _2001:
                mem[u + _2001 + 32] = 0
            idx = idx + 1
            s = s + 32
            u = ceil32(_2001) + u + 32
            v = v + 32
            continue 
        mem[_1304 + 64] = u - _1304
        _2009 = mem[_876]
        mem[u] = mem[_876]
        mem[u + 32 len 32 * _2009] = mem[_876 + 32 len 32 * _2009]
        var50001 = _2009
        return memory
          from mem[64]
           len u + (32 * _2009) + -mem[64] + 32
    mem[(32 * ('cd', 4).length) + 160] = 96
    s = (32 * ('cd', 4).length) + 160
    idx = ('cd', 4).length
    while idx - 1:
        mem[s + 32] = 96
        s = s + 32
        idx = idx - 1
        continue 
    _875 = mem[96]
    require mem[96] <= test266151307()
    _877 = mem[64]
    mem[mem[64]] = mem[96]
    mem[64] = mem[64] + (32 * _875) + 32
    if not _875:
        _882 = mem[96]
        require mem[96] <= test266151307()
        mem[_877 + (32 * _875) + 32] = mem[96]
        mem[64] = _877 + (32 * _875) + (32 * _882) + 64
        if not _882:
            _1288 = mem[96]
            idx = 0
            while idx < _1288:
                require idx < mem[96]
                _1309 = mem[(32 * idx) + 128]
                mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1309))
                staticcall address(_1309).name() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1327 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1352 = mem[_1327]
                require mem[_1327] <= test266151307()
                require _1327 + mem[_1327] + 31 < _1327 + return_data.size
                _1377 = mem[_1327 + mem[_1327]]
                require mem[_1327 + mem[_1327]] <= test266151307()
                require ceil32(mem[_1327 + mem[_1327]]) + 32 >= 0 and _1327 + ceil32(return_data.size) + ceil32(mem[_1327 + mem[_1327]]) + 32 <= test266151307()
                mem[64] = _1327 + ceil32(return_data.size) + ceil32(mem[_1327 + mem[_1327]]) + 32
                mem[_1327 + ceil32(return_data.size)] = _1377
                require _1352 + _1377 + 32 <= return_data.size
                s = 0
                while s < _1377:
                    mem[s + _1327 + ceil32(return_data.size) + 32] = mem[s + _1327 + _1352 + 32]
                    _1288 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1377) <= _1377:
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1327 + ceil32(return_data.size)
                    require ext_code.size(address(_1309))
                    staticcall address(_1309).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1785 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1785] == mem[_1785 + 31 len 1]
                    require idx < mem[_877 + (32 * _875) + 32]
                    mem[(32 * idx) + _877 + (32 * _875) + 64] = mem[_1785 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_1309))
                    staticcall address(_1309).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1854 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1866 = mem[_1854]
                    require mem[_1854] <= test266151307()
                    require _1854 + mem[_1854] + 31 < _1854 + return_data.size
                    _1878 = mem[_1854 + mem[_1854]]
                    require mem[_1854 + mem[_1854]] <= test266151307()
                    require ceil32(mem[_1854 + mem[_1854]]) + 32 >= 0 and _1854 + ceil32(return_data.size) + ceil32(mem[_1854 + mem[_1854]]) + 32 <= test266151307()
                    mem[64] = _1854 + ceil32(return_data.size) + ceil32(mem[_1854 + mem[_1854]]) + 32
                    mem[_1854 + ceil32(return_data.size)] = _1878
                    require _1866 + _1878 + 32 <= return_data.size
                    s = 0
                    while s < _1878:
                        mem[s + _1854 + ceil32(return_data.size) + 32] = mem[s + _1854 + _1866 + 32]
                        _1288 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(_1878) > _1878:
                        mem[_1854 + ceil32(return_data.size) + _1878 + 32] = 0
                    require idx < mem[_877]
                    mem[(32 * idx) + _877 + 32] = _1854 + ceil32(return_data.size)
                else:
                    mem[_1327 + ceil32(return_data.size) + _1377 + 32] = 0
                    require idx < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1327 + ceil32(return_data.size)
                    require ext_code.size(address(_1309))
                    staticcall address(_1309).0x313ce567 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1792 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_1792] == mem[_1792 + 31 len 1]
                    require idx < mem[_877 + (32 * _875) + 32]
                    mem[(32 * idx) + _877 + (32 * _875) + 64] = mem[_1792 + 31 len 1]
                    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                    require ext_code.size(address(_1309))
                    staticcall address(_1309).0x95d89b41 with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1862 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1874 = mem[_1862]
                    require mem[_1862] <= test266151307()
                    require _1862 + mem[_1862] + 31 < _1862 + return_data.size
                    _1882 = mem[_1862 + mem[_1862]]
                    require mem[_1862 + mem[_1862]] <= test266151307()
                    require ceil32(mem[_1862 + mem[_1862]]) + 32 >= 0 and _1862 + ceil32(return_data.size) + ceil32(mem[_1862 + mem[_1862]]) + 32 <= test266151307()
                    mem[64] = _1862 + ceil32(return_data.size) + ceil32(mem[_1862 + mem[_1862]]) + 32
                    mem[_1862 + ceil32(return_data.size)] = _1882
                    require _1874 + _1882 + 32 <= return_data.size
                    s = 0
                    while s < _1882:
                        mem[s + _1862 + ceil32(return_data.size) + 32] = mem[s + _1862 + _1874 + 32]
                        _1288 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(_1882) > _1882:
                        mem[_1862 + ceil32(return_data.size) + _1882 + 32] = 0
                    require idx < mem[_877]
                    mem[(32 * idx) + _877 + 32] = _1862 + ceil32(return_data.size)
                _1288 = mem[96]
                idx = idx + 1
                continue 
            _1308 = mem[64]
            mem[mem[64]] = 96
            _1326 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + (32 * _1326) + 128
            u = mem[64] + 128
            while idx < _1326:
                mem[u] = t + -_1308 - 128
                _1696 = mem[s]
                _1706 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                while v < _1706:
                    mem[v + t + 32] = mem[v + _1696 + 32]
                    v = v + 32
                    continue 
                if ceil32(_1706) > _1706:
                    mem[t + _1706 + 32] = 0
                idx = idx + 1
                s = s + 32
                t = ceil32(_1706) + t + 32
                u = u + 32
                continue 
            mem[_1308 + 32] = t - _1308
            _1720 = mem[_877]
            mem[t] = mem[_877]
            idx = 0
            s = _877 + 32
            u = t + (32 * _1720) + 32
            v = t + 32
            while idx < _1720:
                mem[v] = u + -t - 32
                _1988 = mem[s]
                _2002 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                while t < _2002:
                    mem[t + u + 32] = mem[t + _1988 + 32]
                    t = t + 32
                    continue 
                if ceil32(_2002) > _2002:
                    mem[u + _2002 + 32] = 0
                idx = idx + 1
                s = s + 32
                u = ceil32(_2002) + u + 32
                v = v + 32
                continue 
            mem[_1308 + 64] = u - _1308
            _2010 = mem[_877 + (32 * _875) + 32]
            mem[u] = mem[_877 + (32 * _875) + 32]
            mem[u + 32 len 32 * _2010] = mem[_877 + (32 * _875) + 64 len 32 * _2010]
            var49001 = _2010
            var49002 = _877 + (32 * _875) + (32 * _2010) + 64
            return memory
              from mem[64]
               len u + (32 * _2010) + -mem[64] + 32
        mem[_877 + (32 * _875) + 64 len 32 * _882] = call.data[calldata.size len 32 * _882]
        _1289 = mem[96]
        idx = 0
        while idx < _1289:
            require idx < mem[96]
            _1313 = mem[(32 * idx) + 128]
            mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_1313))
            staticcall address(_1313).name() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1329 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1354 = mem[_1329]
            require mem[_1329] <= test266151307()
            require _1329 + mem[_1329] + 31 < _1329 + return_data.size
            _1379 = mem[_1329 + mem[_1329]]
            require mem[_1329 + mem[_1329]] <= test266151307()
            require ceil32(mem[_1329 + mem[_1329]]) + 32 >= 0 and _1329 + ceil32(return_data.size) + ceil32(mem[_1329 + mem[_1329]]) + 32 <= test266151307()
            mem[64] = _1329 + ceil32(return_data.size) + ceil32(mem[_1329 + mem[_1329]]) + 32
            mem[_1329 + ceil32(return_data.size)] = _1379
            require _1354 + _1379 + 32 <= return_data.size
            s = 0
            while s < _1379:
                mem[s + _1329 + ceil32(return_data.size) + 32] = mem[s + _1329 + _1354 + 32]
                _1289 = mem[96]
                s = s + 32
                continue 
            if ceil32(_1379) <= _1379:
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1329 + ceil32(return_data.size)
                require ext_code.size(address(_1313))
                staticcall address(_1313).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1787 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_1787] == mem[_1787 + 31 len 1]
                require idx < mem[_877 + (32 * _875) + 32]
                mem[(32 * idx) + _877 + (32 * _875) + 64] = mem[_1787 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1313))
                staticcall address(_1313).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1855 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1867 = mem[_1855]
                require mem[_1855] <= test266151307()
                require _1855 + mem[_1855] + 31 < _1855 + return_data.size
                _1879 = mem[_1855 + mem[_1855]]
                require mem[_1855 + mem[_1855]] <= test266151307()
                require ceil32(mem[_1855 + mem[_1855]]) + 32 >= 0 and _1855 + ceil32(return_data.size) + ceil32(mem[_1855 + mem[_1855]]) + 32 <= test266151307()
                mem[64] = _1855 + ceil32(return_data.size) + ceil32(mem[_1855 + mem[_1855]]) + 32
                mem[_1855 + ceil32(return_data.size)] = _1879
                require _1867 + _1879 + 32 <= return_data.size
                s = 0
                while s < _1879:
                    mem[s + _1855 + ceil32(return_data.size) + 32] = mem[s + _1855 + _1867 + 32]
                    _1289 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1879) > _1879:
                    mem[_1855 + ceil32(return_data.size) + _1879 + 32] = 0
                require idx < mem[_877]
                mem[(32 * idx) + _877 + 32] = _1855 + ceil32(return_data.size)
            else:
                mem[_1329 + ceil32(return_data.size) + _1379 + 32] = 0
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1329 + ceil32(return_data.size)
                require ext_code.size(address(_1313))
                staticcall address(_1313).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1793 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_1793] == mem[_1793 + 31 len 1]
                require idx < mem[_877 + (32 * _875) + 32]
                mem[(32 * idx) + _877 + (32 * _875) + 64] = mem[_1793 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1313))
                staticcall address(_1313).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1863 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1875 = mem[_1863]
                require mem[_1863] <= test266151307()
                require _1863 + mem[_1863] + 31 < _1863 + return_data.size
                _1883 = mem[_1863 + mem[_1863]]
                require mem[_1863 + mem[_1863]] <= test266151307()
                require ceil32(mem[_1863 + mem[_1863]]) + 32 >= 0 and _1863 + ceil32(return_data.size) + ceil32(mem[_1863 + mem[_1863]]) + 32 <= test266151307()
                mem[64] = _1863 + ceil32(return_data.size) + ceil32(mem[_1863 + mem[_1863]]) + 32
                mem[_1863 + ceil32(return_data.size)] = _1883
                require _1875 + _1883 + 32 <= return_data.size
                s = 0
                while s < _1883:
                    mem[s + _1863 + ceil32(return_data.size) + 32] = mem[s + _1863 + _1875 + 32]
                    _1289 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_1883) > _1883:
                    mem[_1863 + ceil32(return_data.size) + _1883 + 32] = 0
                require idx < mem[_877]
                mem[(32 * idx) + _877 + 32] = _1863 + ceil32(return_data.size)
            _1289 = mem[96]
            idx = idx + 1
            continue 
        _1312 = mem[64]
        mem[mem[64]] = 96
        _1328 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + (32 * _1328) + 128
        u = mem[64] + 128
        while idx < _1328:
            mem[u] = t + -_1312 - 128
            _1698 = mem[s]
            _1707 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            while v < _1707:
                mem[v + t + 32] = mem[v + _1698 + 32]
                v = v + 32
                continue 
            if ceil32(_1707) > _1707:
                mem[t + _1707 + 32] = 0
            idx = idx + 1
            s = s + 32
            t = ceil32(_1707) + t + 32
            u = u + 32
            continue 
        mem[_1312 + 32] = t - _1312
        _1721 = mem[_877]
        mem[t] = mem[_877]
        idx = 0
        s = _877 + 32
        u = t + (32 * _1721) + 32
        v = t + 32
        while idx < _1721:
            mem[v] = u + -t - 32
            _1992 = mem[s]
            _2003 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            while t < _2003:
                mem[t + u + 32] = mem[t + _1992 + 32]
                t = t + 32
                continue 
            if ceil32(_2003) > _2003:
                mem[u + _2003 + 32] = 0
            idx = idx + 1
            s = s + 32
            u = ceil32(_2003) + u + 32
            v = v + 32
            continue 
        mem[_1312 + 64] = u - _1312
        _2011 = mem[_877 + (32 * _875) + 32]
        mem[u] = mem[_877 + (32 * _875) + 32]
        mem[u + 32 len 32 * _2011] = mem[_877 + (32 * _875) + 64 len 32 * _2011]
        var50001 = _2011
        return memory
          from mem[64]
           len u + (32 * _2011) + -mem[64] + 32
    mem[_877 + 32] = 96
    s = _877 + 32
    idx = _875
    while idx - 1:
        mem[s + 32] = 96
        s = s + 32
        idx = idx - 1
        continue 
    _1316 = mem[96]
    require mem[96] <= test266151307()
    _1319 = mem[64]
    mem[mem[64]] = mem[96]
    mem[64] = mem[64] + (32 * _1316) + 32
    if not _1316:
        _1682 = mem[96]
        idx = 0
        while idx < _1682:
            require idx < mem[96]
            _1709 = mem[(32 * idx) + 128]
            mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_1709))
            staticcall address(_1709).name() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1731 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1775 = mem[_1731]
            require mem[_1731] <= test266151307()
            require _1731 + mem[_1731] + 31 < _1731 + return_data.size
            _1795 = mem[_1731 + mem[_1731]]
            require mem[_1731 + mem[_1731]] <= test266151307()
            require ceil32(mem[_1731 + mem[_1731]]) + 32 >= 0 and _1731 + ceil32(return_data.size) + ceil32(mem[_1731 + mem[_1731]]) + 32 <= test266151307()
            mem[64] = _1731 + ceil32(return_data.size) + ceil32(mem[_1731 + mem[_1731]]) + 32
            mem[_1731 + ceil32(return_data.size)] = _1795
            require _1775 + _1795 + 32 <= return_data.size
            s = 0
            while s < _1795:
                mem[s + _1731 + ceil32(return_data.size) + 32] = mem[s + _1731 + _1775 + 32]
                _1682 = mem[96]
                s = s + 32
                continue 
            if ceil32(_1795) <= _1795:
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1731 + ceil32(return_data.size)
                require ext_code.size(address(_1709))
                staticcall address(_1709).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2061 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2061] == mem[_2061 + 31 len 1]
                require idx < mem[_1319]
                mem[(32 * idx) + _1319 + 32] = mem[_2061 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1709))
                staticcall address(_1709).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2088 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2092 = mem[_2088]
                require mem[_2088] <= test266151307()
                require _2088 + mem[_2088] + 31 < _2088 + return_data.size
                _2096 = mem[_2088 + mem[_2088]]
                require mem[_2088 + mem[_2088]] <= test266151307()
                require ceil32(mem[_2088 + mem[_2088]]) + 32 >= 0 and _2088 + ceil32(return_data.size) + ceil32(mem[_2088 + mem[_2088]]) + 32 <= test266151307()
                mem[64] = _2088 + ceil32(return_data.size) + ceil32(mem[_2088 + mem[_2088]]) + 32
                mem[_2088 + ceil32(return_data.size)] = _2096
                require _2092 + _2096 + 32 <= return_data.size
                s = 0
                while s < _2096:
                    mem[s + _2088 + ceil32(return_data.size) + 32] = mem[s + _2088 + _2092 + 32]
                    _1682 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_2096) > _2096:
                    mem[_2088 + ceil32(return_data.size) + _2096 + 32] = 0
                require idx < mem[_877]
                mem[(32 * idx) + _877 + 32] = _2088 + ceil32(return_data.size)
            else:
                mem[_1731 + ceil32(return_data.size) + _1795 + 32] = 0
                require idx < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1731 + ceil32(return_data.size)
                require ext_code.size(address(_1709))
                staticcall address(_1709).0x313ce567 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2064 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2064] == mem[_2064 + 31 len 1]
                require idx < mem[_1319]
                mem[(32 * idx) + _1319 + 32] = mem[_2064 + 31 len 1]
                mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
                require ext_code.size(address(_1709))
                staticcall address(_1709).0x95d89b41 with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2090 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2094 = mem[_2090]
                require mem[_2090] <= test266151307()
                require _2090 + mem[_2090] + 31 < _2090 + return_data.size
                _2098 = mem[_2090 + mem[_2090]]
                require mem[_2090 + mem[_2090]] <= test266151307()
                require ceil32(mem[_2090 + mem[_2090]]) + 32 >= 0 and _2090 + ceil32(return_data.size) + ceil32(mem[_2090 + mem[_2090]]) + 32 <= test266151307()
                mem[64] = _2090 + ceil32(return_data.size) + ceil32(mem[_2090 + mem[_2090]]) + 32
                mem[_2090 + ceil32(return_data.size)] = _2098
                require _2094 + _2098 + 32 <= return_data.size
                s = 0
                while s < _2098:
                    mem[s + _2090 + ceil32(return_data.size) + 32] = mem[s + _2090 + _2094 + 32]
                    _1682 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(_2098) > _2098:
                    mem[_2090 + ceil32(return_data.size) + _2098 + 32] = 0
                require idx < mem[_877]
                mem[(32 * idx) + _877 + 32] = _2090 + ceil32(return_data.size)
            _1682 = mem[96]
            idx = idx + 1
            continue 
        _1708 = mem[64]
        mem[mem[64]] = 96
        _1730 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + (32 * _1730) + 128
        u = mem[64] + 128
        while idx < _1730:
            mem[u] = t + -_1708 - 128
            _1996 = mem[s]
            _2004 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            while v < _2004:
                mem[v + t + 32] = mem[v + _1996 + 32]
                v = v + 32
                continue 
            if ceil32(_2004) > _2004:
                mem[t + _2004 + 32] = 0
            idx = idx + 1
            s = s + 32
            t = ceil32(_2004) + t + 32
            u = u + 32
            continue 
        mem[_1708 + 32] = t - _1708
        _2012 = mem[_877]
        mem[t] = mem[_877]
        idx = 0
        s = _877 + 32
        u = t + (32 * _2012) + 32
        v = t + 32
        while idx < _2012:
            mem[v] = u + -t - 32
            _2124 = mem[s]
            _2132 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            while t < _2132:
                mem[t + u + 32] = mem[t + _2124 + 32]
                t = t + 32
                continue 
            if ceil32(_2132) > _2132:
                mem[u + _2132 + 32] = 0
            idx = idx + 1
            s = s + 32
            u = ceil32(_2132) + u + 32
            v = v + 32
            continue 
        mem[_1708 + 64] = u - _1708
        _2138 = mem[_1319]
        mem[u] = mem[_1319]
        mem[u + 32 len 32 * _2138] = mem[_1319 + 32 len 32 * _2138]
        var53001 = _2138
        var53002 = _1319 + (32 * _2138) + 32
        return memory
          from mem[64]
           len u + (32 * _2138) + -mem[64] + 32
    mem[_1319 + 32 len 32 * _1316] = call.data[calldata.size len 32 * _1316]
    _1683 = mem[96]
    idx = 0
    while idx < _1683:
        require idx < mem[96]
        _1713 = mem[(32 * idx) + 128]
        mem[mem[64]] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
        require ext_code.size(address(_1713))
        staticcall address(_1713).name() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1733 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1777 = mem[_1733]
        require mem[_1733] <= test266151307()
        require _1733 + mem[_1733] + 31 < _1733 + return_data.size
        _1797 = mem[_1733 + mem[_1733]]
        require mem[_1733 + mem[_1733]] <= test266151307()
        require ceil32(mem[_1733 + mem[_1733]]) + 32 >= 0 and _1733 + ceil32(return_data.size) + ceil32(mem[_1733 + mem[_1733]]) + 32 <= test266151307()
        mem[64] = _1733 + ceil32(return_data.size) + ceil32(mem[_1733 + mem[_1733]]) + 32
        mem[_1733 + ceil32(return_data.size)] = _1797
        require _1777 + _1797 + 32 <= return_data.size
        s = 0
        while s < _1797:
            mem[s + _1733 + ceil32(return_data.size) + 32] = mem[s + _1733 + _1777 + 32]
            _1683 = mem[96]
            s = s + 32
            continue 
        if ceil32(_1797) <= _1797:
            require idx < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1733 + ceil32(return_data.size)
            require ext_code.size(address(_1713))
            staticcall address(_1713).0x313ce567 with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2063 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_2063] == mem[_2063 + 31 len 1]
            require idx < mem[_1319]
            mem[(32 * idx) + _1319 + 32] = mem[_2063 + 31 len 1]
            mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_1713))
            staticcall address(_1713).0x95d89b41 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2089 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2093 = mem[_2089]
            require mem[_2089] <= test266151307()
            require _2089 + mem[_2089] + 31 < _2089 + return_data.size
            _2097 = mem[_2089 + mem[_2089]]
            require mem[_2089 + mem[_2089]] <= test266151307()
            require ceil32(mem[_2089 + mem[_2089]]) + 32 >= 0 and _2089 + ceil32(return_data.size) + ceil32(mem[_2089 + mem[_2089]]) + 32 <= test266151307()
            mem[64] = _2089 + ceil32(return_data.size) + ceil32(mem[_2089 + mem[_2089]]) + 32
            mem[_2089 + ceil32(return_data.size)] = _2097
            require _2093 + _2097 + 32 <= return_data.size
            s = 0
            while s < _2097:
                mem[s + _2089 + ceil32(return_data.size) + 32] = mem[s + _2089 + _2093 + 32]
                _1683 = mem[96]
                s = s + 32
                continue 
            if ceil32(_2097) > _2097:
                mem[_2089 + ceil32(return_data.size) + _2097 + 32] = 0
            require idx < mem[_877]
            mem[(32 * idx) + _877 + 32] = _2089 + ceil32(return_data.size)
        else:
            mem[_1733 + ceil32(return_data.size) + _1797 + 32] = 0
            require idx < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * idx) + (32 * ('cd', 4).length) + 160] = _1733 + ceil32(return_data.size)
            require ext_code.size(address(_1713))
            staticcall address(_1713).0x313ce567 with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2065 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_2065] == mem[_2065 + 31 len 1]
            require idx < mem[_1319]
            mem[(32 * idx) + _1319 + 32] = mem[_2065 + 31 len 1]
            mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
            require ext_code.size(address(_1713))
            staticcall address(_1713).0x95d89b41 with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2091 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2095 = mem[_2091]
            require mem[_2091] <= test266151307()
            require _2091 + mem[_2091] + 31 < _2091 + return_data.size
            _2099 = mem[_2091 + mem[_2091]]
            require mem[_2091 + mem[_2091]] <= test266151307()
            require ceil32(mem[_2091 + mem[_2091]]) + 32 >= 0 and _2091 + ceil32(return_data.size) + ceil32(mem[_2091 + mem[_2091]]) + 32 <= test266151307()
            mem[64] = _2091 + ceil32(return_data.size) + ceil32(mem[_2091 + mem[_2091]]) + 32
            mem[_2091 + ceil32(return_data.size)] = _2099
            require _2095 + _2099 + 32 <= return_data.size
            s = 0
            while s < _2099:
                mem[s + _2091 + ceil32(return_data.size) + 32] = mem[s + _2091 + _2095 + 32]
                _1683 = mem[96]
                s = s + 32
                continue 
            if ceil32(_2099) > _2099:
                mem[_2091 + ceil32(return_data.size) + _2099 + 32] = 0
            require idx < mem[_877]
            mem[(32 * idx) + _877 + 32] = _2091 + ceil32(return_data.size)
        _1683 = mem[96]
        idx = idx + 1
        continue 
    _1712 = mem[64]
    mem[mem[64]] = 96
    _1732 = mem[(32 * ('cd', 4).length) + 128]
    mem[mem[64] + 96] = mem[(32 * ('cd', 4).length) + 128]
    idx = 0
    s = (32 * ('cd', 4).length) + 160
    t = mem[64] + (32 * _1732) + 128
    u = mem[64] + 128
    while idx < _1732:
        mem[u] = t + -_1712 - 128
        _1998 = mem[s]
        _2005 = mem[mem[s]]
        mem[t] = mem[mem[s]]
        v = 0
        while v < _2005:
            mem[v + t + 32] = mem[v + _1998 + 32]
            v = v + 32
            continue 
        if ceil32(_2005) > _2005:
            mem[t + _2005 + 32] = 0
        idx = idx + 1
        s = s + 32
        t = ceil32(_2005) + t + 32
        u = u + 32
        continue 
    mem[_1712 + 32] = t - _1712
    _2013 = mem[_877]
    mem[t] = mem[_877]
    idx = 0
    s = _877 + 32
    u = t + (32 * _2013) + 32
    v = t + 32
    while idx < _2013:
        mem[v] = u + -t - 32
        _2128 = mem[s]
        _2133 = mem[mem[s]]
        mem[u] = mem[mem[s]]
        t = 0
        while t < _2133:
            mem[t + u + 32] = mem[t + _2128 + 32]
            t = t + 32
            continue 
        if ceil32(_2133) > _2133:
            mem[u + _2133 + 32] = 0
        idx = idx + 1
        s = s + 32
        u = ceil32(_2133) + u + 32
        v = v + 32
        continue 
    mem[_1712 + 64] = u - _1712
    _2139 = mem[_1319]
    mem[u] = mem[_1319]
    mem[u + 32 len 32 * _2139] = mem[_1319 + 32 len 32 * _2139]
    var54001 = _2139
    return memory
      from mem[64]
       len u + (32 * _2139) + -mem[64] + 32
}

function sub_76a7a689(?) {
    require calldata.size - 4 >= 32
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require ('cd', 4).length <= test266151307()
    mem[96] = ('cd', 4).length
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(32 * ('cd', 4).length) + 128] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
                if not ('cd', 4).length:
                    require ('cd', 4).length <= test266151307()
                    mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                    mem[64] = (164 * ('cd', 4).length) + 256
                    if not ('cd', 4).length:
                        idx = 0
                        s = 0
                        s = 0
                        s = 0
                        s = 0
                        s = 0
                        while ('cd', 4).length > uint32(idx):
                            require uint32(idx) < ('cd', 4).length
                            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1249 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _1313 = mem[_1249]
                            require mem[_1249] == mem[_1249 + 18 len 14]
                            _1408 = mem[_1249 + 32]
                            require mem[_1249 + 32] == mem[_1249 + 50 len 14]
                            _1473 = mem[_1249 + 64]
                            require mem[_1249 + 64] == mem[_1249 + 92 len 4]
                            require uint32(idx) < ('cd', 4).length
                            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                                    gas gas_remaining wei
                            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1696 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 64
                            _1728 = mem[_1696]
                            require mem[_1696] == mem[_1696 + 28 len 4]
                            require mem[_1696 + 32] == mem[_1696 + 60 len 4]
                            require uint32(idx) < ('cd', 4).length
                            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1856 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _1888 = mem[_1856]
                            require mem[_1856] == mem[_1856 + 28 len 4]
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1313)
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1408)
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1473)
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1728)
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1888)
                            idx = idx + 1
                            s = _1888
                            s = _1473
                            s = _1408
                            s = _1313
                            s = _1728
                            continue 
                        _1056 = mem[64]
                        mem[mem[64]] = 160
                        _1088 = mem[96]
                        mem[mem[64] + 160] = mem[96]
                        idx = 0
                        s = 128
                        t = mem[64] + 192
                        while idx < mem[96]:
                            mem[t] = mem[s + 18 len 14]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[mem[64] + 32] = (32 * mem[96]) + 192
                        _2112 = mem[(32 * ('cd', 4).length) + 128]
                        mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
                        idx = 0
                        s = (32 * ('cd', 4).length) + 160
                        t = mem[64] + (32 * mem[96]) + 224
                        while idx < _2112:
                            mem[t] = mem[s + 18 len 14]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[_1056 + 64] = (32 * mem[96]) + (32 * _2112) + 224
                        _2432 = mem[(64 * ('cd', 4).length) + 160]
                        mem[_1056 + (32 * _1088) + (32 * _2112) + 224] = mem[(64 * ('cd', 4).length) + 160]
                        idx = 0
                        s = (64 * ('cd', 4).length) + 192
                        t = _1056 + (32 * _1088) + (32 * _2112) + 256
                        while idx < _2432:
                            mem[t] = mem[s + 28 len 4]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[_1056 + 96] = (32 * _1088) + (32 * _2112) + (32 * _2432) + 256
                        _2688 = mem[(98 * ('cd', 4).length) + 192]
                        mem[_1056 + (32 * _1088) + (32 * _2112) + (32 * _2432) + 256] = mem[(98 * ('cd', 4).length) + 192]
                        idx = 0
                        s = (98 * ('cd', 4).length) + 224
                        t = _1056 + (32 * _1088) + (32 * _2112) + (32 * _2432) + 288
                        while idx < _2688:
                            mem[t] = mem[s + 28 len 4]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        mem[_1056 + 128] = (32 * _1088) + (32 * _2112) + (32 * _2432) + (32 * _2688) + 288
                        _2880 = mem[(131 * ('cd', 4).length) + 224]
                        mem[_1056 + (32 * _1088) + (32 * _2112) + (32 * _2432) + (32 * _2688) + 288] = mem[(131 * ('cd', 4).length) + 224]
                        idx = 0
                        s = (131 * ('cd', 4).length) + 256
                        t = _1056 + (32 * _1088) + (32 * _2112) + (32 * _2432) + (32 * _2688) + 320
                        while idx < _2880:
                            mem[t] = mem[s + 28 len 4]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _1056 + (32 * _1088) + (32 * _2112) + (32 * _2432) + (32 * _2688) + (32 * _2880) + -mem[64] + 320
                    mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1251 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _1315 = mem[_1251]
                        require mem[_1251] == mem[_1251 + 18 len 14]
                        _1409 = mem[_1251 + 32]
                        require mem[_1251 + 32] == mem[_1251 + 50 len 14]
                        _1475 = mem[_1251 + 64]
                        require mem[_1251 + 64] == mem[_1251 + 92 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                                gas gas_remaining wei
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1697 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _1729 = mem[_1697]
                        require mem[_1697] == mem[_1697 + 28 len 4]
                        require mem[_1697 + 32] == mem[_1697 + 60 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1857 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _1889 = mem[_1857]
                        require mem[_1857] == mem[_1857 + 28 len 4]
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1315)
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1409)
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1475)
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1729)
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1889)
                        idx = idx + 1
                        s = _1889
                        s = _1475
                        s = _1409
                        s = _1315
                        s = _1729
                        continue 
                    _1057 = mem[64]
                    mem[mem[64]] = 160
                    _1089 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + 192
                    while idx < _1089:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1057 + 32] = (32 * _1089) + 192
                    _2113 = mem[(32 * ('cd', 4).length) + 128]
                    mem[_1057 + (32 * _1089) + 192] = mem[(32 * ('cd', 4).length) + 128]
                    idx = 0
                    s = (32 * ('cd', 4).length) + 160
                    t = _1057 + (32 * _1089) + 224
                    while idx < _2113:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1057 + 64] = (32 * _1089) + (32 * _2113) + 224
                    _2433 = mem[(64 * ('cd', 4).length) + 160]
                    mem[_1057 + (32 * _1089) + (32 * _2113) + 224] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    t = _1057 + (32 * _1089) + (32 * _2113) + 256
                    while idx < _2433:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1057 + 96] = (32 * _1089) + (32 * _2113) + (32 * _2433) + 256
                    _2689 = mem[(98 * ('cd', 4).length) + 192]
                    mem[_1057 + (32 * _1089) + (32 * _2113) + (32 * _2433) + 256] = mem[(98 * ('cd', 4).length) + 192]
                    idx = 0
                    s = (98 * ('cd', 4).length) + 224
                    t = _1057 + (32 * _1089) + (32 * _2113) + (32 * _2433) + 288
                    while idx < _2689:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1057 + 128] = (32 * _1089) + (32 * _2113) + (32 * _2433) + (32 * _2689) + 288
                    _2881 = mem[(131 * ('cd', 4).length) + 224]
                    mem[_1057 + (32 * _1089) + (32 * _2113) + (32 * _2433) + (32 * _2689) + 288] = mem[(131 * ('cd', 4).length) + 224]
                    idx = 0
                    s = (131 * ('cd', 4).length) + 256
                    t = _1057 + (32 * _1089) + (32 * _2113) + (32 * _2433) + (32 * _2689) + 320
                    while idx < _2881:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _1057 + (32 * _1089) + (32 * _2113) + (32 * _2433) + (32 * _2689) + (32 * _2881) + -mem[64] + 320
                mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                require ('cd', 4).length <= test266151307()
                mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                mem[64] = (164 * ('cd', 4).length) + 256
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1253 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _1317 = mem[_1253]
                        require mem[_1253] == mem[_1253 + 18 len 14]
                        _1410 = mem[_1253 + 32]
                        require mem[_1253 + 32] == mem[_1253 + 50 len 14]
                        _1477 = mem[_1253 + 64]
                        require mem[_1253 + 64] == mem[_1253 + 92 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                                gas gas_remaining wei
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1698 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _1730 = mem[_1698]
                        require mem[_1698] == mem[_1698 + 28 len 4]
                        require mem[_1698 + 32] == mem[_1698 + 60 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1858 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _1890 = mem[_1858]
                        require mem[_1858] == mem[_1858 + 28 len 4]
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1317)
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1410)
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1477)
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1730)
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1890)
                        idx = idx + 1
                        s = _1890
                        s = _1477
                        s = _1410
                        s = _1317
                        s = _1730
                        continue 
                    mem[mem[64]] = 160
                    _1090 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + 192
                    while idx < mem[96]:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 32] = (32 * mem[96]) + 192
                    _2114 = mem[(32 * ('cd', 4).length) + 128]
                    mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
                    idx = 0
                    s = (32 * ('cd', 4).length) + 160
                    t = mem[64] + (32 * mem[96]) + 224
                    while idx < _2114:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2114) + 224
                    _2434 = mem[(64 * ('cd', 4).length) + 160]
                    mem[mem[64] + (32 * mem[96]) + (32 * _2114) + 224] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    t = mem[64] + (32 * mem[96]) + (32 * _2114) + 256
                    while idx < _2434:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2114) + (32 * _2434) + 256
                    _2690 = mem[(98 * ('cd', 4).length) + 192]
                    mem[mem[64] + (32 * mem[96]) + (32 * _2114) + (32 * _2434) + 256] = mem[(98 * ('cd', 4).length) + 192]
                    idx = 0
                    s = (98 * ('cd', 4).length) + 224
                    t = mem[64] + (32 * mem[96]) + (32 * _2114) + (32 * _2434) + 288
                    while idx < _2690:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 128] = (32 * mem[96]) + (32 * _2114) + (32 * _2434) + (32 * _2690) + 288
                    _2882 = mem[(131 * ('cd', 4).length) + 224]
                    mem[mem[64] + (32 * _1090) + (32 * _2114) + (32 * _2434) + (32 * _2690) + 288] = mem[(131 * ('cd', 4).length) + 224]
                    idx = 0
                    s = (131 * ('cd', 4).length) + 256
                    t = mem[64] + (32 * _1090) + (32 * _2114) + (32 * _2434) + (32 * _2690) + 320
                    while idx < _2882:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return 160, mem[mem[64] + 32 len (32 * _1090) + (32 * _2114) + (32 * _2434) + (32 * _2690) + (32 * _2882) + 288]
                mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1255 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1319 = mem[_1255]
                    require mem[_1255] == mem[_1255 + 18 len 14]
                    _1411 = mem[_1255 + 32]
                    require mem[_1255 + 32] == mem[_1255 + 50 len 14]
                    _1479 = mem[_1255 + 64]
                    require mem[_1255 + 64] == mem[_1255 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1699 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1731 = mem[_1699]
                    require mem[_1699] == mem[_1699 + 28 len 4]
                    require mem[_1699 + 32] == mem[_1699 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1859 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1891 = mem[_1859]
                    require mem[_1859] == mem[_1859 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1319)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1411)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1479)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1731)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1891)
                    idx = idx + 1
                    s = _1891
                    s = _1479
                    s = _1411
                    s = _1319
                    s = _1731
                    continue 
                _1059 = mem[64]
                mem[mem[64]] = 160
                _1091 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < _1091:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1059 + 32] = (32 * _1091) + 192
                _2115 = mem[(32 * ('cd', 4).length) + 128]
                mem[_1059 + (32 * _1091) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = _1059 + (32 * _1091) + 224
                while idx < _2115:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1059 + 64] = (32 * _1091) + (32 * _2115) + 224
                _2435 = mem[(64 * ('cd', 4).length) + 160]
                mem[_1059 + (32 * _1091) + (32 * _2115) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _1059 + (32 * _1091) + (32 * _2115) + 256
                while idx < _2435:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1059 + 96] = (32 * _1091) + (32 * _2115) + (32 * _2435) + 256
                _2691 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1059 + (32 * _1091) + (32 * _2115) + (32 * _2435) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1059 + (32 * _1091) + (32 * _2115) + (32 * _2435) + 288
                while idx < _2691:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1059 + 128] = (32 * _1091) + (32 * _2115) + (32 * _2435) + (32 * _2691) + 288
                _2883 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1059 + (32 * _1091) + (32 * _2115) + (32 * _2435) + (32 * _2691) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1059 + (32 * _1091) + (32 * _2115) + (32 * _2435) + (32 * _2691) + 320
                while idx < _2883:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1059 + (32 * _1091) + (32 * _2115) + (32 * _2435) + (32 * _2691) + (32 * _2883) + -mem[64] + 320
            mem[(64 * ('cd', 4).length) + 192 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                mem[64] = (164 * ('cd', 4).length) + 256
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1257 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _1321 = mem[_1257]
                        require mem[_1257] == mem[_1257 + 18 len 14]
                        _1412 = mem[_1257 + 32]
                        require mem[_1257 + 32] == mem[_1257 + 50 len 14]
                        _1481 = mem[_1257 + 64]
                        require mem[_1257 + 64] == mem[_1257 + 92 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                                gas gas_remaining wei
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1700 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _1732 = mem[_1700]
                        require mem[_1700] == mem[_1700 + 28 len 4]
                        require mem[_1700 + 32] == mem[_1700 + 60 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1860 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _1892 = mem[_1860]
                        require mem[_1860] == mem[_1860 + 28 len 4]
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1321)
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1412)
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1481)
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1732)
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1892)
                        idx = idx + 1
                        s = _1892
                        s = _1481
                        s = _1412
                        s = _1321
                        s = _1732
                        continue 
                    mem[mem[64]] = 160
                    _1092 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + 192
                    while idx < mem[96]:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 32] = (32 * mem[96]) + 192
                    _2116 = mem[(32 * ('cd', 4).length) + 128]
                    mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
                    idx = 0
                    s = (32 * ('cd', 4).length) + 160
                    t = mem[64] + (32 * mem[96]) + 224
                    while idx < _2116:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2116) + 224
                    _2436 = mem[(64 * ('cd', 4).length) + 160]
                    mem[mem[64] + (32 * mem[96]) + (32 * _2116) + 224] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    t = mem[64] + (32 * mem[96]) + (32 * _2116) + 256
                    while idx < _2436:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2116) + (32 * _2436) + 256
                    _2692 = mem[(98 * ('cd', 4).length) + 192]
                    mem[mem[64] + (32 * mem[96]) + (32 * _2116) + (32 * _2436) + 256] = mem[(98 * ('cd', 4).length) + 192]
                    idx = 0
                    s = (98 * ('cd', 4).length) + 224
                    t = mem[64] + (32 * mem[96]) + (32 * _2116) + (32 * _2436) + 288
                    while idx < _2692:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 128] = (32 * mem[96]) + (32 * _2116) + (32 * _2436) + (32 * _2692) + 288
                    _2884 = mem[(131 * ('cd', 4).length) + 224]
                    mem[mem[64] + (32 * _1092) + (32 * _2116) + (32 * _2436) + (32 * _2692) + 288] = mem[(131 * ('cd', 4).length) + 224]
                    idx = 0
                    s = (131 * ('cd', 4).length) + 256
                    t = mem[64] + (32 * _1092) + (32 * _2116) + (32 * _2436) + (32 * _2692) + 320
                    while idx < _2884:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return 160, mem[mem[64] + 32 len (32 * _1092) + (32 * _2116) + (32 * _2436) + (32 * _2692) + (32 * _2884) + 288]
                mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1259 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1323 = mem[_1259]
                    require mem[_1259] == mem[_1259 + 18 len 14]
                    _1413 = mem[_1259 + 32]
                    require mem[_1259 + 32] == mem[_1259 + 50 len 14]
                    _1483 = mem[_1259 + 64]
                    require mem[_1259 + 64] == mem[_1259 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1701 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1733 = mem[_1701]
                    require mem[_1701] == mem[_1701 + 28 len 4]
                    require mem[_1701 + 32] == mem[_1701 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1861 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1893 = mem[_1861]
                    require mem[_1861] == mem[_1861 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1323)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1413)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1483)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1733)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1893)
                    idx = idx + 1
                    s = _1893
                    s = _1483
                    s = _1413
                    s = _1323
                    s = _1733
                    continue 
                _1061 = mem[64]
                mem[mem[64]] = 160
                _1093 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < mem[96]:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * mem[96]) + 192
                _2117 = mem[(32 * ('cd', 4).length) + 128]
                mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = mem[64] + (32 * mem[96]) + 224
                while idx < _2117:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1061 + 64] = (32 * mem[96]) + (32 * _2117) + 224
                _2437 = mem[(64 * ('cd', 4).length) + 160]
                mem[_1061 + (32 * _1093) + (32 * _2117) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _1061 + (32 * _1093) + (32 * _2117) + 256
                while idx < _2437:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1061 + 96] = (32 * _1093) + (32 * _2117) + (32 * _2437) + 256
                _2693 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1061 + (32 * _1093) + (32 * _2117) + (32 * _2437) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1061 + (32 * _1093) + (32 * _2117) + (32 * _2437) + 288
                while idx < _2693:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1061 + 128] = (32 * _1093) + (32 * _2117) + (32 * _2437) + (32 * _2693) + 288
                _2885 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1061 + (32 * _1093) + (32 * _2117) + (32 * _2437) + (32 * _2693) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1061 + (32 * _1093) + (32 * _2117) + (32 * _2437) + (32 * _2693) + 320
                while idx < _2885:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1061 + (32 * _1093) + (32 * _2117) + (32 * _2437) + (32 * _2693) + (32 * _2885) + -mem[64] + 320
            mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
            mem[64] = (164 * ('cd', 4).length) + 256
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1261 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1325 = mem[_1261]
                    require mem[_1261] == mem[_1261 + 18 len 14]
                    _1414 = mem[_1261 + 32]
                    require mem[_1261 + 32] == mem[_1261 + 50 len 14]
                    _1485 = mem[_1261 + 64]
                    require mem[_1261 + 64] == mem[_1261 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1702 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1734 = mem[_1702]
                    require mem[_1702] == mem[_1702 + 28 len 4]
                    require mem[_1702 + 32] == mem[_1702 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1862 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1894 = mem[_1862]
                    require mem[_1862] == mem[_1862 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1325)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1414)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1485)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1734)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1894)
                    idx = idx + 1
                    s = _1894
                    s = _1485
                    s = _1414
                    s = _1325
                    s = _1734
                    continue 
                _1062 = mem[64]
                mem[mem[64]] = 160
                _1094 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < mem[96]:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * mem[96]) + 192
                _2118 = mem[(32 * ('cd', 4).length) + 128]
                mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = mem[64] + (32 * mem[96]) + 224
                while idx < _2118:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2118) + 224
                _2438 = mem[(64 * ('cd', 4).length) + 160]
                mem[mem[64] + (32 * mem[96]) + (32 * _2118) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = mem[64] + (32 * mem[96]) + (32 * _2118) + 256
                while idx < _2438:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1062 + 96] = (32 * mem[96]) + (32 * _2118) + (32 * _2438) + 256
                _2694 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1062 + (32 * _1094) + (32 * _2118) + (32 * _2438) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1062 + (32 * _1094) + (32 * _2118) + (32 * _2438) + 288
                while idx < _2694:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1062 + 128] = (32 * _1094) + (32 * _2118) + (32 * _2438) + (32 * _2694) + 288
                _2886 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1062 + (32 * _1094) + (32 * _2118) + (32 * _2438) + (32 * _2694) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1062 + (32 * _1094) + (32 * _2118) + (32 * _2438) + (32 * _2694) + 320
                while idx < _2886:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1062 + (32 * _1094) + (32 * _2118) + (32 * _2438) + (32 * _2694) + (32 * _2886) + -mem[64] + 320
            mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1263 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1327 = mem[_1263]
                require mem[_1263] == mem[_1263 + 18 len 14]
                _1415 = mem[_1263 + 32]
                require mem[_1263 + 32] == mem[_1263 + 50 len 14]
                _1487 = mem[_1263 + 64]
                require mem[_1263 + 64] == mem[_1263 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1703 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1735 = mem[_1703]
                require mem[_1703] == mem[_1703 + 28 len 4]
                require mem[_1703 + 32] == mem[_1703 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1863 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1895 = mem[_1863]
                require mem[_1863] == mem[_1863 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1327)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1415)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1487)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1735)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1895)
                idx = idx + 1
                s = _1895
                s = _1487
                s = _1415
                s = _1327
                s = _1735
                continue 
            mem[mem[64]] = 160
            _1095 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < mem[96]:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * mem[96]) + 192
            _2119 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + (32 * mem[96]) + 224
            while idx < _2119:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2119) + 224
            _2439 = mem[(64 * ('cd', 4).length) + 160]
            mem[mem[64] + (32 * mem[96]) + (32 * _2119) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = mem[64] + (32 * mem[96]) + (32 * _2119) + 256
            while idx < _2439:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2119) + (32 * _2439) + 256
            _2695 = mem[(98 * ('cd', 4).length) + 192]
            mem[mem[64] + (32 * mem[96]) + (32 * _2119) + (32 * _2439) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = mem[64] + (32 * mem[96]) + (32 * _2119) + (32 * _2439) + 288
            while idx < _2695:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 128] = (32 * mem[96]) + (32 * _2119) + (32 * _2439) + (32 * _2695) + 288
            _2887 = mem[(131 * ('cd', 4).length) + 224]
            mem[mem[64] + (32 * _1095) + (32 * _2119) + (32 * _2439) + (32 * _2695) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = mem[64] + (32 * _1095) + (32 * _2119) + (32 * _2439) + (32 * _2695) + 320
            while idx < _2887:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return 160, mem[mem[64] + 32 len (32 * _1095) + (32 * _2119) + (32 * _2439) + (32 * _2695) + (32 * _2887) + 288]
        mem[(32 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                mem[64] = (164 * ('cd', 4).length) + 256
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1265 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _1329 = mem[_1265]
                        require mem[_1265] == mem[_1265 + 18 len 14]
                        _1416 = mem[_1265 + 32]
                        require mem[_1265 + 32] == mem[_1265 + 50 len 14]
                        _1489 = mem[_1265 + 64]
                        require mem[_1265 + 64] == mem[_1265 + 92 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                                gas gas_remaining wei
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1704 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _1736 = mem[_1704]
                        require mem[_1704] == mem[_1704 + 28 len 4]
                        require mem[_1704 + 32] == mem[_1704 + 60 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1864 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _1896 = mem[_1864]
                        require mem[_1864] == mem[_1864 + 28 len 4]
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1329)
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1416)
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1489)
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1736)
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1896)
                        idx = idx + 1
                        s = _1896
                        s = _1489
                        s = _1416
                        s = _1329
                        s = _1736
                        continue 
                    _1064 = mem[64]
                    mem[mem[64]] = 160
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + 192
                    while idx < mem[96]:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 32] = (32 * mem[96]) + 192
                    _2120 = mem[(32 * ('cd', 4).length) + 128]
                    mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
                    idx = 0
                    s = (32 * ('cd', 4).length) + 160
                    t = mem[64] + (32 * mem[96]) + 224
                    while idx < _2120:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2120) + 224
                    _2440 = mem[(64 * ('cd', 4).length) + 160]
                    mem[mem[64] + (32 * mem[96]) + (32 * _2120) + 224] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    t = mem[64] + (32 * mem[96]) + (32 * _2120) + 256
                    while idx < _2440:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2120) + (32 * _2440) + 256
                    _2696 = mem[(98 * ('cd', 4).length) + 192]
                    mem[mem[64] + (32 * mem[96]) + (32 * _2120) + (32 * _2440) + 256] = mem[(98 * ('cd', 4).length) + 192]
                    idx = 0
                    s = (98 * ('cd', 4).length) + 224
                    t = mem[64] + (32 * mem[96]) + (32 * _2120) + (32 * _2440) + 288
                    while idx < _2696:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1064 + 128] = (32 * mem[96]) + (32 * _2120) + (32 * _2440) + (32 * _2696) + 288
                    _2888 = mem[(131 * ('cd', 4).length) + 224]
                    mem[_1064 + (32 * mem[96]) + (32 * _2120) + (32 * _2440) + (32 * _2696) + 288] = mem[(131 * ('cd', 4).length) + 224]
                    idx = 0
                    s = (131 * ('cd', 4).length) + 256
                    t = _1064 + (32 * mem[96]) + (32 * _2120) + (32 * _2440) + (32 * _2696) + 320
                    while idx < _2888:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _1064 + (32 * mem[96]) + (32 * _2120) + (32 * _2440) + (32 * _2696) + (32 * _2888) + -mem[64] + 320
                mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1267 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1331 = mem[_1267]
                    require mem[_1267] == mem[_1267 + 18 len 14]
                    _1417 = mem[_1267 + 32]
                    require mem[_1267 + 32] == mem[_1267 + 50 len 14]
                    _1491 = mem[_1267 + 64]
                    require mem[_1267 + 64] == mem[_1267 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1705 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1737 = mem[_1705]
                    require mem[_1705] == mem[_1705 + 28 len 4]
                    require mem[_1705 + 32] == mem[_1705 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1865 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1897 = mem[_1865]
                    require mem[_1865] == mem[_1865 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1331)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1417)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1491)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1737)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1897)
                    idx = idx + 1
                    s = _1897
                    s = _1491
                    s = _1417
                    s = _1331
                    s = _1737
                    continue 
                mem[mem[64]] = 160
                _1097 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < mem[96]:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * mem[96]) + 192
                _2121 = mem[(32 * ('cd', 4).length) + 128]
                mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = mem[64] + (32 * mem[96]) + 224
                while idx < _2121:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2121) + 224
                _2441 = mem[(64 * ('cd', 4).length) + 160]
                mem[mem[64] + (32 * mem[96]) + (32 * _2121) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = mem[64] + (32 * mem[96]) + (32 * _2121) + 256
                while idx < _2441:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2121) + (32 * _2441) + 256
                _2697 = mem[(98 * ('cd', 4).length) + 192]
                mem[mem[64] + (32 * mem[96]) + (32 * _2121) + (32 * _2441) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = mem[64] + (32 * mem[96]) + (32 * _2121) + (32 * _2441) + 288
                while idx < _2697:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 128] = (32 * mem[96]) + (32 * _2121) + (32 * _2441) + (32 * _2697) + 288
                _2889 = mem[(131 * ('cd', 4).length) + 224]
                mem[mem[64] + (32 * _1097) + (32 * _2121) + (32 * _2441) + (32 * _2697) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = mem[64] + (32 * _1097) + (32 * _2121) + (32 * _2441) + (32 * _2697) + 320
                while idx < _2889:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return 160, mem[mem[64] + 32 len (32 * _1097) + (32 * _2121) + (32 * _2441) + (32 * _2697) + (32 * _2889) + 288]
            mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
            mem[64] = (164 * ('cd', 4).length) + 256
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1269 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1333 = mem[_1269]
                    require mem[_1269] == mem[_1269 + 18 len 14]
                    _1418 = mem[_1269 + 32]
                    require mem[_1269 + 32] == mem[_1269 + 50 len 14]
                    _1493 = mem[_1269 + 64]
                    require mem[_1269 + 64] == mem[_1269 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1706 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1738 = mem[_1706]
                    require mem[_1706] == mem[_1706 + 28 len 4]
                    require mem[_1706 + 32] == mem[_1706 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1866 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1898 = mem[_1866]
                    require mem[_1866] == mem[_1866 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1333)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1418)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1493)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1738)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1898)
                    idx = idx + 1
                    s = _1898
                    s = _1493
                    s = _1418
                    s = _1333
                    s = _1738
                    continue 
                _1066 = mem[64]
                mem[mem[64]] = 160
                _1098 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < mem[96]:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * mem[96]) + 192
                _2122 = mem[(32 * ('cd', 4).length) + 128]
                mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = mem[64] + (32 * mem[96]) + 224
                while idx < _2122:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2122) + 224
                _2442 = mem[(64 * ('cd', 4).length) + 160]
                mem[mem[64] + (32 * mem[96]) + (32 * _2122) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = mem[64] + (32 * mem[96]) + (32 * _2122) + 256
                while idx < _2442:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2122) + (32 * _2442) + 256
                _2698 = mem[(98 * ('cd', 4).length) + 192]
                mem[mem[64] + (32 * mem[96]) + (32 * _2122) + (32 * _2442) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = mem[64] + (32 * mem[96]) + (32 * _2122) + (32 * _2442) + 288
                while idx < _2698:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1066 + 128] = (32 * _1098) + (32 * _2122) + (32 * _2442) + (32 * _2698) + 288
                _2890 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1066 + (32 * _1098) + (32 * _2122) + (32 * _2442) + (32 * _2698) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1066 + (32 * _1098) + (32 * _2122) + (32 * _2442) + (32 * _2698) + 320
                while idx < _2890:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1066 + (32 * _1098) + (32 * _2122) + (32 * _2442) + (32 * _2698) + (32 * _2890) + -mem[64] + 320
            mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1271 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1335 = mem[_1271]
                require mem[_1271] == mem[_1271 + 18 len 14]
                _1419 = mem[_1271 + 32]
                require mem[_1271 + 32] == mem[_1271 + 50 len 14]
                _1495 = mem[_1271 + 64]
                require mem[_1271 + 64] == mem[_1271 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1707 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1739 = mem[_1707]
                require mem[_1707] == mem[_1707 + 28 len 4]
                require mem[_1707 + 32] == mem[_1707 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1867 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1899 = mem[_1867]
                require mem[_1867] == mem[_1867 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1335)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1419)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1495)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1739)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1899)
                idx = idx + 1
                s = _1899
                s = _1495
                s = _1419
                s = _1335
                s = _1739
                continue 
            _1067 = mem[64]
            mem[mem[64]] = 160
            _1099 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < mem[96]:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * mem[96]) + 192
            _2123 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + (32 * mem[96]) + 224
            while idx < _2123:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2123) + 224
            _2443 = mem[(64 * ('cd', 4).length) + 160]
            mem[mem[64] + (32 * mem[96]) + (32 * _2123) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = mem[64] + (32 * mem[96]) + (32 * _2123) + 256
            while idx < _2443:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1067 + 96] = (32 * mem[96]) + (32 * _2123) + (32 * _2443) + 256
            _2699 = mem[(98 * ('cd', 4).length) + 192]
            mem[_1067 + (32 * _1099) + (32 * _2123) + (32 * _2443) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _1067 + (32 * _1099) + (32 * _2123) + (32 * _2443) + 288
            while idx < _2699:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1067 + 128] = (32 * _1099) + (32 * _2123) + (32 * _2443) + (32 * _2699) + 288
            _2891 = mem[(131 * ('cd', 4).length) + 224]
            mem[_1067 + (32 * _1099) + (32 * _2123) + (32 * _2443) + (32 * _2699) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = _1067 + (32 * _1099) + (32 * _2123) + (32 * _2443) + (32 * _2699) + 320
            while idx < _2891:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _1067 + (32 * _1099) + (32 * _2123) + (32 * _2443) + (32 * _2699) + (32 * _2891) + -mem[64] + 320
        mem[(64 * ('cd', 4).length) + 192 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
            mem[64] = (164 * ('cd', 4).length) + 256
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1273 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1337 = mem[_1273]
                    require mem[_1273] == mem[_1273 + 18 len 14]
                    _1420 = mem[_1273 + 32]
                    require mem[_1273 + 32] == mem[_1273 + 50 len 14]
                    _1497 = mem[_1273 + 64]
                    require mem[_1273 + 64] == mem[_1273 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1708 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1740 = mem[_1708]
                    require mem[_1708] == mem[_1708 + 28 len 4]
                    require mem[_1708 + 32] == mem[_1708 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1868 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1900 = mem[_1868]
                    require mem[_1868] == mem[_1868 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1337)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1420)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1497)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1740)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1900)
                    idx = idx + 1
                    s = _1900
                    s = _1497
                    s = _1420
                    s = _1337
                    s = _1740
                    continue 
                _1068 = mem[64]
                mem[mem[64]] = 160
                _1100 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < mem[96]:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * mem[96]) + 192
                _2124 = mem[(32 * ('cd', 4).length) + 128]
                mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = mem[64] + (32 * mem[96]) + 224
                while idx < _2124:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2124) + 224
                _2444 = mem[(64 * ('cd', 4).length) + 160]
                mem[mem[64] + (32 * mem[96]) + (32 * _2124) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = mem[64] + (32 * mem[96]) + (32 * _2124) + 256
                while idx < _2444:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1068 + 96] = (32 * mem[96]) + (32 * _2124) + (32 * _2444) + 256
                _2700 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1068 + (32 * _1100) + (32 * _2124) + (32 * _2444) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1068 + (32 * _1100) + (32 * _2124) + (32 * _2444) + 288
                while idx < _2700:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1068 + 128] = (32 * _1100) + (32 * _2124) + (32 * _2444) + (32 * _2700) + 288
                _2892 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1068 + (32 * _1100) + (32 * _2124) + (32 * _2444) + (32 * _2700) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1068 + (32 * _1100) + (32 * _2124) + (32 * _2444) + (32 * _2700) + 320
                while idx < _2892:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1068 + (32 * _1100) + (32 * _2124) + (32 * _2444) + (32 * _2700) + (32 * _2892) + -mem[64] + 320
            mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1275 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1339 = mem[_1275]
                require mem[_1275] == mem[_1275 + 18 len 14]
                _1421 = mem[_1275 + 32]
                require mem[_1275 + 32] == mem[_1275 + 50 len 14]
                _1499 = mem[_1275 + 64]
                require mem[_1275 + 64] == mem[_1275 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1709 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1741 = mem[_1709]
                require mem[_1709] == mem[_1709 + 28 len 4]
                require mem[_1709 + 32] == mem[_1709 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1869 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1901 = mem[_1869]
                require mem[_1869] == mem[_1869 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1339)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1421)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1499)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1741)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1901)
                idx = idx + 1
                s = _1901
                s = _1499
                s = _1421
                s = _1339
                s = _1741
                continue 
            _1069 = mem[64]
            mem[mem[64]] = 160
            _1101 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < _1101:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1069 + 32] = (32 * _1101) + 192
            _2125 = mem[(32 * ('cd', 4).length) + 128]
            mem[_1069 + (32 * _1101) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = _1069 + (32 * _1101) + 224
            while idx < _2125:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1069 + 64] = (32 * _1101) + (32 * _2125) + 224
            _2445 = mem[(64 * ('cd', 4).length) + 160]
            mem[_1069 + (32 * _1101) + (32 * _2125) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _1069 + (32 * _1101) + (32 * _2125) + 256
            while idx < _2445:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1069 + 96] = (32 * _1101) + (32 * _2125) + (32 * _2445) + 256
            _2701 = mem[(98 * ('cd', 4).length) + 192]
            mem[_1069 + (32 * _1101) + (32 * _2125) + (32 * _2445) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _1069 + (32 * _1101) + (32 * _2125) + (32 * _2445) + 288
            while idx < _2701:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1069 + 128] = (32 * _1101) + (32 * _2125) + (32 * _2445) + (32 * _2701) + 288
            _2893 = mem[(131 * ('cd', 4).length) + 224]
            mem[_1069 + (32 * _1101) + (32 * _2125) + (32 * _2445) + (32 * _2701) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = _1069 + (32 * _1101) + (32 * _2125) + (32 * _2445) + (32 * _2701) + 320
            while idx < _2893:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _1069 + (32 * _1101) + (32 * _2125) + (32 * _2445) + (32 * _2701) + (32 * _2893) + -mem[64] + 320
        mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
        mem[64] = (164 * ('cd', 4).length) + 256
        if not ('cd', 4).length:
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1277 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1341 = mem[_1277]
                require mem[_1277] == mem[_1277 + 18 len 14]
                _1422 = mem[_1277 + 32]
                require mem[_1277 + 32] == mem[_1277 + 50 len 14]
                _1501 = mem[_1277 + 64]
                require mem[_1277 + 64] == mem[_1277 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1710 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1742 = mem[_1710]
                require mem[_1710] == mem[_1710 + 28 len 4]
                require mem[_1710 + 32] == mem[_1710 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1870 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1902 = mem[_1870]
                require mem[_1870] == mem[_1870 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1341)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1422)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1501)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1742)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1902)
                idx = idx + 1
                s = _1902
                s = _1501
                s = _1422
                s = _1341
                s = _1742
                continue 
            _1070 = mem[64]
            mem[mem[64]] = 160
            _1102 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < mem[96]:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * mem[96]) + 192
            _2126 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + (32 * mem[96]) + 224
            while idx < _2126:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2126) + 224
            _2446 = mem[(64 * ('cd', 4).length) + 160]
            mem[mem[64] + (32 * mem[96]) + (32 * _2126) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = mem[64] + (32 * mem[96]) + (32 * _2126) + 256
            while idx < _2446:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1070 + 96] = (32 * mem[96]) + (32 * _2126) + (32 * _2446) + 256
            _2702 = mem[(98 * ('cd', 4).length) + 192]
            mem[_1070 + (32 * _1102) + (32 * _2126) + (32 * _2446) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _1070 + (32 * _1102) + (32 * _2126) + (32 * _2446) + 288
            while idx < _2702:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1070 + 128] = (32 * _1102) + (32 * _2126) + (32 * _2446) + (32 * _2702) + 288
            _2894 = mem[(131 * ('cd', 4).length) + 224]
            mem[_1070 + (32 * _1102) + (32 * _2126) + (32 * _2446) + (32 * _2702) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = _1070 + (32 * _1102) + (32 * _2126) + (32 * _2446) + (32 * _2702) + 320
            while idx < _2894:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _1070 + (32 * _1102) + (32 * _2126) + (32 * _2446) + (32 * _2702) + (32 * _2894) + -mem[64] + 320
        mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        s = 0
        s = 0
        s = 0
        s = 0
        s = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1279 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1343 = mem[_1279]
            require mem[_1279] == mem[_1279 + 18 len 14]
            _1423 = mem[_1279 + 32]
            require mem[_1279 + 32] == mem[_1279 + 50 len 14]
            _1503 = mem[_1279 + 64]
            require mem[_1279 + 64] == mem[_1279 + 92 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1711 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1743 = mem[_1711]
            require mem[_1711] == mem[_1711 + 28 len 4]
            require mem[_1711 + 32] == mem[_1711 + 60 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1871 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1903 = mem[_1871]
            require mem[_1871] == mem[_1871 + 28 len 4]
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1343)
            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1423)
            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1503)
            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1743)
            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1903)
            idx = idx + 1
            s = _1903
            s = _1503
            s = _1423
            s = _1343
            s = _1743
            continue 
        _1071 = mem[64]
        mem[mem[64]] = 160
        _1103 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 192
        while idx < mem[96]:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * mem[96]) + 192
        _2127 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + (32 * mem[96]) + 224
        while idx < _2127:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2127) + 224
        _2447 = mem[(64 * ('cd', 4).length) + 160]
        mem[mem[64] + (32 * mem[96]) + (32 * _2127) + 224] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        t = mem[64] + (32 * mem[96]) + (32 * _2127) + 256
        while idx < _2447:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2127) + (32 * _2447) + 256
        _2703 = mem[(98 * ('cd', 4).length) + 192]
        mem[mem[64] + (32 * mem[96]) + (32 * _2127) + (32 * _2447) + 256] = mem[(98 * ('cd', 4).length) + 192]
        idx = 0
        s = (98 * ('cd', 4).length) + 224
        t = mem[64] + (32 * mem[96]) + (32 * _2127) + (32 * _2447) + 288
        while idx < _2703:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1071 + 128] = (32 * _1103) + (32 * _2127) + (32 * _2447) + (32 * _2703) + 288
        _2895 = mem[(131 * ('cd', 4).length) + 224]
        mem[_1071 + (32 * _1103) + (32 * _2127) + (32 * _2447) + (32 * _2703) + 288] = mem[(131 * ('cd', 4).length) + 224]
        idx = 0
        s = (131 * ('cd', 4).length) + 256
        t = _1071 + (32 * _1103) + (32 * _2127) + (32 * _2447) + (32 * _2703) + 320
        while idx < _2895:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _1071 + (32 * _1103) + (32 * _2127) + (32 * _2447) + (32 * _2703) + (32 * _2895) + -mem[64] + 320
    mem[128 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[(32 * ('cd', 4).length) + 128] = ('cd', 4).length
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                mem[64] = (164 * ('cd', 4).length) + 256
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                                gas gas_remaining wei
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1281 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _1345 = mem[_1281]
                        require mem[_1281] == mem[_1281 + 18 len 14]
                        _1424 = mem[_1281 + 32]
                        require mem[_1281 + 32] == mem[_1281 + 50 len 14]
                        _1505 = mem[_1281 + 64]
                        require mem[_1281 + 64] == mem[_1281 + 92 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                                gas gas_remaining wei
                        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1712 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 64
                        _1744 = mem[_1712]
                        require mem[_1712] == mem[_1712 + 28 len 4]
                        require mem[_1712 + 32] == mem[_1712 + 60 len 4]
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _1872 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _1904 = mem[_1872]
                        require mem[_1872] == mem[_1872 + 28 len 4]
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1345)
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1424)
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1505)
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1744)
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1904)
                        idx = idx + 1
                        s = _1904
                        s = _1505
                        s = _1424
                        s = _1345
                        s = _1744
                        continue 
                    _1072 = mem[64]
                    mem[mem[64]] = 160
                    _1104 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + 192
                    while idx < mem[96]:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 32] = (32 * mem[96]) + 192
                    _2128 = mem[(32 * ('cd', 4).length) + 128]
                    mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
                    idx = 0
                    s = (32 * ('cd', 4).length) + 160
                    t = mem[64] + (32 * mem[96]) + 224
                    while idx < _2128:
                        mem[t] = mem[s + 18 len 14]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2128) + 224
                    _2448 = mem[(64 * ('cd', 4).length) + 160]
                    mem[mem[64] + (32 * mem[96]) + (32 * _2128) + 224] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    t = mem[64] + (32 * mem[96]) + (32 * _2128) + 256
                    while idx < _2448:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2128) + (32 * _2448) + 256
                    _2704 = mem[(98 * ('cd', 4).length) + 192]
                    mem[mem[64] + (32 * mem[96]) + (32 * _2128) + (32 * _2448) + 256] = mem[(98 * ('cd', 4).length) + 192]
                    idx = 0
                    s = (98 * ('cd', 4).length) + 224
                    t = mem[64] + (32 * mem[96]) + (32 * _2128) + (32 * _2448) + 288
                    while idx < _2704:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[_1072 + 128] = (32 * _1104) + (32 * _2128) + (32 * _2448) + (32 * _2704) + 288
                    _2896 = mem[(131 * ('cd', 4).length) + 224]
                    mem[_1072 + (32 * _1104) + (32 * _2128) + (32 * _2448) + (32 * _2704) + 288] = mem[(131 * ('cd', 4).length) + 224]
                    idx = 0
                    s = (131 * ('cd', 4).length) + 256
                    t = _1072 + (32 * _1104) + (32 * _2128) + (32 * _2448) + (32 * _2704) + 320
                    while idx < _2896:
                        mem[t] = mem[s + 28 len 4]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _1072 + (32 * _1104) + (32 * _2128) + (32 * _2448) + (32 * _2704) + (32 * _2896) + -mem[64] + 320
                mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1283 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1347 = mem[_1283]
                    require mem[_1283] == mem[_1283 + 18 len 14]
                    _1425 = mem[_1283 + 32]
                    require mem[_1283 + 32] == mem[_1283 + 50 len 14]
                    _1507 = mem[_1283 + 64]
                    require mem[_1283 + 64] == mem[_1283 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1713 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1745 = mem[_1713]
                    require mem[_1713] == mem[_1713 + 28 len 4]
                    require mem[_1713 + 32] == mem[_1713 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1873 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1905 = mem[_1873]
                    require mem[_1873] == mem[_1873 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1347)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1425)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1507)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1745)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1905)
                    idx = idx + 1
                    s = _1905
                    s = _1507
                    s = _1425
                    s = _1347
                    s = _1745
                    continue 
                _1073 = mem[64]
                mem[mem[64]] = 160
                _1105 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < mem[96]:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * mem[96]) + 192
                _2129 = mem[(32 * ('cd', 4).length) + 128]
                mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = mem[64] + (32 * mem[96]) + 224
                while idx < _2129:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1073 + 64] = (32 * mem[96]) + (32 * _2129) + 224
                _2449 = mem[(64 * ('cd', 4).length) + 160]
                mem[_1073 + (32 * _1105) + (32 * _2129) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _1073 + (32 * _1105) + (32 * _2129) + 256
                while idx < _2449:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1073 + 96] = (32 * _1105) + (32 * _2129) + (32 * _2449) + 256
                _2705 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1073 + (32 * _1105) + (32 * _2129) + (32 * _2449) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1073 + (32 * _1105) + (32 * _2129) + (32 * _2449) + 288
                while idx < _2705:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1073 + 128] = (32 * _1105) + (32 * _2129) + (32 * _2449) + (32 * _2705) + 288
                _2897 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1073 + (32 * _1105) + (32 * _2129) + (32 * _2449) + (32 * _2705) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1073 + (32 * _1105) + (32 * _2129) + (32 * _2449) + (32 * _2705) + 320
                while idx < _2897:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1073 + (32 * _1105) + (32 * _2129) + (32 * _2449) + (32 * _2705) + (32 * _2897) + -mem[64] + 320
            mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
            mem[64] = (164 * ('cd', 4).length) + 256
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1285 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1349 = mem[_1285]
                    require mem[_1285] == mem[_1285 + 18 len 14]
                    _1426 = mem[_1285 + 32]
                    require mem[_1285 + 32] == mem[_1285 + 50 len 14]
                    _1509 = mem[_1285 + 64]
                    require mem[_1285 + 64] == mem[_1285 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1714 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1746 = mem[_1714]
                    require mem[_1714] == mem[_1714 + 28 len 4]
                    require mem[_1714 + 32] == mem[_1714 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1874 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1906 = mem[_1874]
                    require mem[_1874] == mem[_1874 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1349)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1426)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1509)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1746)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1906)
                    idx = idx + 1
                    s = _1906
                    s = _1509
                    s = _1426
                    s = _1349
                    s = _1746
                    continue 
                _1074 = mem[64]
                mem[mem[64]] = 160
                _1106 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < mem[96]:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * mem[96]) + 192
                _2130 = mem[(32 * ('cd', 4).length) + 128]
                mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = mem[64] + (32 * mem[96]) + 224
                while idx < _2130:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2130) + 224
                _2450 = mem[(64 * ('cd', 4).length) + 160]
                mem[mem[64] + (32 * mem[96]) + (32 * _2130) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = mem[64] + (32 * mem[96]) + (32 * _2130) + 256
                while idx < _2450:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2130) + (32 * _2450) + 256
                _2706 = mem[(98 * ('cd', 4).length) + 192]
                mem[mem[64] + (32 * mem[96]) + (32 * _2130) + (32 * _2450) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = mem[64] + (32 * mem[96]) + (32 * _2130) + (32 * _2450) + 288
                while idx < _2706:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1074 + 128] = (32 * _1106) + (32 * _2130) + (32 * _2450) + (32 * _2706) + 288
                _2898 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1074 + (32 * _1106) + (32 * _2130) + (32 * _2450) + (32 * _2706) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1074 + (32 * _1106) + (32 * _2130) + (32 * _2450) + (32 * _2706) + 320
                while idx < _2898:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1074 + (32 * _1106) + (32 * _2130) + (32 * _2450) + (32 * _2706) + (32 * _2898) + -mem[64] + 320
            mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1287 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1351 = mem[_1287]
                require mem[_1287] == mem[_1287 + 18 len 14]
                _1427 = mem[_1287 + 32]
                require mem[_1287 + 32] == mem[_1287 + 50 len 14]
                _1511 = mem[_1287 + 64]
                require mem[_1287 + 64] == mem[_1287 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1715 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1747 = mem[_1715]
                require mem[_1715] == mem[_1715 + 28 len 4]
                require mem[_1715 + 32] == mem[_1715 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1875 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1907 = mem[_1875]
                require mem[_1875] == mem[_1875 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1351)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1427)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1511)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1747)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1907)
                idx = idx + 1
                s = _1907
                s = _1511
                s = _1427
                s = _1351
                s = _1747
                continue 
            _1075 = mem[64]
            mem[mem[64]] = 160
            _1107 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < mem[96]:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * mem[96]) + 192
            _2131 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + (32 * mem[96]) + 224
            while idx < _2131:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1075 + 64] = (32 * mem[96]) + (32 * _2131) + 224
            _2451 = mem[(64 * ('cd', 4).length) + 160]
            mem[_1075 + (32 * _1107) + (32 * _2131) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _1075 + (32 * _1107) + (32 * _2131) + 256
            while idx < _2451:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1075 + 96] = (32 * _1107) + (32 * _2131) + (32 * _2451) + 256
            _2707 = mem[(98 * ('cd', 4).length) + 192]
            mem[_1075 + (32 * _1107) + (32 * _2131) + (32 * _2451) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _1075 + (32 * _1107) + (32 * _2131) + (32 * _2451) + 288
            while idx < _2707:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1075 + 128] = (32 * _1107) + (32 * _2131) + (32 * _2451) + (32 * _2707) + 288
            _2899 = mem[(131 * ('cd', 4).length) + 224]
            mem[_1075 + (32 * _1107) + (32 * _2131) + (32 * _2451) + (32 * _2707) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = _1075 + (32 * _1107) + (32 * _2131) + (32 * _2451) + (32 * _2707) + 320
            while idx < _2899:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _1075 + (32 * _1107) + (32 * _2131) + (32 * _2451) + (32 * _2707) + (32 * _2899) + -mem[64] + 320
        mem[(64 * ('cd', 4).length) + 192 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
            mem[64] = (164 * ('cd', 4).length) + 256
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1289 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1353 = mem[_1289]
                    require mem[_1289] == mem[_1289 + 18 len 14]
                    _1428 = mem[_1289 + 32]
                    require mem[_1289 + 32] == mem[_1289 + 50 len 14]
                    _1513 = mem[_1289 + 64]
                    require mem[_1289 + 64] == mem[_1289 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1716 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1748 = mem[_1716]
                    require mem[_1716] == mem[_1716 + 28 len 4]
                    require mem[_1716 + 32] == mem[_1716 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1876 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1908 = mem[_1876]
                    require mem[_1876] == mem[_1876 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1353)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1428)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1513)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1748)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1908)
                    idx = idx + 1
                    s = _1908
                    s = _1513
                    s = _1428
                    s = _1353
                    s = _1748
                    continue 
                _1076 = mem[64]
                mem[mem[64]] = 160
                _1108 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < mem[96]:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * mem[96]) + 192
                _2132 = mem[(32 * ('cd', 4).length) + 128]
                mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = mem[64] + (32 * mem[96]) + 224
                while idx < _2132:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1076 + 64] = (32 * mem[96]) + (32 * _2132) + 224
                _2452 = mem[(64 * ('cd', 4).length) + 160]
                mem[_1076 + (32 * _1108) + (32 * _2132) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _1076 + (32 * _1108) + (32 * _2132) + 256
                while idx < _2452:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1076 + 96] = (32 * _1108) + (32 * _2132) + (32 * _2452) + 256
                _2708 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1076 + (32 * _1108) + (32 * _2132) + (32 * _2452) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1076 + (32 * _1108) + (32 * _2132) + (32 * _2452) + 288
                while idx < _2708:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1076 + 128] = (32 * _1108) + (32 * _2132) + (32 * _2452) + (32 * _2708) + 288
                _2900 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1076 + (32 * _1108) + (32 * _2132) + (32 * _2452) + (32 * _2708) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1076 + (32 * _1108) + (32 * _2132) + (32 * _2452) + (32 * _2708) + 320
                while idx < _2900:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1076 + (32 * _1108) + (32 * _2132) + (32 * _2452) + (32 * _2708) + (32 * _2900) + -mem[64] + 320
            mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1291 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1355 = mem[_1291]
                require mem[_1291] == mem[_1291 + 18 len 14]
                _1429 = mem[_1291 + 32]
                require mem[_1291 + 32] == mem[_1291 + 50 len 14]
                _1515 = mem[_1291 + 64]
                require mem[_1291 + 64] == mem[_1291 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1717 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1749 = mem[_1717]
                require mem[_1717] == mem[_1717 + 28 len 4]
                require mem[_1717 + 32] == mem[_1717 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1877 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1909 = mem[_1877]
                require mem[_1877] == mem[_1877 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1355)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1429)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1515)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1749)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1909)
                idx = idx + 1
                s = _1909
                s = _1515
                s = _1429
                s = _1355
                s = _1749
                continue 
            _1077 = mem[64]
            mem[mem[64]] = 160
            _1109 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < mem[96]:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * mem[96]) + 192
            _2133 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + (32 * mem[96]) + 224
            while idx < _2133:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2133) + 224
            _2453 = mem[(64 * ('cd', 4).length) + 160]
            mem[mem[64] + (32 * mem[96]) + (32 * _2133) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = mem[64] + (32 * mem[96]) + (32 * _2133) + 256
            while idx < _2453:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1077 + 96] = (32 * mem[96]) + (32 * _2133) + (32 * _2453) + 256
            _2709 = mem[(98 * ('cd', 4).length) + 192]
            mem[_1077 + (32 * _1109) + (32 * _2133) + (32 * _2453) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _1077 + (32 * _1109) + (32 * _2133) + (32 * _2453) + 288
            while idx < _2709:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1077 + 128] = (32 * _1109) + (32 * _2133) + (32 * _2453) + (32 * _2709) + 288
            _2901 = mem[(131 * ('cd', 4).length) + 224]
            mem[_1077 + (32 * _1109) + (32 * _2133) + (32 * _2453) + (32 * _2709) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = _1077 + (32 * _1109) + (32 * _2133) + (32 * _2453) + (32 * _2709) + 320
            while idx < _2901:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _1077 + (32 * _1109) + (32 * _2133) + (32 * _2453) + (32 * _2709) + (32 * _2901) + -mem[64] + 320
        mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
        mem[64] = (164 * ('cd', 4).length) + 256
        if not ('cd', 4).length:
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1293 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1357 = mem[_1293]
                require mem[_1293] == mem[_1293 + 18 len 14]
                _1430 = mem[_1293 + 32]
                require mem[_1293 + 32] == mem[_1293 + 50 len 14]
                _1517 = mem[_1293 + 64]
                require mem[_1293 + 64] == mem[_1293 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1718 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1750 = mem[_1718]
                require mem[_1718] == mem[_1718 + 28 len 4]
                require mem[_1718 + 32] == mem[_1718 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1878 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1910 = mem[_1878]
                require mem[_1878] == mem[_1878 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1357)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1430)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1517)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1750)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1910)
                idx = idx + 1
                s = _1910
                s = _1517
                s = _1430
                s = _1357
                s = _1750
                continue 
            mem[mem[64]] = 160
            _1110 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < mem[96]:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * mem[96]) + 192
            _2134 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + (32 * mem[96]) + 224
            while idx < _2134:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2134) + 224
            _2454 = mem[(64 * ('cd', 4).length) + 160]
            mem[mem[64] + (32 * mem[96]) + (32 * _2134) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = mem[64] + (32 * mem[96]) + (32 * _2134) + 256
            while idx < _2454:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2134) + (32 * _2454) + 256
            _2710 = mem[(98 * ('cd', 4).length) + 192]
            mem[mem[64] + (32 * mem[96]) + (32 * _2134) + (32 * _2454) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = mem[64] + (32 * mem[96]) + (32 * _2134) + (32 * _2454) + 288
            while idx < _2710:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 128] = (32 * mem[96]) + (32 * _2134) + (32 * _2454) + (32 * _2710) + 288
            _2902 = mem[(131 * ('cd', 4).length) + 224]
            mem[mem[64] + (32 * _1110) + (32 * _2134) + (32 * _2454) + (32 * _2710) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = mem[64] + (32 * _1110) + (32 * _2134) + (32 * _2454) + (32 * _2710) + 320
            while idx < _2902:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return 160, mem[mem[64] + 32 len (32 * _1110) + (32 * _2134) + (32 * _2454) + (32 * _2710) + (32 * _2902) + 288]
        mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        s = 0
        s = 0
        s = 0
        s = 0
        s = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1295 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1359 = mem[_1295]
            require mem[_1295] == mem[_1295 + 18 len 14]
            _1431 = mem[_1295 + 32]
            require mem[_1295 + 32] == mem[_1295 + 50 len 14]
            _1519 = mem[_1295 + 64]
            require mem[_1295 + 64] == mem[_1295 + 92 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1719 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1751 = mem[_1719]
            require mem[_1719] == mem[_1719 + 28 len 4]
            require mem[_1719 + 32] == mem[_1719 + 60 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1879 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1911 = mem[_1879]
            require mem[_1879] == mem[_1879 + 28 len 4]
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1359)
            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1431)
            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1519)
            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1751)
            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1911)
            idx = idx + 1
            s = _1911
            s = _1519
            s = _1431
            s = _1359
            s = _1751
            continue 
        _1079 = mem[64]
        mem[mem[64]] = 160
        _1111 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 192
        while idx < mem[96]:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * mem[96]) + 192
        _2135 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + (32 * mem[96]) + 224
        while idx < _2135:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2135) + 224
        _2455 = mem[(64 * ('cd', 4).length) + 160]
        mem[mem[64] + (32 * mem[96]) + (32 * _2135) + 224] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        t = mem[64] + (32 * mem[96]) + (32 * _2135) + 256
        while idx < _2455:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2135) + (32 * _2455) + 256
        _2711 = mem[(98 * ('cd', 4).length) + 192]
        mem[mem[64] + (32 * mem[96]) + (32 * _2135) + (32 * _2455) + 256] = mem[(98 * ('cd', 4).length) + 192]
        idx = 0
        s = (98 * ('cd', 4).length) + 224
        t = mem[64] + (32 * mem[96]) + (32 * _2135) + (32 * _2455) + 288
        while idx < _2711:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1079 + 128] = (32 * _1111) + (32 * _2135) + (32 * _2455) + (32 * _2711) + 288
        _2903 = mem[(131 * ('cd', 4).length) + 224]
        mem[_1079 + (32 * _1111) + (32 * _2135) + (32 * _2455) + (32 * _2711) + 288] = mem[(131 * ('cd', 4).length) + 224]
        idx = 0
        s = (131 * ('cd', 4).length) + 256
        t = _1079 + (32 * _1111) + (32 * _2135) + (32 * _2455) + (32 * _2711) + 320
        while idx < _2903:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _1079 + (32 * _1111) + (32 * _2135) + (32 * _2455) + (32 * _2711) + (32 * _2903) + -mem[64] + 320
    mem[(32 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
            mem[64] = (164 * ('cd', 4).length) + 256
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                            gas gas_remaining wei
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1297 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _1361 = mem[_1297]
                    require mem[_1297] == mem[_1297 + 18 len 14]
                    _1432 = mem[_1297 + 32]
                    require mem[_1297 + 32] == mem[_1297 + 50 len 14]
                    _1521 = mem[_1297 + 64]
                    require mem[_1297 + 64] == mem[_1297 + 92 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                            gas gas_remaining wei
                    mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1720 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 64
                    _1752 = mem[_1720]
                    require mem[_1720] == mem[_1720 + 28 len 4]
                    require mem[_1720 + 32] == mem[_1720 + 60 len 4]
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1880 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1912 = mem[_1880]
                    require mem[_1880] == mem[_1880 + 28 len 4]
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1361)
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1432)
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1521)
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1752)
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1912)
                    idx = idx + 1
                    s = _1912
                    s = _1521
                    s = _1432
                    s = _1361
                    s = _1752
                    continue 
                _1080 = mem[64]
                mem[mem[64]] = 160
                _1112 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + 192
                while idx < mem[96]:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 32] = (32 * mem[96]) + 192
                _2136 = mem[(32 * ('cd', 4).length) + 128]
                mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
                idx = 0
                s = (32 * ('cd', 4).length) + 160
                t = mem[64] + (32 * mem[96]) + 224
                while idx < _2136:
                    mem[t] = mem[s + 18 len 14]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1080 + 64] = (32 * mem[96]) + (32 * _2136) + 224
                _2456 = mem[(64 * ('cd', 4).length) + 160]
                mem[_1080 + (32 * _1112) + (32 * _2136) + 224] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                t = _1080 + (32 * _1112) + (32 * _2136) + 256
                while idx < _2456:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1080 + 96] = (32 * _1112) + (32 * _2136) + (32 * _2456) + 256
                _2712 = mem[(98 * ('cd', 4).length) + 192]
                mem[_1080 + (32 * _1112) + (32 * _2136) + (32 * _2456) + 256] = mem[(98 * ('cd', 4).length) + 192]
                idx = 0
                s = (98 * ('cd', 4).length) + 224
                t = _1080 + (32 * _1112) + (32 * _2136) + (32 * _2456) + 288
                while idx < _2712:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_1080 + 128] = (32 * _1112) + (32 * _2136) + (32 * _2456) + (32 * _2712) + 288
                _2904 = mem[(131 * ('cd', 4).length) + 224]
                mem[_1080 + (32 * _1112) + (32 * _2136) + (32 * _2456) + (32 * _2712) + 288] = mem[(131 * ('cd', 4).length) + 224]
                idx = 0
                s = (131 * ('cd', 4).length) + 256
                t = _1080 + (32 * _1112) + (32 * _2136) + (32 * _2456) + (32 * _2712) + 320
                while idx < _2904:
                    mem[t] = mem[s + 28 len 4]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _1080 + (32 * _1112) + (32 * _2136) + (32 * _2456) + (32 * _2712) + (32 * _2904) + -mem[64] + 320
            mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1299 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1363 = mem[_1299]
                require mem[_1299] == mem[_1299 + 18 len 14]
                _1433 = mem[_1299 + 32]
                require mem[_1299 + 32] == mem[_1299 + 50 len 14]
                _1523 = mem[_1299 + 64]
                require mem[_1299 + 64] == mem[_1299 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1721 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1753 = mem[_1721]
                require mem[_1721] == mem[_1721 + 28 len 4]
                require mem[_1721 + 32] == mem[_1721 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1881 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1913 = mem[_1881]
                require mem[_1881] == mem[_1881 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1363)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1433)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1523)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1753)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1913)
                idx = idx + 1
                s = _1913
                s = _1523
                s = _1433
                s = _1363
                s = _1753
                continue 
            mem[mem[64]] = 160
            _1113 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < mem[96]:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * mem[96]) + 192
            _2137 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + (32 * mem[96]) + 224
            while idx < _2137:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2137) + 224
            _2457 = mem[(64 * ('cd', 4).length) + 160]
            mem[mem[64] + (32 * mem[96]) + (32 * _2137) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = mem[64] + (32 * mem[96]) + (32 * _2137) + 256
            while idx < _2457:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2137) + (32 * _2457) + 256
            _2713 = mem[(98 * ('cd', 4).length) + 192]
            mem[mem[64] + (32 * mem[96]) + (32 * _2137) + (32 * _2457) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = mem[64] + (32 * mem[96]) + (32 * _2137) + (32 * _2457) + 288
            while idx < _2713:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 128] = (32 * mem[96]) + (32 * _2137) + (32 * _2457) + (32 * _2713) + 288
            _2905 = mem[(131 * ('cd', 4).length) + 224]
            mem[mem[64] + (32 * _1113) + (32 * _2137) + (32 * _2457) + (32 * _2713) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = mem[64] + (32 * _1113) + (32 * _2137) + (32 * _2457) + (32 * _2713) + 320
            while idx < _2905:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return 160, mem[mem[64] + 32 len (32 * _1113) + (32 * _2137) + (32 * _2457) + (32 * _2713) + (32 * _2905) + 288]
        mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
        mem[64] = (164 * ('cd', 4).length) + 256
        if not ('cd', 4).length:
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1301 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1365 = mem[_1301]
                require mem[_1301] == mem[_1301 + 18 len 14]
                _1434 = mem[_1301 + 32]
                require mem[_1301 + 32] == mem[_1301 + 50 len 14]
                _1525 = mem[_1301 + 64]
                require mem[_1301 + 64] == mem[_1301 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1722 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1754 = mem[_1722]
                require mem[_1722] == mem[_1722 + 28 len 4]
                require mem[_1722 + 32] == mem[_1722 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1882 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1914 = mem[_1882]
                require mem[_1882] == mem[_1882 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1365)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1434)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1525)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1754)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1914)
                idx = idx + 1
                s = _1914
                s = _1525
                s = _1434
                s = _1365
                s = _1754
                continue 
            mem[mem[64]] = 160
            _1114 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < mem[96]:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * mem[96]) + 192
            _2138 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + (32 * mem[96]) + 224
            while idx < _2138:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2138) + 224
            _2458 = mem[(64 * ('cd', 4).length) + 160]
            mem[mem[64] + (32 * mem[96]) + (32 * _2138) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = mem[64] + (32 * mem[96]) + (32 * _2138) + 256
            while idx < _2458:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2138) + (32 * _2458) + 256
            _2714 = mem[(98 * ('cd', 4).length) + 192]
            mem[mem[64] + (32 * mem[96]) + (32 * _2138) + (32 * _2458) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = mem[64] + (32 * mem[96]) + (32 * _2138) + (32 * _2458) + 288
            while idx < _2714:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 128] = (32 * mem[96]) + (32 * _2138) + (32 * _2458) + (32 * _2714) + 288
            _2906 = mem[(131 * ('cd', 4).length) + 224]
            mem[mem[64] + (32 * _1114) + (32 * _2138) + (32 * _2458) + (32 * _2714) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = mem[64] + (32 * _1114) + (32 * _2138) + (32 * _2458) + (32 * _2714) + 320
            while idx < _2906:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return 160, mem[mem[64] + 32 len (32 * _1114) + (32 * _2138) + (32 * _2458) + (32 * _2714) + (32 * _2906) + 288]
        mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        s = 0
        s = 0
        s = 0
        s = 0
        s = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1303 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1367 = mem[_1303]
            require mem[_1303] == mem[_1303 + 18 len 14]
            _1435 = mem[_1303 + 32]
            require mem[_1303 + 32] == mem[_1303 + 50 len 14]
            _1527 = mem[_1303 + 64]
            require mem[_1303 + 64] == mem[_1303 + 92 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1723 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1755 = mem[_1723]
            require mem[_1723] == mem[_1723 + 28 len 4]
            require mem[_1723 + 32] == mem[_1723 + 60 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1883 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1915 = mem[_1883]
            require mem[_1883] == mem[_1883 + 28 len 4]
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1367)
            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1435)
            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1527)
            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1755)
            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1915)
            idx = idx + 1
            s = _1915
            s = _1527
            s = _1435
            s = _1367
            s = _1755
            continue 
        mem[mem[64]] = 160
        _1115 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 192
        while idx < mem[96]:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * mem[96]) + 192
        _2139 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + (32 * mem[96]) + 224
        while idx < _2139:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2139) + 224
        _2459 = mem[(64 * ('cd', 4).length) + 160]
        mem[mem[64] + (32 * mem[96]) + (32 * _2139) + 224] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        t = mem[64] + (32 * mem[96]) + (32 * _2139) + 256
        while idx < _2459:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2139) + (32 * _2459) + 256
        _2715 = mem[(98 * ('cd', 4).length) + 192]
        mem[mem[64] + (32 * mem[96]) + (32 * _2139) + (32 * _2459) + 256] = mem[(98 * ('cd', 4).length) + 192]
        idx = 0
        s = (98 * ('cd', 4).length) + 224
        t = mem[64] + (32 * mem[96]) + (32 * _2139) + (32 * _2459) + 288
        while idx < _2715:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 128] = (32 * mem[96]) + (32 * _2139) + (32 * _2459) + (32 * _2715) + 288
        _2907 = mem[(131 * ('cd', 4).length) + 224]
        mem[mem[64] + (32 * _1115) + (32 * _2139) + (32 * _2459) + (32 * _2715) + 288] = mem[(131 * ('cd', 4).length) + 224]
        idx = 0
        s = (131 * ('cd', 4).length) + 256
        t = mem[64] + (32 * _1115) + (32 * _2139) + (32 * _2459) + (32 * _2715) + 320
        while idx < _2907:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return 160, mem[mem[64] + 32 len (32 * _1115) + (32 * _2139) + (32 * _2459) + (32 * _2715) + (32 * _2907) + 288]
    mem[(64 * ('cd', 4).length) + 192 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
        mem[64] = (164 * ('cd', 4).length) + 256
        if not ('cd', 4).length:
            idx = 0
            s = 0
            s = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1305 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1369 = mem[_1305]
                require mem[_1305] == mem[_1305 + 18 len 14]
                _1436 = mem[_1305 + 32]
                require mem[_1305 + 32] == mem[_1305 + 50 len 14]
                _1529 = mem[_1305 + 64]
                require mem[_1305 + 64] == mem[_1305 + 92 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                        gas gas_remaining wei
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1724 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1756 = mem[_1724]
                require mem[_1724] == mem[_1724 + 28 len 4]
                require mem[_1724 + 32] == mem[_1724 + 60 len 4]
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1884 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1916 = mem[_1884]
                require mem[_1884] == mem[_1884 + 28 len 4]
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1369)
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1436)
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1529)
                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1756)
                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1916)
                idx = idx + 1
                s = _1916
                s = _1529
                s = _1436
                s = _1369
                s = _1756
                continue 
            _1084 = mem[64]
            mem[mem[64]] = 160
            _1116 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + 192
            while idx < mem[96]:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[mem[64] + 32] = (32 * mem[96]) + 192
            _2140 = mem[(32 * ('cd', 4).length) + 128]
            mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
            idx = 0
            s = (32 * ('cd', 4).length) + 160
            t = mem[64] + (32 * mem[96]) + 224
            while idx < _2140:
                mem[t] = mem[s + 18 len 14]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1084 + 64] = (32 * mem[96]) + (32 * _2140) + 224
            _2460 = mem[(64 * ('cd', 4).length) + 160]
            mem[_1084 + (32 * _1116) + (32 * _2140) + 224] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            t = _1084 + (32 * _1116) + (32 * _2140) + 256
            while idx < _2460:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1084 + 96] = (32 * _1116) + (32 * _2140) + (32 * _2460) + 256
            _2716 = mem[(98 * ('cd', 4).length) + 192]
            mem[_1084 + (32 * _1116) + (32 * _2140) + (32 * _2460) + 256] = mem[(98 * ('cd', 4).length) + 192]
            idx = 0
            s = (98 * ('cd', 4).length) + 224
            t = _1084 + (32 * _1116) + (32 * _2140) + (32 * _2460) + 288
            while idx < _2716:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_1084 + 128] = (32 * _1116) + (32 * _2140) + (32 * _2460) + (32 * _2716) + 288
            _2908 = mem[(131 * ('cd', 4).length) + 224]
            mem[_1084 + (32 * _1116) + (32 * _2140) + (32 * _2460) + (32 * _2716) + 288] = mem[(131 * ('cd', 4).length) + 224]
            idx = 0
            s = (131 * ('cd', 4).length) + 256
            t = _1084 + (32 * _1116) + (32 * _2140) + (32 * _2460) + (32 * _2716) + 320
            while idx < _2908:
                mem[t] = mem[s + 28 len 4]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _1084 + (32 * _1116) + (32 * _2140) + (32 * _2460) + (32 * _2716) + (32 * _2908) + -mem[64] + 320
        mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        s = 0
        s = 0
        s = 0
        s = 0
        s = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1307 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1371 = mem[_1307]
            require mem[_1307] == mem[_1307 + 18 len 14]
            _1437 = mem[_1307 + 32]
            require mem[_1307 + 32] == mem[_1307 + 50 len 14]
            _1531 = mem[_1307 + 64]
            require mem[_1307 + 64] == mem[_1307 + 92 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1725 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1757 = mem[_1725]
            require mem[_1725] == mem[_1725 + 28 len 4]
            require mem[_1725 + 32] == mem[_1725 + 60 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1885 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1917 = mem[_1885]
            require mem[_1885] == mem[_1885 + 28 len 4]
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1371)
            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1437)
            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1531)
            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1757)
            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1917)
            idx = idx + 1
            s = _1917
            s = _1531
            s = _1437
            s = _1371
            s = _1757
            continue 
        _1085 = mem[64]
        mem[mem[64]] = 160
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 192
        while idx < mem[96]:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * mem[96]) + 192
        _2141 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + (32 * mem[96]) + 224
        while idx < _2141:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2141) + 224
        _2461 = mem[(64 * ('cd', 4).length) + 160]
        mem[mem[64] + (32 * mem[96]) + (32 * _2141) + 224] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        t = mem[64] + (32 * mem[96]) + (32 * _2141) + 256
        while idx < _2461:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2141) + (32 * _2461) + 256
        _2717 = mem[(98 * ('cd', 4).length) + 192]
        mem[mem[64] + (32 * mem[96]) + (32 * _2141) + (32 * _2461) + 256] = mem[(98 * ('cd', 4).length) + 192]
        idx = 0
        s = (98 * ('cd', 4).length) + 224
        t = mem[64] + (32 * mem[96]) + (32 * _2141) + (32 * _2461) + 288
        while idx < _2717:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_1085 + 128] = (32 * mem[96]) + (32 * _2141) + (32 * _2461) + (32 * _2717) + 288
        _2909 = mem[(131 * ('cd', 4).length) + 224]
        mem[_1085 + (32 * mem[96]) + (32 * _2141) + (32 * _2461) + (32 * _2717) + 288] = mem[(131 * ('cd', 4).length) + 224]
        idx = 0
        s = (131 * ('cd', 4).length) + 256
        t = _1085 + (32 * mem[96]) + (32 * _2141) + (32 * _2461) + (32 * _2717) + 320
        while idx < _2909:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _1085 + (32 * mem[96]) + (32 * _2141) + (32 * _2461) + (32 * _2717) + (32 * _2909) + -mem[64] + 320
    mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
    mem[64] = (164 * ('cd', 4).length) + 256
    if not ('cd', 4).length:
        idx = 0
        s = 0
        s = 0
        s = 0
        s = 0
        s = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1309 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1373 = mem[_1309]
            require mem[_1309] == mem[_1309 + 18 len 14]
            _1438 = mem[_1309 + 32]
            require mem[_1309 + 32] == mem[_1309 + 50 len 14]
            _1533 = mem[_1309 + 64]
            require mem[_1309 + 64] == mem[_1309 + 92 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                    gas gas_remaining wei
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1726 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1758 = mem[_1726]
            require mem[_1726] == mem[_1726 + 28 len 4]
            require mem[_1726 + 32] == mem[_1726 + 60 len 4]
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1886 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1918 = mem[_1886]
            require mem[_1886] == mem[_1886 + 28 len 4]
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1373)
            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1438)
            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1533)
            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1758)
            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1918)
            idx = idx + 1
            s = _1918
            s = _1533
            s = _1438
            s = _1373
            s = _1758
            continue 
        mem[mem[64]] = 160
        _1118 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + 192
        while idx < mem[96]:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 32] = (32 * mem[96]) + 192
        _2142 = mem[(32 * ('cd', 4).length) + 128]
        mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
        idx = 0
        s = (32 * ('cd', 4).length) + 160
        t = mem[64] + (32 * mem[96]) + 224
        while idx < _2142:
            mem[t] = mem[s + 18 len 14]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2142) + 224
        _2462 = mem[(64 * ('cd', 4).length) + 160]
        mem[mem[64] + (32 * mem[96]) + (32 * _2142) + 224] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        t = mem[64] + (32 * mem[96]) + (32 * _2142) + 256
        while idx < _2462:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2142) + (32 * _2462) + 256
        _2718 = mem[(98 * ('cd', 4).length) + 192]
        mem[mem[64] + (32 * mem[96]) + (32 * _2142) + (32 * _2462) + 256] = mem[(98 * ('cd', 4).length) + 192]
        idx = 0
        s = (98 * ('cd', 4).length) + 224
        t = mem[64] + (32 * mem[96]) + (32 * _2142) + (32 * _2462) + 288
        while idx < _2718:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[mem[64] + 128] = (32 * mem[96]) + (32 * _2142) + (32 * _2462) + (32 * _2718) + 288
        _2910 = mem[(131 * ('cd', 4).length) + 224]
        mem[mem[64] + (32 * _1118) + (32 * _2142) + (32 * _2462) + (32 * _2718) + 288] = mem[(131 * ('cd', 4).length) + 224]
        idx = 0
        s = (131 * ('cd', 4).length) + 256
        t = mem[64] + (32 * _1118) + (32 * _2142) + (32 * _2462) + (32 * _2718) + 320
        while idx < _2910:
            mem[t] = mem[s + 28 len 4]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return 160, mem[mem[64] + 32 len (32 * _1118) + (32 * _2142) + (32 * _2462) + (32 * _2718) + (32 * _2910) + 288]
    mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    idx = 0
    s = 0
    s = 0
    s = 0
    s = 0
    s = 0
    while ('cd', 4).length > uint32(idx):
        require uint32(idx) < ('cd', 4).length
        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1311 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _1375 = mem[_1311]
        require mem[_1311] == mem[_1311 + 18 len 14]
        _1439 = mem[_1311 + 32]
        require mem[_1311 + 32] == mem[_1311 + 50 len 14]
        _1535 = mem[_1311 + 64]
        require mem[_1311 + 64] == mem[_1311 + 92 len 4]
        require uint32(idx) < ('cd', 4).length
        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getTokenWeights() with:
                gas gas_remaining wei
        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1727 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 64
        _1759 = mem[_1727]
        require mem[_1727] == mem[_1727 + 28 len 4]
        require mem[_1727 + 32] == mem[_1727 + 60 len 4]
        require uint32(idx) < ('cd', 4).length
        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).getSwapFee() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1887 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1919 = mem[_1887]
        require mem[_1887] == mem[_1887 + 28 len 4]
        require uint32(idx) < mem[96]
        mem[(32 * uint32(idx)) + 128] = Mask(112, 0, _1375)
        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = Mask(112, 0, _1439)
        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = uint32(_1535)
        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = uint32(_1759)
        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = uint32(_1919)
        idx = idx + 1
        s = _1919
        s = _1535
        s = _1439
        s = _1375
        s = _1759
        continue 
    mem[mem[64]] = 160
    _1119 = mem[96]
    mem[mem[64] + 160] = mem[96]
    idx = 0
    s = 128
    t = mem[64] + 192
    while idx < mem[96]:
        mem[t] = mem[s + 18 len 14]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[mem[64] + 32] = (32 * mem[96]) + 192
    _2143 = mem[(32 * ('cd', 4).length) + 128]
    mem[mem[64] + (32 * mem[96]) + 192] = mem[(32 * ('cd', 4).length) + 128]
    idx = 0
    s = (32 * ('cd', 4).length) + 160
    t = mem[64] + (32 * mem[96]) + 224
    while idx < _2143:
        mem[t] = mem[s + 18 len 14]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[mem[64] + 64] = (32 * mem[96]) + (32 * _2143) + 224
    _2463 = mem[(64 * ('cd', 4).length) + 160]
    mem[mem[64] + (32 * mem[96]) + (32 * _2143) + 224] = mem[(64 * ('cd', 4).length) + 160]
    idx = 0
    s = (64 * ('cd', 4).length) + 192
    t = mem[64] + (32 * mem[96]) + (32 * _2143) + 256
    while idx < _2463:
        mem[t] = mem[s + 28 len 4]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[mem[64] + 96] = (32 * mem[96]) + (32 * _2143) + (32 * _2463) + 256
    _2719 = mem[(98 * ('cd', 4).length) + 192]
    mem[mem[64] + (32 * mem[96]) + (32 * _2143) + (32 * _2463) + 256] = mem[(98 * ('cd', 4).length) + 192]
    idx = 0
    s = (98 * ('cd', 4).length) + 224
    t = mem[64] + (32 * mem[96]) + (32 * _2143) + (32 * _2463) + 288
    while idx < _2719:
        mem[t] = mem[s + 28 len 4]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[mem[64] + 128] = (32 * mem[96]) + (32 * _2143) + (32 * _2463) + (32 * _2719) + 288
    _2911 = mem[(131 * ('cd', 4).length) + 224]
    mem[mem[64] + (32 * _1119) + (32 * _2143) + (32 * _2463) + (32 * _2719) + 288] = mem[(131 * ('cd', 4).length) + 224]
    idx = 0
    s = (131 * ('cd', 4).length) + 256
    t = mem[64] + (32 * _1119) + (32 * _2143) + (32 * _2463) + (32 * _2719) + 320
    while idx < _2911:
        mem[t] = mem[s + 28 len 4]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    return 160, mem[mem[64] + 32 len (32 * _1119) + (32 * _2143) + (32 * _2463) + (32 * _2719) + (32 * _2911) + 288]
}

function sub_fa935cfe(?) {
    require calldata.size - 4 >= 64
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    require ('cd', 4).length <= test266151307()
    mem[96] = ('cd', 4).length
    mem[64] = (32 * ('cd', 4).length) + 128
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(32 * ('cd', 4).length) + 128] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
            mem[64] = (98 * ('cd', 4).length) + 192
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
                if not ('cd', 4).length:
                    require ('cd', 4).length <= test266151307()
                    mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                    mem[64] = (164 * ('cd', 4).length) + 256
                    if not ('cd', 4).length:
                        idx = 0
                        while ('cd', 4).length > uint32(idx):
                            require uint32(idx) < ('cd', 36).length
                            require uint32(idx) < ('cd', 4).length
                            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _4159 = mem[64]
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                _4196 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _8441 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_8441] == mem[_8441 + 12 len 20]
                                        require s < mem[_4159]
                                        mem[(32 * s) + _4159 + 32] = mem[_8441 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9243 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_4196]
                                        mem[(32 * s) + _4196 + 32] = mem[_9243]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _4159
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4196
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8440 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8440]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8810 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8810]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9380 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9380]
                                else:
                                    mem[_4196 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _8443 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_8443] == mem[_8443 + 12 len 20]
                                        require s < mem[_4159]
                                        mem[(32 * s) + _4159 + 32] = mem[_8443 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _9244 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_4196]
                                        mem[(32 * s) + _4196 + 32] = mem[_9244]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _4159
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4196
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8442 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8442]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8812 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8812]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9381 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9381]
                                idx = idx + 1
                                continue 
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8445 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8445] == mem[_8445 + 12 len 20]
                                    require s < mem[_4159]
                                    mem[(32 * s) + _4159 + 32] = mem[_8445 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9245 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_4159 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _4159 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9245]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _4159
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4159 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8444 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8444]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8814 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8814]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9382 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9382]
                                idx = idx + 1
                                continue 
                            mem[_4159 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8447 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8447] == mem[_8447 + 12 len 20]
                                require s < mem[_4159]
                                mem[(32 * s) + _4159 + 32] = mem[_8447 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9246 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4159 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _4159 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9246]
                                s = s + 1
                                continue 
                            require uint32(s) < mem[96]
                            mem[(32 * uint32(s)) + 128] = _4159
                            require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4159 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8446 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8446]
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8816 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(s) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8816]
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9383 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(s) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9383]
                            s = s + 1
                            continue 
                        _4096 = mem[64]
                        mem[mem[64]] = 160
                        _4107 = mem[96]
                        mem[mem[64] + 160] = mem[96]
                        idx = 0
                        s = 128
                        t = mem[64] + (32 * mem[96]) + 192
                        u = mem[64] + 192
                        while idx < _4107:
                            mem[u] = t + -_4096 - 192
                            _8181 = mem[s]
                            _8253 = mem[mem[s]]
                            mem[t] = mem[mem[s]]
                            v = 0
                            w = _8181 + 32
                            x = t + 32
                            while v < _8253:
                                mem[x] = mem[w + 12 len 20]
                                v = v + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            v = _8253 + 1
                            w = _8181 + (32 * _8253) + 64
                            t = t + (32 * _8253) + 32
                            u = u + 32
                            continue 
                        mem[_4096 + 32] = t - _4096
                        _8309 = mem[(64 * ('cd', 4).length) + 160]
                        mem[t] = mem[(64 * ('cd', 4).length) + 160]
                        idx = 0
                        s = (64 * ('cd', 4).length) + 192
                        u = t + (32 * _8309) + 32
                        v = t + 32
                        while idx < _8309:
                            mem[v] = u + -t - 32
                            _12211 = mem[s]
                            _12371 = mem[mem[s]]
                            mem[u] = mem[mem[s]]
                            t = 0
                            w = _12211 + 32
                            x = u + 32
                            while t < _12371:
                                mem[x] = mem[w]
                                t = t + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            t = _12371 + 1
                            w = _12211 + (32 * _12371) + 64
                            u = u + (32 * _12371) + 32
                            v = v + 32
                            continue 
                        mem[_4096 + 64] = u - _4096
                        _12467 = mem[(32 * ('cd', 4).length) + 128]
                        mem[u] = mem[(32 * ('cd', 4).length) + 128]
                        mem[u + 32 len 32 * _12467] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12467]
                        mem[_4096 + 96] = u + (32 * _12467) + -_4096 + 32
                        _15443 = mem[(98 * ('cd', 4).length) + 192]
                        mem[u + (32 * _12467) + 32] = mem[(98 * ('cd', 4).length) + 192]
                        mem[u + (32 * _12467) + 64 len 32 * _15443] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15443]
                        mem[_4096 + 128] = u + (32 * _12467) + (32 * _15443) + -_4096 + 64
                        _16539 = mem[(131 * ('cd', 4).length) + 224]
                        mem[u + (32 * _12467) + (32 * _15443) + 64] = mem[(131 * ('cd', 4).length) + 224]
                        mem[u + (32 * _12467) + (32 * _15443) + 96 len 32 * _16539] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16539]
                        return memory
                          from mem[64]
                           len u + (32 * _12467) + (32 * _15443) + (32 * _16539) + -mem[64] + 96
                    mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                    idx = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _4161 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _4198 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8450 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8450] == mem[_8450 + 12 len 20]
                                    require s < mem[_4161]
                                    mem[(32 * s) + _4161 + 32] = mem[_8450 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9247 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_4198]
                                    mem[(32 * s) + _4198 + 32] = mem[_9247]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _4161
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4198
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8449 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8449]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8819 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8819]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9385 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9385]
                            else:
                                mem[_4198 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8452 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8452] == mem[_8452 + 12 len 20]
                                    require s < mem[_4161]
                                    mem[(32 * s) + _4161 + 32] = mem[_8452 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9248 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_4198]
                                    mem[(32 * s) + _4198 + 32] = mem[_9248]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _4161
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4198
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8451 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8451]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8821 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8821]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9386 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9386]
                            idx = idx + 1
                            continue 
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8454 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8454] == mem[_8454 + 12 len 20]
                                require s < mem[_4161]
                                mem[(32 * s) + _4161 + 32] = mem[_8454 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9249 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4161 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _4161 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9249]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4161
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4161 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8453 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8453]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8823 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8823]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9387 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9387]
                            idx = idx + 1
                            continue 
                        mem[_4161 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8456 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8456] == mem[_8456 + 12 len 20]
                            require s < mem[_4161]
                            mem[(32 * s) + _4161 + 32] = mem[_8456 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9250 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_4161 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _4161 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9250]
                            s = s + 1
                            continue 
                        require uint32(s) < mem[96]
                        mem[(32 * uint32(s)) + 128] = _4161
                        require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4161 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8455 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8455]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8825 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8825]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9388 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9388]
                        s = s + 1
                        continue 
                    _4097 = mem[64]
                    mem[mem[64]] = 160
                    _4108 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 192
                    u = mem[64] + 192
                    while idx < _4108:
                        mem[u] = t + -_4097 - 192
                        _8190 = mem[s]
                        _8258 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _8190 + 32
                        x = t + 32
                        while v < _8258:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _8258 + 1
                        w = _8190 + (32 * _8258) + 64
                        t = t + (32 * _8258) + 32
                        u = u + 32
                        continue 
                    mem[_4097 + 32] = t - _4097
                    _8322 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _8322) + 32
                    v = t + 32
                    while idx < _8322:
                        mem[v] = u + -t - 32
                        _12213 = mem[s]
                        _12372 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _12213 + 32
                        x = u + 32
                        while t < _12372:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _12372 + 1
                        w = _12213 + (32 * _12372) + 64
                        u = u + (32 * _12372) + 32
                        v = v + 32
                        continue 
                    mem[_4097 + 64] = u - _4097
                    _12468 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _12468] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12468]
                    mem[_4097 + 96] = u + (32 * _12468) + -_4097 + 32
                    _15444 = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12468) + 32] = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12468) + 64 len 32 * _15444] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15444]
                    mem[_4097 + 128] = u + (32 * _12468) + (32 * _15444) + -_4097 + 64
                    _16540 = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12468) + (32 * _15444) + 64] = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12468) + (32 * _15444) + 96 len 32 * _16540] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16540]
                    return memory
                      from mem[64]
                       len u + (32 * _12468) + (32 * _15444) + (32 * _16540) + -mem[64] + 96
                mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                require ('cd', 4).length <= test266151307()
                mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                mem[64] = (164 * ('cd', 4).length) + 256
                if not ('cd', 4).length:
                    idx = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _4163 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _4200 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8459 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8459] == mem[_8459 + 12 len 20]
                                    require s < mem[_4163]
                                    mem[(32 * s) + _4163 + 32] = mem[_8459 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9251 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_4200]
                                    mem[(32 * s) + _4200 + 32] = mem[_9251]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _4163
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4200
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8458 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8458]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8828 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8828]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9390 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9390]
                            else:
                                mem[_4200 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8461 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8461] == mem[_8461 + 12 len 20]
                                    require s < mem[_4163]
                                    mem[(32 * s) + _4163 + 32] = mem[_8461 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9252 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_4200]
                                    mem[(32 * s) + _4200 + 32] = mem[_9252]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _4163
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4200
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8460 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8460]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8830 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8830]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9391 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9391]
                            idx = idx + 1
                            continue 
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8463 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8463] == mem[_8463 + 12 len 20]
                                require s < mem[_4163]
                                mem[(32 * s) + _4163 + 32] = mem[_8463 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9253 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4163 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _4163 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9253]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4163
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4163 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8462 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8462]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8832 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8832]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9392 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9392]
                            idx = idx + 1
                            continue 
                        mem[_4163 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8465 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8465] == mem[_8465 + 12 len 20]
                            require s < mem[_4163]
                            mem[(32 * s) + _4163 + 32] = mem[_8465 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9254 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_4163 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _4163 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9254]
                            s = s + 1
                            continue 
                        require uint32(s) < mem[96]
                        mem[(32 * uint32(s)) + 128] = _4163
                        require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4163 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8464 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8464]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8834 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8834]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9393 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9393]
                        s = s + 1
                        continue 
                    _4098 = mem[64]
                    mem[mem[64]] = 160
                    _4109 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 192
                    u = mem[64] + 192
                    while idx < _4109:
                        mem[u] = t + -_4098 - 192
                        _8199 = mem[s]
                        _8263 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _8199 + 32
                        x = t + 32
                        while v < _8263:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _8263 + 1
                        w = _8199 + (32 * _8263) + 64
                        t = t + (32 * _8263) + 32
                        u = u + 32
                        continue 
                    mem[_4098 + 32] = t - _4098
                    _8335 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _8335) + 32
                    v = t + 32
                    while idx < _8335:
                        mem[v] = u + -t - 32
                        _12215 = mem[s]
                        _12373 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _12215 + 32
                        x = u + 32
                        while t < _12373:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _12373 + 1
                        w = _12215 + (32 * _12373) + 64
                        u = u + (32 * _12373) + 32
                        v = v + 32
                        continue 
                    mem[_4098 + 64] = u - _4098
                    _12469 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _12469] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12469]
                    mem[_4098 + 96] = u + (32 * _12469) + -_4098 + 32
                    _15445 = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12469) + 32] = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12469) + 64 len 32 * _15445] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15445]
                    mem[_4098 + 128] = u + (32 * _12469) + (32 * _15445) + -_4098 + 64
                    _16541 = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12469) + (32 * _15445) + 64] = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12469) + (32 * _15445) + 96 len 32 * _16541] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16541]
                    return memory
                      from mem[64]
                       len u + (32 * _12469) + (32 * _15445) + (32 * _16541) + -mem[64] + 96
                mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _4165 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _4202 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _4202 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8468 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8468] == mem[_8468 + 12 len 20]
                                require s < mem[_4165]
                                mem[(32 * s) + _4165 + 32] = mem[_8468 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9255 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4202]
                                mem[(32 * s) + _4202 + 32] = mem[_9255]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4165
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4202
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8467 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8467]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8837 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8837]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9395 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9395]
                        else:
                            mem[_4202 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8470 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8470] == mem[_8470 + 12 len 20]
                                require s < mem[_4165]
                                mem[(32 * s) + _4165 + 32] = mem[_8470 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9256 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4202]
                                mem[(32 * s) + _4202 + 32] = mem[_9256]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4165
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4202
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8469 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8469]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8839 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8839]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9396 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9396]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _4165 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8472 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8472] == mem[_8472 + 12 len 20]
                            require s < mem[_4165]
                            mem[(32 * s) + _4165 + 32] = mem[_8472 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9257 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_4165 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _4165 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9257]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _4165
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4165 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8471 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8471]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8841 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8841]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9397 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9397]
                        idx = idx + 1
                        continue 
                    mem[_4165 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8474 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8474] == mem[_8474 + 12 len 20]
                        require s < mem[_4165]
                        mem[(32 * s) + _4165 + 32] = mem[_8474 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9258 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_4165 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _4165 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9258]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _4165
                    require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4165 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8473 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8473]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8843 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8843]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9398 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9398]
                    s = s + 1
                    continue 
                _4099 = mem[64]
                mem[mem[64]] = 160
                _4110 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _4110:
                    mem[u] = t + -_4099 - 192
                    _8208 = mem[s]
                    _8268 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _8208 + 32
                    x = t + 32
                    while v < _8268:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _8268 + 1
                    w = _8208 + (32 * _8268) + 64
                    t = t + (32 * _8268) + 32
                    u = u + 32
                    continue 
                mem[_4099 + 32] = t - _4099
                _8348 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _8348) + 32
                v = t + 32
                while idx < _8348:
                    mem[v] = u + -t - 32
                    _12217 = mem[s]
                    _12374 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _12217 + 32
                    x = u + 32
                    while t < _12374:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _12374 + 1
                    w = _12217 + (32 * _12374) + 64
                    u = u + (32 * _12374) + 32
                    v = v + 32
                    continue 
                mem[_4099 + 64] = u - _4099
                _12470 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _12470] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12470]
                mem[_4099 + 96] = u + (32 * _12470) + -_4099 + 32
                _15446 = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12470) + 32] = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12470) + 64 len 32 * _15446] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15446]
                mem[_4099 + 128] = u + (32 * _12470) + (32 * _15446) + -_4099 + 64
                _16542 = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12470) + (32 * _15446) + 64] = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12470) + (32 * _15446) + 96 len 32 * _16542] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16542]
                return memory
                  from mem[64]
                   len u + (32 * _12470) + (32 * _15446) + (32 * _16542) + -mem[64] + 96
            mem[(64 * ('cd', 4).length) + 192] = 96
            s = (64 * ('cd', 4).length) + 192
            idx = ('cd', 4).length
            while idx - 1:
                mem[s + 32] = 96
                s = s + 32
                idx = idx - 1
                continue 
            require ('cd', 4).length <= test266151307()
            _4104 = mem[64]
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                _4115 = mem[64] + (32 * ('cd', 4).length) + 32
                mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
                mem[64] = mem[64] + (64 * ('cd', 4).length) + 64
                if not ('cd', 4).length:
                    idx = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _8774 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _8918 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12721 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12721] == mem[_12721 + 12 len 20]
                                    require s < mem[_8774]
                                    mem[(32 * s) + _8774 + 32] = mem[_12721 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _13963 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_8918]
                                    mem[(32 * s) + _8918 + 32] = mem[_13963]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _8774
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8918
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12720 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12720]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13320 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4104]
                                mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13320]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14076 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4115]
                                mem[(32 * uint32(idx)) + _4115 + 32] = mem[_14076]
                            else:
                                mem[_8918 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12723 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12723] == mem[_12723 + 12 len 20]
                                    require s < mem[_8774]
                                    mem[(32 * s) + _8774 + 32] = mem[_12723 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _13964 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_8918]
                                    mem[(32 * s) + _8918 + 32] = mem[_13964]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _8774
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8918
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12722 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12722]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13322 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4104]
                                mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13322]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14077 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4115]
                                mem[(32 * uint32(idx)) + _4115 + 32] = mem[_14077]
                            idx = idx + 1
                            continue 
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12725 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12725] == mem[_12725 + 12 len 20]
                                require s < mem[_8774]
                                mem[(32 * s) + _8774 + 32] = mem[_12725 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13965 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8774 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _8774 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13965]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8774
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8774 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12724 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12724]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13324 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4104]
                            mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13324]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14078 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4115]
                            mem[(32 * uint32(idx)) + _4115 + 32] = mem[_14078]
                            idx = idx + 1
                            continue 
                        mem[_8774 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12727 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12727] == mem[_12727 + 12 len 20]
                            require s < mem[_8774]
                            mem[(32 * s) + _8774 + 32] = mem[_12727 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13966 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8774 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _8774 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13966]
                            s = s + 1
                            continue 
                        require uint32(s) < mem[96]
                        mem[(32 * uint32(s)) + 128] = _8774
                        require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8774 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12726 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12726]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13326 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[_4104]
                        mem[(32 * uint32(s)) + _4104 + 32] = mem[_13326]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14079 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[_4115]
                        mem[(32 * uint32(s)) + _4115 + 32] = mem[_14079]
                        s = s + 1
                        continue 
                    _8273 = mem[64]
                    mem[mem[64]] = 160
                    _8419 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 192
                    u = mem[64] + 192
                    while idx < _8419:
                        mem[u] = t + -_8273 - 192
                        _12219 = mem[s]
                        _12375 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _12219 + 32
                        x = t + 32
                        while v < _12375:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _12375 + 1
                        w = _12219 + (32 * _12375) + 64
                        t = t + (32 * _12375) + 32
                        u = u + 32
                        continue 
                    mem[_8273 + 32] = t - _8273
                    _12471 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _12471) + 32
                    v = t + 32
                    while idx < _12471:
                        mem[v] = u + -t - 32
                        _15275 = mem[s]
                        _15387 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _15275 + 32
                        x = u + 32
                        while t < _15387:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _15387 + 1
                        w = _15275 + (32 * _15387) + 64
                        u = u + (32 * _15387) + 32
                        v = v + 32
                        continue 
                    mem[_8273 + 64] = u - _8273
                    _15447 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _15447] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15447]
                    mem[_8273 + 96] = u + (32 * _15447) + -_8273 + 32
                    _16543 = mem[_4104]
                    mem[u + (32 * _15447) + 32] = mem[_4104]
                    mem[u + (32 * _15447) + 64 len 32 * _16543] = mem[_4104 + 32 len 32 * _16543]
                    mem[_8273 + 128] = u + (32 * _15447) + (32 * _16543) + -_8273 + 64
                    _16751 = mem[_4115]
                    mem[u + (32 * _15447) + (32 * _16543) + 64] = mem[_4115]
                    mem[u + (32 * _15447) + (32 * _16543) + 96 len 32 * _16751] = mem[_4115 + 32 len 32 * _16751]
                    return memory
                      from mem[64]
                       len u + (32 * _15447) + (32 * _16543) + (32 * _16751) + -mem[64] + 96
                mem[_4115 + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8776 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _8920 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12730 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12730] == mem[_12730 + 12 len 20]
                                require s < mem[_8776]
                                mem[(32 * s) + _8776 + 32] = mem[_12730 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13967 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8920]
                                mem[(32 * s) + _8920 + 32] = mem[_13967]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8776
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8920
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12729 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12729]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13329 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4104]
                            mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13329]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14081 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4115]
                            mem[(32 * uint32(idx)) + _4115 + 32] = mem[_14081]
                        else:
                            mem[_8920 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12732 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12732] == mem[_12732 + 12 len 20]
                                require s < mem[_8776]
                                mem[(32 * s) + _8776 + 32] = mem[_12732 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13968 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8920]
                                mem[(32 * s) + _8920 + 32] = mem[_13968]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8776
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8920
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12731 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12731]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13331 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4104]
                            mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13331]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14082 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4115]
                            mem[(32 * uint32(idx)) + _4115 + 32] = mem[_14082]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12734 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12734] == mem[_12734 + 12 len 20]
                            require s < mem[_8776]
                            mem[(32 * s) + _8776 + 32] = mem[_12734 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13969 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8776 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _8776 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13969]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8776
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8776 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12733 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12733]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13333 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4104]
                        mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13333]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14083 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4115]
                        mem[(32 * uint32(idx)) + _4115 + 32] = mem[_14083]
                        idx = idx + 1
                        continue 
                    mem[_8776 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12736 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12736] == mem[_12736 + 12 len 20]
                        require s < mem[_8776]
                        mem[(32 * s) + _8776 + 32] = mem[_12736 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13970 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8776 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8776 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13970]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _8776
                    require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8776 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12735 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12735]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13335 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4104]
                    mem[(32 * uint32(s)) + _4104 + 32] = mem[_13335]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14084 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4115]
                    mem[(32 * uint32(s)) + _4115 + 32] = mem[_14084]
                    s = s + 1
                    continue 
                _8274 = mem[64]
                mem[mem[64]] = 160
                _8420 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8420:
                    mem[u] = t + -_8274 - 192
                    _12228 = mem[s]
                    _12380 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12228 + 32
                    x = t + 32
                    while v < _12380:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _12380 + 1
                    w = _12228 + (32 * _12380) + 64
                    t = t + (32 * _12380) + 32
                    u = u + 32
                    continue 
                mem[_8274 + 32] = t - _8274
                _12484 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _12484) + 32
                v = t + 32
                while idx < _12484:
                    mem[v] = u + -t - 32
                    _15277 = mem[s]
                    _15388 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15277 + 32
                    x = u + 32
                    while t < _15388:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _15388 + 1
                    w = _15277 + (32 * _15388) + 64
                    u = u + (32 * _15388) + 32
                    v = v + 32
                    continue 
                mem[_8274 + 64] = u - _8274
                _15448 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _15448] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15448]
                mem[_8274 + 96] = u + (32 * _15448) + -_8274 + 32
                _16544 = mem[_4104]
                mem[u + (32 * _15448) + 32] = mem[_4104]
                mem[u + (32 * _15448) + 64 len 32 * _16544] = mem[_4104 + 32 len 32 * _16544]
                mem[_8274 + 128] = u + (32 * _15448) + (32 * _16544) + -_8274 + 64
                _16752 = mem[_4115]
                mem[u + (32 * _15448) + (32 * _16544) + 64] = mem[_4115]
                mem[u + (32 * _15448) + (32 * _16544) + 96 len 32 * _16752] = mem[_4115 + 32 len 32 * _16752]
                return memory
                  from mem[64]
                   len u + (32 * _15448) + (32 * _16544) + (32 * _16752) + -mem[64] + 96
            mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
            mem[64] = mem[64] + (64 * ('cd', 4).length) + 64
            if not ('cd', 4).length:
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8778 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _8922 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12739 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12739] == mem[_12739 + 12 len 20]
                                require s < mem[_8778]
                                mem[(32 * s) + _8778 + 32] = mem[_12739 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13971 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8922]
                                mem[(32 * s) + _8922 + 32] = mem[_13971]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8778
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8922
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12738 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12738]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13338 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4104]
                            mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13338]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14086 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4104 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14086]
                        else:
                            mem[_8922 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12741 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12741] == mem[_12741 + 12 len 20]
                                require s < mem[_8778]
                                mem[(32 * s) + _8778 + 32] = mem[_12741 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13972 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8922]
                                mem[(32 * s) + _8922 + 32] = mem[_13972]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8778
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8922
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12740 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12740]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13340 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4104]
                            mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13340]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14087 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4104 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14087]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12743 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12743] == mem[_12743 + 12 len 20]
                            require s < mem[_8778]
                            mem[(32 * s) + _8778 + 32] = mem[_12743 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13973 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8778 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _8778 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13973]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8778
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8778 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12742 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12742]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13342 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4104]
                        mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13342]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14088 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4104 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14088]
                        idx = idx + 1
                        continue 
                    mem[_8778 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12745 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12745] == mem[_12745 + 12 len 20]
                        require s < mem[_8778]
                        mem[(32 * s) + _8778 + 32] = mem[_12745 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13974 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8778 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8778 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13974]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _8778
                    require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8778 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12744 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12744]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13344 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4104]
                    mem[(32 * uint32(s)) + _4104 + 32] = mem[_13344]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14089 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4104 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(s)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14089]
                    s = s + 1
                    continue 
                _8275 = mem[64]
                mem[mem[64]] = 160
                _8421 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8421:
                    mem[u] = t + -_8275 - 192
                    _12237 = mem[s]
                    _12385 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12237 + 32
                    x = t + 32
                    while v < _12385:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _12385 + 1
                    w = _12237 + (32 * _12385) + 64
                    t = t + (32 * _12385) + 32
                    u = u + 32
                    continue 
                mem[_8275 + 32] = t - _8275
                _12497 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _12497) + 32
                v = t + 32
                while idx < _12497:
                    mem[v] = u + -t - 32
                    _15279 = mem[s]
                    _15389 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15279 + 32
                    x = u + 32
                    while t < _15389:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _15389 + 1
                    w = _15279 + (32 * _15389) + 64
                    u = u + (32 * _15389) + 32
                    v = v + 32
                    continue 
                mem[_8275 + 64] = u - _8275
                _15449 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _15449] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15449]
                mem[_8275 + 96] = u + (32 * _15449) + -_8275 + 32
                _16545 = mem[_4104]
                mem[u + (32 * _15449) + 32] = mem[_4104]
                mem[u + (32 * _15449) + 64 len 32 * _16545] = mem[_4104 + 32 len 32 * _16545]
                mem[_8275 + 128] = u + (32 * _15449) + (32 * _16545) + -_8275 + 64
                _16753 = mem[_4104 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15449) + (32 * _16545) + 64] = mem[_4104 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15449) + (32 * _16545) + 96 len 32 * _16753] = mem[_4104 + (32 * ('cd', 4).length) + 64 len 32 * _16753]
                return memory
                  from mem[64]
                   len u + (32 * _15449) + (32 * _16545) + (32 * _16753) + -mem[64] + 96
            mem[_4104 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _8780 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8924 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12748 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12748] == mem[_12748 + 12 len 20]
                            require s < mem[_8780]
                            mem[(32 * s) + _8780 + 32] = mem[_12748 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13975 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8924]
                            mem[(32 * s) + _8924 + 32] = mem[_13975]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8780
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8924
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12747 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12747]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13347 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4104]
                        mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13347]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14091 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4104 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14091]
                    else:
                        mem[_8924 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12750 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12750] == mem[_12750 + 12 len 20]
                            require s < mem[_8780]
                            mem[(32 * s) + _8780 + 32] = mem[_12750 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13976 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8924]
                            mem[(32 * s) + _8924 + 32] = mem[_13976]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8780
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8924
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12749 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12749]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13349 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4104]
                        mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13349]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14092 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4104 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14092]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12752 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12752] == mem[_12752 + 12 len 20]
                        require s < mem[_8780]
                        mem[(32 * s) + _8780 + 32] = mem[_12752 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13977 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8780 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8780 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13977]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8780
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8780 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12751 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12751]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13351 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4104]
                    mem[(32 * uint32(idx)) + _4104 + 32] = mem[_13351]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14093 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4104 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14093]
                    idx = idx + 1
                    continue 
                mem[_8780 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12754 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12754] == mem[_12754 + 12 len 20]
                    require s < mem[_8780]
                    mem[(32 * s) + _8780 + 32] = mem[_12754 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13978 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_8780 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _8780 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13978]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _8780
                require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8780 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12753 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12753]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13353 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4104]
                mem[(32 * uint32(s)) + _4104 + 32] = mem[_13353]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14094 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4104 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(s)) + _4104 + (32 * ('cd', 4).length) + 64] = mem[_14094]
                s = s + 1
                continue 
            _8276 = mem[64]
            mem[mem[64]] = 160
            _8422 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8422:
                mem[u] = t + -_8276 - 192
                _12246 = mem[s]
                _12390 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12246 + 32
                x = t + 32
                while v < _12390:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _12390 + 1
                w = _12246 + (32 * _12390) + 64
                t = t + (32 * _12390) + 32
                u = u + 32
                continue 
            mem[_8276 + 32] = t - _8276
            _12510 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _12510) + 32
            v = t + 32
            while idx < _12510:
                mem[v] = u + -t - 32
                _15281 = mem[s]
                _15390 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15281 + 32
                x = u + 32
                while t < _15390:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _15390 + 1
                w = _15281 + (32 * _15390) + 64
                u = u + (32 * _15390) + 32
                v = v + 32
                continue 
            mem[_8276 + 64] = u - _8276
            _15450 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _15450] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15450]
            mem[_8276 + 96] = u + (32 * _15450) + -_8276 + 32
            _16546 = mem[_4104]
            mem[u + (32 * _15450) + 32] = mem[_4104]
            mem[u + (32 * _15450) + 64 len 32 * _16546] = mem[_4104 + 32 len 32 * _16546]
            mem[_8276 + 128] = u + (32 * _15450) + (32 * _16546) + -_8276 + 64
            _16754 = mem[_4104 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15450) + (32 * _16546) + 64] = mem[_4104 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15450) + (32 * _16546) + 96 len 32 * _16754] = mem[_4104 + (32 * ('cd', 4).length) + 64 len 32 * _16754]
            return memory
              from mem[64]
               len u + (32 * _15450) + (32 * _16546) + (32 * _16754) + -mem[64] + 96
        mem[(32 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
        mem[64] = (98 * ('cd', 4).length) + 192
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                mem[64] = (164 * ('cd', 4).length) + 256
                if not ('cd', 4).length:
                    idx = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _4169 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _4206 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8477 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8477] == mem[_8477 + 12 len 20]
                                    require s < mem[_4169]
                                    mem[(32 * s) + _4169 + 32] = mem[_8477 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9283 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_4206]
                                    mem[(32 * s) + _4206 + 32] = mem[_9283]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _4169
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4206
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8476 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8476]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8850 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8850]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9428 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9428]
                            else:
                                mem[_4206 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _8479 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_8479] == mem[_8479 + 12 len 20]
                                    require s < mem[_4169]
                                    mem[(32 * s) + _4169 + 32] = mem[_8479 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9284 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_4206]
                                    mem[(32 * s) + _4206 + 32] = mem[_9284]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _4169
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4206
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8478 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8478]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8852 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8852]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9429 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9429]
                            idx = idx + 1
                            continue 
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8481 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8481] == mem[_8481 + 12 len 20]
                                require s < mem[_4169]
                                mem[(32 * s) + _4169 + 32] = mem[_8481 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9285 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4169 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _4169 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9285]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4169
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4169 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8480 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8480]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8854 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8854]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9430 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9430]
                            idx = idx + 1
                            continue 
                        mem[_4169 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8483 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8483] == mem[_8483 + 12 len 20]
                            require s < mem[_4169]
                            mem[(32 * s) + _4169 + 32] = mem[_8483 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9286 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_4169 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _4169 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9286]
                            s = s + 1
                            continue 
                        require uint32(s) < mem[96]
                        mem[(32 * uint32(s)) + 128] = _4169
                        require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4169 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8482 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8482]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8856 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8856]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9431 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9431]
                        s = s + 1
                        continue 
                    _4100 = mem[64]
                    mem[mem[64]] = 160
                    _4111 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 192
                    u = mem[64] + 192
                    while idx < _4111:
                        mem[u] = t + -_4100 - 192
                        _8217 = mem[s]
                        _8277 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _8217 + 32
                        x = t + 32
                        while v < _8277:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _8277 + 1
                        w = _8217 + (32 * _8277) + 64
                        t = t + (32 * _8277) + 32
                        u = u + 32
                        continue 
                    mem[_4100 + 32] = t - _4100
                    _8361 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _8361) + 32
                    v = t + 32
                    while idx < _8361:
                        mem[v] = u + -t - 32
                        _12255 = mem[s]
                        _12395 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _12255 + 32
                        x = u + 32
                        while t < _12395:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _12395 + 1
                        w = _12255 + (32 * _12395) + 64
                        u = u + (32 * _12395) + 32
                        v = v + 32
                        continue 
                    mem[_4100 + 64] = u - _4100
                    _12523 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _12523] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12523]
                    mem[_4100 + 96] = u + (32 * _12523) + -_4100 + 32
                    _15451 = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12523) + 32] = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _12523) + 64 len 32 * _15451] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15451]
                    mem[_4100 + 128] = u + (32 * _12523) + (32 * _15451) + -_4100 + 64
                    _16547 = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12523) + (32 * _15451) + 64] = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _12523) + (32 * _15451) + 96 len 32 * _16547] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16547]
                    return memory
                      from mem[64]
                       len u + (32 * _12523) + (32 * _15451) + (32 * _16547) + -mem[64] + 96
                mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _4171 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _4208 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _4208 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8486 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8486] == mem[_8486 + 12 len 20]
                                require s < mem[_4171]
                                mem[(32 * s) + _4171 + 32] = mem[_8486 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9287 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4208]
                                mem[(32 * s) + _4208 + 32] = mem[_9287]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4171
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4208
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8485 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8485]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8859 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8859]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9433 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9433]
                        else:
                            mem[_4208 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8488 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8488] == mem[_8488 + 12 len 20]
                                require s < mem[_4171]
                                mem[(32 * s) + _4171 + 32] = mem[_8488 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9288 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4208]
                                mem[(32 * s) + _4208 + 32] = mem[_9288]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4171
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4208
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8487 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8487]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8861 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8861]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9434 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9434]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _4171 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8490 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8490] == mem[_8490 + 12 len 20]
                            require s < mem[_4171]
                            mem[(32 * s) + _4171 + 32] = mem[_8490 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9289 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_4171 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _4171 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9289]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _4171
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4171 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8489 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8489]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8863 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8863]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9435 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9435]
                        idx = idx + 1
                        continue 
                    mem[_4171 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8492 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8492] == mem[_8492 + 12 len 20]
                        require s < mem[_4171]
                        mem[(32 * s) + _4171 + 32] = mem[_8492 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9290 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_4171 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _4171 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9290]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _4171
                    require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4171 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8491 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8491]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8865 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8865]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9436 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9436]
                    s = s + 1
                    continue 
                _4101 = mem[64]
                mem[mem[64]] = 160
                _4112 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _4112:
                    mem[u] = t + -_4101 - 192
                    _8226 = mem[s]
                    _8282 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _8226 + 32
                    x = t + 32
                    while v < _8282:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _8282 + 1
                    w = _8226 + (32 * _8282) + 64
                    t = t + (32 * _8282) + 32
                    u = u + 32
                    continue 
                mem[_4101 + 32] = t - _4101
                _8374 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _8374) + 32
                v = t + 32
                while idx < _8374:
                    mem[v] = u + -t - 32
                    _12257 = mem[s]
                    _12396 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _12257 + 32
                    x = u + 32
                    while t < _12396:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _12396 + 1
                    w = _12257 + (32 * _12396) + 64
                    u = u + (32 * _12396) + 32
                    v = v + 32
                    continue 
                mem[_4101 + 64] = u - _4101
                _12524 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _12524] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12524]
                mem[_4101 + 96] = u + (32 * _12524) + -_4101 + 32
                _15452 = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12524) + 32] = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12524) + 64 len 32 * _15452] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15452]
                mem[_4101 + 128] = u + (32 * _12524) + (32 * _15452) + -_4101 + 64
                _16548 = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12524) + (32 * _15452) + 64] = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12524) + (32 * _15452) + 96 len 32 * _16548] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16548]
                return memory
                  from mem[64]
                   len u + (32 * _12524) + (32 * _15452) + (32 * _16548) + -mem[64] + 96
            mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
            mem[64] = (164 * ('cd', 4).length) + 256
            if not ('cd', 4).length:
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _4173 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _4210 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _4210 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8495 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8495] == mem[_8495 + 12 len 20]
                                require s < mem[_4173]
                                mem[(32 * s) + _4173 + 32] = mem[_8495 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9291 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4210]
                                mem[(32 * s) + _4210 + 32] = mem[_9291]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4173
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4210
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8494 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8494]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8868 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8868]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9438 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9438]
                        else:
                            mem[_4210 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _8497 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_8497] == mem[_8497 + 12 len 20]
                                require s < mem[_4173]
                                mem[(32 * s) + _4173 + 32] = mem[_8497 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9292 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_4210]
                                mem[(32 * s) + _4210 + 32] = mem[_9292]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _4173
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4210
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8496 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8496]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8870 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8870]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9439 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9439]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _4173 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8499 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8499] == mem[_8499 + 12 len 20]
                            require s < mem[_4173]
                            mem[(32 * s) + _4173 + 32] = mem[_8499 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9293 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_4173 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _4173 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9293]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _4173
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4173 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8498 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8498]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8872 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8872]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9440 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9440]
                        idx = idx + 1
                        continue 
                    mem[_4173 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8501 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8501] == mem[_8501 + 12 len 20]
                        require s < mem[_4173]
                        mem[(32 * s) + _4173 + 32] = mem[_8501 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9294 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_4173 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _4173 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9294]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _4173
                    require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4173 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8500 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8500]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8874 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8874]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9441 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9441]
                    s = s + 1
                    continue 
                _4102 = mem[64]
                mem[mem[64]] = 160
                _4113 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _4113:
                    mem[u] = t + -_4102 - 192
                    _8235 = mem[s]
                    _8287 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _8235 + 32
                    x = t + 32
                    while v < _8287:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _8287 + 1
                    w = _8235 + (32 * _8287) + 64
                    t = t + (32 * _8287) + 32
                    u = u + 32
                    continue 
                mem[_4102 + 32] = t - _4102
                _8387 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _8387) + 32
                v = t + 32
                while idx < _8387:
                    mem[v] = u + -t - 32
                    _12259 = mem[s]
                    _12397 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _12259 + 32
                    x = u + 32
                    while t < _12397:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _12397 + 1
                    w = _12259 + (32 * _12397) + 64
                    u = u + (32 * _12397) + 32
                    v = v + 32
                    continue 
                mem[_4102 + 64] = u - _4102
                _12525 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _12525] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12525]
                mem[_4102 + 96] = u + (32 * _12525) + -_4102 + 32
                _15453 = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12525) + 32] = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _12525) + 64 len 32 * _15453] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15453]
                mem[_4102 + 128] = u + (32 * _12525) + (32 * _15453) + -_4102 + 64
                _16549 = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12525) + (32 * _15453) + 64] = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _12525) + (32 * _15453) + 96 len 32 * _16549] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16549]
                return memory
                  from mem[64]
                   len u + (32 * _12525) + (32 * _15453) + (32 * _16549) + -mem[64] + 96
            mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _4175 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _4212 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8504 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8504] == mem[_8504 + 12 len 20]
                            require s < mem[_4175]
                            mem[(32 * s) + _4175 + 32] = mem[_8504 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9295 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_4212]
                            mem[(32 * s) + _4212 + 32] = mem[_9295]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _4175
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4212
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8503 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8503]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8877 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8877]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9443 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9443]
                    else:
                        mem[_4212 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8506 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8506] == mem[_8506 + 12 len 20]
                            require s < mem[_4175]
                            mem[(32 * s) + _4175 + 32] = mem[_8506 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9296 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_4212]
                            mem[(32 * s) + _4212 + 32] = mem[_9296]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _4175
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4212
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8505 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8505]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8879 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8879]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9444 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9444]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _8508 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_8508] == mem[_8508 + 12 len 20]
                        require s < mem[_4175]
                        mem[(32 * s) + _4175 + 32] = mem[_8508 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9297 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_4175 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _4175 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_9297]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _4175
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _4175 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8507 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_8507]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8881 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_8881]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9445 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_9445]
                    idx = idx + 1
                    continue 
                mem[_4175 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _8510 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_8510] == mem[_8510 + 12 len 20]
                    require s < mem[_4175]
                    mem[(32 * s) + _4175 + 32] = mem[_8510 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9298 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_4175 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _4175 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_9298]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _4175
                require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _4175 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8509 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_8509]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8883 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[(98 * ('cd', 4).length) + 192]
                mem[(32 * uint32(s)) + (98 * ('cd', 4).length) + 224] = mem[_8883]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9446 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[(131 * ('cd', 4).length) + 224]
                mem[(32 * uint32(s)) + (131 * ('cd', 4).length) + 256] = mem[_9446]
                s = s + 1
                continue 
            _4103 = mem[64]
            mem[mem[64]] = 160
            _4114 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _4114:
                mem[u] = t + -_4103 - 192
                _8244 = mem[s]
                _8292 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _8244 + 32
                x = t + 32
                while v < _8292:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _8292 + 1
                w = _8244 + (32 * _8292) + 64
                t = t + (32 * _8292) + 32
                u = u + 32
                continue 
            mem[_4103 + 32] = t - _4103
            _8400 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _8400) + 32
            v = t + 32
            while idx < _8400:
                mem[v] = u + -t - 32
                _12261 = mem[s]
                _12398 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _12261 + 32
                x = u + 32
                while t < _12398:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _12398 + 1
                w = _12261 + (32 * _12398) + 64
                u = u + (32 * _12398) + 32
                v = v + 32
                continue 
            mem[_4103 + 64] = u - _4103
            _12526 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _12526] = mem[(32 * ('cd', 4).length) + 160 len 32 * _12526]
            mem[_4103 + 96] = u + (32 * _12526) + -_4103 + 32
            _15454 = mem[(98 * ('cd', 4).length) + 192]
            mem[u + (32 * _12526) + 32] = mem[(98 * ('cd', 4).length) + 192]
            mem[u + (32 * _12526) + 64 len 32 * _15454] = mem[(98 * ('cd', 4).length) + 224 len 32 * _15454]
            mem[_4103 + 128] = u + (32 * _12526) + (32 * _15454) + -_4103 + 64
            _16550 = mem[(131 * ('cd', 4).length) + 224]
            mem[u + (32 * _12526) + (32 * _15454) + 64] = mem[(131 * ('cd', 4).length) + 224]
            mem[u + (32 * _12526) + (32 * _15454) + 96 len 32 * _16550] = mem[(131 * ('cd', 4).length) + 256 len 32 * _16550]
            return memory
              from mem[64]
               len u + (32 * _12526) + (32 * _15454) + (32 * _16550) + -mem[64] + 96
        mem[(64 * ('cd', 4).length) + 192] = 96
        s = (64 * ('cd', 4).length) + 192
        idx = ('cd', 4).length
        while idx - 1:
            mem[s + 32] = 96
            s = s + 32
            idx = idx - 1
            continue 
        require ('cd', 4).length <= test266151307()
        _4105 = mem[64]
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            _4116 = mem[64] + (32 * ('cd', 4).length) + 32
            mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
            mem[64] = mem[64] + (64 * ('cd', 4).length) + 64
            if not ('cd', 4).length:
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8782 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _8942 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12761 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12761] == mem[_12761 + 12 len 20]
                                require s < mem[_8782]
                                mem[(32 * s) + _8782 + 32] = mem[_12761 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13979 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8942]
                                mem[(32 * s) + _8942 + 32] = mem[_13979]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8782
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8942
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12760 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12760]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13360 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4105]
                            mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13360]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14096 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4116]
                            mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14096]
                        else:
                            mem[_8942 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12763 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12763] == mem[_12763 + 12 len 20]
                                require s < mem[_8782]
                                mem[(32 * s) + _8782 + 32] = mem[_12763 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13980 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8942]
                                mem[(32 * s) + _8942 + 32] = mem[_13980]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8782
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8942
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12762 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12762]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13362 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4105]
                            mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13362]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14097 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4116]
                            mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14097]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12765 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12765] == mem[_12765 + 12 len 20]
                            require s < mem[_8782]
                            mem[(32 * s) + _8782 + 32] = mem[_12765 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13981 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8782 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _8782 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13981]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8782
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8782 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12764 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12764]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13364 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4105]
                        mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13364]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14098 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4116]
                        mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14098]
                        idx = idx + 1
                        continue 
                    mem[_8782 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12767 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12767] == mem[_12767 + 12 len 20]
                        require s < mem[_8782]
                        mem[(32 * s) + _8782 + 32] = mem[_12767 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13982 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8782 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8782 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13982]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _8782
                    require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8782 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12766 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12766]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13366 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4105]
                    mem[(32 * uint32(s)) + _4105 + 32] = mem[_13366]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14099 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4116]
                    mem[(32 * uint32(s)) + _4116 + 32] = mem[_14099]
                    s = s + 1
                    continue 
                _8297 = mem[64]
                mem[mem[64]] = 160
                _8427 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8427:
                    mem[u] = t + -_8297 - 192
                    _12263 = mem[s]
                    _12399 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12263 + 32
                    x = t + 32
                    while v < _12399:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _12399 + 1
                    w = _12263 + (32 * _12399) + 64
                    t = t + (32 * _12399) + 32
                    u = u + 32
                    continue 
                mem[_8297 + 32] = t - _8297
                _12527 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _12527) + 32
                v = t + 32
                while idx < _12527:
                    mem[v] = u + -t - 32
                    _15291 = mem[s]
                    _15391 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15291 + 32
                    x = u + 32
                    while t < _15391:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _15391 + 1
                    w = _15291 + (32 * _15391) + 64
                    u = u + (32 * _15391) + 32
                    v = v + 32
                    continue 
                mem[_8297 + 64] = u - _8297
                _15455 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _15455] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15455]
                mem[_8297 + 96] = u + (32 * _15455) + -_8297 + 32
                _16551 = mem[_4105]
                mem[u + (32 * _15455) + 32] = mem[_4105]
                mem[u + (32 * _15455) + 64 len 32 * _16551] = mem[_4105 + 32 len 32 * _16551]
                mem[_8297 + 128] = u + (32 * _15455) + (32 * _16551) + -_8297 + 64
                _16759 = mem[_4116]
                mem[u + (32 * _15455) + (32 * _16551) + 64] = mem[_4116]
                mem[u + (32 * _15455) + (32 * _16551) + 96 len 32 * _16759] = mem[_4116 + 32 len 32 * _16759]
                return memory
                  from mem[64]
                   len u + (32 * _15455) + (32 * _16551) + (32 * _16759) + -mem[64] + 96
            mem[_4116 + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _8784 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8944 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12770 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12770] == mem[_12770 + 12 len 20]
                            require s < mem[_8784]
                            mem[(32 * s) + _8784 + 32] = mem[_12770 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13983 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8944]
                            mem[(32 * s) + _8944 + 32] = mem[_13983]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8784
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8944
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12769 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12769]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13369 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4105]
                        mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13369]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14101 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4116]
                        mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14101]
                    else:
                        mem[_8944 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12772 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12772] == mem[_12772 + 12 len 20]
                            require s < mem[_8784]
                            mem[(32 * s) + _8784 + 32] = mem[_12772 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13984 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8944]
                            mem[(32 * s) + _8944 + 32] = mem[_13984]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8784
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8944
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12771 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12771]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13371 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4105]
                        mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13371]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14102 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4116]
                        mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14102]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12774 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12774] == mem[_12774 + 12 len 20]
                        require s < mem[_8784]
                        mem[(32 * s) + _8784 + 32] = mem[_12774 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13985 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8784 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8784 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13985]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8784
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8784 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12773 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12773]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13373 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4105]
                    mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13373]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14103 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4116]
                    mem[(32 * uint32(idx)) + _4116 + 32] = mem[_14103]
                    idx = idx + 1
                    continue 
                mem[_8784 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12776 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12776] == mem[_12776 + 12 len 20]
                    require s < mem[_8784]
                    mem[(32 * s) + _8784 + 32] = mem[_12776 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13986 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_8784 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _8784 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13986]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _8784
                require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8784 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12775 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12775]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13375 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4105]
                mem[(32 * uint32(s)) + _4105 + 32] = mem[_13375]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14104 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4116]
                mem[(32 * uint32(s)) + _4116 + 32] = mem[_14104]
                s = s + 1
                continue 
            _8298 = mem[64]
            mem[mem[64]] = 160
            _8428 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8428:
                mem[u] = t + -_8298 - 192
                _12272 = mem[s]
                _12404 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12272 + 32
                x = t + 32
                while v < _12404:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _12404 + 1
                w = _12272 + (32 * _12404) + 64
                t = t + (32 * _12404) + 32
                u = u + 32
                continue 
            mem[_8298 + 32] = t - _8298
            _12540 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _12540) + 32
            v = t + 32
            while idx < _12540:
                mem[v] = u + -t - 32
                _15293 = mem[s]
                _15392 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15293 + 32
                x = u + 32
                while t < _15392:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _15392 + 1
                w = _15293 + (32 * _15392) + 64
                u = u + (32 * _15392) + 32
                v = v + 32
                continue 
            mem[_8298 + 64] = u - _8298
            _15456 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _15456] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15456]
            mem[_8298 + 96] = u + (32 * _15456) + -_8298 + 32
            _16552 = mem[_4105]
            mem[u + (32 * _15456) + 32] = mem[_4105]
            mem[u + (32 * _15456) + 64 len 32 * _16552] = mem[_4105 + 32 len 32 * _16552]
            mem[_8298 + 128] = u + (32 * _15456) + (32 * _16552) + -_8298 + 64
            _16760 = mem[_4116]
            mem[u + (32 * _15456) + (32 * _16552) + 64] = mem[_4116]
            mem[u + (32 * _15456) + (32 * _16552) + 96 len 32 * _16760] = mem[_4116 + 32 len 32 * _16760]
            return memory
              from mem[64]
               len u + (32 * _15456) + (32 * _16552) + (32 * _16760) + -mem[64] + 96
        mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
        mem[64] = mem[64] + (64 * ('cd', 4).length) + 64
        if not ('cd', 4).length:
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _8786 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8946 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12779 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12779] == mem[_12779 + 12 len 20]
                            require s < mem[_8786]
                            mem[(32 * s) + _8786 + 32] = mem[_12779 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13987 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8946]
                            mem[(32 * s) + _8946 + 32] = mem[_13987]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8786
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8946
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12778 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12778]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13378 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4105]
                        mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13378]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14106 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4105 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14106]
                    else:
                        mem[_8946 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12781 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12781] == mem[_12781 + 12 len 20]
                            require s < mem[_8786]
                            mem[(32 * s) + _8786 + 32] = mem[_12781 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13988 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8946]
                            mem[(32 * s) + _8946 + 32] = mem[_13988]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8786
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8946
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12780 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12780]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13380 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4105]
                        mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13380]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14107 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4105 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14107]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12783 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12783] == mem[_12783 + 12 len 20]
                        require s < mem[_8786]
                        mem[(32 * s) + _8786 + 32] = mem[_12783 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13989 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8786 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8786 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13989]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8786
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8786 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12782 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12782]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13382 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4105]
                    mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13382]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14108 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4105 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14108]
                    idx = idx + 1
                    continue 
                mem[_8786 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12785 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12785] == mem[_12785 + 12 len 20]
                    require s < mem[_8786]
                    mem[(32 * s) + _8786 + 32] = mem[_12785 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13990 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_8786 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _8786 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13990]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _8786
                require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8786 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12784 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12784]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13384 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4105]
                mem[(32 * uint32(s)) + _4105 + 32] = mem[_13384]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14109 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4105 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(s)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14109]
                s = s + 1
                continue 
            _8299 = mem[64]
            mem[mem[64]] = 160
            _8429 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8429:
                mem[u] = t + -_8299 - 192
                _12281 = mem[s]
                _12409 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12281 + 32
                x = t + 32
                while v < _12409:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _12409 + 1
                w = _12281 + (32 * _12409) + 64
                t = t + (32 * _12409) + 32
                u = u + 32
                continue 
            mem[_8299 + 32] = t - _8299
            _12553 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _12553) + 32
            v = t + 32
            while idx < _12553:
                mem[v] = u + -t - 32
                _15295 = mem[s]
                _15393 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15295 + 32
                x = u + 32
                while t < _15393:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _15393 + 1
                w = _15295 + (32 * _15393) + 64
                u = u + (32 * _15393) + 32
                v = v + 32
                continue 
            mem[_8299 + 64] = u - _8299
            _15457 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _15457] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15457]
            mem[_8299 + 96] = u + (32 * _15457) + -_8299 + 32
            _16553 = mem[_4105]
            mem[u + (32 * _15457) + 32] = mem[_4105]
            mem[u + (32 * _15457) + 64 len 32 * _16553] = mem[_4105 + 32 len 32 * _16553]
            mem[_8299 + 128] = u + (32 * _15457) + (32 * _16553) + -_8299 + 64
            _16761 = mem[_4105 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15457) + (32 * _16553) + 64] = mem[_4105 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15457) + (32 * _16553) + 96 len 32 * _16761] = mem[_4105 + (32 * ('cd', 4).length) + 64 len 32 * _16761]
            return memory
              from mem[64]
               len u + (32 * _15457) + (32 * _16553) + (32 * _16761) + -mem[64] + 96
        mem[_4105 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 36).length
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _8788 = mem[64]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _8948 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12788 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12788] == mem[_12788 + 12 len 20]
                        require s < mem[_8788]
                        mem[(32 * s) + _8788 + 32] = mem[_12788 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13991 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8948]
                        mem[(32 * s) + _8948 + 32] = mem[_13991]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8788
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8948
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12787 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12787]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13387 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4105]
                    mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13387]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14111 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4105 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14111]
                else:
                    mem[_8948 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12790 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12790] == mem[_12790 + 12 len 20]
                        require s < mem[_8788]
                        mem[(32 * s) + _8788 + 32] = mem[_12790 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13992 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8948]
                        mem[(32 * s) + _8948 + 32] = mem[_13992]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8788
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8948
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12789 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12789]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13389 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4105]
                    mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13389]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14112 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4105 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14112]
                idx = idx + 1
                continue 
            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12792 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12792] == mem[_12792 + 12 len 20]
                    require s < mem[_8788]
                    mem[(32 * s) + _8788 + 32] = mem[_12792 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13993 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_8788 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _8788 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13993]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _8788
                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _8788 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12791 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_12791]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13391 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4105]
                mem[(32 * uint32(idx)) + _4105 + 32] = mem[_13391]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14113 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4105 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14113]
                idx = idx + 1
                continue 
            mem[_8788 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            s = 0
            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12794 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12794] == mem[_12794 + 12 len 20]
                require s < mem[_8788]
                mem[(32 * s) + _8788 + 32] = mem[_12794 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13994 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require s < mem[_8788 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                mem[(32 * s) + _8788 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13994]
                s = s + 1
                continue 
            require uint32(s) < mem[96]
            mem[(32 * uint32(s)) + 128] = _8788
            require uint32(s) < mem[(64 * ('cd', 4).length) + 160]
            mem[(32 * uint32(s)) + (64 * ('cd', 4).length) + 192] = _8788 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _12793 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[(32 * ('cd', 4).length) + 128]
            mem[(32 * uint32(s)) + (32 * ('cd', 4).length) + 160] = mem[_12793]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _13393 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_4105]
            mem[(32 * uint32(s)) + _4105 + 32] = mem[_13393]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _14114 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_4105 + (32 * ('cd', 4).length) + 32]
            mem[(32 * uint32(s)) + _4105 + (32 * ('cd', 4).length) + 64] = mem[_14114]
            s = s + 1
            continue 
        _8300 = mem[64]
        mem[mem[64]] = 160
        _8430 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 192
        u = mem[64] + 192
        while idx < _8430:
            mem[u] = t + -_8300 - 192
            _12290 = mem[s]
            _12414 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _12290 + 32
            x = t + 32
            while v < _12414:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            v = _12414 + 1
            w = _12290 + (32 * _12414) + 64
            t = t + (32 * _12414) + 32
            u = u + 32
            continue 
        mem[_8300 + 32] = t - _8300
        _12566 = mem[(64 * ('cd', 4).length) + 160]
        mem[t] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        u = t + (32 * _12566) + 32
        v = t + 32
        while idx < _12566:
            mem[v] = u + -t - 32
            _15297 = mem[s]
            _15394 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _15297 + 32
            x = u + 32
            while t < _15394:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            t = _15394 + 1
            w = _15297 + (32 * _15394) + 64
            u = u + (32 * _15394) + 32
            v = v + 32
            continue 
        mem[_8300 + 64] = u - _8300
        _15458 = mem[(32 * ('cd', 4).length) + 128]
        mem[u] = mem[(32 * ('cd', 4).length) + 128]
        mem[u + 32 len 32 * _15458] = mem[(32 * ('cd', 4).length) + 160 len 32 * _15458]
        mem[_8300 + 96] = u + (32 * _15458) + -_8300 + 32
        _16554 = mem[_4105]
        mem[u + (32 * _15458) + 32] = mem[_4105]
        mem[u + (32 * _15458) + 64 len 32 * _16554] = mem[_4105 + 32 len 32 * _16554]
        mem[_8300 + 128] = u + (32 * _15458) + (32 * _16554) + -_8300 + 64
        _16762 = mem[_4105 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _15458) + (32 * _16554) + 64] = mem[_4105 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _15458) + (32 * _16554) + 96 len 32 * _16762] = mem[_4105 + (32 * ('cd', 4).length) + 64 len 32 * _16762]
        return memory
          from mem[64]
           len u + (32 * _15458) + (32 * _16554) + (32 * _16762) + -mem[64] + 96
    mem[128] = 96
    s = 128
    idx = ('cd', 4).length
    while idx - 1:
        mem[s + 32] = 96
        s = s + 32
        idx = idx - 1
        continue 
    require ('cd', 4).length <= test266151307()
    _4106 = mem[64]
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        _4117 = mem[64] + (32 * ('cd', 4).length) + 32
        mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
        mem[64] = mem[64] + (64 * ('cd', 4).length) + 64
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[_4117 + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[_4117 + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
                mem[64] = _4117 + (98 * ('cd', 4).length) + 96
                if not ('cd', 4).length:
                    idx = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _8790 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _8950 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12797 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12797] == mem[_12797 + 12 len 20]
                                    require s < mem[_8790]
                                    mem[(32 * s) + _8790 + 32] = mem[_12797 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _13995 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_8950]
                                    mem[(32 * s) + _8950 + 32] = mem[_13995]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _8790
                                require uint32(idx) < mem[_4117]
                                mem[(32 * uint32(idx)) + _4117 + 32] = _8950
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12796 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4106]
                                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12796]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13396 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13396]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14116 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14116]
                            else:
                                mem[_8950 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _12799 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_12799] == mem[_12799 + 12 len 20]
                                    require s < mem[_8790]
                                    mem[(32 * s) + _8790 + 32] = mem[_12799 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _13996 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_8950]
                                    mem[(32 * s) + _8950 + 32] = mem[_13996]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _8790
                                require uint32(idx) < mem[_4117]
                                mem[(32 * uint32(idx)) + _4117 + 32] = _8950
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12798 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4106]
                                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12798]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13398 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13398]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14117 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14117]
                            idx = idx + 1
                            continue 
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12801 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12801] == mem[_12801 + 12 len 20]
                                require s < mem[_8790]
                                mem[(32 * s) + _8790 + 32] = mem[_12801 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13997 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8790 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _8790 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_13997]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8790
                            require uint32(idx) < mem[_4117]
                            mem[(32 * uint32(idx)) + _4117 + 32] = _8790 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12800 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12800]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13400 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13400]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14118 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14118]
                            idx = idx + 1
                            continue 
                        mem[_8790 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12803 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12803] == mem[_12803 + 12 len 20]
                            require s < mem[_8790]
                            mem[(32 * s) + _8790 + 32] = mem[_12803 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13998 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8790 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _8790 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_13998]
                            s = s + 1
                            continue 
                        require uint32(s) < mem[96]
                        mem[(32 * uint32(s)) + 128] = _8790
                        require uint32(s) < mem[_4117]
                        mem[(32 * uint32(s)) + _4117 + 32] = _8790 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12802 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[_4106]
                        mem[(32 * uint32(s)) + _4106 + 32] = mem[_12802]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13402 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(s)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13402]
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14119 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(s) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(s)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14119]
                        s = s + 1
                        continue 
                    _8301 = mem[64]
                    mem[mem[64]] = 160
                    _8431 = mem[96]
                    mem[mem[64] + 160] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 192
                    u = mem[64] + 192
                    while idx < _8431:
                        mem[u] = t + -_8301 - 192
                        _12299 = mem[s]
                        _12419 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _12299 + 32
                        x = t + 32
                        while v < _12419:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _12419 + 1
                        w = _12299 + (32 * _12419) + 64
                        t = t + (32 * _12419) + 32
                        u = u + 32
                        continue 
                    mem[_8301 + 32] = t - _8301
                    _12579 = mem[_4117]
                    mem[t] = mem[_4117]
                    idx = 0
                    s = _4117 + 32
                    u = t + (32 * _12579) + 32
                    v = t + 32
                    while idx < _12579:
                        mem[v] = u + -t - 32
                        _15299 = mem[s]
                        _15395 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _15299 + 32
                        x = u + 32
                        while t < _15395:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _15395 + 1
                        w = _15299 + (32 * _15395) + 64
                        u = u + (32 * _15395) + 32
                        v = v + 32
                        continue 
                    mem[_8301 + 64] = u - _8301
                    _15459 = mem[_4106]
                    mem[u] = mem[_4106]
                    mem[u + 32 len 32 * _15459] = mem[_4106 + 32 len 32 * _15459]
                    mem[_8301 + 96] = u + (32 * _15459) + -_8301 + 32
                    _16555 = mem[_4117 + (32 * ('cd', 4).length) + 32]
                    mem[u + (32 * _15459) + 32] = mem[_4117 + (32 * ('cd', 4).length) + 32]
                    mem[u + (32 * _15459) + 64 len 32 * _16555] = mem[_4117 + (32 * ('cd', 4).length) + 64 len 32 * _16555]
                    mem[_8301 + 128] = u + (32 * _15459) + (32 * _16555) + -_8301 + 64
                    _16763 = mem[_4117 + (64 * ('cd', 4).length) + 64]
                    mem[u + (32 * _15459) + (32 * _16555) + 64] = mem[_4117 + (64 * ('cd', 4).length) + 64]
                    mem[u + (32 * _15459) + (32 * _16555) + 96 len 32 * _16763] = mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * _16763]
                    return memory
                      from mem[64]
                       len u + (32 * _15459) + (32 * _16555) + (32 * _16763) + -mem[64] + 96
                mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8792 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _8952 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12806 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12806] == mem[_12806 + 12 len 20]
                                require s < mem[_8792]
                                mem[(32 * s) + _8792 + 32] = mem[_12806 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13999 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8952]
                                mem[(32 * s) + _8952 + 32] = mem[_13999]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8792
                            require uint32(idx) < mem[_4117]
                            mem[(32 * uint32(idx)) + _4117 + 32] = _8952
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12805 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12805]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13405 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13405]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14121 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14121]
                        else:
                            mem[_8952 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12808 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12808] == mem[_12808 + 12 len 20]
                                require s < mem[_8792]
                                mem[(32 * s) + _8792 + 32] = mem[_12808 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14000 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8952]
                                mem[(32 * s) + _8952 + 32] = mem[_14000]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8792
                            require uint32(idx) < mem[_4117]
                            mem[(32 * uint32(idx)) + _4117 + 32] = _8952
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12807 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12807]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13407 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13407]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14122 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14122]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12810 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12810] == mem[_12810 + 12 len 20]
                            require s < mem[_8792]
                            mem[(32 * s) + _8792 + 32] = mem[_12810 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14001 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8792 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _8792 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14001]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8792
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _8792 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12809 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12809]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13409 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13409]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14123 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14123]
                        idx = idx + 1
                        continue 
                    mem[_8792 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12812 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12812] == mem[_12812 + 12 len 20]
                        require s < mem[_8792]
                        mem[(32 * s) + _8792 + 32] = mem[_12812 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14002 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8792 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8792 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14002]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _8792
                    require uint32(s) < mem[_4117]
                    mem[(32 * uint32(s)) + _4117 + 32] = _8792 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12811 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4106]
                    mem[(32 * uint32(s)) + _4106 + 32] = mem[_12811]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13411 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(s)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13411]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14124 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(s)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14124]
                    s = s + 1
                    continue 
                _8302 = mem[64]
                mem[mem[64]] = 160
                _8432 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8432:
                    mem[u] = t + -_8302 - 192
                    _12308 = mem[s]
                    _12424 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12308 + 32
                    x = t + 32
                    while v < _12424:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _12424 + 1
                    w = _12308 + (32 * _12424) + 64
                    t = t + (32 * _12424) + 32
                    u = u + 32
                    continue 
                mem[_8302 + 32] = t - _8302
                _12592 = mem[_4117]
                mem[t] = mem[_4117]
                idx = 0
                s = _4117 + 32
                u = t + (32 * _12592) + 32
                v = t + 32
                while idx < _12592:
                    mem[v] = u + -t - 32
                    _15301 = mem[s]
                    _15396 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15301 + 32
                    x = u + 32
                    while t < _15396:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _15396 + 1
                    w = _15301 + (32 * _15396) + 64
                    u = u + (32 * _15396) + 32
                    v = v + 32
                    continue 
                mem[_8302 + 64] = u - _8302
                _15460 = mem[_4106]
                mem[u] = mem[_4106]
                mem[u + 32 len 32 * _15460] = mem[_4106 + 32 len 32 * _15460]
                mem[_8302 + 96] = u + (32 * _15460) + -_8302 + 32
                _16556 = mem[_4117 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15460) + 32] = mem[_4117 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15460) + 64 len 32 * _16556] = mem[_4117 + (32 * ('cd', 4).length) + 64 len 32 * _16556]
                mem[_8302 + 128] = u + (32 * _15460) + (32 * _16556) + -_8302 + 64
                _16764 = mem[_4117 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15460) + (32 * _16556) + 64] = mem[_4117 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15460) + (32 * _16556) + 96 len 32 * _16764] = mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * _16764]
                return memory
                  from mem[64]
                   len u + (32 * _15460) + (32 * _16556) + (32 * _16764) + -mem[64] + 96
            mem[_4117 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[_4117 + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
            mem[64] = _4117 + (98 * ('cd', 4).length) + 96
            if not ('cd', 4).length:
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8794 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _8954 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12815 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12815] == mem[_12815 + 12 len 20]
                                require s < mem[_8794]
                                mem[(32 * s) + _8794 + 32] = mem[_12815 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14003 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8954]
                                mem[(32 * s) + _8954 + 32] = mem[_14003]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8794
                            require uint32(idx) < mem[_4117]
                            mem[(32 * uint32(idx)) + _4117 + 32] = _8954
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12814 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12814]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13414 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13414]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14126 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14126]
                        else:
                            mem[_8954 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12817 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12817] == mem[_12817 + 12 len 20]
                                require s < mem[_8794]
                                mem[(32 * s) + _8794 + 32] = mem[_12817 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14004 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8954]
                                mem[(32 * s) + _8954 + 32] = mem[_14004]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8794
                            require uint32(idx) < mem[_4117]
                            mem[(32 * uint32(idx)) + _4117 + 32] = _8954
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12816 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12816]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13416 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13416]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14127 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14127]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12819 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12819] == mem[_12819 + 12 len 20]
                            require s < mem[_8794]
                            mem[(32 * s) + _8794 + 32] = mem[_12819 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14005 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8794 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _8794 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14005]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8794
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _8794 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12818 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12818]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13418 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13418]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14128 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14128]
                        idx = idx + 1
                        continue 
                    mem[_8794 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12821 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12821] == mem[_12821 + 12 len 20]
                        require s < mem[_8794]
                        mem[(32 * s) + _8794 + 32] = mem[_12821 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14006 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8794 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8794 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14006]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _8794
                    require uint32(s) < mem[_4117]
                    mem[(32 * uint32(s)) + _4117 + 32] = _8794 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12820 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4106]
                    mem[(32 * uint32(s)) + _4106 + 32] = mem[_12820]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13420 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(s)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13420]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14129 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(s)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14129]
                    s = s + 1
                    continue 
                _8303 = mem[64]
                mem[mem[64]] = 160
                _8433 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8433:
                    mem[u] = t + -_8303 - 192
                    _12317 = mem[s]
                    _12429 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12317 + 32
                    x = t + 32
                    while v < _12429:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _12429 + 1
                    w = _12317 + (32 * _12429) + 64
                    t = t + (32 * _12429) + 32
                    u = u + 32
                    continue 
                mem[_8303 + 32] = t - _8303
                _12605 = mem[_4117]
                mem[t] = mem[_4117]
                idx = 0
                s = _4117 + 32
                u = t + (32 * _12605) + 32
                v = t + 32
                while idx < _12605:
                    mem[v] = u + -t - 32
                    _15303 = mem[s]
                    _15397 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15303 + 32
                    x = u + 32
                    while t < _15397:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _15397 + 1
                    w = _15303 + (32 * _15397) + 64
                    u = u + (32 * _15397) + 32
                    v = v + 32
                    continue 
                mem[_8303 + 64] = u - _8303
                _15461 = mem[_4106]
                mem[u] = mem[_4106]
                mem[u + 32 len 32 * _15461] = mem[_4106 + 32 len 32 * _15461]
                mem[_8303 + 96] = u + (32 * _15461) + -_8303 + 32
                _16557 = mem[_4117 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15461) + 32] = mem[_4117 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _15461) + 64 len 32 * _16557] = mem[_4117 + (32 * ('cd', 4).length) + 64 len 32 * _16557]
                mem[_8303 + 128] = u + (32 * _15461) + (32 * _16557) + -_8303 + 64
                _16765 = mem[_4117 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15461) + (32 * _16557) + 64] = mem[_4117 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15461) + (32 * _16557) + 96 len 32 * _16765] = mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * _16765]
                return memory
                  from mem[64]
                   len u + (32 * _15461) + (32 * _16557) + (32 * _16765) + -mem[64] + 96
            mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _8796 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8956 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12824 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12824] == mem[_12824 + 12 len 20]
                            require s < mem[_8796]
                            mem[(32 * s) + _8796 + 32] = mem[_12824 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14007 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8956]
                            mem[(32 * s) + _8956 + 32] = mem[_14007]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8796
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _8956
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12823 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12823]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13423 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13423]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14131 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14131]
                    else:
                        mem[_8956 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12826 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12826] == mem[_12826 + 12 len 20]
                            require s < mem[_8796]
                            mem[(32 * s) + _8796 + 32] = mem[_12826 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14008 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8956]
                            mem[(32 * s) + _8956 + 32] = mem[_14008]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8796
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _8956
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12825 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12825]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13425 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13425]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14132 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14132]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12828 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12828] == mem[_12828 + 12 len 20]
                        require s < mem[_8796]
                        mem[(32 * s) + _8796 + 32] = mem[_12828 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14009 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8796 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8796 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14009]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8796
                    require uint32(idx) < mem[_4117]
                    mem[(32 * uint32(idx)) + _4117 + 32] = _8796 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12827 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12827]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13427 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13427]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14133 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14133]
                    idx = idx + 1
                    continue 
                mem[_8796 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12830 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12830] == mem[_12830 + 12 len 20]
                    require s < mem[_8796]
                    mem[(32 * s) + _8796 + 32] = mem[_12830 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14010 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_8796 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _8796 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14010]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _8796
                require uint32(s) < mem[_4117]
                mem[(32 * uint32(s)) + _4117 + 32] = _8796 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12829 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106]
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_12829]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13429 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4117 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(s)) + _4117 + (32 * ('cd', 4).length) + 64] = mem[_13429]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14134 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4117 + (64 * ('cd', 4).length) + 64]
                mem[(32 * uint32(s)) + _4117 + (64 * ('cd', 4).length) + 96] = mem[_14134]
                s = s + 1
                continue 
            _8304 = mem[64]
            mem[mem[64]] = 160
            _8434 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8434:
                mem[u] = t + -_8304 - 192
                _12326 = mem[s]
                _12434 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12326 + 32
                x = t + 32
                while v < _12434:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _12434 + 1
                w = _12326 + (32 * _12434) + 64
                t = t + (32 * _12434) + 32
                u = u + 32
                continue 
            mem[_8304 + 32] = t - _8304
            _12618 = mem[_4117]
            mem[t] = mem[_4117]
            idx = 0
            s = _4117 + 32
            u = t + (32 * _12618) + 32
            v = t + 32
            while idx < _12618:
                mem[v] = u + -t - 32
                _15305 = mem[s]
                _15398 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15305 + 32
                x = u + 32
                while t < _15398:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _15398 + 1
                w = _15305 + (32 * _15398) + 64
                u = u + (32 * _15398) + 32
                v = v + 32
                continue 
            mem[_8304 + 64] = u - _8304
            _15462 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _15462] = mem[_4106 + 32 len 32 * _15462]
            mem[_8304 + 96] = u + (32 * _15462) + -_8304 + 32
            _16558 = mem[_4117 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15462) + 32] = mem[_4117 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _15462) + 64 len 32 * _16558] = mem[_4117 + (32 * ('cd', 4).length) + 64 len 32 * _16558]
            mem[_8304 + 128] = u + (32 * _15462) + (32 * _16558) + -_8304 + 64
            _16766 = mem[_4117 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15462) + (32 * _16558) + 64] = mem[_4117 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15462) + (32 * _16558) + 96 len 32 * _16766] = mem[_4117 + (64 * ('cd', 4).length) + 96 len 32 * _16766]
            return memory
              from mem[64]
               len u + (32 * _15462) + (32 * _16558) + (32 * _16766) + -mem[64] + 96
        mem[_4117 + 32] = 96
        s = _4117 + 32
        idx = ('cd', 4).length
        while idx - 1:
            mem[s + 32] = 96
            s = s + 32
            idx = idx - 1
            continue 
        require ('cd', 4).length <= test266151307()
        _8413 = mem[64]
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            _8511 = mem[64] + (32 * ('cd', 4).length) + 32
            mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
            mem[64] = mem[64] + (64 * ('cd', 4).length) + 64
            if not ('cd', 4).length:
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _13300 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _13524 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _15617 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_15617] == mem[_15617 + 12 len 20]
                                require s < mem[_13300]
                                mem[(32 * s) + _13300 + 32] = mem[_15617 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16267 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_13524]
                                mem[(32 * s) + _13524 + 32] = mem[_16267]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _13300
                            require uint32(idx) < mem[_4117]
                            mem[(32 * uint32(idx)) + _4117 + 32] = _13524
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15616 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15616]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15952 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_8413]
                            mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15952]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16300 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_8511]
                            mem[(32 * uint32(idx)) + _8511 + 32] = mem[_16300]
                        else:
                            mem[_13524 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _15619 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_15619] == mem[_15619 + 12 len 20]
                                require s < mem[_13300]
                                mem[(32 * s) + _13300 + 32] = mem[_15619 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16268 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_13524]
                                mem[(32 * s) + _13524 + 32] = mem[_16268]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _13300
                            require uint32(idx) < mem[_4117]
                            mem[(32 * uint32(idx)) + _4117 + 32] = _13524
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15618 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15618]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15954 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_8413]
                            mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15954]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16301 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_8511]
                            mem[(32 * uint32(idx)) + _8511 + 32] = mem[_16301]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15621 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15621] == mem[_15621 + 12 len 20]
                            require s < mem[_13300]
                            mem[(32 * s) + _13300 + 32] = mem[_15621 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16269 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_13300 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _13300 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16269]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _13300
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _13300 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15620 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15620]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15956 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8413]
                        mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15956]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16302 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8511]
                        mem[(32 * uint32(idx)) + _8511 + 32] = mem[_16302]
                        idx = idx + 1
                        continue 
                    mem[_13300 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15623 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15623] == mem[_15623 + 12 len 20]
                        require s < mem[_13300]
                        mem[(32 * s) + _13300 + 32] = mem[_15623 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16270 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13300 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _13300 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16270]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _13300
                    require uint32(s) < mem[_4117]
                    mem[(32 * uint32(s)) + _4117 + 32] = _13300 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15622 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4106]
                    mem[(32 * uint32(s)) + _4106 + 32] = mem[_15622]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15958 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_8413]
                    mem[(32 * uint32(s)) + _8413 + 32] = mem[_15958]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16303 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_8511]
                    mem[(32 * uint32(s)) + _8511 + 32] = mem[_16303]
                    s = s + 1
                    continue 
                _12439 = mem[64]
                mem[mem[64]] = 160
                _12703 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _12703:
                    mem[u] = t + -_12439 - 192
                    _15307 = mem[s]
                    _15399 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _15307 + 32
                    x = t + 32
                    while v < _15399:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _15399 + 1
                    w = _15307 + (32 * _15399) + 64
                    t = t + (32 * _15399) + 32
                    u = u + 32
                    continue 
                mem[_12439 + 32] = t - _12439
                _15463 = mem[_4117]
                mem[t] = mem[_4117]
                idx = 0
                s = _4117 + 32
                u = t + (32 * _15463) + 32
                v = t + 32
                while idx < _15463:
                    mem[v] = u + -t - 32
                    _16507 = mem[s]
                    _16531 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _16507 + 32
                    x = u + 32
                    while t < _16531:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _16531 + 1
                    w = _16507 + (32 * _16531) + 64
                    u = u + (32 * _16531) + 32
                    v = v + 32
                    continue 
                mem[_12439 + 64] = u - _12439
                _16559 = mem[_4106]
                mem[u] = mem[_4106]
                mem[u + 32 len 32 * _16559] = mem[_4106 + 32 len 32 * _16559]
                mem[_12439 + 96] = u + (32 * _16559) + -_12439 + 32
                _16767 = mem[_8413]
                mem[u + (32 * _16559) + 32] = mem[_8413]
                mem[u + (32 * _16559) + 64 len 32 * _16767] = mem[_8413 + 32 len 32 * _16767]
                mem[_12439 + 128] = u + (32 * _16559) + (32 * _16767) + -_12439 + 64
                _16879 = mem[_8511]
                mem[u + (32 * _16559) + (32 * _16767) + 64] = mem[_8511]
                mem[u + (32 * _16559) + (32 * _16767) + 96 len 32 * _16879] = mem[_8511 + 32 len 32 * _16879]
                return memory
                  from mem[64]
                   len u + (32 * _16559) + (32 * _16767) + (32 * _16879) + -mem[64] + 96
            mem[_8511 + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _13302 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _13526 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15626 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15626] == mem[_15626 + 12 len 20]
                            require s < mem[_13302]
                            mem[(32 * s) + _13302 + 32] = mem[_15626 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16271 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_13526]
                            mem[(32 * s) + _13526 + 32] = mem[_16271]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _13302
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _13526
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15625 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15625]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15961 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8413]
                        mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15961]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16305 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8511]
                        mem[(32 * uint32(idx)) + _8511 + 32] = mem[_16305]
                    else:
                        mem[_13526 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15628 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15628] == mem[_15628 + 12 len 20]
                            require s < mem[_13302]
                            mem[(32 * s) + _13302 + 32] = mem[_15628 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16272 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_13526]
                            mem[(32 * s) + _13526 + 32] = mem[_16272]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _13302
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _13526
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15627 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15627]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15963 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8413]
                        mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15963]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16306 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8511]
                        mem[(32 * uint32(idx)) + _8511 + 32] = mem[_16306]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15630 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15630] == mem[_15630 + 12 len 20]
                        require s < mem[_13302]
                        mem[(32 * s) + _13302 + 32] = mem[_15630 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16273 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13302 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _13302 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16273]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13302
                    require uint32(idx) < mem[_4117]
                    mem[(32 * uint32(idx)) + _4117 + 32] = _13302 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15629 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15629]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15965 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8413]
                    mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15965]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16307 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8511]
                    mem[(32 * uint32(idx)) + _8511 + 32] = mem[_16307]
                    idx = idx + 1
                    continue 
                mem[_13302 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15632 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15632] == mem[_15632 + 12 len 20]
                    require s < mem[_13302]
                    mem[(32 * s) + _13302 + 32] = mem[_15632 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16274 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_13302 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _13302 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16274]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _13302
                require uint32(s) < mem[_4117]
                mem[(32 * uint32(s)) + _4117 + 32] = _13302 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15631 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106]
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_15631]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15967 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_8413]
                mem[(32 * uint32(s)) + _8413 + 32] = mem[_15967]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16308 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_8511]
                mem[(32 * uint32(s)) + _8511 + 32] = mem[_16308]
                s = s + 1
                continue 
            _12440 = mem[64]
            mem[mem[64]] = 160
            _12704 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _12704:
                mem[u] = t + -_12440 - 192
                _15316 = mem[s]
                _15404 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _15316 + 32
                x = t + 32
                while v < _15404:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _15404 + 1
                w = _15316 + (32 * _15404) + 64
                t = t + (32 * _15404) + 32
                u = u + 32
                continue 
            mem[_12440 + 32] = t - _12440
            _15476 = mem[_4117]
            mem[t] = mem[_4117]
            idx = 0
            s = _4117 + 32
            u = t + (32 * _15476) + 32
            v = t + 32
            while idx < _15476:
                mem[v] = u + -t - 32
                _16509 = mem[s]
                _16532 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _16509 + 32
                x = u + 32
                while t < _16532:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _16532 + 1
                w = _16509 + (32 * _16532) + 64
                u = u + (32 * _16532) + 32
                v = v + 32
                continue 
            mem[_12440 + 64] = u - _12440
            _16560 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _16560] = mem[_4106 + 32 len 32 * _16560]
            mem[_12440 + 96] = u + (32 * _16560) + -_12440 + 32
            _16768 = mem[_8413]
            mem[u + (32 * _16560) + 32] = mem[_8413]
            mem[u + (32 * _16560) + 64 len 32 * _16768] = mem[_8413 + 32 len 32 * _16768]
            mem[_12440 + 128] = u + (32 * _16560) + (32 * _16768) + -_12440 + 64
            _16880 = mem[_8511]
            mem[u + (32 * _16560) + (32 * _16768) + 64] = mem[_8511]
            mem[u + (32 * _16560) + (32 * _16768) + 96 len 32 * _16880] = mem[_8511 + 32 len 32 * _16880]
            return memory
              from mem[64]
               len u + (32 * _16560) + (32 * _16768) + (32 * _16880) + -mem[64] + 96
        mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
        mem[64] = mem[64] + (64 * ('cd', 4).length) + 64
        if not ('cd', 4).length:
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _13304 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _13528 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15635 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15635] == mem[_15635 + 12 len 20]
                            require s < mem[_13304]
                            mem[(32 * s) + _13304 + 32] = mem[_15635 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16275 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_13528]
                            mem[(32 * s) + _13528 + 32] = mem[_16275]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _13304
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _13528
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15634 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15634]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15970 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8413]
                        mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15970]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16310 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8413 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _8413 + (32 * ('cd', 4).length) + 64] = mem[_16310]
                    else:
                        mem[_13528 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15637 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15637] == mem[_15637 + 12 len 20]
                            require s < mem[_13304]
                            mem[(32 * s) + _13304 + 32] = mem[_15637 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16276 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_13528]
                            mem[(32 * s) + _13528 + 32] = mem[_16276]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _13304
                        require uint32(idx) < mem[_4117]
                        mem[(32 * uint32(idx)) + _4117 + 32] = _13528
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15636 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15636]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15972 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8413]
                        mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15972]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16311 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8413 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _8413 + (32 * ('cd', 4).length) + 64] = mem[_16311]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15639 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15639] == mem[_15639 + 12 len 20]
                        require s < mem[_13304]
                        mem[(32 * s) + _13304 + 32] = mem[_15639 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16277 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13304 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _13304 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16277]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13304
                    require uint32(idx) < mem[_4117]
                    mem[(32 * uint32(idx)) + _4117 + 32] = _13304 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15638 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15638]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15974 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8413]
                    mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15974]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16312 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8413 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _8413 + (32 * ('cd', 4).length) + 64] = mem[_16312]
                    idx = idx + 1
                    continue 
                mem[_13304 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15641 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15641] == mem[_15641 + 12 len 20]
                    require s < mem[_13304]
                    mem[(32 * s) + _13304 + 32] = mem[_15641 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16278 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_13304 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _13304 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16278]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _13304
                require uint32(s) < mem[_4117]
                mem[(32 * uint32(s)) + _4117 + 32] = _13304 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15640 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106]
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_15640]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15976 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_8413]
                mem[(32 * uint32(s)) + _8413 + 32] = mem[_15976]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16313 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_8413 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(s)) + _8413 + (32 * ('cd', 4).length) + 64] = mem[_16313]
                s = s + 1
                continue 
            _12441 = mem[64]
            mem[mem[64]] = 160
            _12705 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _12705:
                mem[u] = t + -_12441 - 192
                _15325 = mem[s]
                _15409 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _15325 + 32
                x = t + 32
                while v < _15409:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _15409 + 1
                w = _15325 + (32 * _15409) + 64
                t = t + (32 * _15409) + 32
                u = u + 32
                continue 
            mem[_12441 + 32] = t - _12441
            _15489 = mem[_4117]
            mem[t] = mem[_4117]
            idx = 0
            s = _4117 + 32
            u = t + (32 * _15489) + 32
            v = t + 32
            while idx < _15489:
                mem[v] = u + -t - 32
                _16511 = mem[s]
                _16533 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _16511 + 32
                x = u + 32
                while t < _16533:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _16533 + 1
                w = _16511 + (32 * _16533) + 64
                u = u + (32 * _16533) + 32
                v = v + 32
                continue 
            mem[_12441 + 64] = u - _12441
            _16561 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _16561] = mem[_4106 + 32 len 32 * _16561]
            mem[_12441 + 96] = u + (32 * _16561) + -_12441 + 32
            _16769 = mem[_8413]
            mem[u + (32 * _16561) + 32] = mem[_8413]
            mem[u + (32 * _16561) + 64 len 32 * _16769] = mem[_8413 + 32 len 32 * _16769]
            mem[_12441 + 128] = u + (32 * _16561) + (32 * _16769) + -_12441 + 64
            _16881 = mem[_8413 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _16561) + (32 * _16769) + 64] = mem[_8413 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _16561) + (32 * _16769) + 96 len 32 * _16881] = mem[_8413 + (32 * ('cd', 4).length) + 64 len 32 * _16881]
            return memory
              from mem[64]
               len u + (32 * _16561) + (32 * _16769) + (32 * _16881) + -mem[64] + 96
        mem[_8413 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 36).length
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _13306 = mem[64]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _13530 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15644 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15644] == mem[_15644 + 12 len 20]
                        require s < mem[_13306]
                        mem[(32 * s) + _13306 + 32] = mem[_15644 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16279 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13530]
                        mem[(32 * s) + _13530 + 32] = mem[_16279]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13306
                    require uint32(idx) < mem[_4117]
                    mem[(32 * uint32(idx)) + _4117 + 32] = _13530
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15643 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15643]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15979 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8413]
                    mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15979]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16315 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8413 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _8413 + (32 * ('cd', 4).length) + 64] = mem[_16315]
                else:
                    mem[_13530 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15646 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15646] == mem[_15646 + 12 len 20]
                        require s < mem[_13306]
                        mem[(32 * s) + _13306 + 32] = mem[_15646 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16280 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13530]
                        mem[(32 * s) + _13530 + 32] = mem[_16280]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13306
                    require uint32(idx) < mem[_4117]
                    mem[(32 * uint32(idx)) + _4117 + 32] = _13530
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15645 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15645]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15981 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8413]
                    mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15981]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16316 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8413 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _8413 + (32 * ('cd', 4).length) + 64] = mem[_16316]
                idx = idx + 1
                continue 
            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15648 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15648] == mem[_15648 + 12 len 20]
                    require s < mem[_13306]
                    mem[(32 * s) + _13306 + 32] = mem[_15648 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16281 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_13306 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _13306 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16281]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _13306
                require uint32(idx) < mem[_4117]
                mem[(32 * uint32(idx)) + _4117 + 32] = _13306 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15647 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4106]
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15647]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15983 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8413]
                mem[(32 * uint32(idx)) + _8413 + 32] = mem[_15983]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16317 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8413 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _8413 + (32 * ('cd', 4).length) + 64] = mem[_16317]
                idx = idx + 1
                continue 
            mem[_13306 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            s = 0
            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15650 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15650] == mem[_15650 + 12 len 20]
                require s < mem[_13306]
                mem[(32 * s) + _13306 + 32] = mem[_15650 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16282 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require s < mem[_13306 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                mem[(32 * s) + _13306 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16282]
                s = s + 1
                continue 
            require uint32(s) < mem[96]
            mem[(32 * uint32(s)) + 128] = _13306
            require uint32(s) < mem[_4117]
            mem[(32 * uint32(s)) + _4117 + 32] = _13306 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15649 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_4106]
            mem[(32 * uint32(s)) + _4106 + 32] = mem[_15649]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15985 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_8413]
            mem[(32 * uint32(s)) + _8413 + 32] = mem[_15985]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16318 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_8413 + (32 * ('cd', 4).length) + 32]
            mem[(32 * uint32(s)) + _8413 + (32 * ('cd', 4).length) + 64] = mem[_16318]
            s = s + 1
            continue 
        _12442 = mem[64]
        mem[mem[64]] = 160
        _12706 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 192
        u = mem[64] + 192
        while idx < _12706:
            mem[u] = t + -_12442 - 192
            _15334 = mem[s]
            _15414 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _15334 + 32
            x = t + 32
            while v < _15414:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            v = _15414 + 1
            w = _15334 + (32 * _15414) + 64
            t = t + (32 * _15414) + 32
            u = u + 32
            continue 
        mem[_12442 + 32] = t - _12442
        _15502 = mem[_4117]
        mem[t] = mem[_4117]
        idx = 0
        s = _4117 + 32
        u = t + (32 * _15502) + 32
        v = t + 32
        while idx < _15502:
            mem[v] = u + -t - 32
            _16513 = mem[s]
            _16534 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _16513 + 32
            x = u + 32
            while t < _16534:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            t = _16534 + 1
            w = _16513 + (32 * _16534) + 64
            u = u + (32 * _16534) + 32
            v = v + 32
            continue 
        mem[_12442 + 64] = u - _12442
        _16562 = mem[_4106]
        mem[u] = mem[_4106]
        mem[u + 32 len 32 * _16562] = mem[_4106 + 32 len 32 * _16562]
        mem[_12442 + 96] = u + (32 * _16562) + -_12442 + 32
        _16770 = mem[_8413]
        mem[u + (32 * _16562) + 32] = mem[_8413]
        mem[u + (32 * _16562) + 64 len 32 * _16770] = mem[_8413 + 32 len 32 * _16770]
        mem[_12442 + 128] = u + (32 * _16562) + (32 * _16770) + -_12442 + 64
        _16882 = mem[_8413 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _16562) + (32 * _16770) + 64] = mem[_8413 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _16562) + (32 * _16770) + 96 len 32 * _16882] = mem[_8413 + (32 * ('cd', 4).length) + 64 len 32 * _16882]
        return memory
          from mem[64]
           len u + (32 * _16562) + (32 * _16770) + (32 * _16882) + -mem[64] + 96
    mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
    mem[64] = mem[64] + (64 * ('cd', 4).length) + 64
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[_4106 + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[_4106 + (98 * ('cd', 4).length) + 96] = ('cd', 4).length
            mem[64] = _4106 + (131 * ('cd', 4).length) + 128
            if not ('cd', 4).length:
                idx = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8800 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _8960 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12833 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12833] == mem[_12833 + 12 len 20]
                                require s < mem[_8800]
                                mem[(32 * s) + _8800 + 32] = mem[_12833 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14035 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8960]
                                mem[(32 * s) + _8960 + 32] = mem[_14035]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8800
                            require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8960
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12832 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12832]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13436 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13436]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14164 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14164]
                        else:
                            mem[_8960 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12835 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_12835] == mem[_12835 + 12 len 20]
                                require s < mem[_8800]
                                mem[(32 * s) + _8800 + 32] = mem[_12835 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _14036 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_8960]
                                mem[(32 * s) + _8960 + 32] = mem[_14036]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _8800
                            require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8960
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12834 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106]
                            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12834]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13438 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13438]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14165 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14165]
                        idx = idx + 1
                        continue 
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12837 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12837] == mem[_12837 + 12 len 20]
                            require s < mem[_8800]
                            mem[(32 * s) + _8800 + 32] = mem[_12837 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14037 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8800 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _8800 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14037]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8800
                        require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8800 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12836 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12836]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13440 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13440]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14166 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14166]
                        idx = idx + 1
                        continue 
                    mem[_8800 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12839 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12839] == mem[_12839 + 12 len 20]
                        require s < mem[_8800]
                        mem[(32 * s) + _8800 + 32] = mem[_12839 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14038 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8800 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8800 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14038]
                        s = s + 1
                        continue 
                    require uint32(s) < mem[96]
                    mem[(32 * uint32(s)) + 128] = _8800
                    require uint32(s) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _8800 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12838 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4106]
                    mem[(32 * uint32(s)) + _4106 + 32] = mem[_12838]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13442 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(s)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13442]
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14167 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(s) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                    mem[(32 * uint32(s)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14167]
                    s = s + 1
                    continue 
                _8305 = mem[64]
                mem[mem[64]] = 160
                _8435 = mem[96]
                mem[mem[64] + 160] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 192
                u = mem[64] + 192
                while idx < _8435:
                    mem[u] = t + -_8305 - 192
                    _12335 = mem[s]
                    _12443 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _12335 + 32
                    x = t + 32
                    while v < _12443:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _12443 + 1
                    w = _12335 + (32 * _12443) + 64
                    t = t + (32 * _12443) + 32
                    u = u + 32
                    continue 
                mem[_8305 + 32] = t - _8305
                _12631 = mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
                idx = 0
                s = _4106 + (32 * ('cd', 4).length) + 64
                u = t + (32 * _12631) + 32
                v = t + 32
                while idx < _12631:
                    mem[v] = u + -t - 32
                    _15343 = mem[s]
                    _15419 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _15343 + 32
                    x = u + 32
                    while t < _15419:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _15419 + 1
                    w = _15343 + (32 * _15419) + 64
                    u = u + (32 * _15419) + 32
                    v = v + 32
                    continue 
                mem[_8305 + 64] = u - _8305
                _15515 = mem[_4106]
                mem[u] = mem[_4106]
                mem[u + 32 len 32 * _15515] = mem[_4106 + 32 len 32 * _15515]
                mem[_8305 + 96] = u + (32 * _15515) + -_8305 + 32
                _16563 = mem[_4106 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15515) + 32] = mem[_4106 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _15515) + 64 len 32 * _16563] = mem[_4106 + (64 * ('cd', 4).length) + 96 len 32 * _16563]
                mem[_8305 + 128] = u + (32 * _15515) + (32 * _16563) + -_8305 + 64
                _16771 = mem[_4106 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _15515) + (32 * _16563) + 64] = mem[_4106 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _15515) + (32 * _16563) + 96 len 32 * _16771] = mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * _16771]
                return memory
                  from mem[64]
                   len u + (32 * _15515) + (32 * _16563) + (32 * _16771) + -mem[64] + 96
            mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _8802 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8962 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12842 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12842] == mem[_12842 + 12 len 20]
                            require s < mem[_8802]
                            mem[(32 * s) + _8802 + 32] = mem[_12842 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14039 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8962]
                            mem[(32 * s) + _8962 + 32] = mem[_14039]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8802
                        require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8962
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12841 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12841]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13445 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13445]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14169 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14169]
                    else:
                        mem[_8962 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12844 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12844] == mem[_12844 + 12 len 20]
                            require s < mem[_8802]
                            mem[(32 * s) + _8802 + 32] = mem[_12844 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14040 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8962]
                            mem[(32 * s) + _8962 + 32] = mem[_14040]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8802
                        require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8962
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12843 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12843]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13447 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13447]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14170 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14170]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12846 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12846] == mem[_12846 + 12 len 20]
                        require s < mem[_8802]
                        mem[(32 * s) + _8802 + 32] = mem[_12846 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14041 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8802 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8802 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14041]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8802
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8802 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12845 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12845]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13449 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13449]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14171 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                    mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14171]
                    idx = idx + 1
                    continue 
                mem[_8802 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12848 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12848] == mem[_12848 + 12 len 20]
                    require s < mem[_8802]
                    mem[(32 * s) + _8802 + 32] = mem[_12848 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14042 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_8802 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _8802 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14042]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _8802
                require uint32(s) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _8802 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12847 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106]
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_12847]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13451 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                mem[(32 * uint32(s)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13451]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14172 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                mem[(32 * uint32(s)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14172]
                s = s + 1
                continue 
            _8306 = mem[64]
            mem[mem[64]] = 160
            _8436 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8436:
                mem[u] = t + -_8306 - 192
                _12344 = mem[s]
                _12448 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12344 + 32
                x = t + 32
                while v < _12448:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _12448 + 1
                w = _12344 + (32 * _12448) + 64
                t = t + (32 * _12448) + 32
                u = u + 32
                continue 
            mem[_8306 + 32] = t - _8306
            _12644 = mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
            idx = 0
            s = _4106 + (32 * ('cd', 4).length) + 64
            u = t + (32 * _12644) + 32
            v = t + 32
            while idx < _12644:
                mem[v] = u + -t - 32
                _15345 = mem[s]
                _15420 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15345 + 32
                x = u + 32
                while t < _15420:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _15420 + 1
                w = _15345 + (32 * _15420) + 64
                u = u + (32 * _15420) + 32
                v = v + 32
                continue 
            mem[_8306 + 64] = u - _8306
            _15516 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _15516] = mem[_4106 + 32 len 32 * _15516]
            mem[_8306 + 96] = u + (32 * _15516) + -_8306 + 32
            _16564 = mem[_4106 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15516) + 32] = mem[_4106 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15516) + 64 len 32 * _16564] = mem[_4106 + (64 * ('cd', 4).length) + 96 len 32 * _16564]
            mem[_8306 + 128] = u + (32 * _15516) + (32 * _16564) + -_8306 + 64
            _16772 = mem[_4106 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _15516) + (32 * _16564) + 64] = mem[_4106 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _15516) + (32 * _16564) + 96 len 32 * _16772] = mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * _16772]
            return memory
              from mem[64]
               len u + (32 * _15516) + (32 * _16564) + (32 * _16772) + -mem[64] + 96
        mem[_4106 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[_4106 + (98 * ('cd', 4).length) + 96] = ('cd', 4).length
        mem[64] = _4106 + (131 * ('cd', 4).length) + 128
        if not ('cd', 4).length:
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _8804 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _8964 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12851 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12851] == mem[_12851 + 12 len 20]
                            require s < mem[_8804]
                            mem[(32 * s) + _8804 + 32] = mem[_12851 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14043 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8964]
                            mem[(32 * s) + _8964 + 32] = mem[_14043]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8804
                        require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8964
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12850 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12850]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13454 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13454]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14174 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14174]
                    else:
                        mem[_8964 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12853 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_12853] == mem[_12853 + 12 len 20]
                            require s < mem[_8804]
                            mem[(32 * s) + _8804 + 32] = mem[_12853 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _14044 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_8964]
                            mem[(32 * s) + _8964 + 32] = mem[_14044]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _8804
                        require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8964
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12852 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12852]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13456 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13456]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14175 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14175]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12855 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12855] == mem[_12855 + 12 len 20]
                        require s < mem[_8804]
                        mem[(32 * s) + _8804 + 32] = mem[_12855 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14045 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8804 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _8804 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14045]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8804
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8804 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12854 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12854]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13458 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13458]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14176 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                    mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14176]
                    idx = idx + 1
                    continue 
                mem[_8804 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12857 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12857] == mem[_12857 + 12 len 20]
                    require s < mem[_8804]
                    mem[(32 * s) + _8804 + 32] = mem[_12857 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14046 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_8804 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _8804 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14046]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _8804
                require uint32(s) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _8804 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12856 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106]
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_12856]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13460 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                mem[(32 * uint32(s)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13460]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14177 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                mem[(32 * uint32(s)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14177]
                s = s + 1
                continue 
            _8307 = mem[64]
            mem[mem[64]] = 160
            _8437 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _8437:
                mem[u] = t + -_8307 - 192
                _12353 = mem[s]
                _12453 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _12353 + 32
                x = t + 32
                while v < _12453:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _12453 + 1
                w = _12353 + (32 * _12453) + 64
                t = t + (32 * _12453) + 32
                u = u + 32
                continue 
            mem[_8307 + 32] = t - _8307
            _12657 = mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
            idx = 0
            s = _4106 + (32 * ('cd', 4).length) + 64
            u = t + (32 * _12657) + 32
            v = t + 32
            while idx < _12657:
                mem[v] = u + -t - 32
                _15347 = mem[s]
                _15421 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _15347 + 32
                x = u + 32
                while t < _15421:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _15421 + 1
                w = _15347 + (32 * _15421) + 64
                u = u + (32 * _15421) + 32
                v = v + 32
                continue 
            mem[_8307 + 64] = u - _8307
            _15517 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _15517] = mem[_4106 + 32 len 32 * _15517]
            mem[_8307 + 96] = u + (32 * _15517) + -_8307 + 32
            _16565 = mem[_4106 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15517) + 32] = mem[_4106 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _15517) + 64 len 32 * _16565] = mem[_4106 + (64 * ('cd', 4).length) + 96 len 32 * _16565]
            mem[_8307 + 128] = u + (32 * _15517) + (32 * _16565) + -_8307 + 64
            _16773 = mem[_4106 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _15517) + (32 * _16565) + 64] = mem[_4106 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _15517) + (32 * _16565) + 96 len 32 * _16773] = mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * _16773]
            return memory
              from mem[64]
               len u + (32 * _15517) + (32 * _16565) + (32 * _16773) + -mem[64] + 96
        mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 36).length
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _8806 = mem[64]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _8966 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12860 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12860] == mem[_12860 + 12 len 20]
                        require s < mem[_8806]
                        mem[(32 * s) + _8806 + 32] = mem[_12860 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14047 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8966]
                        mem[(32 * s) + _8966 + 32] = mem[_14047]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8806
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8966
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12859 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12859]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13463 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13463]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14179 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                    mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14179]
                else:
                    mem[_8966 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12862 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12862] == mem[_12862 + 12 len 20]
                        require s < mem[_8806]
                        mem[(32 * s) + _8806 + 32] = mem[_12862 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _14048 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_8966]
                        mem[(32 * s) + _8966 + 32] = mem[_14048]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _8806
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8966
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12861 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12861]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13465 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13465]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14180 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                    mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14180]
                idx = idx + 1
                continue 
            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12864 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12864] == mem[_12864 + 12 len 20]
                    require s < mem[_8806]
                    mem[(32 * s) + _8806 + 32] = mem[_12864 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _14049 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_8806 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _8806 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_14049]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _8806
                require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _8806 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12863 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4106]
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_12863]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13467 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4106 + (64 * ('cd', 4).length) + 64]
                mem[(32 * uint32(idx)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13467]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14181 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4106 + (98 * ('cd', 4).length) + 96]
                mem[(32 * uint32(idx)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14181]
                idx = idx + 1
                continue 
            mem[_8806 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            s = 0
            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12866 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12866] == mem[_12866 + 12 len 20]
                require s < mem[_8806]
                mem[(32 * s) + _8806 + 32] = mem[_12866 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _14050 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require s < mem[_8806 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                mem[(32 * s) + _8806 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_14050]
                s = s + 1
                continue 
            require uint32(s) < mem[96]
            mem[(32 * uint32(s)) + 128] = _8806
            require uint32(s) < mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _8806 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _12865 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_4106]
            mem[(32 * uint32(s)) + _4106 + 32] = mem[_12865]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _13469 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_4106 + (64 * ('cd', 4).length) + 64]
            mem[(32 * uint32(s)) + _4106 + (64 * ('cd', 4).length) + 96] = mem[_13469]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _14182 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_4106 + (98 * ('cd', 4).length) + 96]
            mem[(32 * uint32(s)) + _4106 + (98 * ('cd', 4).length) + 128] = mem[_14182]
            s = s + 1
            continue 
        _8308 = mem[64]
        mem[mem[64]] = 160
        _8438 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 192
        u = mem[64] + 192
        while idx < _8438:
            mem[u] = t + -_8308 - 192
            _12362 = mem[s]
            _12458 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _12362 + 32
            x = t + 32
            while v < _12458:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            v = _12458 + 1
            w = _12362 + (32 * _12458) + 64
            t = t + (32 * _12458) + 32
            u = u + 32
            continue 
        mem[_8308 + 32] = t - _8308
        _12670 = mem[_4106 + (32 * ('cd', 4).length) + 32]
        mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
        idx = 0
        s = _4106 + (32 * ('cd', 4).length) + 64
        u = t + (32 * _12670) + 32
        v = t + 32
        while idx < _12670:
            mem[v] = u + -t - 32
            _15349 = mem[s]
            _15422 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _15349 + 32
            x = u + 32
            while t < _15422:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            t = _15422 + 1
            w = _15349 + (32 * _15422) + 64
            u = u + (32 * _15422) + 32
            v = v + 32
            continue 
        mem[_8308 + 64] = u - _8308
        _15518 = mem[_4106]
        mem[u] = mem[_4106]
        mem[u + 32 len 32 * _15518] = mem[_4106 + 32 len 32 * _15518]
        mem[_8308 + 96] = u + (32 * _15518) + -_8308 + 32
        _16566 = mem[_4106 + (64 * ('cd', 4).length) + 64]
        mem[u + (32 * _15518) + 32] = mem[_4106 + (64 * ('cd', 4).length) + 64]
        mem[u + (32 * _15518) + 64 len 32 * _16566] = mem[_4106 + (64 * ('cd', 4).length) + 96 len 32 * _16566]
        mem[_8308 + 128] = u + (32 * _15518) + (32 * _16566) + -_8308 + 64
        _16774 = mem[_4106 + (98 * ('cd', 4).length) + 96]
        mem[u + (32 * _15518) + (32 * _16566) + 64] = mem[_4106 + (98 * ('cd', 4).length) + 96]
        mem[u + (32 * _15518) + (32 * _16566) + 96 len 32 * _16774] = mem[_4106 + (98 * ('cd', 4).length) + 128 len 32 * _16774]
        return memory
          from mem[64]
           len u + (32 * _15518) + (32 * _16566) + (32 * _16774) + -mem[64] + 96
    mem[_4106 + (32 * ('cd', 4).length) + 64] = 96
    s = _4106 + (32 * ('cd', 4).length) + 64
    idx = ('cd', 4).length
    while idx - 1:
        mem[s + 32] = 96
        s = s + 32
        idx = idx - 1
        continue 
    require ('cd', 4).length <= test266151307()
    _8414 = mem[64]
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        _8512 = mem[64] + (32 * ('cd', 4).length) + 32
        mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
        mem[64] = mem[64] + (64 * ('cd', 4).length) + 64
        if not ('cd', 4).length:
            idx = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _13308 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _13548 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15657 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15657] == mem[_15657 + 12 len 20]
                            require s < mem[_13308]
                            mem[(32 * s) + _13308 + 32] = mem[_15657 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16283 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_13548]
                            mem[(32 * s) + _13548 + 32] = mem[_16283]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _13308
                        require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13548
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15656 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15656]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15992 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8414]
                        mem[(32 * uint32(idx)) + _8414 + 32] = mem[_15992]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16320 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8512]
                        mem[(32 * uint32(idx)) + _8512 + 32] = mem[_16320]
                    else:
                        mem[_13548 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _15659 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_15659] == mem[_15659 + 12 len 20]
                            require s < mem[_13308]
                            mem[(32 * s) + _13308 + 32] = mem[_15659 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16284 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_13548]
                            mem[(32 * s) + _13548 + 32] = mem[_16284]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _13308
                        require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13548
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15658 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_4106]
                        mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15658]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15994 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8414]
                        mem[(32 * uint32(idx)) + _8414 + 32] = mem[_15994]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16321 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_8512]
                        mem[(32 * uint32(idx)) + _8512 + 32] = mem[_16321]
                    idx = idx + 1
                    continue 
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15661 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15661] == mem[_15661 + 12 len 20]
                        require s < mem[_13308]
                        mem[(32 * s) + _13308 + 32] = mem[_15661 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16285 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13308 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _13308 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16285]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13308
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13308 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15660 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15660]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15996 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8414]
                    mem[(32 * uint32(idx)) + _8414 + 32] = mem[_15996]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16322 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8512]
                    mem[(32 * uint32(idx)) + _8512 + 32] = mem[_16322]
                    idx = idx + 1
                    continue 
                mem[_13308 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15663 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15663] == mem[_15663 + 12 len 20]
                    require s < mem[_13308]
                    mem[(32 * s) + _13308 + 32] = mem[_15663 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16286 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_13308 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _13308 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16286]
                    s = s + 1
                    continue 
                require uint32(s) < mem[96]
                mem[(32 * uint32(s)) + 128] = _13308
                require uint32(s) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _13308 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15662 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_4106]
                mem[(32 * uint32(s)) + _4106 + 32] = mem[_15662]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15998 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_8414]
                mem[(32 * uint32(s)) + _8414 + 32] = mem[_15998]
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16323 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(s) < mem[_8512]
                mem[(32 * uint32(s)) + _8512 + 32] = mem[_16323]
                s = s + 1
                continue 
            _12463 = mem[64]
            mem[mem[64]] = 160
            _12711 = mem[96]
            mem[mem[64] + 160] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 192
            u = mem[64] + 192
            while idx < _12711:
                mem[u] = t + -_12463 - 192
                _15351 = mem[s]
                _15423 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _15351 + 32
                x = t + 32
                while v < _15423:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _15423 + 1
                w = _15351 + (32 * _15423) + 64
                t = t + (32 * _15423) + 32
                u = u + 32
                continue 
            mem[_12463 + 32] = t - _12463
            _15519 = mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
            idx = 0
            s = _4106 + (32 * ('cd', 4).length) + 64
            u = t + (32 * _15519) + 32
            v = t + 32
            while idx < _15519:
                mem[v] = u + -t - 32
                _16523 = mem[s]
                _16535 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _16523 + 32
                x = u + 32
                while t < _16535:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _16535 + 1
                w = _16523 + (32 * _16535) + 64
                u = u + (32 * _16535) + 32
                v = v + 32
                continue 
            mem[_12463 + 64] = u - _12463
            _16567 = mem[_4106]
            mem[u] = mem[_4106]
            mem[u + 32 len 32 * _16567] = mem[_4106 + 32 len 32 * _16567]
            mem[_12463 + 96] = u + (32 * _16567) + -_12463 + 32
            _16775 = mem[_8414]
            mem[u + (32 * _16567) + 32] = mem[_8414]
            mem[u + (32 * _16567) + 64 len 32 * _16775] = mem[_8414 + 32 len 32 * _16775]
            mem[_12463 + 128] = u + (32 * _16567) + (32 * _16775) + -_12463 + 64
            _16887 = mem[_8512]
            mem[u + (32 * _16567) + (32 * _16775) + 64] = mem[_8512]
            mem[u + (32 * _16567) + (32 * _16775) + 96 len 32 * _16887] = mem[_8512 + 32 len 32 * _16887]
            return memory
              from mem[64]
               len u + (32 * _16567) + (32 * _16775) + (32 * _16887) + -mem[64] + 96
        mem[_8512 + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 36).length
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _13310 = mem[64]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _13550 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15666 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15666] == mem[_15666 + 12 len 20]
                        require s < mem[_13310]
                        mem[(32 * s) + _13310 + 32] = mem[_15666 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16287 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13550]
                        mem[(32 * s) + _13550 + 32] = mem[_16287]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13310
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13550
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15665 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15665]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16001 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8414]
                    mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16001]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16325 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8512]
                    mem[(32 * uint32(idx)) + _8512 + 32] = mem[_16325]
                else:
                    mem[_13550 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15668 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15668] == mem[_15668 + 12 len 20]
                        require s < mem[_13310]
                        mem[(32 * s) + _13310 + 32] = mem[_15668 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16288 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13550]
                        mem[(32 * s) + _13550 + 32] = mem[_16288]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13310
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13550
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15667 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15667]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16003 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8414]
                    mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16003]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16326 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8512]
                    mem[(32 * uint32(idx)) + _8512 + 32] = mem[_16326]
                idx = idx + 1
                continue 
            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15670 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15670] == mem[_15670 + 12 len 20]
                    require s < mem[_13310]
                    mem[(32 * s) + _13310 + 32] = mem[_15670 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16289 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_13310 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _13310 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16289]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _13310
                require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13310 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15669 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4106]
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15669]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16005 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8414]
                mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16005]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16327 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8512]
                mem[(32 * uint32(idx)) + _8512 + 32] = mem[_16327]
                idx = idx + 1
                continue 
            mem[_13310 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            s = 0
            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15672 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15672] == mem[_15672 + 12 len 20]
                require s < mem[_13310]
                mem[(32 * s) + _13310 + 32] = mem[_15672 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16290 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require s < mem[_13310 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                mem[(32 * s) + _13310 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16290]
                s = s + 1
                continue 
            require uint32(s) < mem[96]
            mem[(32 * uint32(s)) + 128] = _13310
            require uint32(s) < mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _13310 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15671 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_4106]
            mem[(32 * uint32(s)) + _4106 + 32] = mem[_15671]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16007 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_8414]
            mem[(32 * uint32(s)) + _8414 + 32] = mem[_16007]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16328 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_8512]
            mem[(32 * uint32(s)) + _8512 + 32] = mem[_16328]
            s = s + 1
            continue 
        _12464 = mem[64]
        mem[mem[64]] = 160
        _12712 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 192
        u = mem[64] + 192
        while idx < _12712:
            mem[u] = t + -_12464 - 192
            _15360 = mem[s]
            _15428 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _15360 + 32
            x = t + 32
            while v < _15428:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            v = _15428 + 1
            w = _15360 + (32 * _15428) + 64
            t = t + (32 * _15428) + 32
            u = u + 32
            continue 
        mem[_12464 + 32] = t - _12464
        _15532 = mem[_4106 + (32 * ('cd', 4).length) + 32]
        mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
        idx = 0
        s = _4106 + (32 * ('cd', 4).length) + 64
        u = t + (32 * _15532) + 32
        v = t + 32
        while idx < _15532:
            mem[v] = u + -t - 32
            _16525 = mem[s]
            _16536 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _16525 + 32
            x = u + 32
            while t < _16536:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            t = _16536 + 1
            w = _16525 + (32 * _16536) + 64
            u = u + (32 * _16536) + 32
            v = v + 32
            continue 
        mem[_12464 + 64] = u - _12464
        _16568 = mem[_4106]
        mem[u] = mem[_4106]
        mem[u + 32 len 32 * _16568] = mem[_4106 + 32 len 32 * _16568]
        mem[_12464 + 96] = u + (32 * _16568) + -_12464 + 32
        _16776 = mem[_8414]
        mem[u + (32 * _16568) + 32] = mem[_8414]
        mem[u + (32 * _16568) + 64 len 32 * _16776] = mem[_8414 + 32 len 32 * _16776]
        mem[_12464 + 128] = u + (32 * _16568) + (32 * _16776) + -_12464 + 64
        _16888 = mem[_8512]
        mem[u + (32 * _16568) + (32 * _16776) + 64] = mem[_8512]
        mem[u + (32 * _16568) + (32 * _16776) + 96 len 32 * _16888] = mem[_8512 + 32 len 32 * _16888]
        return memory
          from mem[64]
           len u + (32 * _16568) + (32 * _16776) + (32 * _16888) + -mem[64] + 96
    mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
    mem[64] = mem[64] + (64 * ('cd', 4).length) + 64
    if not ('cd', 4).length:
        idx = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 36).length
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _13312 = mem[64]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _13552 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15675 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15675] == mem[_15675 + 12 len 20]
                        require s < mem[_13312]
                        mem[(32 * s) + _13312 + 32] = mem[_15675 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16291 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13552]
                        mem[(32 * s) + _13552 + 32] = mem[_16291]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13312
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13552
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15674 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15674]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16010 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8414]
                    mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16010]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16330 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8414 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _8414 + (32 * ('cd', 4).length) + 64] = mem[_16330]
                else:
                    mem[_13552 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15677 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_15677] == mem[_15677 + 12 len 20]
                        require s < mem[_13312]
                        mem[(32 * s) + _13312 + 32] = mem[_15677 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16292 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_13552]
                        mem[(32 * s) + _13552 + 32] = mem[_16292]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _13312
                    require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13552
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15676 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_4106]
                    mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15676]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16012 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8414]
                    mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16012]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16331 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_8414 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _8414 + (32 * ('cd', 4).length) + 64] = mem[_16331]
                idx = idx + 1
                continue 
            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15679 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15679] == mem[_15679 + 12 len 20]
                    require s < mem[_13312]
                    mem[(32 * s) + _13312 + 32] = mem[_15679 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16293 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_13312 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _13312 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16293]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _13312
                require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13312 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15678 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4106]
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15678]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16014 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8414]
                mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16014]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16332 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8414 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _8414 + (32 * ('cd', 4).length) + 64] = mem[_16332]
                idx = idx + 1
                continue 
            mem[_13312 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            s = 0
            while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15681 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15681] == mem[_15681 + 12 len 20]
                require s < mem[_13312]
                mem[(32 * s) + _13312 + 32] = mem[_15681 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16294 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require s < mem[_13312 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
                mem[(32 * s) + _13312 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16294]
                s = s + 1
                continue 
            require uint32(s) < mem[96]
            mem[(32 * uint32(s)) + 128] = _13312
            require uint32(s) < mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _13312 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15680 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_4106]
            mem[(32 * uint32(s)) + _4106 + 32] = mem[_15680]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16016 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_8414]
            mem[(32 * uint32(s)) + _8414 + 32] = mem[_16016]
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16333 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(s) < mem[_8414 + (32 * ('cd', 4).length) + 32]
            mem[(32 * uint32(s)) + _8414 + (32 * ('cd', 4).length) + 64] = mem[_16333]
            s = s + 1
            continue 
        _12465 = mem[64]
        mem[mem[64]] = 160
        _12713 = mem[96]
        mem[mem[64] + 160] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 192
        u = mem[64] + 192
        while idx < _12713:
            mem[u] = t + -_12465 - 192
            _15369 = mem[s]
            _15433 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _15369 + 32
            x = t + 32
            while v < _15433:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            v = _15433 + 1
            w = _15369 + (32 * _15433) + 64
            t = t + (32 * _15433) + 32
            u = u + 32
            continue 
        mem[_12465 + 32] = t - _12465
        _15545 = mem[_4106 + (32 * ('cd', 4).length) + 32]
        mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
        idx = 0
        s = _4106 + (32 * ('cd', 4).length) + 64
        u = t + (32 * _15545) + 32
        v = t + 32
        while idx < _15545:
            mem[v] = u + -t - 32
            _16527 = mem[s]
            _16537 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _16527 + 32
            x = u + 32
            while t < _16537:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            t = _16537 + 1
            w = _16527 + (32 * _16537) + 64
            u = u + (32 * _16537) + 32
            v = v + 32
            continue 
        mem[_12465 + 64] = u - _12465
        _16569 = mem[_4106]
        mem[u] = mem[_4106]
        mem[u + 32 len 32 * _16569] = mem[_4106 + 32 len 32 * _16569]
        mem[_12465 + 96] = u + (32 * _16569) + -_12465 + 32
        _16777 = mem[_8414]
        mem[u + (32 * _16569) + 32] = mem[_8414]
        mem[u + (32 * _16569) + 64 len 32 * _16777] = mem[_8414 + 32 len 32 * _16777]
        mem[_12465 + 128] = u + (32 * _16569) + (32 * _16777) + -_12465 + 64
        _16889 = mem[_8414 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _16569) + (32 * _16777) + 64] = mem[_8414 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _16569) + (32 * _16777) + 96 len 32 * _16889] = mem[_8414 + (32 * ('cd', 4).length) + 64 len 32 * _16889]
        return memory
          from mem[64]
           len u + (32 * _16569) + (32 * _16777) + (32 * _16889) + -mem[64] + 96
    mem[_8414 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    idx = 0
    while ('cd', 4).length > uint32(idx):
        require uint32(idx) < ('cd', 36).length
        require uint32(idx) < ('cd', 4).length
        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
        _13314 = mem[64]
        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _13554 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = _13554 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15684 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15684] == mem[_15684 + 12 len 20]
                    require s < mem[_13314]
                    mem[(32 * s) + _13314 + 32] = mem[_15684 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16295 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_13554]
                    mem[(32 * s) + _13554 + 32] = mem[_16295]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _13314
                require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13554
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15683 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4106]
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15683]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16019 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8414]
                mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16019]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16335 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8414 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _8414 + (32 * ('cd', 4).length) + 64] = mem[_16335]
            else:
                mem[_13554 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15686 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_15686] == mem[_15686 + 12 len 20]
                    require s < mem[_13314]
                    mem[(32 * s) + _13314 + 32] = mem[_15686 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16296 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_13554]
                    mem[(32 * s) + _13554 + 32] = mem[_16296]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _13314
                require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13554
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15685 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_4106]
                mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15685]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16021 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8414]
                mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16021]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16336 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_8414 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _8414 + (32 * ('cd', 4).length) + 64] = mem[_16336]
            idx = idx + 1
            continue 
        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
        mem[64] = _13314 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
            s = 0
            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15688 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_15688] == mem[_15688 + 12 len 20]
                require s < mem[_13314]
                mem[(32 * s) + _13314 + 32] = mem[_15688 + 12 len 20]
                mem[mem[64] + 4] = s
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                        gas gas_remaining wei
                       args s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _16297 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require s < mem[_13314 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                mem[(32 * s) + _13314 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_16297]
                s = s + 1
                continue 
            require uint32(idx) < mem[96]
            mem[(32 * uint32(idx)) + 128] = _13314
            require uint32(idx) < mem[_4106 + (32 * ('cd', 4).length) + 32]
            mem[(32 * uint32(idx)) + _4106 + (32 * ('cd', 4).length) + 64] = _13314 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15687 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(idx) < mem[_4106]
            mem[(32 * uint32(idx)) + _4106 + 32] = mem[_15687]
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16023 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(idx) < mem[_8414]
            mem[(32 * uint32(idx)) + _8414 + 32] = mem[_16023]
            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16337 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require uint32(idx) < mem[_8414 + (32 * ('cd', 4).length) + 32]
            mem[(32 * uint32(idx)) + _8414 + (32 * ('cd', 4).length) + 64] = mem[_16337]
            idx = idx + 1
            continue 
        mem[_13314 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
        s = 0
        while s < cd[((32 * uint32(s)) + cd[36] + 36)]:
            mem[mem[64] + 4] = s
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).coins(uint256 arg1) with:
                    gas gas_remaining wei
                   args s
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15690 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_15690] == mem[_15690 + 12 len 20]
            require s < mem[_13314]
            mem[(32 * s) + _13314 + 32] = mem[_15690 + 12 len 20]
            mem[mem[64] + 4] = s
            require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
            staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).balances(uint256 arg1) with:
                    gas gas_remaining wei
                   args s
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _16298 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require s < mem[_13314 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32]
            mem[(32 * s) + _13314 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 64] = mem[_16298]
            s = s + 1
            continue 
        require uint32(s) < mem[96]
        mem[(32 * uint32(s)) + 128] = _13314
        require uint32(s) < mem[_4106 + (32 * ('cd', 4).length) + 32]
        mem[(32 * uint32(s)) + _4106 + (32 * ('cd', 4).length) + 64] = _13314 + (32 * cd[((32 * uint32(s)) + cd[36] + 36)]) + 32
        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).A() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _15689 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require uint32(s) < mem[_4106]
        mem[(32 * uint32(s)) + _4106 + 32] = mem[_15689]
        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).fee() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _16025 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require uint32(s) < mem[_8414]
        mem[(32 * uint32(s)) + _8414 + 32] = mem[_16025]
        require ext_code.size(address(cd[((32 * uint32(s)) + cd[4] + 36)]))
        staticcall address(cd[((32 * uint32(s)) + cd[4] + 36)]).get_virtual_price() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _16338 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require uint32(s) < mem[_8414 + (32 * ('cd', 4).length) + 32]
        mem[(32 * uint32(s)) + _8414 + (32 * ('cd', 4).length) + 64] = mem[_16338]
        s = s + 1
        continue 
    _12466 = mem[64]
    mem[mem[64]] = 160
    _12714 = mem[96]
    mem[mem[64] + 160] = mem[96]
    idx = 0
    s = 128
    t = mem[64] + (32 * mem[96]) + 192
    u = mem[64] + 192
    while idx < _12714:
        mem[u] = t + -_12466 - 192
        _15378 = mem[s]
        _15438 = mem[mem[s]]
        mem[t] = mem[mem[s]]
        v = 0
        w = _15378 + 32
        x = t + 32
        while v < _15438:
            mem[x] = mem[w + 12 len 20]
            v = v + 1
            w = w + 32
            x = x + 32
            continue 
        v = _15438 + 1
        w = _15378 + (32 * _15438) + 64
        t = t + (32 * _15438) + 32
        u = u + 32
        continue 
    mem[_12466 + 32] = t - _12466
    _15558 = mem[_4106 + (32 * ('cd', 4).length) + 32]
    mem[t] = mem[_4106 + (32 * ('cd', 4).length) + 32]
    idx = 0
    s = _4106 + (32 * ('cd', 4).length) + 64
    u = t + (32 * _15558) + 32
    v = t + 32
    while idx < _15558:
        mem[v] = u + -t - 32
        _16529 = mem[s]
        _16538 = mem[mem[s]]
        mem[u] = mem[mem[s]]
        t = 0
        w = _16529 + 32
        x = u + 32
        while t < _16538:
            mem[x] = mem[w]
            t = t + 1
            w = w + 32
            x = x + 32
            continue 
        t = _16538 + 1
        w = _16529 + (32 * _16538) + 64
        u = u + (32 * _16538) + 32
        v = v + 32
        continue 
    mem[_12466 + 64] = u - _12466
    _16570 = mem[_4106]
    mem[u] = mem[_4106]
    mem[u + 32 len 32 * _16570] = mem[_4106 + 32 len 32 * _16570]
    mem[_12466 + 96] = u + (32 * _16570) + -_12466 + 32
    _16778 = mem[_8414]
    mem[u + (32 * _16570) + 32] = mem[_8414]
    mem[u + (32 * _16570) + 64 len 32 * _16778] = mem[_8414 + 32 len 32 * _16778]
    mem[_12466 + 128] = u + (32 * _16570) + (32 * _16778) + -_12466 + 64
    _16890 = mem[_8414 + (32 * ('cd', 4).length) + 32]
    mem[u + (32 * _16570) + (32 * _16778) + 64] = mem[_8414 + (32 * ('cd', 4).length) + 32]
    mem[u + (32 * _16570) + (32 * _16778) + 96 len 32 * _16890] = mem[_8414 + (32 * ('cd', 4).length) + 64 len 32 * _16890]
    return memory
      from mem[64]
       len u + (32 * _16570) + (32 * _16778) + (32 * _16890) + -mem[64] + 96
}

function sub_68dbc76f(?) {
    require calldata.size - 4 >= 96
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    require ('cd', 4).length <= test266151307()
    require cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require cd[68] + (32 * ('cd', 68).length) + 36 <= calldata.size
    require ('cd', 4).length <= test266151307()
    mem[96] = ('cd', 4).length
    mem[64] = (32 * ('cd', 4).length) + 128
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[(32 * ('cd', 4).length) + 128] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
            mem[64] = (98 * ('cd', 4).length) + 192
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
                if not ('cd', 4).length:
                    require ('cd', 4).length <= test266151307()
                    mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                    if not ('cd', 4).length:
                        require ('cd', 4).length <= test266151307()
                        mem[(164 * ('cd', 4).length) + 256] = ('cd', 4).length
                        mem[64] = (197 * ('cd', 4).length) + 288
                        if not ('cd', 4).length:
                            idx = 0
                            s = 0
                            s = 0
                            s = 0
                            while ('cd', 4).length > uint32(idx):
                                require uint32(idx) < ('cd', 36).length
                                require uint32(idx) < ('cd', 4).length
                                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                                require uint32(idx) < ('cd', 68).length
                                require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                _9883 = mem[64]
                                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                    _9962 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        s = 0
                                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                            mem[mem[64] + 4] = s
                                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                    gas gas_remaining wei
                                                   args s
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _19696 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_19696] == mem[_19696 + 12 len 20]
                                            require s < mem[_9883]
                                            mem[(32 * s) + _9883 + 32] = mem[_19696 + 12 len 20]
                                            mem[mem[64] + 4] = s
                                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                    gas gas_remaining wei
                                                   args s
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _21115 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require s < mem[_9962]
                                            mem[(32 * s) + _9962 + 32] = mem[_21115]
                                            s = s + 1
                                            continue 
                                        require uint32(idx) < mem[96]
                                        mem[(32 * uint32(idx)) + 128] = _9883
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19584 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19584]
                                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9962
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _20396 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20396]
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21222 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21222]
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _22068 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                        mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22068]
                                    else:
                                        mem[_9962 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                        s = 0
                                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                            mem[mem[64] + 4] = s
                                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                    gas gas_remaining wei
                                                   args s
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _19697 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_19697] == mem[_19697 + 12 len 20]
                                            require s < mem[_9883]
                                            mem[(32 * s) + _9883 + 32] = mem[_19697 + 12 len 20]
                                            mem[mem[64] + 4] = s
                                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                    gas gas_remaining wei
                                                   args s
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _21116 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require s < mem[_9962]
                                            mem[(32 * s) + _9962 + 32] = mem[_21116]
                                            s = s + 1
                                            continue 
                                        require uint32(idx) < mem[96]
                                        mem[(32 * uint32(idx)) + 128] = _9883
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19585 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19585]
                                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9962
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _20398 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20398]
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21223 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21223]
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _22069 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                        mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22069]
                                else:
                                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        s = 0
                                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                            mem[mem[64] + 4] = s
                                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                    gas gas_remaining wei
                                                   args s
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _19698 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_19698] == mem[_19698 + 12 len 20]
                                            require s < mem[_9883]
                                            mem[(32 * s) + _9883 + 32] = mem[_19698 + 12 len 20]
                                            mem[mem[64] + 4] = s
                                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                    gas gas_remaining wei
                                                   args s
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _21117 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require s < mem[_9883 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                            mem[(32 * s) + _9883 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21117]
                                            s = s + 1
                                            continue 
                                        require uint32(idx) < mem[96]
                                        mem[(32 * uint32(idx)) + 128] = _9883
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19586 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19586]
                                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9883 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _20400 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20400]
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21224 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21224]
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _22070 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                        mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22070]
                                    else:
                                        mem[_9883 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                        s = 0
                                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                            mem[mem[64] + 4] = s
                                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                    gas gas_remaining wei
                                                   args s
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _19699 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require mem[_19699] == mem[_19699 + 12 len 20]
                                            require s < mem[_9883]
                                            mem[(32 * s) + _9883 + 32] = mem[_19699 + 12 len 20]
                                            mem[mem[64] + 4] = s
                                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                    gas gas_remaining wei
                                                   args s
                                            mem[mem[64]] = ext_call.return_data[0]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            _21118 = mem[64]
                                            mem[64] = mem[64] + ceil32(return_data.size)
                                            require return_data.size >= 32
                                            require s < mem[_9883 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                            mem[(32 * s) + _9883 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21118]
                                            s = s + 1
                                            continue 
                                        require uint32(idx) < mem[96]
                                        mem[(32 * uint32(idx)) + 128] = _9883
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19587 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19587]
                                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9883 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _20402 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20402]
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21225 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21225]
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                                gas gas_remaining wei
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _22071 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                        mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22071]
                                idx = idx + 1
                                s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                                s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                                continue 
                            _9600 = mem[64]
                            mem[mem[64]] = 192
                            _9619 = mem[96]
                            mem[mem[64] + 192] = mem[96]
                            idx = 0
                            s = 128
                            t = mem[64] + (32 * mem[96]) + 224
                            u = mem[64] + 224
                            while idx < _9619:
                                mem[u] = t + -_9600 - 224
                                _19181 = mem[s]
                                _19325 = mem[mem[s]]
                                mem[t] = mem[mem[s]]
                                v = 0
                                w = _19181 + 32
                                x = t + 32
                                while v < _19325:
                                    mem[x] = mem[w + 12 len 20]
                                    v = v + 1
                                    w = w + 32
                                    x = x + 32
                                    continue 
                                v = _19325 + 1
                                w = _19181 + (32 * _19325) + 64
                                t = t + (32 * _19325) + 32
                                u = u + 32
                                continue 
                            mem[_9600 + 32] = t - _9600
                            _19501 = mem[(64 * ('cd', 4).length) + 160]
                            mem[t] = mem[(64 * ('cd', 4).length) + 160]
                            idx = 0
                            s = (64 * ('cd', 4).length) + 192
                            u = t + (32 * _19501) + 32
                            v = t + 32
                            while idx < _19501:
                                mem[v] = u + -t - 32
                                _28651 = mem[s]
                                _28971 = mem[mem[s]]
                                mem[u] = mem[mem[s]]
                                t = 0
                                w = _28651 + 32
                                x = u + 32
                                while t < _28971:
                                    mem[x] = mem[w]
                                    t = t + 1
                                    w = w + 32
                                    x = x + 32
                                    continue 
                                t = _28971 + 1
                                w = _28651 + (32 * _28971) + 64
                                u = u + (32 * _28971) + 32
                                v = v + 32
                                continue 
                            mem[_9600 + 64] = u - _9600
                            _29291 = mem[(32 * ('cd', 4).length) + 128]
                            mem[u] = mem[(32 * ('cd', 4).length) + 128]
                            mem[u + 32 len 32 * _29291] = mem[(32 * ('cd', 4).length) + 160 len 32 * _29291]
                            mem[_9600 + 96] = u + (32 * _29291) + -_9600 + 32
                            _36267 = mem[(98 * ('cd', 4).length) + 192]
                            mem[u + (32 * _29291) + 32] = mem[(98 * ('cd', 4).length) + 192]
                            mem[u + (32 * _29291) + 64 len 32 * _36267] = mem[(98 * ('cd', 4).length) + 224 len 32 * _36267]
                            mem[_9600 + 128] = u + (32 * _29291) + (32 * _36267) + -_9600 + 64
                            _38843 = mem[(131 * ('cd', 4).length) + 224]
                            mem[u + (32 * _29291) + (32 * _36267) + 64] = mem[(131 * ('cd', 4).length) + 224]
                            mem[u + (32 * _29291) + (32 * _36267) + 96 len 32 * _38843] = mem[(131 * ('cd', 4).length) + 256 len 32 * _38843]
                            mem[_9600 + 160] = u + (32 * _29291) + (32 * _36267) + (32 * _38843) + -_9600 + 96
                            _39387 = mem[(164 * ('cd', 4).length) + 256]
                            mem[u + (32 * _29291) + (32 * _36267) + (32 * _38843) + 96] = mem[(164 * ('cd', 4).length) + 256]
                            mem[u + (32 * _29291) + (32 * _36267) + (32 * _38843) + 128 len 32 * _39387] = mem[(164 * ('cd', 4).length) + 288 len 32 * _39387]
                            return memory
                              from mem[64]
                               len u + (32 * _29291) + (32 * _36267) + (32 * _38843) + (32 * _39387) + -mem[64] + 128
                        mem[(164 * ('cd', 4).length) + 288 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                        idx = 0
                        s = 0
                        s = 0
                        s = 0
                        while ('cd', 4).length > uint32(idx):
                            require uint32(idx) < ('cd', 36).length
                            require uint32(idx) < ('cd', 4).length
                            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                            require uint32(idx) < ('cd', 68).length
                            require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _9884 = mem[64]
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                _9963 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19701 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_19701] == mem[_19701 + 12 len 20]
                                        require s < mem[_9884]
                                        mem[(32 * s) + _9884 + 32] = mem[_19701 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21119 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_9963]
                                        mem[(32 * s) + _9963 + 32] = mem[_21119]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _9884
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19589 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19589]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9963
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _20405 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20405]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21227 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21227]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22073 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                    mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22073]
                                else:
                                    mem[_9963 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19702 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_19702] == mem[_19702 + 12 len 20]
                                        require s < mem[_9884]
                                        mem[(32 * s) + _9884 + 32] = mem[_19702 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21120 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_9963]
                                        mem[(32 * s) + _9963 + 32] = mem[_21120]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _9884
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19590 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19590]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9963
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _20407 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20407]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21228 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21228]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22074 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                    mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22074]
                            else:
                                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19703 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_19703] == mem[_19703 + 12 len 20]
                                        require s < mem[_9884]
                                        mem[(32 * s) + _9884 + 32] = mem[_19703 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21121 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_9884 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                        mem[(32 * s) + _9884 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21121]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _9884
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19591 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19591]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9884 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _20409 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20409]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21229 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21229]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22075 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                    mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22075]
                                else:
                                    mem[_9884 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19704 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_19704] == mem[_19704 + 12 len 20]
                                        require s < mem[_9884]
                                        mem[(32 * s) + _9884 + 32] = mem[_19704 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21122 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_9884 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                        mem[(32 * s) + _9884 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21122]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _9884
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19592 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19592]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9884 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _20411 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20411]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21230 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21230]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22076 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                    mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22076]
                            idx = idx + 1
                            s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                            s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                            continue 
                        _9601 = mem[64]
                        mem[mem[64]] = 192
                        _9620 = mem[96]
                        mem[mem[64] + 192] = mem[96]
                        idx = 0
                        s = 128
                        t = mem[64] + (32 * mem[96]) + 224
                        u = mem[64] + 224
                        while idx < _9620:
                            mem[u] = t + -_9601 - 224
                            _19190 = mem[s]
                            _19334 = mem[mem[s]]
                            mem[t] = mem[mem[s]]
                            v = 0
                            w = _19190 + 32
                            x = t + 32
                            while v < _19334:
                                mem[x] = mem[w + 12 len 20]
                                v = v + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            v = _19334 + 1
                            w = _19190 + (32 * _19334) + 64
                            t = t + (32 * _19334) + 32
                            u = u + 32
                            continue 
                        mem[_9601 + 32] = t - _9601
                        _19506 = mem[(64 * ('cd', 4).length) + 160]
                        mem[t] = mem[(64 * ('cd', 4).length) + 160]
                        idx = 0
                        s = (64 * ('cd', 4).length) + 192
                        u = t + (32 * _19506) + 32
                        v = t + 32
                        while idx < _19506:
                            mem[v] = u + -t - 32
                            _28653 = mem[s]
                            _28972 = mem[mem[s]]
                            mem[u] = mem[mem[s]]
                            t = 0
                            w = _28653 + 32
                            x = u + 32
                            while t < _28972:
                                mem[x] = mem[w]
                                t = t + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            t = _28972 + 1
                            w = _28653 + (32 * _28972) + 64
                            u = u + (32 * _28972) + 32
                            v = v + 32
                            continue 
                        mem[_9601 + 64] = u - _9601
                        _29292 = mem[(32 * ('cd', 4).length) + 128]
                        mem[u] = mem[(32 * ('cd', 4).length) + 128]
                        mem[u + 32 len 32 * _29292] = mem[(32 * ('cd', 4).length) + 160 len 32 * _29292]
                        mem[_9601 + 96] = u + (32 * _29292) + -_9601 + 32
                        _36268 = mem[(98 * ('cd', 4).length) + 192]
                        mem[u + (32 * _29292) + 32] = mem[(98 * ('cd', 4).length) + 192]
                        mem[u + (32 * _29292) + 64 len 32 * _36268] = mem[(98 * ('cd', 4).length) + 224 len 32 * _36268]
                        mem[_9601 + 128] = u + (32 * _29292) + (32 * _36268) + -_9601 + 64
                        _38844 = mem[(131 * ('cd', 4).length) + 224]
                        mem[u + (32 * _29292) + (32 * _36268) + 64] = mem[(131 * ('cd', 4).length) + 224]
                        mem[u + (32 * _29292) + (32 * _36268) + 96 len 32 * _38844] = mem[(131 * ('cd', 4).length) + 256 len 32 * _38844]
                        mem[_9601 + 160] = u + (32 * _29292) + (32 * _36268) + (32 * _38844) + -_9601 + 96
                        _39388 = mem[(164 * ('cd', 4).length) + 256]
                        mem[u + (32 * _29292) + (32 * _36268) + (32 * _38844) + 96] = mem[(164 * ('cd', 4).length) + 256]
                        mem[u + (32 * _29292) + (32 * _36268) + (32 * _38844) + 128 len 32 * _39388] = mem[(164 * ('cd', 4).length) + 288 len 32 * _39388]
                        return memory
                          from mem[64]
                           len u + (32 * _29292) + (32 * _36268) + (32 * _38844) + (32 * _39388) + -mem[64] + 128
                    mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                    require ('cd', 4).length <= test266151307()
                    mem[(164 * ('cd', 4).length) + 256] = ('cd', 4).length
                    mem[64] = (197 * ('cd', 4).length) + 288
                    if not ('cd', 4).length:
                        idx = 0
                        s = 0
                        s = 0
                        s = 0
                        while ('cd', 4).length > uint32(idx):
                            require uint32(idx) < ('cd', 36).length
                            require uint32(idx) < ('cd', 4).length
                            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                            require uint32(idx) < ('cd', 68).length
                            require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _9885 = mem[64]
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                _9964 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19706 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_19706] == mem[_19706 + 12 len 20]
                                        require s < mem[_9885]
                                        mem[(32 * s) + _9885 + 32] = mem[_19706 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21123 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_9964]
                                        mem[(32 * s) + _9964 + 32] = mem[_21123]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _9885
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19594 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19594]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9964
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _20414 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20414]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21232 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21232]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22078 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                    mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22078]
                                else:
                                    mem[_9964 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19707 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_19707] == mem[_19707 + 12 len 20]
                                        require s < mem[_9885]
                                        mem[(32 * s) + _9885 + 32] = mem[_19707 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21124 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_9964]
                                        mem[(32 * s) + _9964 + 32] = mem[_21124]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _9885
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19595 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19595]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9964
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _20416 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20416]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21233 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21233]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22079 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                    mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22079]
                            else:
                                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19708 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_19708] == mem[_19708 + 12 len 20]
                                        require s < mem[_9885]
                                        mem[(32 * s) + _9885 + 32] = mem[_19708 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21125 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_9885 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                        mem[(32 * s) + _9885 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21125]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _9885
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19596 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19596]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9885 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _20418 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20418]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21234 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21234]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22080 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                    mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22080]
                                else:
                                    mem[_9885 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19709 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_19709] == mem[_19709 + 12 len 20]
                                        require s < mem[_9885]
                                        mem[(32 * s) + _9885 + 32] = mem[_19709 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21126 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_9885 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                        mem[(32 * s) + _9885 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21126]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _9885
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19597 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19597]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9885 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _20420 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20420]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21235 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21235]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22081 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                    mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22081]
                            idx = idx + 1
                            s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                            s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                            continue 
                        _9602 = mem[64]
                        mem[mem[64]] = 192
                        _9621 = mem[96]
                        mem[mem[64] + 192] = mem[96]
                        idx = 0
                        s = 128
                        t = mem[64] + (32 * mem[96]) + 224
                        u = mem[64] + 224
                        while idx < _9621:
                            mem[u] = t + -_9602 - 224
                            _19199 = mem[s]
                            _19343 = mem[mem[s]]
                            mem[t] = mem[mem[s]]
                            v = 0
                            w = _19199 + 32
                            x = t + 32
                            while v < _19343:
                                mem[x] = mem[w + 12 len 20]
                                v = v + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            v = _19343 + 1
                            w = _19199 + (32 * _19343) + 64
                            t = t + (32 * _19343) + 32
                            u = u + 32
                            continue 
                        mem[_9602 + 32] = t - _9602
                        _19511 = mem[(64 * ('cd', 4).length) + 160]
                        mem[t] = mem[(64 * ('cd', 4).length) + 160]
                        idx = 0
                        s = (64 * ('cd', 4).length) + 192
                        u = t + (32 * _19511) + 32
                        v = t + 32
                        while idx < _19511:
                            mem[v] = u + -t - 32
                            _28655 = mem[s]
                            _28973 = mem[mem[s]]
                            mem[u] = mem[mem[s]]
                            t = 0
                            w = _28655 + 32
                            x = u + 32
                            while t < _28973:
                                mem[x] = mem[w]
                                t = t + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            t = _28973 + 1
                            w = _28655 + (32 * _28973) + 64
                            u = u + (32 * _28973) + 32
                            v = v + 32
                            continue 
                        mem[_9602 + 64] = u - _9602
                        _29293 = mem[(32 * ('cd', 4).length) + 128]
                        mem[u] = mem[(32 * ('cd', 4).length) + 128]
                        mem[u + 32 len 32 * _29293] = mem[(32 * ('cd', 4).length) + 160 len 32 * _29293]
                        mem[_9602 + 96] = u + (32 * _29293) + -_9602 + 32
                        _36269 = mem[(98 * ('cd', 4).length) + 192]
                        mem[u + (32 * _29293) + 32] = mem[(98 * ('cd', 4).length) + 192]
                        mem[u + (32 * _29293) + 64 len 32 * _36269] = mem[(98 * ('cd', 4).length) + 224 len 32 * _36269]
                        mem[_9602 + 128] = u + (32 * _29293) + (32 * _36269) + -_9602 + 64
                        _38845 = mem[(131 * ('cd', 4).length) + 224]
                        mem[u + (32 * _29293) + (32 * _36269) + 64] = mem[(131 * ('cd', 4).length) + 224]
                        mem[u + (32 * _29293) + (32 * _36269) + 96 len 32 * _38845] = mem[(131 * ('cd', 4).length) + 256 len 32 * _38845]
                        mem[_9602 + 160] = u + (32 * _29293) + (32 * _36269) + (32 * _38845) + -_9602 + 96
                        _39389 = mem[(164 * ('cd', 4).length) + 256]
                        mem[u + (32 * _29293) + (32 * _36269) + (32 * _38845) + 96] = mem[(164 * ('cd', 4).length) + 256]
                        mem[u + (32 * _29293) + (32 * _36269) + (32 * _38845) + 128 len 32 * _39389] = mem[(164 * ('cd', 4).length) + 288 len 32 * _39389]
                        return memory
                          from mem[64]
                           len u + (32 * _29293) + (32 * _36269) + (32 * _38845) + (32 * _39389) + -mem[64] + 128
                    mem[(164 * ('cd', 4).length) + 288 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require uint32(idx) < ('cd', 68).length
                        require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _9886 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _9965 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _9965 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19711 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19711] == mem[_19711 + 12 len 20]
                                    require s < mem[_9886]
                                    mem[(32 * s) + _9886 + 32] = mem[_19711 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21127 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9965]
                                    mem[(32 * s) + _9965 + 32] = mem[_21127]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9886
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19599 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19599]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9965
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20423 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20423]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21237 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21237]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22083 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22083]
                            else:
                                mem[_9965 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19712 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19712] == mem[_19712 + 12 len 20]
                                    require s < mem[_9886]
                                    mem[(32 * s) + _9886 + 32] = mem[_19712 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21128 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9965]
                                    mem[(32 * s) + _9965 + 32] = mem[_21128]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9886
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19600 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19600]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9965
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20425 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20425]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21238 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21238]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22084 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22084]
                        else:
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _9886 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19713 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19713] == mem[_19713 + 12 len 20]
                                    require s < mem[_9886]
                                    mem[(32 * s) + _9886 + 32] = mem[_19713 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21129 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9886 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _9886 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21129]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9886
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19601 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19601]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9886 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20427 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20427]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21239 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21239]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22085 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22085]
                            else:
                                mem[_9886 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19714 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19714] == mem[_19714 + 12 len 20]
                                    require s < mem[_9886]
                                    mem[(32 * s) + _9886 + 32] = mem[_19714 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21130 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9886 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _9886 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21130]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9886
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19602 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19602]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9886 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20429 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20429]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21240 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21240]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22086 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22086]
                        idx = idx + 1
                        s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                        continue 
                    _9603 = mem[64]
                    mem[mem[64]] = 192
                    _9622 = mem[96]
                    mem[mem[64] + 192] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 224
                    u = mem[64] + 224
                    while idx < _9622:
                        mem[u] = t + -_9603 - 224
                        _19208 = mem[s]
                        _19352 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _19208 + 32
                        x = t + 32
                        while v < _19352:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _19352 + 1
                        w = _19208 + (32 * _19352) + 64
                        t = t + (32 * _19352) + 32
                        u = u + 32
                        continue 
                    mem[_9603 + 32] = t - _9603
                    _19516 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _19516) + 32
                    v = t + 32
                    while idx < _19516:
                        mem[v] = u + -t - 32
                        _28657 = mem[s]
                        _28974 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _28657 + 32
                        x = u + 32
                        while t < _28974:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _28974 + 1
                        w = _28657 + (32 * _28974) + 64
                        u = u + (32 * _28974) + 32
                        v = v + 32
                        continue 
                    mem[_9603 + 64] = u - _9603
                    _29294 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _29294] = mem[(32 * ('cd', 4).length) + 160 len 32 * _29294]
                    mem[_9603 + 96] = u + (32 * _29294) + -_9603 + 32
                    _36270 = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _29294) + 32] = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _29294) + 64 len 32 * _36270] = mem[(98 * ('cd', 4).length) + 224 len 32 * _36270]
                    mem[_9603 + 128] = u + (32 * _29294) + (32 * _36270) + -_9603 + 64
                    _38846 = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _29294) + (32 * _36270) + 64] = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _29294) + (32 * _36270) + 96 len 32 * _38846] = mem[(131 * ('cd', 4).length) + 256 len 32 * _38846]
                    mem[_9603 + 160] = u + (32 * _29294) + (32 * _36270) + (32 * _38846) + -_9603 + 96
                    _39390 = mem[(164 * ('cd', 4).length) + 256]
                    mem[u + (32 * _29294) + (32 * _36270) + (32 * _38846) + 96] = mem[(164 * ('cd', 4).length) + 256]
                    mem[u + (32 * _29294) + (32 * _36270) + (32 * _38846) + 128 len 32 * _39390] = mem[(164 * ('cd', 4).length) + 288 len 32 * _39390]
                    return memory
                      from mem[64]
                       len u + (32 * _29294) + (32 * _36270) + (32 * _38846) + (32 * _39390) + -mem[64] + 128
                mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                require ('cd', 4).length <= test266151307()
                mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                if not ('cd', 4).length:
                    require ('cd', 4).length <= test266151307()
                    mem[(164 * ('cd', 4).length) + 256] = ('cd', 4).length
                    mem[64] = (197 * ('cd', 4).length) + 288
                    if not ('cd', 4).length:
                        idx = 0
                        s = 0
                        s = 0
                        s = 0
                        while ('cd', 4).length > uint32(idx):
                            require uint32(idx) < ('cd', 36).length
                            require uint32(idx) < ('cd', 4).length
                            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                            require uint32(idx) < ('cd', 68).length
                            require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _9887 = mem[64]
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                _9966 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19716 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_19716] == mem[_19716 + 12 len 20]
                                        require s < mem[_9887]
                                        mem[(32 * s) + _9887 + 32] = mem[_19716 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21131 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_9966]
                                        mem[(32 * s) + _9966 + 32] = mem[_21131]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _9887
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19604 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19604]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9966
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _20432 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20432]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21242 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21242]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22088 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                    mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22088]
                                else:
                                    mem[_9966 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19717 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_19717] == mem[_19717 + 12 len 20]
                                        require s < mem[_9887]
                                        mem[(32 * s) + _9887 + 32] = mem[_19717 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21132 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_9966]
                                        mem[(32 * s) + _9966 + 32] = mem[_21132]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _9887
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19605 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19605]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9966
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _20434 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20434]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21243 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21243]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22089 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                    mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22089]
                            else:
                                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19718 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_19718] == mem[_19718 + 12 len 20]
                                        require s < mem[_9887]
                                        mem[(32 * s) + _9887 + 32] = mem[_19718 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21133 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_9887 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                        mem[(32 * s) + _9887 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21133]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _9887
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19606 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19606]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9887 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _20436 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20436]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21244 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21244]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22090 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                    mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22090]
                                else:
                                    mem[_9887 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19719 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_19719] == mem[_19719 + 12 len 20]
                                        require s < mem[_9887]
                                        mem[(32 * s) + _9887 + 32] = mem[_19719 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21134 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_9887 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                        mem[(32 * s) + _9887 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21134]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _9887
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19607 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19607]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9887 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _20438 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20438]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21245 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21245]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22091 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                    mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22091]
                            idx = idx + 1
                            s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                            s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                            continue 
                        _9604 = mem[64]
                        mem[mem[64]] = 192
                        _9623 = mem[96]
                        mem[mem[64] + 192] = mem[96]
                        idx = 0
                        s = 128
                        t = mem[64] + (32 * mem[96]) + 224
                        u = mem[64] + 224
                        while idx < _9623:
                            mem[u] = t + -_9604 - 224
                            _19217 = mem[s]
                            _19361 = mem[mem[s]]
                            mem[t] = mem[mem[s]]
                            v = 0
                            w = _19217 + 32
                            x = t + 32
                            while v < _19361:
                                mem[x] = mem[w + 12 len 20]
                                v = v + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            v = _19361 + 1
                            w = _19217 + (32 * _19361) + 64
                            t = t + (32 * _19361) + 32
                            u = u + 32
                            continue 
                        mem[_9604 + 32] = t - _9604
                        _19521 = mem[(64 * ('cd', 4).length) + 160]
                        mem[t] = mem[(64 * ('cd', 4).length) + 160]
                        idx = 0
                        s = (64 * ('cd', 4).length) + 192
                        u = t + (32 * _19521) + 32
                        v = t + 32
                        while idx < _19521:
                            mem[v] = u + -t - 32
                            _28659 = mem[s]
                            _28975 = mem[mem[s]]
                            mem[u] = mem[mem[s]]
                            t = 0
                            w = _28659 + 32
                            x = u + 32
                            while t < _28975:
                                mem[x] = mem[w]
                                t = t + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            t = _28975 + 1
                            w = _28659 + (32 * _28975) + 64
                            u = u + (32 * _28975) + 32
                            v = v + 32
                            continue 
                        mem[_9604 + 64] = u - _9604
                        _29295 = mem[(32 * ('cd', 4).length) + 128]
                        mem[u] = mem[(32 * ('cd', 4).length) + 128]
                        mem[u + 32 len 32 * _29295] = mem[(32 * ('cd', 4).length) + 160 len 32 * _29295]
                        mem[_9604 + 96] = u + (32 * _29295) + -_9604 + 32
                        _36271 = mem[(98 * ('cd', 4).length) + 192]
                        mem[u + (32 * _29295) + 32] = mem[(98 * ('cd', 4).length) + 192]
                        mem[u + (32 * _29295) + 64 len 32 * _36271] = mem[(98 * ('cd', 4).length) + 224 len 32 * _36271]
                        mem[_9604 + 128] = u + (32 * _29295) + (32 * _36271) + -_9604 + 64
                        _38847 = mem[(131 * ('cd', 4).length) + 224]
                        mem[u + (32 * _29295) + (32 * _36271) + 64] = mem[(131 * ('cd', 4).length) + 224]
                        mem[u + (32 * _29295) + (32 * _36271) + 96 len 32 * _38847] = mem[(131 * ('cd', 4).length) + 256 len 32 * _38847]
                        mem[_9604 + 160] = u + (32 * _29295) + (32 * _36271) + (32 * _38847) + -_9604 + 96
                        _39391 = mem[(164 * ('cd', 4).length) + 256]
                        mem[u + (32 * _29295) + (32 * _36271) + (32 * _38847) + 96] = mem[(164 * ('cd', 4).length) + 256]
                        mem[u + (32 * _29295) + (32 * _36271) + (32 * _38847) + 128 len 32 * _39391] = mem[(164 * ('cd', 4).length) + 288 len 32 * _39391]
                        return memory
                          from mem[64]
                           len u + (32 * _29295) + (32 * _36271) + (32 * _38847) + (32 * _39391) + -mem[64] + 128
                    mem[(164 * ('cd', 4).length) + 288 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require uint32(idx) < ('cd', 68).length
                        require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _9888 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _9967 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _9967 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19721 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19721] == mem[_19721 + 12 len 20]
                                    require s < mem[_9888]
                                    mem[(32 * s) + _9888 + 32] = mem[_19721 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21135 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9967]
                                    mem[(32 * s) + _9967 + 32] = mem[_21135]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9888
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19609 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19609]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9967
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20441 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20441]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21247 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21247]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22093 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22093]
                            else:
                                mem[_9967 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19722 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19722] == mem[_19722 + 12 len 20]
                                    require s < mem[_9888]
                                    mem[(32 * s) + _9888 + 32] = mem[_19722 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21136 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9967]
                                    mem[(32 * s) + _9967 + 32] = mem[_21136]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9888
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19610 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19610]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9967
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20443 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20443]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21248 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21248]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22094 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22094]
                        else:
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _9888 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19723 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19723] == mem[_19723 + 12 len 20]
                                    require s < mem[_9888]
                                    mem[(32 * s) + _9888 + 32] = mem[_19723 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21137 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9888 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _9888 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21137]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9888
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19611 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19611]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9888 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20445 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20445]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21249 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21249]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22095 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22095]
                            else:
                                mem[_9888 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19724 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19724] == mem[_19724 + 12 len 20]
                                    require s < mem[_9888]
                                    mem[(32 * s) + _9888 + 32] = mem[_19724 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21138 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9888 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _9888 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21138]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9888
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19612 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19612]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9888 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20447 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20447]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21250 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21250]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22096 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22096]
                        idx = idx + 1
                        s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                        continue 
                    _9605 = mem[64]
                    mem[mem[64]] = 192
                    _9624 = mem[96]
                    mem[mem[64] + 192] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 224
                    u = mem[64] + 224
                    while idx < _9624:
                        mem[u] = t + -_9605 - 224
                        _19226 = mem[s]
                        _19370 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _19226 + 32
                        x = t + 32
                        while v < _19370:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _19370 + 1
                        w = _19226 + (32 * _19370) + 64
                        t = t + (32 * _19370) + 32
                        u = u + 32
                        continue 
                    mem[_9605 + 32] = t - _9605
                    _19526 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _19526) + 32
                    v = t + 32
                    while idx < _19526:
                        mem[v] = u + -t - 32
                        _28661 = mem[s]
                        _28976 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _28661 + 32
                        x = u + 32
                        while t < _28976:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _28976 + 1
                        w = _28661 + (32 * _28976) + 64
                        u = u + (32 * _28976) + 32
                        v = v + 32
                        continue 
                    mem[_9605 + 64] = u - _9605
                    _29296 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _29296] = mem[(32 * ('cd', 4).length) + 160 len 32 * _29296]
                    mem[_9605 + 96] = u + (32 * _29296) + -_9605 + 32
                    _36272 = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _29296) + 32] = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _29296) + 64 len 32 * _36272] = mem[(98 * ('cd', 4).length) + 224 len 32 * _36272]
                    mem[_9605 + 128] = u + (32 * _29296) + (32 * _36272) + -_9605 + 64
                    _38848 = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _29296) + (32 * _36272) + 64] = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _29296) + (32 * _36272) + 96 len 32 * _38848] = mem[(131 * ('cd', 4).length) + 256 len 32 * _38848]
                    mem[_9605 + 160] = u + (32 * _29296) + (32 * _36272) + (32 * _38848) + -_9605 + 96
                    _39392 = mem[(164 * ('cd', 4).length) + 256]
                    mem[u + (32 * _29296) + (32 * _36272) + (32 * _38848) + 96] = mem[(164 * ('cd', 4).length) + 256]
                    mem[u + (32 * _29296) + (32 * _36272) + (32 * _38848) + 128 len 32 * _39392] = mem[(164 * ('cd', 4).length) + 288 len 32 * _39392]
                    return memory
                      from mem[64]
                       len u + (32 * _29296) + (32 * _36272) + (32 * _38848) + (32 * _39392) + -mem[64] + 128
                mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                require ('cd', 4).length <= test266151307()
                mem[(164 * ('cd', 4).length) + 256] = ('cd', 4).length
                mem[64] = (197 * ('cd', 4).length) + 288
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require uint32(idx) < ('cd', 68).length
                        require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _9889 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _9968 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _9968 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19726 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19726] == mem[_19726 + 12 len 20]
                                    require s < mem[_9889]
                                    mem[(32 * s) + _9889 + 32] = mem[_19726 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21139 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9968]
                                    mem[(32 * s) + _9968 + 32] = mem[_21139]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9889
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19614 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19614]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9968
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20450 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20450]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21252 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21252]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22098 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22098]
                            else:
                                mem[_9968 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19727 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19727] == mem[_19727 + 12 len 20]
                                    require s < mem[_9889]
                                    mem[(32 * s) + _9889 + 32] = mem[_19727 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21140 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9968]
                                    mem[(32 * s) + _9968 + 32] = mem[_21140]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9889
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19615 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19615]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9968
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20452 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20452]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21253 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21253]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22099 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22099]
                        else:
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _9889 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19728 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19728] == mem[_19728 + 12 len 20]
                                    require s < mem[_9889]
                                    mem[(32 * s) + _9889 + 32] = mem[_19728 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21141 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9889 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _9889 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21141]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9889
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19616 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19616]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9889 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20454 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20454]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21254 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21254]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22100 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22100]
                            else:
                                mem[_9889 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19729 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19729] == mem[_19729 + 12 len 20]
                                    require s < mem[_9889]
                                    mem[(32 * s) + _9889 + 32] = mem[_19729 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21142 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9889 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _9889 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21142]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9889
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19617 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19617]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9889 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20456 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20456]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21255 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21255]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22101 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22101]
                        idx = idx + 1
                        s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                        continue 
                    _9606 = mem[64]
                    mem[mem[64]] = 192
                    _9625 = mem[96]
                    mem[mem[64] + 192] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 224
                    u = mem[64] + 224
                    while idx < _9625:
                        mem[u] = t + -_9606 - 224
                        _19235 = mem[s]
                        _19379 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _19235 + 32
                        x = t + 32
                        while v < _19379:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _19379 + 1
                        w = _19235 + (32 * _19379) + 64
                        t = t + (32 * _19379) + 32
                        u = u + 32
                        continue 
                    mem[_9606 + 32] = t - _9606
                    _19531 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _19531) + 32
                    v = t + 32
                    while idx < _19531:
                        mem[v] = u + -t - 32
                        _28663 = mem[s]
                        _28977 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _28663 + 32
                        x = u + 32
                        while t < _28977:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _28977 + 1
                        w = _28663 + (32 * _28977) + 64
                        u = u + (32 * _28977) + 32
                        v = v + 32
                        continue 
                    mem[_9606 + 64] = u - _9606
                    _29297 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _29297] = mem[(32 * ('cd', 4).length) + 160 len 32 * _29297]
                    mem[_9606 + 96] = u + (32 * _29297) + -_9606 + 32
                    _36273 = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _29297) + 32] = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _29297) + 64 len 32 * _36273] = mem[(98 * ('cd', 4).length) + 224 len 32 * _36273]
                    mem[_9606 + 128] = u + (32 * _29297) + (32 * _36273) + -_9606 + 64
                    _38849 = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _29297) + (32 * _36273) + 64] = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _29297) + (32 * _36273) + 96 len 32 * _38849] = mem[(131 * ('cd', 4).length) + 256 len 32 * _38849]
                    mem[_9606 + 160] = u + (32 * _29297) + (32 * _36273) + (32 * _38849) + -_9606 + 96
                    _39393 = mem[(164 * ('cd', 4).length) + 256]
                    mem[u + (32 * _29297) + (32 * _36273) + (32 * _38849) + 96] = mem[(164 * ('cd', 4).length) + 256]
                    mem[u + (32 * _29297) + (32 * _36273) + (32 * _38849) + 128 len 32 * _39393] = mem[(164 * ('cd', 4).length) + 288 len 32 * _39393]
                    return memory
                      from mem[64]
                       len u + (32 * _29297) + (32 * _36273) + (32 * _38849) + (32 * _39393) + -mem[64] + 128
                mem[(164 * ('cd', 4).length) + 288 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _9890 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _9969 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _9969 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19731 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_19731] == mem[_19731 + 12 len 20]
                                require s < mem[_9890]
                                mem[(32 * s) + _9890 + 32] = mem[_19731 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21143 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_9969]
                                mem[(32 * s) + _9969 + 32] = mem[_21143]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _9890
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19619 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19619]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9969
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20459 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20459]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21257 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21257]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22103 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                            mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22103]
                        else:
                            mem[_9969 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19732 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_19732] == mem[_19732 + 12 len 20]
                                require s < mem[_9890]
                                mem[(32 * s) + _9890 + 32] = mem[_19732 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21144 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_9969]
                                mem[(32 * s) + _9969 + 32] = mem[_21144]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _9890
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19620 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19620]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9969
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20461 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20461]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21258 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21258]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22104 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                            mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22104]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _9890 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19733 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_19733] == mem[_19733 + 12 len 20]
                                require s < mem[_9890]
                                mem[(32 * s) + _9890 + 32] = mem[_19733 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21145 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_9890 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _9890 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21145]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _9890
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19621 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19621]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9890 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20463 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20463]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21259 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21259]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22105 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                            mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22105]
                        else:
                            mem[_9890 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19734 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_19734] == mem[_19734 + 12 len 20]
                                require s < mem[_9890]
                                mem[(32 * s) + _9890 + 32] = mem[_19734 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21146 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_9890 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _9890 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21146]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _9890
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19622 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19622]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9890 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20465 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20465]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21260 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21260]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22106 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                            mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22106]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _9607 = mem[64]
                mem[mem[64]] = 192
                _9626 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _9626:
                    mem[u] = t + -_9607 - 224
                    _19244 = mem[s]
                    _19388 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _19244 + 32
                    x = t + 32
                    while v < _19388:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _19388 + 1
                    w = _19244 + (32 * _19388) + 64
                    t = t + (32 * _19388) + 32
                    u = u + 32
                    continue 
                mem[_9607 + 32] = t - _9607
                _19536 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _19536) + 32
                v = t + 32
                while idx < _19536:
                    mem[v] = u + -t - 32
                    _28665 = mem[s]
                    _28978 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _28665 + 32
                    x = u + 32
                    while t < _28978:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _28978 + 1
                    w = _28665 + (32 * _28978) + 64
                    u = u + (32 * _28978) + 32
                    v = v + 32
                    continue 
                mem[_9607 + 64] = u - _9607
                _29298 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _29298] = mem[(32 * ('cd', 4).length) + 160 len 32 * _29298]
                mem[_9607 + 96] = u + (32 * _29298) + -_9607 + 32
                _36274 = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _29298) + 32] = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _29298) + 64 len 32 * _36274] = mem[(98 * ('cd', 4).length) + 224 len 32 * _36274]
                mem[_9607 + 128] = u + (32 * _29298) + (32 * _36274) + -_9607 + 64
                _38850 = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _29298) + (32 * _36274) + 64] = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _29298) + (32 * _36274) + 96 len 32 * _38850] = mem[(131 * ('cd', 4).length) + 256 len 32 * _38850]
                mem[_9607 + 160] = u + (32 * _29298) + (32 * _36274) + (32 * _38850) + -_9607 + 96
                _39394 = mem[(164 * ('cd', 4).length) + 256]
                mem[u + (32 * _29298) + (32 * _36274) + (32 * _38850) + 96] = mem[(164 * ('cd', 4).length) + 256]
                mem[u + (32 * _29298) + (32 * _36274) + (32 * _38850) + 128 len 32 * _39394] = mem[(164 * ('cd', 4).length) + 288 len 32 * _39394]
                return memory
                  from mem[64]
                   len u + (32 * _29298) + (32 * _36274) + (32 * _38850) + (32 * _39394) + -mem[64] + 128
            mem[(64 * ('cd', 4).length) + 192] = 96
            s = (64 * ('cd', 4).length) + 192
            idx = ('cd', 4).length
            while idx - 1:
                mem[s + 32] = 96
                s = s + 32
                idx = idx - 1
                continue 
            require ('cd', 4).length <= test266151307()
            _9616 = mem[64]
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                _9635 = mem[64] + (32 * ('cd', 4).length) + 32
                mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
                if not ('cd', 4).length:
                    require ('cd', 4).length <= test266151307()
                    _9665 = mem[64] + (64 * ('cd', 4).length) + 64
                    mem[mem[64] + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
                    mem[64] = mem[64] + (98 * ('cd', 4).length) + 96
                    if not ('cd', 4).length:
                        idx = 0
                        s = 0
                        s = 0
                        s = 0
                        while ('cd', 4).length > uint32(idx):
                            require uint32(idx) < ('cd', 36).length
                            require uint32(idx) < ('cd', 4).length
                            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                            require uint32(idx) < ('cd', 68).length
                            require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _21261 = mem[64]
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                _21531 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _29668 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_29668] == mem[_29668 + 12 len 20]
                                        require s < mem[_21261]
                                        mem[(32 * s) + _21261 + 32] = mem[_29668 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _32075 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_21531]
                                        mem[(32 * s) + _21531 + 32] = mem[_32075]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _21261
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29476 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29476]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21531
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _30852 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9616]
                                    mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30852]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32228 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9635]
                                    mem[(32 * uint32(idx)) + _9635 + 32] = mem[_32228]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _33372 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9665]
                                    mem[(32 * uint32(idx)) + _9665 + 32] = mem[_33372]
                                else:
                                    mem[_21531 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _29669 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_29669] == mem[_29669 + 12 len 20]
                                        require s < mem[_21261]
                                        mem[(32 * s) + _21261 + 32] = mem[_29669 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _32076 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_21531]
                                        mem[(32 * s) + _21531 + 32] = mem[_32076]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _21261
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29477 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29477]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21531
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _30854 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9616]
                                    mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30854]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32229 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9635]
                                    mem[(32 * uint32(idx)) + _9635 + 32] = mem[_32229]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _33373 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9665]
                                    mem[(32 * uint32(idx)) + _9665 + 32] = mem[_33373]
                            else:
                                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _29670 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_29670] == mem[_29670 + 12 len 20]
                                        require s < mem[_21261]
                                        mem[(32 * s) + _21261 + 32] = mem[_29670 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _32077 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_21261 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                        mem[(32 * s) + _21261 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32077]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _21261
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29478 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29478]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21261 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _30856 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9616]
                                    mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30856]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32230 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9635]
                                    mem[(32 * uint32(idx)) + _9635 + 32] = mem[_32230]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _33374 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9665]
                                    mem[(32 * uint32(idx)) + _9665 + 32] = mem[_33374]
                                else:
                                    mem[_21261 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _29671 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_29671] == mem[_29671 + 12 len 20]
                                        require s < mem[_21261]
                                        mem[(32 * s) + _21261 + 32] = mem[_29671 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _32078 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_21261 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                        mem[(32 * s) + _21261 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32078]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _21261
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29479 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29479]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21261 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _30858 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9616]
                                    mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30858]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32231 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9635]
                                    mem[(32 * uint32(idx)) + _9635 + 32] = mem[_32231]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _33375 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9665]
                                    mem[(32 * uint32(idx)) + _9665 + 32] = mem[_33375]
                            idx = idx + 1
                            s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                            s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                            continue 
                        _19397 = mem[64]
                        mem[mem[64]] = 192
                        _19623 = mem[96]
                        mem[mem[64] + 192] = mem[96]
                        idx = 0
                        s = 128
                        t = mem[64] + (32 * mem[96]) + 224
                        u = mem[64] + 224
                        while idx < _19623:
                            mem[u] = t + -_19397 - 224
                            _28667 = mem[s]
                            _28979 = mem[mem[s]]
                            mem[t] = mem[mem[s]]
                            v = 0
                            w = _28667 + 32
                            x = t + 32
                            while v < _28979:
                                mem[x] = mem[w + 12 len 20]
                                v = v + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            v = _28979 + 1
                            w = _28667 + (32 * _28979) + 64
                            t = t + (32 * _28979) + 32
                            u = u + 32
                            continue 
                        mem[_19397 + 32] = t - _19397
                        _29299 = mem[(64 * ('cd', 4).length) + 160]
                        mem[t] = mem[(64 * ('cd', 4).length) + 160]
                        idx = 0
                        s = (64 * ('cd', 4).length) + 192
                        u = t + (32 * _29299) + 32
                        v = t + 32
                        while idx < _29299:
                            mem[v] = u + -t - 32
                            _35867 = mem[s]
                            _36091 = mem[mem[s]]
                            mem[u] = mem[mem[s]]
                            t = 0
                            w = _35867 + 32
                            x = u + 32
                            while t < _36091:
                                mem[x] = mem[w]
                                t = t + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            t = _36091 + 1
                            w = _35867 + (32 * _36091) + 64
                            u = u + (32 * _36091) + 32
                            v = v + 32
                            continue 
                        mem[_19397 + 64] = u - _19397
                        _36275 = mem[(32 * ('cd', 4).length) + 128]
                        mem[u] = mem[(32 * ('cd', 4).length) + 128]
                        mem[u + 32 len 32 * _36275] = mem[(32 * ('cd', 4).length) + 160 len 32 * _36275]
                        mem[_19397 + 96] = u + (32 * _36275) + -_19397 + 32
                        _38851 = mem[_9616]
                        mem[u + (32 * _36275) + 32] = mem[_9616]
                        mem[u + (32 * _36275) + 64 len 32 * _38851] = mem[_9616 + 32 len 32 * _38851]
                        mem[_19397 + 128] = u + (32 * _36275) + (32 * _38851) + -_19397 + 64
                        _39395 = mem[_9635]
                        mem[u + (32 * _36275) + (32 * _38851) + 64] = mem[_9635]
                        mem[u + (32 * _36275) + (32 * _38851) + 96 len 32 * _39395] = mem[_9635 + 32 len 32 * _39395]
                        mem[_19397 + 160] = u + (32 * _36275) + (32 * _38851) + (32 * _39395) + -_19397 + 96
                        _39779 = mem[_9665]
                        mem[u + (32 * _36275) + (32 * _38851) + (32 * _39395) + 96] = mem[_9665]
                        mem[u + (32 * _36275) + (32 * _38851) + (32 * _39395) + 128 len 32 * _39779] = mem[_9665 + 32 len 32 * _39779]
                        return memory
                          from mem[64]
                           len u + (32 * _36275) + (32 * _38851) + (32 * _39395) + (32 * _39779) + -mem[64] + 128
                    mem[_9665 + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require uint32(idx) < ('cd', 68).length
                        require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21262 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _21532 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29673 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29673] == mem[_29673 + 12 len 20]
                                    require s < mem[_21262]
                                    mem[(32 * s) + _21262 + 32] = mem[_29673 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32079 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21532]
                                    mem[(32 * s) + _21532 + 32] = mem[_32079]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21262
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29481 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29481]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21532
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30861 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616]
                                mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30861]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32233 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9635]
                                mem[(32 * uint32(idx)) + _9635 + 32] = mem[_32233]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33377 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9665]
                                mem[(32 * uint32(idx)) + _9665 + 32] = mem[_33377]
                            else:
                                mem[_21532 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29674 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29674] == mem[_29674 + 12 len 20]
                                    require s < mem[_21262]
                                    mem[(32 * s) + _21262 + 32] = mem[_29674 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32080 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21532]
                                    mem[(32 * s) + _21532 + 32] = mem[_32080]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21262
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29482 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29482]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21532
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30863 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616]
                                mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30863]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32234 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9635]
                                mem[(32 * uint32(idx)) + _9635 + 32] = mem[_32234]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33378 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9665]
                                mem[(32 * uint32(idx)) + _9665 + 32] = mem[_33378]
                        else:
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29675 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29675] == mem[_29675 + 12 len 20]
                                    require s < mem[_21262]
                                    mem[(32 * s) + _21262 + 32] = mem[_29675 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32081 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21262 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _21262 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32081]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21262
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29483 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29483]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21262 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30865 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616]
                                mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30865]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32235 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9635]
                                mem[(32 * uint32(idx)) + _9635 + 32] = mem[_32235]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33379 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9665]
                                mem[(32 * uint32(idx)) + _9665 + 32] = mem[_33379]
                            else:
                                mem[_21262 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29676 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29676] == mem[_29676 + 12 len 20]
                                    require s < mem[_21262]
                                    mem[(32 * s) + _21262 + 32] = mem[_29676 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32082 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21262 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _21262 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32082]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21262
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29484 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29484]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21262 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30867 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616]
                                mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30867]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32236 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9635]
                                mem[(32 * uint32(idx)) + _9635 + 32] = mem[_32236]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33380 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9665]
                                mem[(32 * uint32(idx)) + _9665 + 32] = mem[_33380]
                        idx = idx + 1
                        s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                        continue 
                    _19398 = mem[64]
                    mem[mem[64]] = 192
                    _19624 = mem[96]
                    mem[mem[64] + 192] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 224
                    u = mem[64] + 224
                    while idx < _19624:
                        mem[u] = t + -_19398 - 224
                        _28676 = mem[s]
                        _28988 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _28676 + 32
                        x = t + 32
                        while v < _28988:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _28988 + 1
                        w = _28676 + (32 * _28988) + 64
                        t = t + (32 * _28988) + 32
                        u = u + 32
                        continue 
                    mem[_19398 + 32] = t - _19398
                    _29304 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _29304) + 32
                    v = t + 32
                    while idx < _29304:
                        mem[v] = u + -t - 32
                        _35869 = mem[s]
                        _36092 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _35869 + 32
                        x = u + 32
                        while t < _36092:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _36092 + 1
                        w = _35869 + (32 * _36092) + 64
                        u = u + (32 * _36092) + 32
                        v = v + 32
                        continue 
                    mem[_19398 + 64] = u - _19398
                    _36276 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _36276] = mem[(32 * ('cd', 4).length) + 160 len 32 * _36276]
                    mem[_19398 + 96] = u + (32 * _36276) + -_19398 + 32
                    _38852 = mem[_9616]
                    mem[u + (32 * _36276) + 32] = mem[_9616]
                    mem[u + (32 * _36276) + 64 len 32 * _38852] = mem[_9616 + 32 len 32 * _38852]
                    mem[_19398 + 128] = u + (32 * _36276) + (32 * _38852) + -_19398 + 64
                    _39396 = mem[_9635]
                    mem[u + (32 * _36276) + (32 * _38852) + 64] = mem[_9635]
                    mem[u + (32 * _36276) + (32 * _38852) + 96 len 32 * _39396] = mem[_9635 + 32 len 32 * _39396]
                    mem[_19398 + 160] = u + (32 * _36276) + (32 * _38852) + (32 * _39396) + -_19398 + 96
                    _39780 = mem[_9665]
                    mem[u + (32 * _36276) + (32 * _38852) + (32 * _39396) + 96] = mem[_9665]
                    mem[u + (32 * _36276) + (32 * _38852) + (32 * _39396) + 128 len 32 * _39780] = mem[_9665 + 32 len 32 * _39780]
                    return memory
                      from mem[64]
                       len u + (32 * _36276) + (32 * _38852) + (32 * _39396) + (32 * _39780) + -mem[64] + 128
                mem[mem[64] + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                require ('cd', 4).length <= test266151307()
                mem[mem[64] + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
                mem[64] = mem[64] + (98 * ('cd', 4).length) + 96
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require uint32(idx) < ('cd', 68).length
                        require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21263 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _21533 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29678 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29678] == mem[_29678 + 12 len 20]
                                    require s < mem[_21263]
                                    mem[(32 * s) + _21263 + 32] = mem[_29678 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32083 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21533]
                                    mem[(32 * s) + _21533 + 32] = mem[_32083]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21263
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29486 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29486]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21533
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30870 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616]
                                mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30870]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32238 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9635]
                                mem[(32 * uint32(idx)) + _9635 + 32] = mem[_32238]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33382 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9635 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9635 + (32 * ('cd', 4).length) + 64] = mem[_33382]
                            else:
                                mem[_21533 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29679 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29679] == mem[_29679 + 12 len 20]
                                    require s < mem[_21263]
                                    mem[(32 * s) + _21263 + 32] = mem[_29679 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32084 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21533]
                                    mem[(32 * s) + _21533 + 32] = mem[_32084]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21263
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29487 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29487]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21533
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30872 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616]
                                mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30872]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32239 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9635]
                                mem[(32 * uint32(idx)) + _9635 + 32] = mem[_32239]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33383 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9635 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9635 + (32 * ('cd', 4).length) + 64] = mem[_33383]
                        else:
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29680 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29680] == mem[_29680 + 12 len 20]
                                    require s < mem[_21263]
                                    mem[(32 * s) + _21263 + 32] = mem[_29680 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32085 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21263 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _21263 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32085]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21263
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29488 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29488]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21263 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30874 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616]
                                mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30874]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32240 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9635]
                                mem[(32 * uint32(idx)) + _9635 + 32] = mem[_32240]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33384 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9635 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9635 + (32 * ('cd', 4).length) + 64] = mem[_33384]
                            else:
                                mem[_21263 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29681 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29681] == mem[_29681 + 12 len 20]
                                    require s < mem[_21263]
                                    mem[(32 * s) + _21263 + 32] = mem[_29681 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32086 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21263 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _21263 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32086]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21263
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29489 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29489]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21263 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30876 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616]
                                mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30876]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32241 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9635]
                                mem[(32 * uint32(idx)) + _9635 + 32] = mem[_32241]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33385 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9635 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9635 + (32 * ('cd', 4).length) + 64] = mem[_33385]
                        idx = idx + 1
                        s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                        continue 
                    _19399 = mem[64]
                    mem[mem[64]] = 192
                    _19625 = mem[96]
                    mem[mem[64] + 192] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 224
                    u = mem[64] + 224
                    while idx < _19625:
                        mem[u] = t + -_19399 - 224
                        _28685 = mem[s]
                        _28997 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _28685 + 32
                        x = t + 32
                        while v < _28997:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _28997 + 1
                        w = _28685 + (32 * _28997) + 64
                        t = t + (32 * _28997) + 32
                        u = u + 32
                        continue 
                    mem[_19399 + 32] = t - _19399
                    _29309 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _29309) + 32
                    v = t + 32
                    while idx < _29309:
                        mem[v] = u + -t - 32
                        _35871 = mem[s]
                        _36093 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _35871 + 32
                        x = u + 32
                        while t < _36093:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _36093 + 1
                        w = _35871 + (32 * _36093) + 64
                        u = u + (32 * _36093) + 32
                        v = v + 32
                        continue 
                    mem[_19399 + 64] = u - _19399
                    _36277 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _36277] = mem[(32 * ('cd', 4).length) + 160 len 32 * _36277]
                    mem[_19399 + 96] = u + (32 * _36277) + -_19399 + 32
                    _38853 = mem[_9616]
                    mem[u + (32 * _36277) + 32] = mem[_9616]
                    mem[u + (32 * _36277) + 64 len 32 * _38853] = mem[_9616 + 32 len 32 * _38853]
                    mem[_19399 + 128] = u + (32 * _36277) + (32 * _38853) + -_19399 + 64
                    _39397 = mem[_9635]
                    mem[u + (32 * _36277) + (32 * _38853) + 64] = mem[_9635]
                    mem[u + (32 * _36277) + (32 * _38853) + 96 len 32 * _39397] = mem[_9635 + 32 len 32 * _39397]
                    mem[_19399 + 160] = u + (32 * _36277) + (32 * _38853) + (32 * _39397) + -_19399 + 96
                    _39781 = mem[_9635 + (32 * ('cd', 4).length) + 32]
                    mem[u + (32 * _36277) + (32 * _38853) + (32 * _39397) + 96] = mem[_9635 + (32 * ('cd', 4).length) + 32]
                    mem[u + (32 * _36277) + (32 * _38853) + (32 * _39397) + 128 len 32 * _39781] = mem[_9635 + (32 * ('cd', 4).length) + 64 len 32 * _39781]
                    return memory
                      from mem[64]
                       len u + (32 * _36277) + (32 * _38853) + (32 * _39397) + (32 * _39781) + -mem[64] + 128
                mem[_9635 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21264 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21534 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29683 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29683] == mem[_29683 + 12 len 20]
                                require s < mem[_21264]
                                mem[(32 * s) + _21264 + 32] = mem[_29683 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32087 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21534]
                                mem[(32 * s) + _21534 + 32] = mem[_32087]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21264
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29491 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29491]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21534
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30879 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616]
                            mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30879]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32243 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9635]
                            mem[(32 * uint32(idx)) + _9635 + 32] = mem[_32243]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33387 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9635 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9635 + (32 * ('cd', 4).length) + 64] = mem[_33387]
                        else:
                            mem[_21534 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29684 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29684] == mem[_29684 + 12 len 20]
                                require s < mem[_21264]
                                mem[(32 * s) + _21264 + 32] = mem[_29684 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32088 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21534]
                                mem[(32 * s) + _21534 + 32] = mem[_32088]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21264
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29492 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29492]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21534
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30881 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616]
                            mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30881]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32244 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9635]
                            mem[(32 * uint32(idx)) + _9635 + 32] = mem[_32244]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33388 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9635 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9635 + (32 * ('cd', 4).length) + 64] = mem[_33388]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29685 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29685] == mem[_29685 + 12 len 20]
                                require s < mem[_21264]
                                mem[(32 * s) + _21264 + 32] = mem[_29685 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32089 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21264 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21264 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32089]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21264
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29493 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29493]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21264 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30883 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616]
                            mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30883]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32245 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9635]
                            mem[(32 * uint32(idx)) + _9635 + 32] = mem[_32245]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33389 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9635 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9635 + (32 * ('cd', 4).length) + 64] = mem[_33389]
                        else:
                            mem[_21264 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29686 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29686] == mem[_29686 + 12 len 20]
                                require s < mem[_21264]
                                mem[(32 * s) + _21264 + 32] = mem[_29686 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32090 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21264 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21264 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32090]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21264
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29494 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29494]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21264 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30885 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616]
                            mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30885]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32246 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9635]
                            mem[(32 * uint32(idx)) + _9635 + 32] = mem[_32246]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33390 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9635 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9635 + (32 * ('cd', 4).length) + 64] = mem[_33390]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _19400 = mem[64]
                mem[mem[64]] = 192
                _19626 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _19626:
                    mem[u] = t + -_19400 - 224
                    _28694 = mem[s]
                    _29006 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _28694 + 32
                    x = t + 32
                    while v < _29006:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _29006 + 1
                    w = _28694 + (32 * _29006) + 64
                    t = t + (32 * _29006) + 32
                    u = u + 32
                    continue 
                mem[_19400 + 32] = t - _19400
                _29314 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _29314) + 32
                v = t + 32
                while idx < _29314:
                    mem[v] = u + -t - 32
                    _35873 = mem[s]
                    _36094 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _35873 + 32
                    x = u + 32
                    while t < _36094:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _36094 + 1
                    w = _35873 + (32 * _36094) + 64
                    u = u + (32 * _36094) + 32
                    v = v + 32
                    continue 
                mem[_19400 + 64] = u - _19400
                _36278 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _36278] = mem[(32 * ('cd', 4).length) + 160 len 32 * _36278]
                mem[_19400 + 96] = u + (32 * _36278) + -_19400 + 32
                _38854 = mem[_9616]
                mem[u + (32 * _36278) + 32] = mem[_9616]
                mem[u + (32 * _36278) + 64 len 32 * _38854] = mem[_9616 + 32 len 32 * _38854]
                mem[_19400 + 128] = u + (32 * _36278) + (32 * _38854) + -_19400 + 64
                _39398 = mem[_9635]
                mem[u + (32 * _36278) + (32 * _38854) + 64] = mem[_9635]
                mem[u + (32 * _36278) + (32 * _38854) + 96 len 32 * _39398] = mem[_9635 + 32 len 32 * _39398]
                mem[_19400 + 160] = u + (32 * _36278) + (32 * _38854) + (32 * _39398) + -_19400 + 96
                _39782 = mem[_9635 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _36278) + (32 * _38854) + (32 * _39398) + 96] = mem[_9635 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _36278) + (32 * _38854) + (32 * _39398) + 128 len 32 * _39782] = mem[_9635 + (32 * ('cd', 4).length) + 64 len 32 * _39782]
                return memory
                  from mem[64]
                   len u + (32 * _36278) + (32 * _38854) + (32 * _39398) + (32 * _39782) + -mem[64] + 128
            mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[mem[64] + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
                mem[64] = mem[64] + (98 * ('cd', 4).length) + 96
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require uint32(idx) < ('cd', 68).length
                        require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21265 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _21535 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29688 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29688] == mem[_29688 + 12 len 20]
                                    require s < mem[_21265]
                                    mem[(32 * s) + _21265 + 32] = mem[_29688 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32091 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21535]
                                    mem[(32 * s) + _21535 + 32] = mem[_32091]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21265
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29496 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29496]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21535
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30888 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616]
                                mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30888]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32248 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9616 + (32 * ('cd', 4).length) + 64] = mem[_32248]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33392 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9616 + (64 * ('cd', 4).length) + 96] = mem[_33392]
                            else:
                                mem[_21535 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29689 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29689] == mem[_29689 + 12 len 20]
                                    require s < mem[_21265]
                                    mem[(32 * s) + _21265 + 32] = mem[_29689 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32092 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21535]
                                    mem[(32 * s) + _21535 + 32] = mem[_32092]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21265
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29497 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29497]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21535
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30890 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616]
                                mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30890]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32249 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9616 + (32 * ('cd', 4).length) + 64] = mem[_32249]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33393 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9616 + (64 * ('cd', 4).length) + 96] = mem[_33393]
                        else:
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29690 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29690] == mem[_29690 + 12 len 20]
                                    require s < mem[_21265]
                                    mem[(32 * s) + _21265 + 32] = mem[_29690 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32093 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21265 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _21265 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32093]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21265
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29498 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29498]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21265 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30892 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616]
                                mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30892]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32250 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9616 + (32 * ('cd', 4).length) + 64] = mem[_32250]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33394 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9616 + (64 * ('cd', 4).length) + 96] = mem[_33394]
                            else:
                                mem[_21265 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29691 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29691] == mem[_29691 + 12 len 20]
                                    require s < mem[_21265]
                                    mem[(32 * s) + _21265 + 32] = mem[_29691 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32094 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21265 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _21265 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32094]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21265
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29499 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29499]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21265 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30894 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616]
                                mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30894]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32251 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9616 + (32 * ('cd', 4).length) + 64] = mem[_32251]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33395 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9616 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9616 + (64 * ('cd', 4).length) + 96] = mem[_33395]
                        idx = idx + 1
                        s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                        continue 
                    _19401 = mem[64]
                    mem[mem[64]] = 192
                    _19627 = mem[96]
                    mem[mem[64] + 192] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 224
                    u = mem[64] + 224
                    while idx < _19627:
                        mem[u] = t + -_19401 - 224
                        _28703 = mem[s]
                        _29015 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _28703 + 32
                        x = t + 32
                        while v < _29015:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _29015 + 1
                        w = _28703 + (32 * _29015) + 64
                        t = t + (32 * _29015) + 32
                        u = u + 32
                        continue 
                    mem[_19401 + 32] = t - _19401
                    _29319 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _29319) + 32
                    v = t + 32
                    while idx < _29319:
                        mem[v] = u + -t - 32
                        _35875 = mem[s]
                        _36095 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _35875 + 32
                        x = u + 32
                        while t < _36095:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _36095 + 1
                        w = _35875 + (32 * _36095) + 64
                        u = u + (32 * _36095) + 32
                        v = v + 32
                        continue 
                    mem[_19401 + 64] = u - _19401
                    _36279 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _36279] = mem[(32 * ('cd', 4).length) + 160 len 32 * _36279]
                    mem[_19401 + 96] = u + (32 * _36279) + -_19401 + 32
                    _38855 = mem[_9616]
                    mem[u + (32 * _36279) + 32] = mem[_9616]
                    mem[u + (32 * _36279) + 64 len 32 * _38855] = mem[_9616 + 32 len 32 * _38855]
                    mem[_19401 + 128] = u + (32 * _36279) + (32 * _38855) + -_19401 + 64
                    _39399 = mem[_9616 + (32 * ('cd', 4).length) + 32]
                    mem[u + (32 * _36279) + (32 * _38855) + 64] = mem[_9616 + (32 * ('cd', 4).length) + 32]
                    mem[u + (32 * _36279) + (32 * _38855) + 96 len 32 * _39399] = mem[_9616 + (32 * ('cd', 4).length) + 64 len 32 * _39399]
                    mem[_19401 + 160] = u + (32 * _36279) + (32 * _38855) + (32 * _39399) + -_19401 + 96
                    _39783 = mem[_9616 + (64 * ('cd', 4).length) + 64]
                    mem[u + (32 * _36279) + (32 * _38855) + (32 * _39399) + 96] = mem[_9616 + (64 * ('cd', 4).length) + 64]
                    mem[u + (32 * _36279) + (32 * _38855) + (32 * _39399) + 128 len 32 * _39783] = mem[_9616 + (64 * ('cd', 4).length) + 96 len 32 * _39783]
                    return memory
                      from mem[64]
                       len u + (32 * _36279) + (32 * _38855) + (32 * _39399) + (32 * _39783) + -mem[64] + 128
                mem[_9616 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21266 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21536 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29693 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29693] == mem[_29693 + 12 len 20]
                                require s < mem[_21266]
                                mem[(32 * s) + _21266 + 32] = mem[_29693 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32095 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21536]
                                mem[(32 * s) + _21536 + 32] = mem[_32095]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21266
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29501 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29501]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21536
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30897 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616]
                            mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30897]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32253 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9616 + (32 * ('cd', 4).length) + 64] = mem[_32253]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33397 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9616 + (64 * ('cd', 4).length) + 96] = mem[_33397]
                        else:
                            mem[_21536 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29694 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29694] == mem[_29694 + 12 len 20]
                                require s < mem[_21266]
                                mem[(32 * s) + _21266 + 32] = mem[_29694 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32096 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21536]
                                mem[(32 * s) + _21536 + 32] = mem[_32096]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21266
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29502 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29502]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21536
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30899 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616]
                            mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30899]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32254 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9616 + (32 * ('cd', 4).length) + 64] = mem[_32254]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33398 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9616 + (64 * ('cd', 4).length) + 96] = mem[_33398]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29695 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29695] == mem[_29695 + 12 len 20]
                                require s < mem[_21266]
                                mem[(32 * s) + _21266 + 32] = mem[_29695 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32097 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21266 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21266 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32097]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21266
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29503 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29503]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21266 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30901 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616]
                            mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30901]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32255 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9616 + (32 * ('cd', 4).length) + 64] = mem[_32255]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33399 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9616 + (64 * ('cd', 4).length) + 96] = mem[_33399]
                        else:
                            mem[_21266 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29696 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29696] == mem[_29696 + 12 len 20]
                                require s < mem[_21266]
                                mem[(32 * s) + _21266 + 32] = mem[_29696 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32098 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21266 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21266 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32098]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21266
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29504 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29504]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21266 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30903 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616]
                            mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30903]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32256 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9616 + (32 * ('cd', 4).length) + 64] = mem[_32256]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33400 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9616 + (64 * ('cd', 4).length) + 96] = mem[_33400]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _19402 = mem[64]
                mem[mem[64]] = 192
                _19628 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _19628:
                    mem[u] = t + -_19402 - 224
                    _28712 = mem[s]
                    _29024 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _28712 + 32
                    x = t + 32
                    while v < _29024:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _29024 + 1
                    w = _28712 + (32 * _29024) + 64
                    t = t + (32 * _29024) + 32
                    u = u + 32
                    continue 
                mem[_19402 + 32] = t - _19402
                _29324 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _29324) + 32
                v = t + 32
                while idx < _29324:
                    mem[v] = u + -t - 32
                    _35877 = mem[s]
                    _36096 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _35877 + 32
                    x = u + 32
                    while t < _36096:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _36096 + 1
                    w = _35877 + (32 * _36096) + 64
                    u = u + (32 * _36096) + 32
                    v = v + 32
                    continue 
                mem[_19402 + 64] = u - _19402
                _36280 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _36280] = mem[(32 * ('cd', 4).length) + 160 len 32 * _36280]
                mem[_19402 + 96] = u + (32 * _36280) + -_19402 + 32
                _38856 = mem[_9616]
                mem[u + (32 * _36280) + 32] = mem[_9616]
                mem[u + (32 * _36280) + 64 len 32 * _38856] = mem[_9616 + 32 len 32 * _38856]
                mem[_19402 + 128] = u + (32 * _36280) + (32 * _38856) + -_19402 + 64
                _39400 = mem[_9616 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _36280) + (32 * _38856) + 64] = mem[_9616 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _36280) + (32 * _38856) + 96 len 32 * _39400] = mem[_9616 + (32 * ('cd', 4).length) + 64 len 32 * _39400]
                mem[_19402 + 160] = u + (32 * _36280) + (32 * _38856) + (32 * _39400) + -_19402 + 96
                _39784 = mem[_9616 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36280) + (32 * _38856) + (32 * _39400) + 96] = mem[_9616 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36280) + (32 * _38856) + (32 * _39400) + 128 len 32 * _39784] = mem[_9616 + (64 * ('cd', 4).length) + 96 len 32 * _39784]
                return memory
                  from mem[64]
                   len u + (32 * _36280) + (32 * _38856) + (32 * _39400) + (32 * _39784) + -mem[64] + 128
            mem[mem[64] + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[mem[64] + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
            mem[64] = mem[64] + (98 * ('cd', 4).length) + 96
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21267 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21537 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29698 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29698] == mem[_29698 + 12 len 20]
                                require s < mem[_21267]
                                mem[(32 * s) + _21267 + 32] = mem[_29698 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32099 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21537]
                                mem[(32 * s) + _21537 + 32] = mem[_32099]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21267
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29506 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29506]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21537
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30906 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616]
                            mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30906]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32258 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9616 + (32 * ('cd', 4).length) + 64] = mem[_32258]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33402 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9616 + (64 * ('cd', 4).length) + 96] = mem[_33402]
                        else:
                            mem[_21537 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29699 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29699] == mem[_29699 + 12 len 20]
                                require s < mem[_21267]
                                mem[(32 * s) + _21267 + 32] = mem[_29699 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32100 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21537]
                                mem[(32 * s) + _21537 + 32] = mem[_32100]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21267
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29507 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29507]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21537
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30908 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616]
                            mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30908]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32259 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9616 + (32 * ('cd', 4).length) + 64] = mem[_32259]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33403 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9616 + (64 * ('cd', 4).length) + 96] = mem[_33403]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29700 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29700] == mem[_29700 + 12 len 20]
                                require s < mem[_21267]
                                mem[(32 * s) + _21267 + 32] = mem[_29700 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32101 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21267 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21267 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32101]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21267
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29508 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29508]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21267 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30910 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616]
                            mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30910]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32260 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9616 + (32 * ('cd', 4).length) + 64] = mem[_32260]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33404 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9616 + (64 * ('cd', 4).length) + 96] = mem[_33404]
                        else:
                            mem[_21267 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29701 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29701] == mem[_29701 + 12 len 20]
                                require s < mem[_21267]
                                mem[(32 * s) + _21267 + 32] = mem[_29701 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32102 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21267 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21267 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32102]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21267
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29509 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29509]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21267 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30912 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616]
                            mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30912]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32261 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9616 + (32 * ('cd', 4).length) + 64] = mem[_32261]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33405 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9616 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9616 + (64 * ('cd', 4).length) + 96] = mem[_33405]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _19403 = mem[64]
                mem[mem[64]] = 192
                _19629 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _19629:
                    mem[u] = t + -_19403 - 224
                    _28721 = mem[s]
                    _29033 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _28721 + 32
                    x = t + 32
                    while v < _29033:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _29033 + 1
                    w = _28721 + (32 * _29033) + 64
                    t = t + (32 * _29033) + 32
                    u = u + 32
                    continue 
                mem[_19403 + 32] = t - _19403
                _29329 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _29329) + 32
                v = t + 32
                while idx < _29329:
                    mem[v] = u + -t - 32
                    _35879 = mem[s]
                    _36097 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _35879 + 32
                    x = u + 32
                    while t < _36097:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _36097 + 1
                    w = _35879 + (32 * _36097) + 64
                    u = u + (32 * _36097) + 32
                    v = v + 32
                    continue 
                mem[_19403 + 64] = u - _19403
                _36281 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _36281] = mem[(32 * ('cd', 4).length) + 160 len 32 * _36281]
                mem[_19403 + 96] = u + (32 * _36281) + -_19403 + 32
                _38857 = mem[_9616]
                mem[u + (32 * _36281) + 32] = mem[_9616]
                mem[u + (32 * _36281) + 64 len 32 * _38857] = mem[_9616 + 32 len 32 * _38857]
                mem[_19403 + 128] = u + (32 * _36281) + (32 * _38857) + -_19403 + 64
                _39401 = mem[_9616 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _36281) + (32 * _38857) + 64] = mem[_9616 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _36281) + (32 * _38857) + 96 len 32 * _39401] = mem[_9616 + (32 * ('cd', 4).length) + 64 len 32 * _39401]
                mem[_19403 + 160] = u + (32 * _36281) + (32 * _38857) + (32 * _39401) + -_19403 + 96
                _39785 = mem[_9616 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36281) + (32 * _38857) + (32 * _39401) + 96] = mem[_9616 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36281) + (32 * _38857) + (32 * _39401) + 128 len 32 * _39785] = mem[_9616 + (64 * ('cd', 4).length) + 96 len 32 * _39785]
                return memory
                  from mem[64]
                   len u + (32 * _36281) + (32 * _38857) + (32 * _39401) + (32 * _39785) + -mem[64] + 128
            mem[_9616 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require uint32(idx) < ('cd', 68).length
                require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _21268 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21538 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _21538 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29703 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29703] == mem[_29703 + 12 len 20]
                            require s < mem[_21268]
                            mem[(32 * s) + _21268 + 32] = mem[_29703 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32103 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21538]
                            mem[(32 * s) + _21538 + 32] = mem[_32103]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21268
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29511 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29511]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21538
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30915 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9616]
                        mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30915]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32263 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9616 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9616 + (32 * ('cd', 4).length) + 64] = mem[_32263]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33407 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9616 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9616 + (64 * ('cd', 4).length) + 96] = mem[_33407]
                    else:
                        mem[_21538 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29704 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29704] == mem[_29704 + 12 len 20]
                            require s < mem[_21268]
                            mem[(32 * s) + _21268 + 32] = mem[_29704 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32104 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21538]
                            mem[(32 * s) + _21538 + 32] = mem[_32104]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21268
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29512 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29512]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21538
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30917 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9616]
                        mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30917]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32264 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9616 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9616 + (32 * ('cd', 4).length) + 64] = mem[_32264]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33408 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9616 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9616 + (64 * ('cd', 4).length) + 96] = mem[_33408]
                else:
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _21268 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29705 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29705] == mem[_29705 + 12 len 20]
                            require s < mem[_21268]
                            mem[(32 * s) + _21268 + 32] = mem[_29705 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32105 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21268 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _21268 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32105]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21268
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29513 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29513]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21268 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30919 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9616]
                        mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30919]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32265 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9616 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9616 + (32 * ('cd', 4).length) + 64] = mem[_32265]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33409 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9616 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9616 + (64 * ('cd', 4).length) + 96] = mem[_33409]
                    else:
                        mem[_21268 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29706 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29706] == mem[_29706 + 12 len 20]
                            require s < mem[_21268]
                            mem[(32 * s) + _21268 + 32] = mem[_29706 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32106 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21268 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _21268 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32106]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21268
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29514 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29514]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21268 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30921 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9616]
                        mem[(32 * uint32(idx)) + _9616 + 32] = mem[_30921]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32266 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9616 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9616 + (32 * ('cd', 4).length) + 64] = mem[_32266]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33410 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9616 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9616 + (64 * ('cd', 4).length) + 96] = mem[_33410]
                idx = idx + 1
                s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                continue 
            _19404 = mem[64]
            mem[mem[64]] = 192
            _19630 = mem[96]
            mem[mem[64] + 192] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 224
            u = mem[64] + 224
            while idx < _19630:
                mem[u] = t + -_19404 - 224
                _28730 = mem[s]
                _29042 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _28730 + 32
                x = t + 32
                while v < _29042:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _29042 + 1
                w = _28730 + (32 * _29042) + 64
                t = t + (32 * _29042) + 32
                u = u + 32
                continue 
            mem[_19404 + 32] = t - _19404
            _29334 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _29334) + 32
            v = t + 32
            while idx < _29334:
                mem[v] = u + -t - 32
                _35881 = mem[s]
                _36098 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _35881 + 32
                x = u + 32
                while t < _36098:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _36098 + 1
                w = _35881 + (32 * _36098) + 64
                u = u + (32 * _36098) + 32
                v = v + 32
                continue 
            mem[_19404 + 64] = u - _19404
            _36282 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _36282] = mem[(32 * ('cd', 4).length) + 160 len 32 * _36282]
            mem[_19404 + 96] = u + (32 * _36282) + -_19404 + 32
            _38858 = mem[_9616]
            mem[u + (32 * _36282) + 32] = mem[_9616]
            mem[u + (32 * _36282) + 64 len 32 * _38858] = mem[_9616 + 32 len 32 * _38858]
            mem[_19404 + 128] = u + (32 * _36282) + (32 * _38858) + -_19404 + 64
            _39402 = mem[_9616 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _36282) + (32 * _38858) + 64] = mem[_9616 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _36282) + (32 * _38858) + 96 len 32 * _39402] = mem[_9616 + (32 * ('cd', 4).length) + 64 len 32 * _39402]
            mem[_19404 + 160] = u + (32 * _36282) + (32 * _38858) + (32 * _39402) + -_19404 + 96
            _39786 = mem[_9616 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _36282) + (32 * _38858) + (32 * _39402) + 96] = mem[_9616 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _36282) + (32 * _38858) + (32 * _39402) + 128 len 32 * _39786] = mem[_9616 + (64 * ('cd', 4).length) + 96 len 32 * _39786]
            return memory
              from mem[64]
               len u + (32 * _36282) + (32 * _38858) + (32 * _39402) + (32 * _39786) + -mem[64] + 128
        mem[(32 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[(64 * ('cd', 4).length) + 160] = ('cd', 4).length
        mem[64] = (98 * ('cd', 4).length) + 192
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[(98 * ('cd', 4).length) + 192] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
                if not ('cd', 4).length:
                    require ('cd', 4).length <= test266151307()
                    mem[(164 * ('cd', 4).length) + 256] = ('cd', 4).length
                    mem[64] = (197 * ('cd', 4).length) + 288
                    if not ('cd', 4).length:
                        idx = 0
                        s = 0
                        s = 0
                        s = 0
                        while ('cd', 4).length > uint32(idx):
                            require uint32(idx) < ('cd', 36).length
                            require uint32(idx) < ('cd', 4).length
                            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                            require uint32(idx) < ('cd', 68).length
                            require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _9898 = mem[64]
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                _9978 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19736 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_19736] == mem[_19736 + 12 len 20]
                                        require s < mem[_9898]
                                        mem[(32 * s) + _9898 + 32] = mem[_19736 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21155 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_9978]
                                        mem[(32 * s) + _9978 + 32] = mem[_21155]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _9898
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19632 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19632]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9978
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _20476 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20476]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21270 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21270]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22156 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                    mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22156]
                                else:
                                    mem[_9978 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19737 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_19737] == mem[_19737 + 12 len 20]
                                        require s < mem[_9898]
                                        mem[(32 * s) + _9898 + 32] = mem[_19737 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21156 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_9978]
                                        mem[(32 * s) + _9978 + 32] = mem[_21156]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _9898
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19633 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19633]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9978
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _20478 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20478]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21271 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21271]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22157 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                    mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22157]
                            else:
                                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19738 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_19738] == mem[_19738 + 12 len 20]
                                        require s < mem[_9898]
                                        mem[(32 * s) + _9898 + 32] = mem[_19738 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21157 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_9898 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                        mem[(32 * s) + _9898 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21157]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _9898
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19634 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19634]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9898 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _20480 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20480]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21272 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21272]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22158 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                    mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22158]
                                else:
                                    mem[_9898 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _19739 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_19739] == mem[_19739 + 12 len 20]
                                        require s < mem[_9898]
                                        mem[(32 * s) + _9898 + 32] = mem[_19739 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _21158 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_9898 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                        mem[(32 * s) + _9898 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21158]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _9898
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19635 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19635]
                                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9898 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _20482 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                    mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20482]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21273 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                    mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21273]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22159 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                    mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22159]
                            idx = idx + 1
                            s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                            s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                            continue 
                        _9608 = mem[64]
                        mem[mem[64]] = 192
                        _9627 = mem[96]
                        mem[mem[64] + 192] = mem[96]
                        idx = 0
                        s = 128
                        t = mem[64] + (32 * mem[96]) + 224
                        u = mem[64] + 224
                        while idx < _9627:
                            mem[u] = t + -_9608 - 224
                            _19253 = mem[s]
                            _19405 = mem[mem[s]]
                            mem[t] = mem[mem[s]]
                            v = 0
                            w = _19253 + 32
                            x = t + 32
                            while v < _19405:
                                mem[x] = mem[w + 12 len 20]
                                v = v + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            v = _19405 + 1
                            w = _19253 + (32 * _19405) + 64
                            t = t + (32 * _19405) + 32
                            u = u + 32
                            continue 
                        mem[_9608 + 32] = t - _9608
                        _19541 = mem[(64 * ('cd', 4).length) + 160]
                        mem[t] = mem[(64 * ('cd', 4).length) + 160]
                        idx = 0
                        s = (64 * ('cd', 4).length) + 192
                        u = t + (32 * _19541) + 32
                        v = t + 32
                        while idx < _19541:
                            mem[v] = u + -t - 32
                            _28739 = mem[s]
                            _29051 = mem[mem[s]]
                            mem[u] = mem[mem[s]]
                            t = 0
                            w = _28739 + 32
                            x = u + 32
                            while t < _29051:
                                mem[x] = mem[w]
                                t = t + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            t = _29051 + 1
                            w = _28739 + (32 * _29051) + 64
                            u = u + (32 * _29051) + 32
                            v = v + 32
                            continue 
                        mem[_9608 + 64] = u - _9608
                        _29339 = mem[(32 * ('cd', 4).length) + 128]
                        mem[u] = mem[(32 * ('cd', 4).length) + 128]
                        mem[u + 32 len 32 * _29339] = mem[(32 * ('cd', 4).length) + 160 len 32 * _29339]
                        mem[_9608 + 96] = u + (32 * _29339) + -_9608 + 32
                        _36283 = mem[(98 * ('cd', 4).length) + 192]
                        mem[u + (32 * _29339) + 32] = mem[(98 * ('cd', 4).length) + 192]
                        mem[u + (32 * _29339) + 64 len 32 * _36283] = mem[(98 * ('cd', 4).length) + 224 len 32 * _36283]
                        mem[_9608 + 128] = u + (32 * _29339) + (32 * _36283) + -_9608 + 64
                        _38859 = mem[(131 * ('cd', 4).length) + 224]
                        mem[u + (32 * _29339) + (32 * _36283) + 64] = mem[(131 * ('cd', 4).length) + 224]
                        mem[u + (32 * _29339) + (32 * _36283) + 96 len 32 * _38859] = mem[(131 * ('cd', 4).length) + 256 len 32 * _38859]
                        mem[_9608 + 160] = u + (32 * _29339) + (32 * _36283) + (32 * _38859) + -_9608 + 96
                        _39403 = mem[(164 * ('cd', 4).length) + 256]
                        mem[u + (32 * _29339) + (32 * _36283) + (32 * _38859) + 96] = mem[(164 * ('cd', 4).length) + 256]
                        mem[u + (32 * _29339) + (32 * _36283) + (32 * _38859) + 128 len 32 * _39403] = mem[(164 * ('cd', 4).length) + 288 len 32 * _39403]
                        return memory
                          from mem[64]
                           len u + (32 * _29339) + (32 * _36283) + (32 * _38859) + (32 * _39403) + -mem[64] + 128
                    mem[(164 * ('cd', 4).length) + 288 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require uint32(idx) < ('cd', 68).length
                        require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _9899 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _9979 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _9979 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19741 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19741] == mem[_19741 + 12 len 20]
                                    require s < mem[_9899]
                                    mem[(32 * s) + _9899 + 32] = mem[_19741 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21159 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9979]
                                    mem[(32 * s) + _9979 + 32] = mem[_21159]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9899
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19637 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19637]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9979
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20485 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20485]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21275 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21275]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22161 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22161]
                            else:
                                mem[_9979 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19742 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19742] == mem[_19742 + 12 len 20]
                                    require s < mem[_9899]
                                    mem[(32 * s) + _9899 + 32] = mem[_19742 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21160 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9979]
                                    mem[(32 * s) + _9979 + 32] = mem[_21160]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9899
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19638 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19638]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9979
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20487 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20487]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21276 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21276]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22162 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22162]
                        else:
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _9899 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19743 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19743] == mem[_19743 + 12 len 20]
                                    require s < mem[_9899]
                                    mem[(32 * s) + _9899 + 32] = mem[_19743 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21161 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9899 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _9899 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21161]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9899
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19639 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19639]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9899 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20489 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20489]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21277 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21277]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22163 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22163]
                            else:
                                mem[_9899 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19744 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19744] == mem[_19744 + 12 len 20]
                                    require s < mem[_9899]
                                    mem[(32 * s) + _9899 + 32] = mem[_19744 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21162 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9899 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _9899 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21162]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9899
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19640 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19640]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9899 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20491 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20491]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21278 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21278]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22164 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22164]
                        idx = idx + 1
                        s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                        continue 
                    _9609 = mem[64]
                    mem[mem[64]] = 192
                    _9628 = mem[96]
                    mem[mem[64] + 192] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 224
                    u = mem[64] + 224
                    while idx < _9628:
                        mem[u] = t + -_9609 - 224
                        _19262 = mem[s]
                        _19414 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _19262 + 32
                        x = t + 32
                        while v < _19414:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _19414 + 1
                        w = _19262 + (32 * _19414) + 64
                        t = t + (32 * _19414) + 32
                        u = u + 32
                        continue 
                    mem[_9609 + 32] = t - _9609
                    _19546 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _19546) + 32
                    v = t + 32
                    while idx < _19546:
                        mem[v] = u + -t - 32
                        _28741 = mem[s]
                        _29052 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _28741 + 32
                        x = u + 32
                        while t < _29052:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _29052 + 1
                        w = _28741 + (32 * _29052) + 64
                        u = u + (32 * _29052) + 32
                        v = v + 32
                        continue 
                    mem[_9609 + 64] = u - _9609
                    _29340 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _29340] = mem[(32 * ('cd', 4).length) + 160 len 32 * _29340]
                    mem[_9609 + 96] = u + (32 * _29340) + -_9609 + 32
                    _36284 = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _29340) + 32] = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _29340) + 64 len 32 * _36284] = mem[(98 * ('cd', 4).length) + 224 len 32 * _36284]
                    mem[_9609 + 128] = u + (32 * _29340) + (32 * _36284) + -_9609 + 64
                    _38860 = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _29340) + (32 * _36284) + 64] = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _29340) + (32 * _36284) + 96 len 32 * _38860] = mem[(131 * ('cd', 4).length) + 256 len 32 * _38860]
                    mem[_9609 + 160] = u + (32 * _29340) + (32 * _36284) + (32 * _38860) + -_9609 + 96
                    _39404 = mem[(164 * ('cd', 4).length) + 256]
                    mem[u + (32 * _29340) + (32 * _36284) + (32 * _38860) + 96] = mem[(164 * ('cd', 4).length) + 256]
                    mem[u + (32 * _29340) + (32 * _36284) + (32 * _38860) + 128 len 32 * _39404] = mem[(164 * ('cd', 4).length) + 288 len 32 * _39404]
                    return memory
                      from mem[64]
                       len u + (32 * _29340) + (32 * _36284) + (32 * _38860) + (32 * _39404) + -mem[64] + 128
                mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                require ('cd', 4).length <= test266151307()
                mem[(164 * ('cd', 4).length) + 256] = ('cd', 4).length
                mem[64] = (197 * ('cd', 4).length) + 288
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require uint32(idx) < ('cd', 68).length
                        require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _9900 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _9980 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _9980 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19746 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19746] == mem[_19746 + 12 len 20]
                                    require s < mem[_9900]
                                    mem[(32 * s) + _9900 + 32] = mem[_19746 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21163 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9980]
                                    mem[(32 * s) + _9980 + 32] = mem[_21163]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9900
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19642 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19642]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9980
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20494 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20494]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21280 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21280]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22166 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22166]
                            else:
                                mem[_9980 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19747 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19747] == mem[_19747 + 12 len 20]
                                    require s < mem[_9900]
                                    mem[(32 * s) + _9900 + 32] = mem[_19747 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21164 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9980]
                                    mem[(32 * s) + _9980 + 32] = mem[_21164]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9900
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19643 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19643]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9980
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20496 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20496]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21281 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21281]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22167 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22167]
                        else:
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _9900 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19748 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19748] == mem[_19748 + 12 len 20]
                                    require s < mem[_9900]
                                    mem[(32 * s) + _9900 + 32] = mem[_19748 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21165 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9900 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _9900 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21165]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9900
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19644 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19644]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9900 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20498 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20498]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21282 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21282]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22168 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22168]
                            else:
                                mem[_9900 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19749 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19749] == mem[_19749 + 12 len 20]
                                    require s < mem[_9900]
                                    mem[(32 * s) + _9900 + 32] = mem[_19749 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21166 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9900 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _9900 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21166]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9900
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19645 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19645]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9900 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20500 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20500]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21283 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21283]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22169 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22169]
                        idx = idx + 1
                        s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                        continue 
                    _9610 = mem[64]
                    mem[mem[64]] = 192
                    _9629 = mem[96]
                    mem[mem[64] + 192] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 224
                    u = mem[64] + 224
                    while idx < _9629:
                        mem[u] = t + -_9610 - 224
                        _19271 = mem[s]
                        _19423 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _19271 + 32
                        x = t + 32
                        while v < _19423:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _19423 + 1
                        w = _19271 + (32 * _19423) + 64
                        t = t + (32 * _19423) + 32
                        u = u + 32
                        continue 
                    mem[_9610 + 32] = t - _9610
                    _19551 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _19551) + 32
                    v = t + 32
                    while idx < _19551:
                        mem[v] = u + -t - 32
                        _28743 = mem[s]
                        _29053 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _28743 + 32
                        x = u + 32
                        while t < _29053:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _29053 + 1
                        w = _28743 + (32 * _29053) + 64
                        u = u + (32 * _29053) + 32
                        v = v + 32
                        continue 
                    mem[_9610 + 64] = u - _9610
                    _29341 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _29341] = mem[(32 * ('cd', 4).length) + 160 len 32 * _29341]
                    mem[_9610 + 96] = u + (32 * _29341) + -_9610 + 32
                    _36285 = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _29341) + 32] = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _29341) + 64 len 32 * _36285] = mem[(98 * ('cd', 4).length) + 224 len 32 * _36285]
                    mem[_9610 + 128] = u + (32 * _29341) + (32 * _36285) + -_9610 + 64
                    _38861 = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _29341) + (32 * _36285) + 64] = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _29341) + (32 * _36285) + 96 len 32 * _38861] = mem[(131 * ('cd', 4).length) + 256 len 32 * _38861]
                    mem[_9610 + 160] = u + (32 * _29341) + (32 * _36285) + (32 * _38861) + -_9610 + 96
                    _39405 = mem[(164 * ('cd', 4).length) + 256]
                    mem[u + (32 * _29341) + (32 * _36285) + (32 * _38861) + 96] = mem[(164 * ('cd', 4).length) + 256]
                    mem[u + (32 * _29341) + (32 * _36285) + (32 * _38861) + 128 len 32 * _39405] = mem[(164 * ('cd', 4).length) + 288 len 32 * _39405]
                    return memory
                      from mem[64]
                       len u + (32 * _29341) + (32 * _36285) + (32 * _38861) + (32 * _39405) + -mem[64] + 128
                mem[(164 * ('cd', 4).length) + 288 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _9901 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _9981 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _9981 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19751 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_19751] == mem[_19751 + 12 len 20]
                                require s < mem[_9901]
                                mem[(32 * s) + _9901 + 32] = mem[_19751 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21167 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_9981]
                                mem[(32 * s) + _9981 + 32] = mem[_21167]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _9901
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19647 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19647]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9981
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20503 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20503]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21285 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21285]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22171 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                            mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22171]
                        else:
                            mem[_9981 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19752 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_19752] == mem[_19752 + 12 len 20]
                                require s < mem[_9901]
                                mem[(32 * s) + _9901 + 32] = mem[_19752 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21168 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_9981]
                                mem[(32 * s) + _9981 + 32] = mem[_21168]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _9901
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19648 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19648]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9981
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20505 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20505]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21286 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21286]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22172 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                            mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22172]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _9901 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19753 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_19753] == mem[_19753 + 12 len 20]
                                require s < mem[_9901]
                                mem[(32 * s) + _9901 + 32] = mem[_19753 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21169 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_9901 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _9901 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21169]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _9901
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19649 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19649]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9901 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20507 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20507]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21287 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21287]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22173 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                            mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22173]
                        else:
                            mem[_9901 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19754 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_19754] == mem[_19754 + 12 len 20]
                                require s < mem[_9901]
                                mem[(32 * s) + _9901 + 32] = mem[_19754 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21170 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_9901 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _9901 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21170]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _9901
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19650 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19650]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9901 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20509 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20509]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21288 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21288]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22174 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                            mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22174]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _9611 = mem[64]
                mem[mem[64]] = 192
                _9630 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _9630:
                    mem[u] = t + -_9611 - 224
                    _19280 = mem[s]
                    _19432 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _19280 + 32
                    x = t + 32
                    while v < _19432:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _19432 + 1
                    w = _19280 + (32 * _19432) + 64
                    t = t + (32 * _19432) + 32
                    u = u + 32
                    continue 
                mem[_9611 + 32] = t - _9611
                _19556 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _19556) + 32
                v = t + 32
                while idx < _19556:
                    mem[v] = u + -t - 32
                    _28745 = mem[s]
                    _29054 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _28745 + 32
                    x = u + 32
                    while t < _29054:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _29054 + 1
                    w = _28745 + (32 * _29054) + 64
                    u = u + (32 * _29054) + 32
                    v = v + 32
                    continue 
                mem[_9611 + 64] = u - _9611
                _29342 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _29342] = mem[(32 * ('cd', 4).length) + 160 len 32 * _29342]
                mem[_9611 + 96] = u + (32 * _29342) + -_9611 + 32
                _36286 = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _29342) + 32] = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _29342) + 64 len 32 * _36286] = mem[(98 * ('cd', 4).length) + 224 len 32 * _36286]
                mem[_9611 + 128] = u + (32 * _29342) + (32 * _36286) + -_9611 + 64
                _38862 = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _29342) + (32 * _36286) + 64] = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _29342) + (32 * _36286) + 96 len 32 * _38862] = mem[(131 * ('cd', 4).length) + 256 len 32 * _38862]
                mem[_9611 + 160] = u + (32 * _29342) + (32 * _36286) + (32 * _38862) + -_9611 + 96
                _39406 = mem[(164 * ('cd', 4).length) + 256]
                mem[u + (32 * _29342) + (32 * _36286) + (32 * _38862) + 96] = mem[(164 * ('cd', 4).length) + 256]
                mem[u + (32 * _29342) + (32 * _36286) + (32 * _38862) + 128 len 32 * _39406] = mem[(164 * ('cd', 4).length) + 288 len 32 * _39406]
                return memory
                  from mem[64]
                   len u + (32 * _29342) + (32 * _36286) + (32 * _38862) + (32 * _39406) + -mem[64] + 128
            mem[(98 * ('cd', 4).length) + 224 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[(131 * ('cd', 4).length) + 224] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[(164 * ('cd', 4).length) + 256] = ('cd', 4).length
                mem[64] = (197 * ('cd', 4).length) + 288
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require uint32(idx) < ('cd', 68).length
                        require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _9902 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _9982 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _9982 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19756 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19756] == mem[_19756 + 12 len 20]
                                    require s < mem[_9902]
                                    mem[(32 * s) + _9902 + 32] = mem[_19756 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21171 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9982]
                                    mem[(32 * s) + _9982 + 32] = mem[_21171]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9902
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19652 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19652]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9982
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20512 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20512]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21290 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21290]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22176 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22176]
                            else:
                                mem[_9982 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19757 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19757] == mem[_19757 + 12 len 20]
                                    require s < mem[_9902]
                                    mem[(32 * s) + _9902 + 32] = mem[_19757 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21172 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9982]
                                    mem[(32 * s) + _9982 + 32] = mem[_21172]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9902
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19653 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19653]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9982
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20514 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20514]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21291 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21291]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22177 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22177]
                        else:
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = _9902 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19758 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19758] == mem[_19758 + 12 len 20]
                                    require s < mem[_9902]
                                    mem[(32 * s) + _9902 + 32] = mem[_19758 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21173 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9902 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _9902 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21173]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9902
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19654 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19654]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9902 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20516 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20516]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21292 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21292]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22178 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22178]
                            else:
                                mem[_9902 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _19759 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_19759] == mem[_19759 + 12 len 20]
                                    require s < mem[_9902]
                                    mem[(32 * s) + _9902 + 32] = mem[_19759 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _21174 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_9902 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _9902 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21174]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _9902
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19655 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19655]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9902 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _20518 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                                mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20518]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21293 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                                mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21293]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22179 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                                mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22179]
                        idx = idx + 1
                        s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                        continue 
                    _9612 = mem[64]
                    mem[mem[64]] = 192
                    _9631 = mem[96]
                    mem[mem[64] + 192] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 224
                    u = mem[64] + 224
                    while idx < _9631:
                        mem[u] = t + -_9612 - 224
                        _19289 = mem[s]
                        _19441 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _19289 + 32
                        x = t + 32
                        while v < _19441:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _19441 + 1
                        w = _19289 + (32 * _19441) + 64
                        t = t + (32 * _19441) + 32
                        u = u + 32
                        continue 
                    mem[_9612 + 32] = t - _9612
                    _19561 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _19561) + 32
                    v = t + 32
                    while idx < _19561:
                        mem[v] = u + -t - 32
                        _28747 = mem[s]
                        _29055 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _28747 + 32
                        x = u + 32
                        while t < _29055:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _29055 + 1
                        w = _28747 + (32 * _29055) + 64
                        u = u + (32 * _29055) + 32
                        v = v + 32
                        continue 
                    mem[_9612 + 64] = u - _9612
                    _29343 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _29343] = mem[(32 * ('cd', 4).length) + 160 len 32 * _29343]
                    mem[_9612 + 96] = u + (32 * _29343) + -_9612 + 32
                    _36287 = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _29343) + 32] = mem[(98 * ('cd', 4).length) + 192]
                    mem[u + (32 * _29343) + 64 len 32 * _36287] = mem[(98 * ('cd', 4).length) + 224 len 32 * _36287]
                    mem[_9612 + 128] = u + (32 * _29343) + (32 * _36287) + -_9612 + 64
                    _38863 = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _29343) + (32 * _36287) + 64] = mem[(131 * ('cd', 4).length) + 224]
                    mem[u + (32 * _29343) + (32 * _36287) + 96 len 32 * _38863] = mem[(131 * ('cd', 4).length) + 256 len 32 * _38863]
                    mem[_9612 + 160] = u + (32 * _29343) + (32 * _36287) + (32 * _38863) + -_9612 + 96
                    _39407 = mem[(164 * ('cd', 4).length) + 256]
                    mem[u + (32 * _29343) + (32 * _36287) + (32 * _38863) + 96] = mem[(164 * ('cd', 4).length) + 256]
                    mem[u + (32 * _29343) + (32 * _36287) + (32 * _38863) + 128 len 32 * _39407] = mem[(164 * ('cd', 4).length) + 288 len 32 * _39407]
                    return memory
                      from mem[64]
                       len u + (32 * _29343) + (32 * _36287) + (32 * _38863) + (32 * _39407) + -mem[64] + 128
                mem[(164 * ('cd', 4).length) + 288 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _9903 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _9983 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _9983 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19761 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_19761] == mem[_19761 + 12 len 20]
                                require s < mem[_9903]
                                mem[(32 * s) + _9903 + 32] = mem[_19761 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21175 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_9983]
                                mem[(32 * s) + _9983 + 32] = mem[_21175]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _9903
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19657 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19657]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9983
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20521 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20521]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21295 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21295]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22181 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                            mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22181]
                        else:
                            mem[_9983 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19762 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_19762] == mem[_19762 + 12 len 20]
                                require s < mem[_9903]
                                mem[(32 * s) + _9903 + 32] = mem[_19762 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21176 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_9983]
                                mem[(32 * s) + _9983 + 32] = mem[_21176]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _9903
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19658 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19658]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9983
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20523 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20523]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21296 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21296]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22182 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                            mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22182]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _9903 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19763 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_19763] == mem[_19763 + 12 len 20]
                                require s < mem[_9903]
                                mem[(32 * s) + _9903 + 32] = mem[_19763 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21177 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_9903 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _9903 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21177]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _9903
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19659 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19659]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9903 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20525 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20525]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21297 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21297]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22183 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                            mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22183]
                        else:
                            mem[_9903 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19764 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_19764] == mem[_19764 + 12 len 20]
                                require s < mem[_9903]
                                mem[(32 * s) + _9903 + 32] = mem[_19764 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21178 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_9903 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _9903 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21178]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _9903
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19660 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19660]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9903 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20527 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20527]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21298 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21298]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22184 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                            mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22184]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _9613 = mem[64]
                mem[mem[64]] = 192
                _9632 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _9632:
                    mem[u] = t + -_9613 - 224
                    _19298 = mem[s]
                    _19450 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _19298 + 32
                    x = t + 32
                    while v < _19450:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _19450 + 1
                    w = _19298 + (32 * _19450) + 64
                    t = t + (32 * _19450) + 32
                    u = u + 32
                    continue 
                mem[_9613 + 32] = t - _9613
                _19566 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _19566) + 32
                v = t + 32
                while idx < _19566:
                    mem[v] = u + -t - 32
                    _28749 = mem[s]
                    _29056 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _28749 + 32
                    x = u + 32
                    while t < _29056:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _29056 + 1
                    w = _28749 + (32 * _29056) + 64
                    u = u + (32 * _29056) + 32
                    v = v + 32
                    continue 
                mem[_9613 + 64] = u - _9613
                _29344 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _29344] = mem[(32 * ('cd', 4).length) + 160 len 32 * _29344]
                mem[_9613 + 96] = u + (32 * _29344) + -_9613 + 32
                _36288 = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _29344) + 32] = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _29344) + 64 len 32 * _36288] = mem[(98 * ('cd', 4).length) + 224 len 32 * _36288]
                mem[_9613 + 128] = u + (32 * _29344) + (32 * _36288) + -_9613 + 64
                _38864 = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _29344) + (32 * _36288) + 64] = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _29344) + (32 * _36288) + 96 len 32 * _38864] = mem[(131 * ('cd', 4).length) + 256 len 32 * _38864]
                mem[_9613 + 160] = u + (32 * _29344) + (32 * _36288) + (32 * _38864) + -_9613 + 96
                _39408 = mem[(164 * ('cd', 4).length) + 256]
                mem[u + (32 * _29344) + (32 * _36288) + (32 * _38864) + 96] = mem[(164 * ('cd', 4).length) + 256]
                mem[u + (32 * _29344) + (32 * _36288) + (32 * _38864) + 128 len 32 * _39408] = mem[(164 * ('cd', 4).length) + 288 len 32 * _39408]
                return memory
                  from mem[64]
                   len u + (32 * _29344) + (32 * _36288) + (32 * _38864) + (32 * _39408) + -mem[64] + 128
            mem[(131 * ('cd', 4).length) + 256 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[(164 * ('cd', 4).length) + 256] = ('cd', 4).length
            mem[64] = (197 * ('cd', 4).length) + 288
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _9904 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _9984 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _9984 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19766 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_19766] == mem[_19766 + 12 len 20]
                                require s < mem[_9904]
                                mem[(32 * s) + _9904 + 32] = mem[_19766 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21179 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_9984]
                                mem[(32 * s) + _9984 + 32] = mem[_21179]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _9904
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19662 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19662]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9984
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20530 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20530]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21300 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21300]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22186 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                            mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22186]
                        else:
                            mem[_9984 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19767 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_19767] == mem[_19767 + 12 len 20]
                                require s < mem[_9904]
                                mem[(32 * s) + _9904 + 32] = mem[_19767 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21180 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_9984]
                                mem[(32 * s) + _9984 + 32] = mem[_21180]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _9904
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19663 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19663]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9984
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20532 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20532]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21301 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21301]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22187 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                            mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22187]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = _9904 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19768 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_19768] == mem[_19768 + 12 len 20]
                                require s < mem[_9904]
                                mem[(32 * s) + _9904 + 32] = mem[_19768 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21181 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_9904 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _9904 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21181]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _9904
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19664 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19664]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9904 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20534 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20534]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21302 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21302]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22188 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                            mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22188]
                        else:
                            mem[_9904 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19769 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_19769] == mem[_19769 + 12 len 20]
                                require s < mem[_9904]
                                mem[(32 * s) + _9904 + 32] = mem[_19769 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _21182 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_9904 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _9904 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21182]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _9904
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19665 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19665]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9904 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _20536 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                            mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20536]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21303 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                            mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21303]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22189 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                            mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22189]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _9614 = mem[64]
                mem[mem[64]] = 192
                _9633 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _9633:
                    mem[u] = t + -_9614 - 224
                    _19307 = mem[s]
                    _19459 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _19307 + 32
                    x = t + 32
                    while v < _19459:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _19459 + 1
                    w = _19307 + (32 * _19459) + 64
                    t = t + (32 * _19459) + 32
                    u = u + 32
                    continue 
                mem[_9614 + 32] = t - _9614
                _19571 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _19571) + 32
                v = t + 32
                while idx < _19571:
                    mem[v] = u + -t - 32
                    _28751 = mem[s]
                    _29057 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _28751 + 32
                    x = u + 32
                    while t < _29057:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _29057 + 1
                    w = _28751 + (32 * _29057) + 64
                    u = u + (32 * _29057) + 32
                    v = v + 32
                    continue 
                mem[_9614 + 64] = u - _9614
                _29345 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _29345] = mem[(32 * ('cd', 4).length) + 160 len 32 * _29345]
                mem[_9614 + 96] = u + (32 * _29345) + -_9614 + 32
                _36289 = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _29345) + 32] = mem[(98 * ('cd', 4).length) + 192]
                mem[u + (32 * _29345) + 64 len 32 * _36289] = mem[(98 * ('cd', 4).length) + 224 len 32 * _36289]
                mem[_9614 + 128] = u + (32 * _29345) + (32 * _36289) + -_9614 + 64
                _38865 = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _29345) + (32 * _36289) + 64] = mem[(131 * ('cd', 4).length) + 224]
                mem[u + (32 * _29345) + (32 * _36289) + 96 len 32 * _38865] = mem[(131 * ('cd', 4).length) + 256 len 32 * _38865]
                mem[_9614 + 160] = u + (32 * _29345) + (32 * _36289) + (32 * _38865) + -_9614 + 96
                _39409 = mem[(164 * ('cd', 4).length) + 256]
                mem[u + (32 * _29345) + (32 * _36289) + (32 * _38865) + 96] = mem[(164 * ('cd', 4).length) + 256]
                mem[u + (32 * _29345) + (32 * _36289) + (32 * _38865) + 128 len 32 * _39409] = mem[(164 * ('cd', 4).length) + 288 len 32 * _39409]
                return memory
                  from mem[64]
                   len u + (32 * _29345) + (32 * _36289) + (32 * _38865) + (32 * _39409) + -mem[64] + 128
            mem[(164 * ('cd', 4).length) + 288 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require uint32(idx) < ('cd', 68).length
                require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _9905 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _9985 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19771 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_19771] == mem[_19771 + 12 len 20]
                            require s < mem[_9905]
                            mem[(32 * s) + _9905 + 32] = mem[_19771 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21183 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_9985]
                            mem[(32 * s) + _9985 + 32] = mem[_21183]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _9905
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19667 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19667]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9985
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _20539 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20539]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _21305 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21305]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22191 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                        mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22191]
                    else:
                        mem[_9985 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19772 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_19772] == mem[_19772 + 12 len 20]
                            require s < mem[_9905]
                            mem[(32 * s) + _9905 + 32] = mem[_19772 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21184 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_9985]
                            mem[(32 * s) + _9985 + 32] = mem[_21184]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _9905
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19668 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19668]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9985
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _20541 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20541]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _21306 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21306]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22192 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                        mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22192]
                else:
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19773 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_19773] == mem[_19773 + 12 len 20]
                            require s < mem[_9905]
                            mem[(32 * s) + _9905 + 32] = mem[_19773 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21185 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_9905 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _9905 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21185]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _9905
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19669 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19669]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9905 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _20543 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20543]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _21307 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21307]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22193 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                        mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22193]
                    else:
                        mem[_9905 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19774 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_19774] == mem[_19774 + 12 len 20]
                            require s < mem[_9905]
                            mem[(32 * s) + _9905 + 32] = mem[_19774 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _21186 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_9905 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _9905 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_21186]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _9905
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19670 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_19670]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _9905 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _20545 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(98 * ('cd', 4).length) + 192]
                        mem[(32 * uint32(idx)) + (98 * ('cd', 4).length) + 224] = mem[_20545]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _21308 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(131 * ('cd', 4).length) + 224]
                        mem[(32 * uint32(idx)) + (131 * ('cd', 4).length) + 256] = mem[_21308]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22194 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(164 * ('cd', 4).length) + 256]
                        mem[(32 * uint32(idx)) + (164 * ('cd', 4).length) + 288] = mem[_22194]
                idx = idx + 1
                s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                continue 
            _9615 = mem[64]
            mem[mem[64]] = 192
            _9634 = mem[96]
            mem[mem[64] + 192] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 224
            u = mem[64] + 224
            while idx < _9634:
                mem[u] = t + -_9615 - 224
                _19316 = mem[s]
                _19468 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _19316 + 32
                x = t + 32
                while v < _19468:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _19468 + 1
                w = _19316 + (32 * _19468) + 64
                t = t + (32 * _19468) + 32
                u = u + 32
                continue 
            mem[_9615 + 32] = t - _9615
            _19576 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _19576) + 32
            v = t + 32
            while idx < _19576:
                mem[v] = u + -t - 32
                _28753 = mem[s]
                _29058 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _28753 + 32
                x = u + 32
                while t < _29058:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _29058 + 1
                w = _28753 + (32 * _29058) + 64
                u = u + (32 * _29058) + 32
                v = v + 32
                continue 
            mem[_9615 + 64] = u - _9615
            _29346 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _29346] = mem[(32 * ('cd', 4).length) + 160 len 32 * _29346]
            mem[_9615 + 96] = u + (32 * _29346) + -_9615 + 32
            _36290 = mem[(98 * ('cd', 4).length) + 192]
            mem[u + (32 * _29346) + 32] = mem[(98 * ('cd', 4).length) + 192]
            mem[u + (32 * _29346) + 64 len 32 * _36290] = mem[(98 * ('cd', 4).length) + 224 len 32 * _36290]
            mem[_9615 + 128] = u + (32 * _29346) + (32 * _36290) + -_9615 + 64
            _38866 = mem[(131 * ('cd', 4).length) + 224]
            mem[u + (32 * _29346) + (32 * _36290) + 64] = mem[(131 * ('cd', 4).length) + 224]
            mem[u + (32 * _29346) + (32 * _36290) + 96 len 32 * _38866] = mem[(131 * ('cd', 4).length) + 256 len 32 * _38866]
            mem[_9615 + 160] = u + (32 * _29346) + (32 * _36290) + (32 * _38866) + -_9615 + 96
            _39410 = mem[(164 * ('cd', 4).length) + 256]
            mem[u + (32 * _29346) + (32 * _36290) + (32 * _38866) + 96] = mem[(164 * ('cd', 4).length) + 256]
            mem[u + (32 * _29346) + (32 * _36290) + (32 * _38866) + 128 len 32 * _39410] = mem[(164 * ('cd', 4).length) + 288 len 32 * _39410]
            return memory
              from mem[64]
               len u + (32 * _29346) + (32 * _36290) + (32 * _38866) + (32 * _39410) + -mem[64] + 128
        mem[(64 * ('cd', 4).length) + 192] = 96
        s = (64 * ('cd', 4).length) + 192
        idx = ('cd', 4).length
        while idx - 1:
            mem[s + 32] = 96
            s = s + 32
            idx = idx - 1
            continue 
        require ('cd', 4).length <= test266151307()
        _9617 = mem[64]
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            _9636 = mem[64] + (32 * ('cd', 4).length) + 32
            mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                _9674 = mem[64] + (64 * ('cd', 4).length) + 64
                mem[mem[64] + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
                mem[64] = mem[64] + (98 * ('cd', 4).length) + 96
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require uint32(idx) < ('cd', 68).length
                        require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21309 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _21611 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29716 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29716] == mem[_29716 + 12 len 20]
                                    require s < mem[_21309]
                                    mem[(32 * s) + _21309 + 32] = mem[_29716 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32107 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21611]
                                    mem[(32 * s) + _21611 + 32] = mem[_32107]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21309
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29524 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29524]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21611
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30932 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9617]
                                mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30932]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32276 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9636]
                                mem[(32 * uint32(idx)) + _9636 + 32] = mem[_32276]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33412 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9674]
                                mem[(32 * uint32(idx)) + _9674 + 32] = mem[_33412]
                            else:
                                mem[_21611 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29717 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29717] == mem[_29717 + 12 len 20]
                                    require s < mem[_21309]
                                    mem[(32 * s) + _21309 + 32] = mem[_29717 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32108 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21611]
                                    mem[(32 * s) + _21611 + 32] = mem[_32108]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21309
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29525 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29525]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21611
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30934 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9617]
                                mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30934]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32277 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9636]
                                mem[(32 * uint32(idx)) + _9636 + 32] = mem[_32277]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33413 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9674]
                                mem[(32 * uint32(idx)) + _9674 + 32] = mem[_33413]
                        else:
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29718 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29718] == mem[_29718 + 12 len 20]
                                    require s < mem[_21309]
                                    mem[(32 * s) + _21309 + 32] = mem[_29718 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32109 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21309 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _21309 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32109]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21309
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29526 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29526]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21309 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30936 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9617]
                                mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30936]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32278 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9636]
                                mem[(32 * uint32(idx)) + _9636 + 32] = mem[_32278]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33414 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9674]
                                mem[(32 * uint32(idx)) + _9674 + 32] = mem[_33414]
                            else:
                                mem[_21309 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29719 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29719] == mem[_29719 + 12 len 20]
                                    require s < mem[_21309]
                                    mem[(32 * s) + _21309 + 32] = mem[_29719 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32110 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21309 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _21309 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32110]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21309
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29527 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29527]
                                require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                                mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21309 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _30938 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9617]
                                mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30938]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32279 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9636]
                                mem[(32 * uint32(idx)) + _9636 + 32] = mem[_32279]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33415 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9674]
                                mem[(32 * uint32(idx)) + _9674 + 32] = mem[_33415]
                        idx = idx + 1
                        s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                        continue 
                    _19477 = mem[64]
                    mem[mem[64]] = 192
                    _19671 = mem[96]
                    mem[mem[64] + 192] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 224
                    u = mem[64] + 224
                    while idx < _19671:
                        mem[u] = t + -_19477 - 224
                        _28755 = mem[s]
                        _29059 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _28755 + 32
                        x = t + 32
                        while v < _29059:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _29059 + 1
                        w = _28755 + (32 * _29059) + 64
                        t = t + (32 * _29059) + 32
                        u = u + 32
                        continue 
                    mem[_19477 + 32] = t - _19477
                    _29347 = mem[(64 * ('cd', 4).length) + 160]
                    mem[t] = mem[(64 * ('cd', 4).length) + 160]
                    idx = 0
                    s = (64 * ('cd', 4).length) + 192
                    u = t + (32 * _29347) + 32
                    v = t + 32
                    while idx < _29347:
                        mem[v] = u + -t - 32
                        _35899 = mem[s]
                        _36099 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _35899 + 32
                        x = u + 32
                        while t < _36099:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _36099 + 1
                        w = _35899 + (32 * _36099) + 64
                        u = u + (32 * _36099) + 32
                        v = v + 32
                        continue 
                    mem[_19477 + 64] = u - _19477
                    _36291 = mem[(32 * ('cd', 4).length) + 128]
                    mem[u] = mem[(32 * ('cd', 4).length) + 128]
                    mem[u + 32 len 32 * _36291] = mem[(32 * ('cd', 4).length) + 160 len 32 * _36291]
                    mem[_19477 + 96] = u + (32 * _36291) + -_19477 + 32
                    _38867 = mem[_9617]
                    mem[u + (32 * _36291) + 32] = mem[_9617]
                    mem[u + (32 * _36291) + 64 len 32 * _38867] = mem[_9617 + 32 len 32 * _38867]
                    mem[_19477 + 128] = u + (32 * _36291) + (32 * _38867) + -_19477 + 64
                    _39411 = mem[_9636]
                    mem[u + (32 * _36291) + (32 * _38867) + 64] = mem[_9636]
                    mem[u + (32 * _36291) + (32 * _38867) + 96 len 32 * _39411] = mem[_9636 + 32 len 32 * _39411]
                    mem[_19477 + 160] = u + (32 * _36291) + (32 * _38867) + (32 * _39411) + -_19477 + 96
                    _39795 = mem[_9674]
                    mem[u + (32 * _36291) + (32 * _38867) + (32 * _39411) + 96] = mem[_9674]
                    mem[u + (32 * _36291) + (32 * _38867) + (32 * _39411) + 128 len 32 * _39795] = mem[_9674 + 32 len 32 * _39795]
                    return memory
                      from mem[64]
                       len u + (32 * _36291) + (32 * _38867) + (32 * _39411) + (32 * _39795) + -mem[64] + 128
                mem[_9674 + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21310 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21612 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29721 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29721] == mem[_29721 + 12 len 20]
                                require s < mem[_21310]
                                mem[(32 * s) + _21310 + 32] = mem[_29721 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32111 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21612]
                                mem[(32 * s) + _21612 + 32] = mem[_32111]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21310
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29529 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29529]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21612
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30941 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617]
                            mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30941]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32281 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9636]
                            mem[(32 * uint32(idx)) + _9636 + 32] = mem[_32281]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33417 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9674]
                            mem[(32 * uint32(idx)) + _9674 + 32] = mem[_33417]
                        else:
                            mem[_21612 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29722 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29722] == mem[_29722 + 12 len 20]
                                require s < mem[_21310]
                                mem[(32 * s) + _21310 + 32] = mem[_29722 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32112 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21612]
                                mem[(32 * s) + _21612 + 32] = mem[_32112]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21310
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29530 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29530]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21612
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30943 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617]
                            mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30943]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32282 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9636]
                            mem[(32 * uint32(idx)) + _9636 + 32] = mem[_32282]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33418 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9674]
                            mem[(32 * uint32(idx)) + _9674 + 32] = mem[_33418]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29723 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29723] == mem[_29723 + 12 len 20]
                                require s < mem[_21310]
                                mem[(32 * s) + _21310 + 32] = mem[_29723 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32113 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21310 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21310 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32113]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21310
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29531 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29531]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21310 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30945 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617]
                            mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30945]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32283 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9636]
                            mem[(32 * uint32(idx)) + _9636 + 32] = mem[_32283]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33419 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9674]
                            mem[(32 * uint32(idx)) + _9674 + 32] = mem[_33419]
                        else:
                            mem[_21310 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29724 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29724] == mem[_29724 + 12 len 20]
                                require s < mem[_21310]
                                mem[(32 * s) + _21310 + 32] = mem[_29724 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32114 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21310 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21310 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32114]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21310
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29532 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29532]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21310 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30947 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617]
                            mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30947]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32284 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9636]
                            mem[(32 * uint32(idx)) + _9636 + 32] = mem[_32284]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33420 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9674]
                            mem[(32 * uint32(idx)) + _9674 + 32] = mem[_33420]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _19478 = mem[64]
                mem[mem[64]] = 192
                _19672 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _19672:
                    mem[u] = t + -_19478 - 224
                    _28764 = mem[s]
                    _29068 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _28764 + 32
                    x = t + 32
                    while v < _29068:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _29068 + 1
                    w = _28764 + (32 * _29068) + 64
                    t = t + (32 * _29068) + 32
                    u = u + 32
                    continue 
                mem[_19478 + 32] = t - _19478
                _29352 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _29352) + 32
                v = t + 32
                while idx < _29352:
                    mem[v] = u + -t - 32
                    _35901 = mem[s]
                    _36100 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _35901 + 32
                    x = u + 32
                    while t < _36100:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _36100 + 1
                    w = _35901 + (32 * _36100) + 64
                    u = u + (32 * _36100) + 32
                    v = v + 32
                    continue 
                mem[_19478 + 64] = u - _19478
                _36292 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _36292] = mem[(32 * ('cd', 4).length) + 160 len 32 * _36292]
                mem[_19478 + 96] = u + (32 * _36292) + -_19478 + 32
                _38868 = mem[_9617]
                mem[u + (32 * _36292) + 32] = mem[_9617]
                mem[u + (32 * _36292) + 64 len 32 * _38868] = mem[_9617 + 32 len 32 * _38868]
                mem[_19478 + 128] = u + (32 * _36292) + (32 * _38868) + -_19478 + 64
                _39412 = mem[_9636]
                mem[u + (32 * _36292) + (32 * _38868) + 64] = mem[_9636]
                mem[u + (32 * _36292) + (32 * _38868) + 96 len 32 * _39412] = mem[_9636 + 32 len 32 * _39412]
                mem[_19478 + 160] = u + (32 * _36292) + (32 * _38868) + (32 * _39412) + -_19478 + 96
                _39796 = mem[_9674]
                mem[u + (32 * _36292) + (32 * _38868) + (32 * _39412) + 96] = mem[_9674]
                mem[u + (32 * _36292) + (32 * _38868) + (32 * _39412) + 128 len 32 * _39796] = mem[_9674 + 32 len 32 * _39796]
                return memory
                  from mem[64]
                   len u + (32 * _36292) + (32 * _38868) + (32 * _39412) + (32 * _39796) + -mem[64] + 128
            mem[mem[64] + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[mem[64] + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
            mem[64] = mem[64] + (98 * ('cd', 4).length) + 96
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21311 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21613 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29726 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29726] == mem[_29726 + 12 len 20]
                                require s < mem[_21311]
                                mem[(32 * s) + _21311 + 32] = mem[_29726 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32115 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21613]
                                mem[(32 * s) + _21613 + 32] = mem[_32115]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21311
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29534 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29534]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21613
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30950 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617]
                            mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30950]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32286 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9636]
                            mem[(32 * uint32(idx)) + _9636 + 32] = mem[_32286]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33422 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9636 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9636 + (32 * ('cd', 4).length) + 64] = mem[_33422]
                        else:
                            mem[_21613 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29727 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29727] == mem[_29727 + 12 len 20]
                                require s < mem[_21311]
                                mem[(32 * s) + _21311 + 32] = mem[_29727 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32116 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21613]
                                mem[(32 * s) + _21613 + 32] = mem[_32116]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21311
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29535 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29535]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21613
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30952 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617]
                            mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30952]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32287 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9636]
                            mem[(32 * uint32(idx)) + _9636 + 32] = mem[_32287]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33423 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9636 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9636 + (32 * ('cd', 4).length) + 64] = mem[_33423]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29728 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29728] == mem[_29728 + 12 len 20]
                                require s < mem[_21311]
                                mem[(32 * s) + _21311 + 32] = mem[_29728 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32117 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21311 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21311 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32117]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21311
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29536 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29536]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21311 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30954 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617]
                            mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30954]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32288 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9636]
                            mem[(32 * uint32(idx)) + _9636 + 32] = mem[_32288]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33424 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9636 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9636 + (32 * ('cd', 4).length) + 64] = mem[_33424]
                        else:
                            mem[_21311 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29729 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29729] == mem[_29729 + 12 len 20]
                                require s < mem[_21311]
                                mem[(32 * s) + _21311 + 32] = mem[_29729 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32118 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21311 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21311 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32118]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21311
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29537 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29537]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21311 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30956 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617]
                            mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30956]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32289 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9636]
                            mem[(32 * uint32(idx)) + _9636 + 32] = mem[_32289]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33425 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9636 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9636 + (32 * ('cd', 4).length) + 64] = mem[_33425]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _19479 = mem[64]
                mem[mem[64]] = 192
                _19673 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _19673:
                    mem[u] = t + -_19479 - 224
                    _28773 = mem[s]
                    _29077 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _28773 + 32
                    x = t + 32
                    while v < _29077:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _29077 + 1
                    w = _28773 + (32 * _29077) + 64
                    t = t + (32 * _29077) + 32
                    u = u + 32
                    continue 
                mem[_19479 + 32] = t - _19479
                _29357 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _29357) + 32
                v = t + 32
                while idx < _29357:
                    mem[v] = u + -t - 32
                    _35903 = mem[s]
                    _36101 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _35903 + 32
                    x = u + 32
                    while t < _36101:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _36101 + 1
                    w = _35903 + (32 * _36101) + 64
                    u = u + (32 * _36101) + 32
                    v = v + 32
                    continue 
                mem[_19479 + 64] = u - _19479
                _36293 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _36293] = mem[(32 * ('cd', 4).length) + 160 len 32 * _36293]
                mem[_19479 + 96] = u + (32 * _36293) + -_19479 + 32
                _38869 = mem[_9617]
                mem[u + (32 * _36293) + 32] = mem[_9617]
                mem[u + (32 * _36293) + 64 len 32 * _38869] = mem[_9617 + 32 len 32 * _38869]
                mem[_19479 + 128] = u + (32 * _36293) + (32 * _38869) + -_19479 + 64
                _39413 = mem[_9636]
                mem[u + (32 * _36293) + (32 * _38869) + 64] = mem[_9636]
                mem[u + (32 * _36293) + (32 * _38869) + 96 len 32 * _39413] = mem[_9636 + 32 len 32 * _39413]
                mem[_19479 + 160] = u + (32 * _36293) + (32 * _38869) + (32 * _39413) + -_19479 + 96
                _39797 = mem[_9636 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _36293) + (32 * _38869) + (32 * _39413) + 96] = mem[_9636 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _36293) + (32 * _38869) + (32 * _39413) + 128 len 32 * _39797] = mem[_9636 + (32 * ('cd', 4).length) + 64 len 32 * _39797]
                return memory
                  from mem[64]
                   len u + (32 * _36293) + (32 * _38869) + (32 * _39413) + (32 * _39797) + -mem[64] + 128
            mem[_9636 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require uint32(idx) < ('cd', 68).length
                require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _21312 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21614 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _21614 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29731 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29731] == mem[_29731 + 12 len 20]
                            require s < mem[_21312]
                            mem[(32 * s) + _21312 + 32] = mem[_29731 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32119 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21614]
                            mem[(32 * s) + _21614 + 32] = mem[_32119]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21312
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29539 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29539]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21614
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30959 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617]
                        mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30959]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32291 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9636]
                        mem[(32 * uint32(idx)) + _9636 + 32] = mem[_32291]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33427 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9636 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9636 + (32 * ('cd', 4).length) + 64] = mem[_33427]
                    else:
                        mem[_21614 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29732 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29732] == mem[_29732 + 12 len 20]
                            require s < mem[_21312]
                            mem[(32 * s) + _21312 + 32] = mem[_29732 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32120 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21614]
                            mem[(32 * s) + _21614 + 32] = mem[_32120]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21312
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29540 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29540]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21614
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30961 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617]
                        mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30961]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32292 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9636]
                        mem[(32 * uint32(idx)) + _9636 + 32] = mem[_32292]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33428 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9636 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9636 + (32 * ('cd', 4).length) + 64] = mem[_33428]
                else:
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _21312 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29733 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29733] == mem[_29733 + 12 len 20]
                            require s < mem[_21312]
                            mem[(32 * s) + _21312 + 32] = mem[_29733 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32121 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21312 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _21312 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32121]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21312
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29541 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29541]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21312 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30963 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617]
                        mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30963]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32293 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9636]
                        mem[(32 * uint32(idx)) + _9636 + 32] = mem[_32293]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33429 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9636 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9636 + (32 * ('cd', 4).length) + 64] = mem[_33429]
                    else:
                        mem[_21312 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29734 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29734] == mem[_29734 + 12 len 20]
                            require s < mem[_21312]
                            mem[(32 * s) + _21312 + 32] = mem[_29734 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32122 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21312 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _21312 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32122]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21312
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29542 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29542]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21312 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30965 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617]
                        mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30965]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32294 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9636]
                        mem[(32 * uint32(idx)) + _9636 + 32] = mem[_32294]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33430 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9636 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9636 + (32 * ('cd', 4).length) + 64] = mem[_33430]
                idx = idx + 1
                s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                continue 
            _19480 = mem[64]
            mem[mem[64]] = 192
            _19674 = mem[96]
            mem[mem[64] + 192] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 224
            u = mem[64] + 224
            while idx < _19674:
                mem[u] = t + -_19480 - 224
                _28782 = mem[s]
                _29086 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _28782 + 32
                x = t + 32
                while v < _29086:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _29086 + 1
                w = _28782 + (32 * _29086) + 64
                t = t + (32 * _29086) + 32
                u = u + 32
                continue 
            mem[_19480 + 32] = t - _19480
            _29362 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _29362) + 32
            v = t + 32
            while idx < _29362:
                mem[v] = u + -t - 32
                _35905 = mem[s]
                _36102 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _35905 + 32
                x = u + 32
                while t < _36102:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _36102 + 1
                w = _35905 + (32 * _36102) + 64
                u = u + (32 * _36102) + 32
                v = v + 32
                continue 
            mem[_19480 + 64] = u - _19480
            _36294 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _36294] = mem[(32 * ('cd', 4).length) + 160 len 32 * _36294]
            mem[_19480 + 96] = u + (32 * _36294) + -_19480 + 32
            _38870 = mem[_9617]
            mem[u + (32 * _36294) + 32] = mem[_9617]
            mem[u + (32 * _36294) + 64 len 32 * _38870] = mem[_9617 + 32 len 32 * _38870]
            mem[_19480 + 128] = u + (32 * _36294) + (32 * _38870) + -_19480 + 64
            _39414 = mem[_9636]
            mem[u + (32 * _36294) + (32 * _38870) + 64] = mem[_9636]
            mem[u + (32 * _36294) + (32 * _38870) + 96 len 32 * _39414] = mem[_9636 + 32 len 32 * _39414]
            mem[_19480 + 160] = u + (32 * _36294) + (32 * _38870) + (32 * _39414) + -_19480 + 96
            _39798 = mem[_9636 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _36294) + (32 * _38870) + (32 * _39414) + 96] = mem[_9636 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _36294) + (32 * _38870) + (32 * _39414) + 128 len 32 * _39798] = mem[_9636 + (32 * ('cd', 4).length) + 64 len 32 * _39798]
            return memory
              from mem[64]
               len u + (32 * _36294) + (32 * _38870) + (32 * _39414) + (32 * _39798) + -mem[64] + 128
        mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[mem[64] + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
            mem[64] = mem[64] + (98 * ('cd', 4).length) + 96
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21313 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21615 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29736 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29736] == mem[_29736 + 12 len 20]
                                require s < mem[_21313]
                                mem[(32 * s) + _21313 + 32] = mem[_29736 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32123 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21615]
                                mem[(32 * s) + _21615 + 32] = mem[_32123]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21313
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29544 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29544]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21615
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30968 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617]
                            mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30968]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32296 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9617 + (32 * ('cd', 4).length) + 64] = mem[_32296]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33432 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9617 + (64 * ('cd', 4).length) + 96] = mem[_33432]
                        else:
                            mem[_21615 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29737 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29737] == mem[_29737 + 12 len 20]
                                require s < mem[_21313]
                                mem[(32 * s) + _21313 + 32] = mem[_29737 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32124 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21615]
                                mem[(32 * s) + _21615 + 32] = mem[_32124]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21313
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29545 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29545]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21615
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30970 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617]
                            mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30970]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32297 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9617 + (32 * ('cd', 4).length) + 64] = mem[_32297]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33433 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9617 + (64 * ('cd', 4).length) + 96] = mem[_33433]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29738 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29738] == mem[_29738 + 12 len 20]
                                require s < mem[_21313]
                                mem[(32 * s) + _21313 + 32] = mem[_29738 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32125 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21313 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21313 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32125]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21313
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29546 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29546]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21313 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30972 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617]
                            mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30972]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32298 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9617 + (32 * ('cd', 4).length) + 64] = mem[_32298]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33434 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9617 + (64 * ('cd', 4).length) + 96] = mem[_33434]
                        else:
                            mem[_21313 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29739 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29739] == mem[_29739 + 12 len 20]
                                require s < mem[_21313]
                                mem[(32 * s) + _21313 + 32] = mem[_29739 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32126 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21313 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21313 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32126]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21313
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29547 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29547]
                            require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                            mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21313 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _30974 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617]
                            mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30974]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32299 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9617 + (32 * ('cd', 4).length) + 64] = mem[_32299]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33435 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9617 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9617 + (64 * ('cd', 4).length) + 96] = mem[_33435]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _19481 = mem[64]
                mem[mem[64]] = 192
                _19675 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _19675:
                    mem[u] = t + -_19481 - 224
                    _28791 = mem[s]
                    _29095 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _28791 + 32
                    x = t + 32
                    while v < _29095:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _29095 + 1
                    w = _28791 + (32 * _29095) + 64
                    t = t + (32 * _29095) + 32
                    u = u + 32
                    continue 
                mem[_19481 + 32] = t - _19481
                _29367 = mem[(64 * ('cd', 4).length) + 160]
                mem[t] = mem[(64 * ('cd', 4).length) + 160]
                idx = 0
                s = (64 * ('cd', 4).length) + 192
                u = t + (32 * _29367) + 32
                v = t + 32
                while idx < _29367:
                    mem[v] = u + -t - 32
                    _35907 = mem[s]
                    _36103 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _35907 + 32
                    x = u + 32
                    while t < _36103:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _36103 + 1
                    w = _35907 + (32 * _36103) + 64
                    u = u + (32 * _36103) + 32
                    v = v + 32
                    continue 
                mem[_19481 + 64] = u - _19481
                _36295 = mem[(32 * ('cd', 4).length) + 128]
                mem[u] = mem[(32 * ('cd', 4).length) + 128]
                mem[u + 32 len 32 * _36295] = mem[(32 * ('cd', 4).length) + 160 len 32 * _36295]
                mem[_19481 + 96] = u + (32 * _36295) + -_19481 + 32
                _38871 = mem[_9617]
                mem[u + (32 * _36295) + 32] = mem[_9617]
                mem[u + (32 * _36295) + 64 len 32 * _38871] = mem[_9617 + 32 len 32 * _38871]
                mem[_19481 + 128] = u + (32 * _36295) + (32 * _38871) + -_19481 + 64
                _39415 = mem[_9617 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _36295) + (32 * _38871) + 64] = mem[_9617 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _36295) + (32 * _38871) + 96 len 32 * _39415] = mem[_9617 + (32 * ('cd', 4).length) + 64 len 32 * _39415]
                mem[_19481 + 160] = u + (32 * _36295) + (32 * _38871) + (32 * _39415) + -_19481 + 96
                _39799 = mem[_9617 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36295) + (32 * _38871) + (32 * _39415) + 96] = mem[_9617 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36295) + (32 * _38871) + (32 * _39415) + 128 len 32 * _39799] = mem[_9617 + (64 * ('cd', 4).length) + 96 len 32 * _39799]
                return memory
                  from mem[64]
                   len u + (32 * _36295) + (32 * _38871) + (32 * _39415) + (32 * _39799) + -mem[64] + 128
            mem[_9617 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require uint32(idx) < ('cd', 68).length
                require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _21314 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21616 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _21616 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29741 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29741] == mem[_29741 + 12 len 20]
                            require s < mem[_21314]
                            mem[(32 * s) + _21314 + 32] = mem[_29741 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32127 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21616]
                            mem[(32 * s) + _21616 + 32] = mem[_32127]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21314
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29549 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29549]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21616
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30977 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617]
                        mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30977]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32301 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9617 + (32 * ('cd', 4).length) + 64] = mem[_32301]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33437 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9617 + (64 * ('cd', 4).length) + 96] = mem[_33437]
                    else:
                        mem[_21616 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29742 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29742] == mem[_29742 + 12 len 20]
                            require s < mem[_21314]
                            mem[(32 * s) + _21314 + 32] = mem[_29742 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32128 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21616]
                            mem[(32 * s) + _21616 + 32] = mem[_32128]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21314
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29550 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29550]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21616
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30979 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617]
                        mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30979]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32302 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9617 + (32 * ('cd', 4).length) + 64] = mem[_32302]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33438 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9617 + (64 * ('cd', 4).length) + 96] = mem[_33438]
                else:
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _21314 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29743 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29743] == mem[_29743 + 12 len 20]
                            require s < mem[_21314]
                            mem[(32 * s) + _21314 + 32] = mem[_29743 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32129 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21314 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _21314 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32129]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21314
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29551 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29551]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21314 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30981 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617]
                        mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30981]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32303 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9617 + (32 * ('cd', 4).length) + 64] = mem[_32303]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33439 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9617 + (64 * ('cd', 4).length) + 96] = mem[_33439]
                    else:
                        mem[_21314 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29744 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29744] == mem[_29744 + 12 len 20]
                            require s < mem[_21314]
                            mem[(32 * s) + _21314 + 32] = mem[_29744 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32130 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21314 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _21314 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32130]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21314
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29552 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29552]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21314 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30983 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617]
                        mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30983]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32304 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9617 + (32 * ('cd', 4).length) + 64] = mem[_32304]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33440 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9617 + (64 * ('cd', 4).length) + 96] = mem[_33440]
                idx = idx + 1
                s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                continue 
            _19482 = mem[64]
            mem[mem[64]] = 192
            _19676 = mem[96]
            mem[mem[64] + 192] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 224
            u = mem[64] + 224
            while idx < _19676:
                mem[u] = t + -_19482 - 224
                _28800 = mem[s]
                _29104 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _28800 + 32
                x = t + 32
                while v < _29104:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _29104 + 1
                w = _28800 + (32 * _29104) + 64
                t = t + (32 * _29104) + 32
                u = u + 32
                continue 
            mem[_19482 + 32] = t - _19482
            _29372 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _29372) + 32
            v = t + 32
            while idx < _29372:
                mem[v] = u + -t - 32
                _35909 = mem[s]
                _36104 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _35909 + 32
                x = u + 32
                while t < _36104:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _36104 + 1
                w = _35909 + (32 * _36104) + 64
                u = u + (32 * _36104) + 32
                v = v + 32
                continue 
            mem[_19482 + 64] = u - _19482
            _36296 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _36296] = mem[(32 * ('cd', 4).length) + 160 len 32 * _36296]
            mem[_19482 + 96] = u + (32 * _36296) + -_19482 + 32
            _38872 = mem[_9617]
            mem[u + (32 * _36296) + 32] = mem[_9617]
            mem[u + (32 * _36296) + 64 len 32 * _38872] = mem[_9617 + 32 len 32 * _38872]
            mem[_19482 + 128] = u + (32 * _36296) + (32 * _38872) + -_19482 + 64
            _39416 = mem[_9617 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _36296) + (32 * _38872) + 64] = mem[_9617 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _36296) + (32 * _38872) + 96 len 32 * _39416] = mem[_9617 + (32 * ('cd', 4).length) + 64 len 32 * _39416]
            mem[_19482 + 160] = u + (32 * _36296) + (32 * _38872) + (32 * _39416) + -_19482 + 96
            _39800 = mem[_9617 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _36296) + (32 * _38872) + (32 * _39416) + 96] = mem[_9617 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _36296) + (32 * _38872) + (32 * _39416) + 128 len 32 * _39800] = mem[_9617 + (64 * ('cd', 4).length) + 96 len 32 * _39800]
            return memory
              from mem[64]
               len u + (32 * _36296) + (32 * _38872) + (32 * _39416) + (32 * _39800) + -mem[64] + 128
        mem[mem[64] + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[mem[64] + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
        mem[64] = mem[64] + (98 * ('cd', 4).length) + 96
        if not ('cd', 4).length:
            idx = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require uint32(idx) < ('cd', 68).length
                require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _21315 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21617 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _21617 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29746 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29746] == mem[_29746 + 12 len 20]
                            require s < mem[_21315]
                            mem[(32 * s) + _21315 + 32] = mem[_29746 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32131 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21617]
                            mem[(32 * s) + _21617 + 32] = mem[_32131]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21315
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29554 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29554]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21617
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30986 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617]
                        mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30986]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32306 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9617 + (32 * ('cd', 4).length) + 64] = mem[_32306]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33442 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9617 + (64 * ('cd', 4).length) + 96] = mem[_33442]
                    else:
                        mem[_21617 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29747 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29747] == mem[_29747 + 12 len 20]
                            require s < mem[_21315]
                            mem[(32 * s) + _21315 + 32] = mem[_29747 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32132 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21617]
                            mem[(32 * s) + _21617 + 32] = mem[_32132]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21315
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29555 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29555]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21617
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30988 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617]
                        mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30988]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32307 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9617 + (32 * ('cd', 4).length) + 64] = mem[_32307]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33443 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9617 + (64 * ('cd', 4).length) + 96] = mem[_33443]
                else:
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _21315 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29748 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29748] == mem[_29748 + 12 len 20]
                            require s < mem[_21315]
                            mem[(32 * s) + _21315 + 32] = mem[_29748 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32133 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21315 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _21315 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32133]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21315
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29556 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29556]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21315 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30990 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617]
                        mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30990]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32308 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9617 + (32 * ('cd', 4).length) + 64] = mem[_32308]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33444 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9617 + (64 * ('cd', 4).length) + 96] = mem[_33444]
                    else:
                        mem[_21315 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29749 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29749] == mem[_29749 + 12 len 20]
                            require s < mem[_21315]
                            mem[(32 * s) + _21315 + 32] = mem[_29749 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32134 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21315 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _21315 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32134]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21315
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29557 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29557]
                        require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                        mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21315 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _30992 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617]
                        mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30992]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32309 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9617 + (32 * ('cd', 4).length) + 64] = mem[_32309]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33445 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9617 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9617 + (64 * ('cd', 4).length) + 96] = mem[_33445]
                idx = idx + 1
                s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                continue 
            _19483 = mem[64]
            mem[mem[64]] = 192
            _19677 = mem[96]
            mem[mem[64] + 192] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 224
            u = mem[64] + 224
            while idx < _19677:
                mem[u] = t + -_19483 - 224
                _28809 = mem[s]
                _29113 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _28809 + 32
                x = t + 32
                while v < _29113:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _29113 + 1
                w = _28809 + (32 * _29113) + 64
                t = t + (32 * _29113) + 32
                u = u + 32
                continue 
            mem[_19483 + 32] = t - _19483
            _29377 = mem[(64 * ('cd', 4).length) + 160]
            mem[t] = mem[(64 * ('cd', 4).length) + 160]
            idx = 0
            s = (64 * ('cd', 4).length) + 192
            u = t + (32 * _29377) + 32
            v = t + 32
            while idx < _29377:
                mem[v] = u + -t - 32
                _35911 = mem[s]
                _36105 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _35911 + 32
                x = u + 32
                while t < _36105:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _36105 + 1
                w = _35911 + (32 * _36105) + 64
                u = u + (32 * _36105) + 32
                v = v + 32
                continue 
            mem[_19483 + 64] = u - _19483
            _36297 = mem[(32 * ('cd', 4).length) + 128]
            mem[u] = mem[(32 * ('cd', 4).length) + 128]
            mem[u + 32 len 32 * _36297] = mem[(32 * ('cd', 4).length) + 160 len 32 * _36297]
            mem[_19483 + 96] = u + (32 * _36297) + -_19483 + 32
            _38873 = mem[_9617]
            mem[u + (32 * _36297) + 32] = mem[_9617]
            mem[u + (32 * _36297) + 64 len 32 * _38873] = mem[_9617 + 32 len 32 * _38873]
            mem[_19483 + 128] = u + (32 * _36297) + (32 * _38873) + -_19483 + 64
            _39417 = mem[_9617 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _36297) + (32 * _38873) + 64] = mem[_9617 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _36297) + (32 * _38873) + 96 len 32 * _39417] = mem[_9617 + (32 * ('cd', 4).length) + 64 len 32 * _39417]
            mem[_19483 + 160] = u + (32 * _36297) + (32 * _38873) + (32 * _39417) + -_19483 + 96
            _39801 = mem[_9617 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _36297) + (32 * _38873) + (32 * _39417) + 96] = mem[_9617 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _36297) + (32 * _38873) + (32 * _39417) + 128 len 32 * _39801] = mem[_9617 + (64 * ('cd', 4).length) + 96 len 32 * _39801]
            return memory
              from mem[64]
               len u + (32 * _36297) + (32 * _38873) + (32 * _39417) + (32 * _39801) + -mem[64] + 128
        mem[_9617 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        s = 0
        s = 0
        s = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 36).length
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require uint32(idx) < ('cd', 68).length
            require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _21316 = mem[64]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _21618 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29751 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_29751] == mem[_29751 + 12 len 20]
                        require s < mem[_21316]
                        mem[(32 * s) + _21316 + 32] = mem[_29751 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32135 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_21618]
                        mem[(32 * s) + _21618 + 32] = mem[_32135]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _21316
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29559 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29559]
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21618
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30995 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9617]
                    mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30995]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32311 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9617 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9617 + (32 * ('cd', 4).length) + 64] = mem[_32311]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33447 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9617 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _9617 + (64 * ('cd', 4).length) + 96] = mem[_33447]
                else:
                    mem[_21618 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29752 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_29752] == mem[_29752 + 12 len 20]
                        require s < mem[_21316]
                        mem[(32 * s) + _21316 + 32] = mem[_29752 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32136 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_21618]
                        mem[(32 * s) + _21618 + 32] = mem[_32136]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _21316
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29560 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29560]
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21618
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30997 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9617]
                    mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30997]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32312 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9617 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9617 + (32 * ('cd', 4).length) + 64] = mem[_32312]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33448 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9617 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _9617 + (64 * ('cd', 4).length) + 96] = mem[_33448]
            else:
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29753 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_29753] == mem[_29753 + 12 len 20]
                        require s < mem[_21316]
                        mem[(32 * s) + _21316 + 32] = mem[_29753 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32137 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_21316 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _21316 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32137]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _21316
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29561 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29561]
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21316 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _30999 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9617]
                    mem[(32 * uint32(idx)) + _9617 + 32] = mem[_30999]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32313 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9617 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9617 + (32 * ('cd', 4).length) + 64] = mem[_32313]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33449 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9617 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _9617 + (64 * ('cd', 4).length) + 96] = mem[_33449]
                else:
                    mem[_21316 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29754 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_29754] == mem[_29754 + 12 len 20]
                        require s < mem[_21316]
                        mem[(32 * s) + _21316 + 32] = mem[_29754 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32138 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_21316 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _21316 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32138]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _21316
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29562 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[(32 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + (32 * ('cd', 4).length) + 160] = mem[_29562]
                    require uint32(idx) < mem[(64 * ('cd', 4).length) + 160]
                    mem[(32 * uint32(idx)) + (64 * ('cd', 4).length) + 192] = _21316 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31001 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9617]
                    mem[(32 * uint32(idx)) + _9617 + 32] = mem[_31001]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32314 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9617 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9617 + (32 * ('cd', 4).length) + 64] = mem[_32314]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33450 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9617 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _9617 + (64 * ('cd', 4).length) + 96] = mem[_33450]
            idx = idx + 1
            s = cd[((32 * uint32(idx)) + cd[36] + 36)]
            s = cd[((32 * uint32(idx)) + cd[4] + 36)]
            s = cd[((32 * uint32(idx)) + cd[68] + 36)]
            continue 
        _19484 = mem[64]
        mem[mem[64]] = 192
        _19678 = mem[96]
        mem[mem[64] + 192] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 224
        u = mem[64] + 224
        while idx < _19678:
            mem[u] = t + -_19484 - 224
            _28818 = mem[s]
            _29122 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _28818 + 32
            x = t + 32
            while v < _29122:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            v = _29122 + 1
            w = _28818 + (32 * _29122) + 64
            t = t + (32 * _29122) + 32
            u = u + 32
            continue 
        mem[_19484 + 32] = t - _19484
        _29382 = mem[(64 * ('cd', 4).length) + 160]
        mem[t] = mem[(64 * ('cd', 4).length) + 160]
        idx = 0
        s = (64 * ('cd', 4).length) + 192
        u = t + (32 * _29382) + 32
        v = t + 32
        while idx < _29382:
            mem[v] = u + -t - 32
            _35913 = mem[s]
            _36106 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _35913 + 32
            x = u + 32
            while t < _36106:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            t = _36106 + 1
            w = _35913 + (32 * _36106) + 64
            u = u + (32 * _36106) + 32
            v = v + 32
            continue 
        mem[_19484 + 64] = u - _19484
        _36298 = mem[(32 * ('cd', 4).length) + 128]
        mem[u] = mem[(32 * ('cd', 4).length) + 128]
        mem[u + 32 len 32 * _36298] = mem[(32 * ('cd', 4).length) + 160 len 32 * _36298]
        mem[_19484 + 96] = u + (32 * _36298) + -_19484 + 32
        _38874 = mem[_9617]
        mem[u + (32 * _36298) + 32] = mem[_9617]
        mem[u + (32 * _36298) + 64 len 32 * _38874] = mem[_9617 + 32 len 32 * _38874]
        mem[_19484 + 128] = u + (32 * _36298) + (32 * _38874) + -_19484 + 64
        _39418 = mem[_9617 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _36298) + (32 * _38874) + 64] = mem[_9617 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _36298) + (32 * _38874) + 96 len 32 * _39418] = mem[_9617 + (32 * ('cd', 4).length) + 64 len 32 * _39418]
        mem[_19484 + 160] = u + (32 * _36298) + (32 * _38874) + (32 * _39418) + -_19484 + 96
        _39802 = mem[_9617 + (64 * ('cd', 4).length) + 64]
        mem[u + (32 * _36298) + (32 * _38874) + (32 * _39418) + 96] = mem[_9617 + (64 * ('cd', 4).length) + 64]
        mem[u + (32 * _36298) + (32 * _38874) + (32 * _39418) + 128 len 32 * _39802] = mem[_9617 + (64 * ('cd', 4).length) + 96 len 32 * _39802]
        return memory
          from mem[64]
           len u + (32 * _36298) + (32 * _38874) + (32 * _39418) + (32 * _39802) + -mem[64] + 128
    mem[128] = 96
    s = 128
    idx = ('cd', 4).length
    while idx - 1:
        mem[s + 32] = 96
        s = s + 32
        idx = idx - 1
        continue 
    require ('cd', 4).length <= test266151307()
    _9618 = mem[64]
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        _9637 = mem[64] + (32 * ('cd', 4).length) + 32
        mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
        mem[64] = mem[64] + (64 * ('cd', 4).length) + 64
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[_9637 + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[_9637 + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
                if not ('cd', 4).length:
                    require ('cd', 4).length <= test266151307()
                    mem[_9637 + (98 * ('cd', 4).length) + 96] = ('cd', 4).length
                    mem[64] = _9637 + (131 * ('cd', 4).length) + 128
                    if not ('cd', 4).length:
                        idx = 0
                        s = 0
                        s = 0
                        s = 0
                        while ('cd', 4).length > uint32(idx):
                            require uint32(idx) < ('cd', 36).length
                            require uint32(idx) < ('cd', 4).length
                            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                            require uint32(idx) < ('cd', 68).length
                            require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _21317 = mem[64]
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                _21619 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _29756 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_29756] == mem[_29756 + 12 len 20]
                                        require s < mem[_21317]
                                        mem[(32 * s) + _21317 + 32] = mem[_29756 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _32139 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_21619]
                                        mem[(32 * s) + _21619 + 32] = mem[_32139]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _21317
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29564 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9618]
                                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29564]
                                    require uint32(idx) < mem[_9637]
                                    mem[(32 * uint32(idx)) + _9637 + 32] = _21619
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _31004 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                                    mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31004]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32316 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                                    mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32316]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _33452 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                                    mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33452]
                                else:
                                    mem[_21619 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _29757 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_29757] == mem[_29757 + 12 len 20]
                                        require s < mem[_21317]
                                        mem[(32 * s) + _21317 + 32] = mem[_29757 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _32140 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_21619]
                                        mem[(32 * s) + _21619 + 32] = mem[_32140]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _21317
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29565 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9618]
                                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29565]
                                    require uint32(idx) < mem[_9637]
                                    mem[(32 * uint32(idx)) + _9637 + 32] = _21619
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _31006 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                                    mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31006]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32317 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                                    mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32317]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _33453 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                                    mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33453]
                            else:
                                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _29758 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_29758] == mem[_29758 + 12 len 20]
                                        require s < mem[_21317]
                                        mem[(32 * s) + _21317 + 32] = mem[_29758 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _32141 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_21317 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                        mem[(32 * s) + _21317 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32141]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _21317
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29566 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9618]
                                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29566]
                                    require uint32(idx) < mem[_9637]
                                    mem[(32 * uint32(idx)) + _9637 + 32] = _21317 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _31008 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                                    mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31008]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32318 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                                    mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32318]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _33454 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                                    mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33454]
                                else:
                                    mem[_21317 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                    s = 0
                                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _29759 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require mem[_29759] == mem[_29759 + 12 len 20]
                                        require s < mem[_21317]
                                        mem[(32 * s) + _21317 + 32] = mem[_29759 + 12 len 20]
                                        mem[mem[64] + 4] = s
                                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                                gas gas_remaining wei
                                               args s
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _32142 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require s < mem[_21317 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                        mem[(32 * s) + _21317 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32142]
                                        s = s + 1
                                        continue 
                                    require uint32(idx) < mem[96]
                                    mem[(32 * uint32(idx)) + 128] = _21317
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29567 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9618]
                                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29567]
                                    require uint32(idx) < mem[_9637]
                                    mem[(32 * uint32(idx)) + _9637 + 32] = _21317 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _31010 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                                    mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31010]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32319 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                                    mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32319]
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                            gas gas_remaining wei
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _33455 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                                    mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33455]
                            idx = idx + 1
                            s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                            s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                            continue 
                        _19485 = mem[64]
                        mem[mem[64]] = 192
                        _19679 = mem[96]
                        mem[mem[64] + 192] = mem[96]
                        idx = 0
                        s = 128
                        t = mem[64] + (32 * mem[96]) + 224
                        u = mem[64] + 224
                        while idx < _19679:
                            mem[u] = t + -_19485 - 224
                            _28827 = mem[s]
                            _29131 = mem[mem[s]]
                            mem[t] = mem[mem[s]]
                            v = 0
                            w = _28827 + 32
                            x = t + 32
                            while v < _29131:
                                mem[x] = mem[w + 12 len 20]
                                v = v + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            v = _29131 + 1
                            w = _28827 + (32 * _29131) + 64
                            t = t + (32 * _29131) + 32
                            u = u + 32
                            continue 
                        mem[_19485 + 32] = t - _19485
                        _29387 = mem[_9637]
                        mem[t] = mem[_9637]
                        idx = 0
                        s = _9637 + 32
                        u = t + (32 * _29387) + 32
                        v = t + 32
                        while idx < _29387:
                            mem[v] = u + -t - 32
                            _35915 = mem[s]
                            _36107 = mem[mem[s]]
                            mem[u] = mem[mem[s]]
                            t = 0
                            w = _35915 + 32
                            x = u + 32
                            while t < _36107:
                                mem[x] = mem[w]
                                t = t + 1
                                w = w + 32
                                x = x + 32
                                continue 
                            t = _36107 + 1
                            w = _35915 + (32 * _36107) + 64
                            u = u + (32 * _36107) + 32
                            v = v + 32
                            continue 
                        mem[_19485 + 64] = u - _19485
                        _36299 = mem[_9618]
                        mem[u] = mem[_9618]
                        mem[u + 32 len 32 * _36299] = mem[_9618 + 32 len 32 * _36299]
                        mem[_19485 + 96] = u + (32 * _36299) + -_19485 + 32
                        _38875 = mem[_9637 + (32 * ('cd', 4).length) + 32]
                        mem[u + (32 * _36299) + 32] = mem[_9637 + (32 * ('cd', 4).length) + 32]
                        mem[u + (32 * _36299) + 64 len 32 * _38875] = mem[_9637 + (32 * ('cd', 4).length) + 64 len 32 * _38875]
                        mem[_19485 + 128] = u + (32 * _36299) + (32 * _38875) + -_19485 + 64
                        _39419 = mem[_9637 + (64 * ('cd', 4).length) + 64]
                        mem[u + (32 * _36299) + (32 * _38875) + 64] = mem[_9637 + (64 * ('cd', 4).length) + 64]
                        mem[u + (32 * _36299) + (32 * _38875) + 96 len 32 * _39419] = mem[_9637 + (64 * ('cd', 4).length) + 96 len 32 * _39419]
                        mem[_19485 + 160] = u + (32 * _36299) + (32 * _38875) + (32 * _39419) + -_19485 + 96
                        _39803 = mem[_9637 + (98 * ('cd', 4).length) + 96]
                        mem[u + (32 * _36299) + (32 * _38875) + (32 * _39419) + 96] = mem[_9637 + (98 * ('cd', 4).length) + 96]
                        mem[u + (32 * _36299) + (32 * _38875) + (32 * _39419) + 128 len 32 * _39803] = mem[_9637 + (98 * ('cd', 4).length) + 128 len 32 * _39803]
                        return memory
                          from mem[64]
                           len u + (32 * _36299) + (32 * _38875) + (32 * _39419) + (32 * _39803) + -mem[64] + 128
                    mem[_9637 + (98 * ('cd', 4).length) + 128 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require uint32(idx) < ('cd', 68).length
                        require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21318 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _21620 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29761 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29761] == mem[_29761 + 12 len 20]
                                    require s < mem[_21318]
                                    mem[(32 * s) + _21318 + 32] = mem[_29761 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32143 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21620]
                                    mem[(32 * s) + _21620 + 32] = mem[_32143]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21318
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29569 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29569]
                                require uint32(idx) < mem[_9637]
                                mem[(32 * uint32(idx)) + _9637 + 32] = _21620
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31013 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31013]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32321 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32321]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33457 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                                mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33457]
                            else:
                                mem[_21620 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29762 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29762] == mem[_29762 + 12 len 20]
                                    require s < mem[_21318]
                                    mem[(32 * s) + _21318 + 32] = mem[_29762 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32144 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21620]
                                    mem[(32 * s) + _21620 + 32] = mem[_32144]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21318
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29570 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29570]
                                require uint32(idx) < mem[_9637]
                                mem[(32 * uint32(idx)) + _9637 + 32] = _21620
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31015 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31015]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32322 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32322]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33458 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                                mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33458]
                        else:
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29763 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29763] == mem[_29763 + 12 len 20]
                                    require s < mem[_21318]
                                    mem[(32 * s) + _21318 + 32] = mem[_29763 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32145 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21318 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _21318 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32145]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21318
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29571 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29571]
                                require uint32(idx) < mem[_9637]
                                mem[(32 * uint32(idx)) + _9637 + 32] = _21318 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31017 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31017]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32323 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32323]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33459 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                                mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33459]
                            else:
                                mem[_21318 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29764 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29764] == mem[_29764 + 12 len 20]
                                    require s < mem[_21318]
                                    mem[(32 * s) + _21318 + 32] = mem[_29764 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32146 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21318 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _21318 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32146]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21318
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29572 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29572]
                                require uint32(idx) < mem[_9637]
                                mem[(32 * uint32(idx)) + _9637 + 32] = _21318 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31019 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31019]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32324 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32324]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33460 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                                mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33460]
                        idx = idx + 1
                        s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                        continue 
                    _19486 = mem[64]
                    mem[mem[64]] = 192
                    _19680 = mem[96]
                    mem[mem[64] + 192] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 224
                    u = mem[64] + 224
                    while idx < _19680:
                        mem[u] = t + -_19486 - 224
                        _28836 = mem[s]
                        _29140 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _28836 + 32
                        x = t + 32
                        while v < _29140:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _29140 + 1
                        w = _28836 + (32 * _29140) + 64
                        t = t + (32 * _29140) + 32
                        u = u + 32
                        continue 
                    mem[_19486 + 32] = t - _19486
                    _29392 = mem[_9637]
                    mem[t] = mem[_9637]
                    idx = 0
                    s = _9637 + 32
                    u = t + (32 * _29392) + 32
                    v = t + 32
                    while idx < _29392:
                        mem[v] = u + -t - 32
                        _35917 = mem[s]
                        _36108 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _35917 + 32
                        x = u + 32
                        while t < _36108:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _36108 + 1
                        w = _35917 + (32 * _36108) + 64
                        u = u + (32 * _36108) + 32
                        v = v + 32
                        continue 
                    mem[_19486 + 64] = u - _19486
                    _36300 = mem[_9618]
                    mem[u] = mem[_9618]
                    mem[u + 32 len 32 * _36300] = mem[_9618 + 32 len 32 * _36300]
                    mem[_19486 + 96] = u + (32 * _36300) + -_19486 + 32
                    _38876 = mem[_9637 + (32 * ('cd', 4).length) + 32]
                    mem[u + (32 * _36300) + 32] = mem[_9637 + (32 * ('cd', 4).length) + 32]
                    mem[u + (32 * _36300) + 64 len 32 * _38876] = mem[_9637 + (32 * ('cd', 4).length) + 64 len 32 * _38876]
                    mem[_19486 + 128] = u + (32 * _36300) + (32 * _38876) + -_19486 + 64
                    _39420 = mem[_9637 + (64 * ('cd', 4).length) + 64]
                    mem[u + (32 * _36300) + (32 * _38876) + 64] = mem[_9637 + (64 * ('cd', 4).length) + 64]
                    mem[u + (32 * _36300) + (32 * _38876) + 96 len 32 * _39420] = mem[_9637 + (64 * ('cd', 4).length) + 96 len 32 * _39420]
                    mem[_19486 + 160] = u + (32 * _36300) + (32 * _38876) + (32 * _39420) + -_19486 + 96
                    _39804 = mem[_9637 + (98 * ('cd', 4).length) + 96]
                    mem[u + (32 * _36300) + (32 * _38876) + (32 * _39420) + 96] = mem[_9637 + (98 * ('cd', 4).length) + 96]
                    mem[u + (32 * _36300) + (32 * _38876) + (32 * _39420) + 128 len 32 * _39804] = mem[_9637 + (98 * ('cd', 4).length) + 128 len 32 * _39804]
                    return memory
                      from mem[64]
                       len u + (32 * _36300) + (32 * _38876) + (32 * _39420) + (32 * _39804) + -mem[64] + 128
                mem[_9637 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                require ('cd', 4).length <= test266151307()
                mem[_9637 + (98 * ('cd', 4).length) + 96] = ('cd', 4).length
                mem[64] = _9637 + (131 * ('cd', 4).length) + 128
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require uint32(idx) < ('cd', 68).length
                        require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21319 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _21621 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29766 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29766] == mem[_29766 + 12 len 20]
                                    require s < mem[_21319]
                                    mem[(32 * s) + _21319 + 32] = mem[_29766 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32147 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21621]
                                    mem[(32 * s) + _21621 + 32] = mem[_32147]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21319
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29574 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29574]
                                require uint32(idx) < mem[_9637]
                                mem[(32 * uint32(idx)) + _9637 + 32] = _21621
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31022 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31022]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32326 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32326]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33462 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                                mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33462]
                            else:
                                mem[_21621 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29767 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29767] == mem[_29767 + 12 len 20]
                                    require s < mem[_21319]
                                    mem[(32 * s) + _21319 + 32] = mem[_29767 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32148 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21621]
                                    mem[(32 * s) + _21621 + 32] = mem[_32148]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21319
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29575 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29575]
                                require uint32(idx) < mem[_9637]
                                mem[(32 * uint32(idx)) + _9637 + 32] = _21621
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31024 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31024]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32327 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32327]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33463 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                                mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33463]
                        else:
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29768 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29768] == mem[_29768 + 12 len 20]
                                    require s < mem[_21319]
                                    mem[(32 * s) + _21319 + 32] = mem[_29768 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32149 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21319 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _21319 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32149]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21319
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29576 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29576]
                                require uint32(idx) < mem[_9637]
                                mem[(32 * uint32(idx)) + _9637 + 32] = _21319 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31026 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31026]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32328 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32328]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33464 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                                mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33464]
                            else:
                                mem[_21319 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29769 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29769] == mem[_29769 + 12 len 20]
                                    require s < mem[_21319]
                                    mem[(32 * s) + _21319 + 32] = mem[_29769 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32150 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21319 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _21319 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32150]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21319
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29577 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29577]
                                require uint32(idx) < mem[_9637]
                                mem[(32 * uint32(idx)) + _9637 + 32] = _21319 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31028 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31028]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32329 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32329]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33465 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                                mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33465]
                        idx = idx + 1
                        s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                        continue 
                    _19487 = mem[64]
                    mem[mem[64]] = 192
                    _19681 = mem[96]
                    mem[mem[64] + 192] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 224
                    u = mem[64] + 224
                    while idx < _19681:
                        mem[u] = t + -_19487 - 224
                        _28845 = mem[s]
                        _29149 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _28845 + 32
                        x = t + 32
                        while v < _29149:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _29149 + 1
                        w = _28845 + (32 * _29149) + 64
                        t = t + (32 * _29149) + 32
                        u = u + 32
                        continue 
                    mem[_19487 + 32] = t - _19487
                    _29397 = mem[_9637]
                    mem[t] = mem[_9637]
                    idx = 0
                    s = _9637 + 32
                    u = t + (32 * _29397) + 32
                    v = t + 32
                    while idx < _29397:
                        mem[v] = u + -t - 32
                        _35919 = mem[s]
                        _36109 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _35919 + 32
                        x = u + 32
                        while t < _36109:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _36109 + 1
                        w = _35919 + (32 * _36109) + 64
                        u = u + (32 * _36109) + 32
                        v = v + 32
                        continue 
                    mem[_19487 + 64] = u - _19487
                    _36301 = mem[_9618]
                    mem[u] = mem[_9618]
                    mem[u + 32 len 32 * _36301] = mem[_9618 + 32 len 32 * _36301]
                    mem[_19487 + 96] = u + (32 * _36301) + -_19487 + 32
                    _38877 = mem[_9637 + (32 * ('cd', 4).length) + 32]
                    mem[u + (32 * _36301) + 32] = mem[_9637 + (32 * ('cd', 4).length) + 32]
                    mem[u + (32 * _36301) + 64 len 32 * _38877] = mem[_9637 + (32 * ('cd', 4).length) + 64 len 32 * _38877]
                    mem[_19487 + 128] = u + (32 * _36301) + (32 * _38877) + -_19487 + 64
                    _39421 = mem[_9637 + (64 * ('cd', 4).length) + 64]
                    mem[u + (32 * _36301) + (32 * _38877) + 64] = mem[_9637 + (64 * ('cd', 4).length) + 64]
                    mem[u + (32 * _36301) + (32 * _38877) + 96 len 32 * _39421] = mem[_9637 + (64 * ('cd', 4).length) + 96 len 32 * _39421]
                    mem[_19487 + 160] = u + (32 * _36301) + (32 * _38877) + (32 * _39421) + -_19487 + 96
                    _39805 = mem[_9637 + (98 * ('cd', 4).length) + 96]
                    mem[u + (32 * _36301) + (32 * _38877) + (32 * _39421) + 96] = mem[_9637 + (98 * ('cd', 4).length) + 96]
                    mem[u + (32 * _36301) + (32 * _38877) + (32 * _39421) + 128 len 32 * _39805] = mem[_9637 + (98 * ('cd', 4).length) + 128 len 32 * _39805]
                    return memory
                      from mem[64]
                       len u + (32 * _36301) + (32 * _38877) + (32 * _39421) + (32 * _39805) + -mem[64] + 128
                mem[_9637 + (98 * ('cd', 4).length) + 128 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21320 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21622 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29771 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29771] == mem[_29771 + 12 len 20]
                                require s < mem[_21320]
                                mem[(32 * s) + _21320 + 32] = mem[_29771 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32151 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21622]
                                mem[(32 * s) + _21622 + 32] = mem[_32151]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21320
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29579 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29579]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _21622
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31031 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31031]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32331 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32331]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33467 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33467]
                        else:
                            mem[_21622 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29772 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29772] == mem[_29772 + 12 len 20]
                                require s < mem[_21320]
                                mem[(32 * s) + _21320 + 32] = mem[_29772 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32152 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21622]
                                mem[(32 * s) + _21622 + 32] = mem[_32152]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21320
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29580 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29580]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _21622
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31033 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31033]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32332 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32332]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33468 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33468]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29773 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29773] == mem[_29773 + 12 len 20]
                                require s < mem[_21320]
                                mem[(32 * s) + _21320 + 32] = mem[_29773 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32153 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21320 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21320 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32153]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21320
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29581 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29581]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _21320 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31035 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31035]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32333 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32333]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33469 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33469]
                        else:
                            mem[_21320 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29774 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29774] == mem[_29774 + 12 len 20]
                                require s < mem[_21320]
                                mem[(32 * s) + _21320 + 32] = mem[_29774 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32154 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21320 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21320 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32154]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21320
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29582 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29582]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _21320 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31037 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31037]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32334 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32334]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33470 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33470]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _19488 = mem[64]
                mem[mem[64]] = 192
                _19682 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _19682:
                    mem[u] = t + -_19488 - 224
                    _28854 = mem[s]
                    _29158 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _28854 + 32
                    x = t + 32
                    while v < _29158:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _29158 + 1
                    w = _28854 + (32 * _29158) + 64
                    t = t + (32 * _29158) + 32
                    u = u + 32
                    continue 
                mem[_19488 + 32] = t - _19488
                _29402 = mem[_9637]
                mem[t] = mem[_9637]
                idx = 0
                s = _9637 + 32
                u = t + (32 * _29402) + 32
                v = t + 32
                while idx < _29402:
                    mem[v] = u + -t - 32
                    _35921 = mem[s]
                    _36110 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _35921 + 32
                    x = u + 32
                    while t < _36110:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _36110 + 1
                    w = _35921 + (32 * _36110) + 64
                    u = u + (32 * _36110) + 32
                    v = v + 32
                    continue 
                mem[_19488 + 64] = u - _19488
                _36302 = mem[_9618]
                mem[u] = mem[_9618]
                mem[u + 32 len 32 * _36302] = mem[_9618 + 32 len 32 * _36302]
                mem[_19488 + 96] = u + (32 * _36302) + -_19488 + 32
                _38878 = mem[_9637 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _36302) + 32] = mem[_9637 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _36302) + 64 len 32 * _38878] = mem[_9637 + (32 * ('cd', 4).length) + 64 len 32 * _38878]
                mem[_19488 + 128] = u + (32 * _36302) + (32 * _38878) + -_19488 + 64
                _39422 = mem[_9637 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36302) + (32 * _38878) + 64] = mem[_9637 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36302) + (32 * _38878) + 96 len 32 * _39422] = mem[_9637 + (64 * ('cd', 4).length) + 96 len 32 * _39422]
                mem[_19488 + 160] = u + (32 * _36302) + (32 * _38878) + (32 * _39422) + -_19488 + 96
                _39806 = mem[_9637 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _36302) + (32 * _38878) + (32 * _39422) + 96] = mem[_9637 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _36302) + (32 * _38878) + (32 * _39422) + 128 len 32 * _39806] = mem[_9637 + (98 * ('cd', 4).length) + 128 len 32 * _39806]
                return memory
                  from mem[64]
                   len u + (32 * _36302) + (32 * _38878) + (32 * _39422) + (32 * _39806) + -mem[64] + 128
            mem[_9637 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[_9637 + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[_9637 + (98 * ('cd', 4).length) + 96] = ('cd', 4).length
                mem[64] = _9637 + (131 * ('cd', 4).length) + 128
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require uint32(idx) < ('cd', 68).length
                        require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21321 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _21623 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29776 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29776] == mem[_29776 + 12 len 20]
                                    require s < mem[_21321]
                                    mem[(32 * s) + _21321 + 32] = mem[_29776 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32155 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21623]
                                    mem[(32 * s) + _21623 + 32] = mem[_32155]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21321
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29584 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29584]
                                require uint32(idx) < mem[_9637]
                                mem[(32 * uint32(idx)) + _9637 + 32] = _21623
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31040 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31040]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32336 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32336]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33472 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                                mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33472]
                            else:
                                mem[_21623 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29777 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29777] == mem[_29777 + 12 len 20]
                                    require s < mem[_21321]
                                    mem[(32 * s) + _21321 + 32] = mem[_29777 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32156 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21623]
                                    mem[(32 * s) + _21623 + 32] = mem[_32156]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21321
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29585 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29585]
                                require uint32(idx) < mem[_9637]
                                mem[(32 * uint32(idx)) + _9637 + 32] = _21623
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31042 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31042]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32337 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32337]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33473 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                                mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33473]
                        else:
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29778 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29778] == mem[_29778 + 12 len 20]
                                    require s < mem[_21321]
                                    mem[(32 * s) + _21321 + 32] = mem[_29778 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32157 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21321 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _21321 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32157]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21321
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29586 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29586]
                                require uint32(idx) < mem[_9637]
                                mem[(32 * uint32(idx)) + _9637 + 32] = _21321 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31044 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31044]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32338 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32338]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33474 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                                mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33474]
                            else:
                                mem[_21321 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29779 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29779] == mem[_29779 + 12 len 20]
                                    require s < mem[_21321]
                                    mem[(32 * s) + _21321 + 32] = mem[_29779 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32158 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21321 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _21321 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32158]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21321
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29587 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29587]
                                require uint32(idx) < mem[_9637]
                                mem[(32 * uint32(idx)) + _9637 + 32] = _21321 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31046 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31046]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32339 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32339]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33475 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                                mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33475]
                        idx = idx + 1
                        s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                        continue 
                    _19489 = mem[64]
                    mem[mem[64]] = 192
                    _19683 = mem[96]
                    mem[mem[64] + 192] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 224
                    u = mem[64] + 224
                    while idx < _19683:
                        mem[u] = t + -_19489 - 224
                        _28863 = mem[s]
                        _29167 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _28863 + 32
                        x = t + 32
                        while v < _29167:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _29167 + 1
                        w = _28863 + (32 * _29167) + 64
                        t = t + (32 * _29167) + 32
                        u = u + 32
                        continue 
                    mem[_19489 + 32] = t - _19489
                    _29407 = mem[_9637]
                    mem[t] = mem[_9637]
                    idx = 0
                    s = _9637 + 32
                    u = t + (32 * _29407) + 32
                    v = t + 32
                    while idx < _29407:
                        mem[v] = u + -t - 32
                        _35923 = mem[s]
                        _36111 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _35923 + 32
                        x = u + 32
                        while t < _36111:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _36111 + 1
                        w = _35923 + (32 * _36111) + 64
                        u = u + (32 * _36111) + 32
                        v = v + 32
                        continue 
                    mem[_19489 + 64] = u - _19489
                    _36303 = mem[_9618]
                    mem[u] = mem[_9618]
                    mem[u + 32 len 32 * _36303] = mem[_9618 + 32 len 32 * _36303]
                    mem[_19489 + 96] = u + (32 * _36303) + -_19489 + 32
                    _38879 = mem[_9637 + (32 * ('cd', 4).length) + 32]
                    mem[u + (32 * _36303) + 32] = mem[_9637 + (32 * ('cd', 4).length) + 32]
                    mem[u + (32 * _36303) + 64 len 32 * _38879] = mem[_9637 + (32 * ('cd', 4).length) + 64 len 32 * _38879]
                    mem[_19489 + 128] = u + (32 * _36303) + (32 * _38879) + -_19489 + 64
                    _39423 = mem[_9637 + (64 * ('cd', 4).length) + 64]
                    mem[u + (32 * _36303) + (32 * _38879) + 64] = mem[_9637 + (64 * ('cd', 4).length) + 64]
                    mem[u + (32 * _36303) + (32 * _38879) + 96 len 32 * _39423] = mem[_9637 + (64 * ('cd', 4).length) + 96 len 32 * _39423]
                    mem[_19489 + 160] = u + (32 * _36303) + (32 * _38879) + (32 * _39423) + -_19489 + 96
                    _39807 = mem[_9637 + (98 * ('cd', 4).length) + 96]
                    mem[u + (32 * _36303) + (32 * _38879) + (32 * _39423) + 96] = mem[_9637 + (98 * ('cd', 4).length) + 96]
                    mem[u + (32 * _36303) + (32 * _38879) + (32 * _39423) + 128 len 32 * _39807] = mem[_9637 + (98 * ('cd', 4).length) + 128 len 32 * _39807]
                    return memory
                      from mem[64]
                       len u + (32 * _36303) + (32 * _38879) + (32 * _39423) + (32 * _39807) + -mem[64] + 128
                mem[_9637 + (98 * ('cd', 4).length) + 128 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21322 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21624 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29781 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29781] == mem[_29781 + 12 len 20]
                                require s < mem[_21322]
                                mem[(32 * s) + _21322 + 32] = mem[_29781 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32159 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21624]
                                mem[(32 * s) + _21624 + 32] = mem[_32159]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21322
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29589 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29589]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _21624
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31049 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31049]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32341 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32341]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33477 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33477]
                        else:
                            mem[_21624 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29782 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29782] == mem[_29782 + 12 len 20]
                                require s < mem[_21322]
                                mem[(32 * s) + _21322 + 32] = mem[_29782 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32160 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21624]
                                mem[(32 * s) + _21624 + 32] = mem[_32160]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21322
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29590 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29590]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _21624
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31051 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31051]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32342 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32342]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33478 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33478]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29783 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29783] == mem[_29783 + 12 len 20]
                                require s < mem[_21322]
                                mem[(32 * s) + _21322 + 32] = mem[_29783 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32161 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21322 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21322 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32161]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21322
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29591 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29591]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _21322 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31053 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31053]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32343 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32343]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33479 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33479]
                        else:
                            mem[_21322 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29784 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29784] == mem[_29784 + 12 len 20]
                                require s < mem[_21322]
                                mem[(32 * s) + _21322 + 32] = mem[_29784 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32162 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21322 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21322 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32162]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21322
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29592 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29592]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _21322 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31055 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31055]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32344 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32344]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33480 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33480]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _19490 = mem[64]
                mem[mem[64]] = 192
                _19684 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _19684:
                    mem[u] = t + -_19490 - 224
                    _28872 = mem[s]
                    _29176 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _28872 + 32
                    x = t + 32
                    while v < _29176:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _29176 + 1
                    w = _28872 + (32 * _29176) + 64
                    t = t + (32 * _29176) + 32
                    u = u + 32
                    continue 
                mem[_19490 + 32] = t - _19490
                _29412 = mem[_9637]
                mem[t] = mem[_9637]
                idx = 0
                s = _9637 + 32
                u = t + (32 * _29412) + 32
                v = t + 32
                while idx < _29412:
                    mem[v] = u + -t - 32
                    _35925 = mem[s]
                    _36112 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _35925 + 32
                    x = u + 32
                    while t < _36112:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _36112 + 1
                    w = _35925 + (32 * _36112) + 64
                    u = u + (32 * _36112) + 32
                    v = v + 32
                    continue 
                mem[_19490 + 64] = u - _19490
                _36304 = mem[_9618]
                mem[u] = mem[_9618]
                mem[u + 32 len 32 * _36304] = mem[_9618 + 32 len 32 * _36304]
                mem[_19490 + 96] = u + (32 * _36304) + -_19490 + 32
                _38880 = mem[_9637 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _36304) + 32] = mem[_9637 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _36304) + 64 len 32 * _38880] = mem[_9637 + (32 * ('cd', 4).length) + 64 len 32 * _38880]
                mem[_19490 + 128] = u + (32 * _36304) + (32 * _38880) + -_19490 + 64
                _39424 = mem[_9637 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36304) + (32 * _38880) + 64] = mem[_9637 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36304) + (32 * _38880) + 96 len 32 * _39424] = mem[_9637 + (64 * ('cd', 4).length) + 96 len 32 * _39424]
                mem[_19490 + 160] = u + (32 * _36304) + (32 * _38880) + (32 * _39424) + -_19490 + 96
                _39808 = mem[_9637 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _36304) + (32 * _38880) + (32 * _39424) + 96] = mem[_9637 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _36304) + (32 * _38880) + (32 * _39424) + 128 len 32 * _39808] = mem[_9637 + (98 * ('cd', 4).length) + 128 len 32 * _39808]
                return memory
                  from mem[64]
                   len u + (32 * _36304) + (32 * _38880) + (32 * _39424) + (32 * _39808) + -mem[64] + 128
            mem[_9637 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[_9637 + (98 * ('cd', 4).length) + 96] = ('cd', 4).length
            mem[64] = _9637 + (131 * ('cd', 4).length) + 128
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21323 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21625 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29786 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29786] == mem[_29786 + 12 len 20]
                                require s < mem[_21323]
                                mem[(32 * s) + _21323 + 32] = mem[_29786 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32163 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21625]
                                mem[(32 * s) + _21625 + 32] = mem[_32163]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21323
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29594 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29594]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _21625
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31058 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31058]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32346 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32346]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33482 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33482]
                        else:
                            mem[_21625 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29787 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29787] == mem[_29787 + 12 len 20]
                                require s < mem[_21323]
                                mem[(32 * s) + _21323 + 32] = mem[_29787 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32164 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21625]
                                mem[(32 * s) + _21625 + 32] = mem[_32164]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21323
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29595 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29595]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _21625
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31060 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31060]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32347 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32347]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33483 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33483]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29788 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29788] == mem[_29788 + 12 len 20]
                                require s < mem[_21323]
                                mem[(32 * s) + _21323 + 32] = mem[_29788 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32165 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21323 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21323 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32165]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21323
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29596 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29596]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _21323 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31062 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31062]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32348 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32348]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33484 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33484]
                        else:
                            mem[_21323 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29789 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29789] == mem[_29789 + 12 len 20]
                                require s < mem[_21323]
                                mem[(32 * s) + _21323 + 32] = mem[_29789 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32166 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21323 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21323 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32166]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21323
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29597 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29597]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _21323 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31064 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31064]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32349 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32349]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33485 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33485]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _19491 = mem[64]
                mem[mem[64]] = 192
                _19685 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _19685:
                    mem[u] = t + -_19491 - 224
                    _28881 = mem[s]
                    _29185 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _28881 + 32
                    x = t + 32
                    while v < _29185:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _29185 + 1
                    w = _28881 + (32 * _29185) + 64
                    t = t + (32 * _29185) + 32
                    u = u + 32
                    continue 
                mem[_19491 + 32] = t - _19491
                _29417 = mem[_9637]
                mem[t] = mem[_9637]
                idx = 0
                s = _9637 + 32
                u = t + (32 * _29417) + 32
                v = t + 32
                while idx < _29417:
                    mem[v] = u + -t - 32
                    _35927 = mem[s]
                    _36113 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _35927 + 32
                    x = u + 32
                    while t < _36113:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _36113 + 1
                    w = _35927 + (32 * _36113) + 64
                    u = u + (32 * _36113) + 32
                    v = v + 32
                    continue 
                mem[_19491 + 64] = u - _19491
                _36305 = mem[_9618]
                mem[u] = mem[_9618]
                mem[u + 32 len 32 * _36305] = mem[_9618 + 32 len 32 * _36305]
                mem[_19491 + 96] = u + (32 * _36305) + -_19491 + 32
                _38881 = mem[_9637 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _36305) + 32] = mem[_9637 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _36305) + 64 len 32 * _38881] = mem[_9637 + (32 * ('cd', 4).length) + 64 len 32 * _38881]
                mem[_19491 + 128] = u + (32 * _36305) + (32 * _38881) + -_19491 + 64
                _39425 = mem[_9637 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36305) + (32 * _38881) + 64] = mem[_9637 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36305) + (32 * _38881) + 96 len 32 * _39425] = mem[_9637 + (64 * ('cd', 4).length) + 96 len 32 * _39425]
                mem[_19491 + 160] = u + (32 * _36305) + (32 * _38881) + (32 * _39425) + -_19491 + 96
                _39809 = mem[_9637 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _36305) + (32 * _38881) + (32 * _39425) + 96] = mem[_9637 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _36305) + (32 * _38881) + (32 * _39425) + 128 len 32 * _39809] = mem[_9637 + (98 * ('cd', 4).length) + 128 len 32 * _39809]
                return memory
                  from mem[64]
                   len u + (32 * _36305) + (32 * _38881) + (32 * _39425) + (32 * _39809) + -mem[64] + 128
            mem[_9637 + (98 * ('cd', 4).length) + 128 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require uint32(idx) < ('cd', 68).length
                require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _21324 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21626 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _21626 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29791 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29791] == mem[_29791 + 12 len 20]
                            require s < mem[_21324]
                            mem[(32 * s) + _21324 + 32] = mem[_29791 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32167 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21626]
                            mem[(32 * s) + _21626 + 32] = mem[_32167]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21324
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29599 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29599]
                        require uint32(idx) < mem[_9637]
                        mem[(32 * uint32(idx)) + _9637 + 32] = _21626
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31067 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31067]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32351 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32351]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33487 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33487]
                    else:
                        mem[_21626 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29792 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29792] == mem[_29792 + 12 len 20]
                            require s < mem[_21324]
                            mem[(32 * s) + _21324 + 32] = mem[_29792 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32168 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21626]
                            mem[(32 * s) + _21626 + 32] = mem[_32168]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21324
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29600 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29600]
                        require uint32(idx) < mem[_9637]
                        mem[(32 * uint32(idx)) + _9637 + 32] = _21626
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31069 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31069]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32352 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32352]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33488 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33488]
                else:
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _21324 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29793 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29793] == mem[_29793 + 12 len 20]
                            require s < mem[_21324]
                            mem[(32 * s) + _21324 + 32] = mem[_29793 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32169 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21324 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _21324 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32169]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21324
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29601 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29601]
                        require uint32(idx) < mem[_9637]
                        mem[(32 * uint32(idx)) + _9637 + 32] = _21324 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31071 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31071]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32353 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32353]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33489 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33489]
                    else:
                        mem[_21324 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29794 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29794] == mem[_29794 + 12 len 20]
                            require s < mem[_21324]
                            mem[(32 * s) + _21324 + 32] = mem[_29794 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32170 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21324 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _21324 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32170]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21324
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29602 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29602]
                        require uint32(idx) < mem[_9637]
                        mem[(32 * uint32(idx)) + _9637 + 32] = _21324 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31073 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9637 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9637 + (32 * ('cd', 4).length) + 64] = mem[_31073]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32354 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9637 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9637 + (64 * ('cd', 4).length) + 96] = mem[_32354]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33490 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9637 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _9637 + (98 * ('cd', 4).length) + 128] = mem[_33490]
                idx = idx + 1
                s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                continue 
            _19492 = mem[64]
            mem[mem[64]] = 192
            _19686 = mem[96]
            mem[mem[64] + 192] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 224
            u = mem[64] + 224
            while idx < _19686:
                mem[u] = t + -_19492 - 224
                _28890 = mem[s]
                _29194 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _28890 + 32
                x = t + 32
                while v < _29194:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _29194 + 1
                w = _28890 + (32 * _29194) + 64
                t = t + (32 * _29194) + 32
                u = u + 32
                continue 
            mem[_19492 + 32] = t - _19492
            _29422 = mem[_9637]
            mem[t] = mem[_9637]
            idx = 0
            s = _9637 + 32
            u = t + (32 * _29422) + 32
            v = t + 32
            while idx < _29422:
                mem[v] = u + -t - 32
                _35929 = mem[s]
                _36114 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _35929 + 32
                x = u + 32
                while t < _36114:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _36114 + 1
                w = _35929 + (32 * _36114) + 64
                u = u + (32 * _36114) + 32
                v = v + 32
                continue 
            mem[_19492 + 64] = u - _19492
            _36306 = mem[_9618]
            mem[u] = mem[_9618]
            mem[u + 32 len 32 * _36306] = mem[_9618 + 32 len 32 * _36306]
            mem[_19492 + 96] = u + (32 * _36306) + -_19492 + 32
            _38882 = mem[_9637 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _36306) + 32] = mem[_9637 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _36306) + 64 len 32 * _38882] = mem[_9637 + (32 * ('cd', 4).length) + 64 len 32 * _38882]
            mem[_19492 + 128] = u + (32 * _36306) + (32 * _38882) + -_19492 + 64
            _39426 = mem[_9637 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _36306) + (32 * _38882) + 64] = mem[_9637 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _36306) + (32 * _38882) + 96 len 32 * _39426] = mem[_9637 + (64 * ('cd', 4).length) + 96 len 32 * _39426]
            mem[_19492 + 160] = u + (32 * _36306) + (32 * _38882) + (32 * _39426) + -_19492 + 96
            _39810 = mem[_9637 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _36306) + (32 * _38882) + (32 * _39426) + 96] = mem[_9637 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _36306) + (32 * _38882) + (32 * _39426) + 128 len 32 * _39810] = mem[_9637 + (98 * ('cd', 4).length) + 128 len 32 * _39810]
            return memory
              from mem[64]
               len u + (32 * _36306) + (32 * _38882) + (32 * _39426) + (32 * _39810) + -mem[64] + 128
        mem[_9637 + 32] = 96
        s = _9637 + 32
        idx = ('cd', 4).length
        while idx - 1:
            mem[s + 32] = 96
            s = s + 32
            idx = idx - 1
            continue 
        require ('cd', 4).length <= test266151307()
        _19581 = mem[64]
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            _19775 = mem[64] + (32 * ('cd', 4).length) + 32
            mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                _20059 = mem[64] + (64 * ('cd', 4).length) + 64
                mem[mem[64] + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
                mem[64] = mem[64] + (98 * ('cd', 4).length) + 96
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require uint32(idx) < ('cd', 68).length
                        require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _32355 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _32787 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _36548 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_36548] == mem[_36548 + 12 len 20]
                                    require s < mem[_32355]
                                    mem[(32 * s) + _32355 + 32] = mem[_36548 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _37883 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_32787]
                                    mem[(32 * s) + _32787 + 32] = mem[_37883]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _32355
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36420 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36420]
                                require uint32(idx) < mem[_9637]
                                mem[(32 * uint32(idx)) + _9637 + 32] = _32787
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37220 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_19581]
                                mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37220]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37972 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_19775]
                                mem[(32 * uint32(idx)) + _19775 + 32] = mem[_37972]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _38508 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_20059]
                                mem[(32 * uint32(idx)) + _20059 + 32] = mem[_38508]
                            else:
                                mem[_32787 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _36549 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_36549] == mem[_36549 + 12 len 20]
                                    require s < mem[_32355]
                                    mem[(32 * s) + _32355 + 32] = mem[_36549 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _37884 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_32787]
                                    mem[(32 * s) + _32787 + 32] = mem[_37884]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _32355
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36421 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36421]
                                require uint32(idx) < mem[_9637]
                                mem[(32 * uint32(idx)) + _9637 + 32] = _32787
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37222 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_19581]
                                mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37222]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37973 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_19775]
                                mem[(32 * uint32(idx)) + _19775 + 32] = mem[_37973]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _38509 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_20059]
                                mem[(32 * uint32(idx)) + _20059 + 32] = mem[_38509]
                        else:
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _36550 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_36550] == mem[_36550 + 12 len 20]
                                    require s < mem[_32355]
                                    mem[(32 * s) + _32355 + 32] = mem[_36550 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _37885 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_32355 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _32355 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37885]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _32355
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36422 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36422]
                                require uint32(idx) < mem[_9637]
                                mem[(32 * uint32(idx)) + _9637 + 32] = _32355 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37224 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_19581]
                                mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37224]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37974 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_19775]
                                mem[(32 * uint32(idx)) + _19775 + 32] = mem[_37974]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _38510 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_20059]
                                mem[(32 * uint32(idx)) + _20059 + 32] = mem[_38510]
                            else:
                                mem[_32355 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _36551 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_36551] == mem[_36551 + 12 len 20]
                                    require s < mem[_32355]
                                    mem[(32 * s) + _32355 + 32] = mem[_36551 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _37886 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_32355 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _32355 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37886]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _32355
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36423 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36423]
                                require uint32(idx) < mem[_9637]
                                mem[(32 * uint32(idx)) + _9637 + 32] = _32355 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37226 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_19581]
                                mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37226]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37975 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_19775]
                                mem[(32 * uint32(idx)) + _19775 + 32] = mem[_37975]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _38511 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_20059]
                                mem[(32 * uint32(idx)) + _20059 + 32] = mem[_38511]
                        idx = idx + 1
                        s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                        continue 
                    _29203 = mem[64]
                    mem[mem[64]] = 192
                    _29603 = mem[96]
                    mem[mem[64] + 192] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 224
                    u = mem[64] + 224
                    while idx < _29603:
                        mem[u] = t + -_29203 - 224
                        _35931 = mem[s]
                        _36115 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _35931 + 32
                        x = t + 32
                        while v < _36115:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _36115 + 1
                        w = _35931 + (32 * _36115) + 64
                        t = t + (32 * _36115) + 32
                        u = u + 32
                        continue 
                    mem[_29203 + 32] = t - _29203
                    _36307 = mem[_9637]
                    mem[t] = mem[_9637]
                    idx = 0
                    s = _9637 + 32
                    u = t + (32 * _36307) + 32
                    v = t + 32
                    while idx < _36307:
                        mem[v] = u + -t - 32
                        _38779 = mem[s]
                        _38827 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _38779 + 32
                        x = u + 32
                        while t < _38827:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _38827 + 1
                        w = _38779 + (32 * _38827) + 64
                        u = u + (32 * _38827) + 32
                        v = v + 32
                        continue 
                    mem[_29203 + 64] = u - _29203
                    _38883 = mem[_9618]
                    mem[u] = mem[_9618]
                    mem[u + 32 len 32 * _38883] = mem[_9618 + 32 len 32 * _38883]
                    mem[_29203 + 96] = u + (32 * _38883) + -_29203 + 32
                    _39427 = mem[_19581]
                    mem[u + (32 * _38883) + 32] = mem[_19581]
                    mem[u + (32 * _38883) + 64 len 32 * _39427] = mem[_19581 + 32 len 32 * _39427]
                    mem[_29203 + 128] = u + (32 * _38883) + (32 * _39427) + -_29203 + 64
                    _39811 = mem[_19775]
                    mem[u + (32 * _38883) + (32 * _39427) + 64] = mem[_19775]
                    mem[u + (32 * _38883) + (32 * _39427) + 96 len 32 * _39811] = mem[_19775 + 32 len 32 * _39811]
                    mem[_29203 + 160] = u + (32 * _38883) + (32 * _39427) + (32 * _39811) + -_29203 + 96
                    _40035 = mem[_20059]
                    mem[u + (32 * _38883) + (32 * _39427) + (32 * _39811) + 96] = mem[_20059]
                    mem[u + (32 * _38883) + (32 * _39427) + (32 * _39811) + 128 len 32 * _40035] = mem[_20059 + 32 len 32 * _40035]
                    return memory
                      from mem[64]
                       len u + (32 * _38883) + (32 * _39427) + (32 * _39811) + (32 * _40035) + -mem[64] + 128
                mem[_20059 + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _32356 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _32788 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36553 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_36553] == mem[_36553 + 12 len 20]
                                require s < mem[_32356]
                                mem[(32 * s) + _32356 + 32] = mem[_36553 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37887 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_32788]
                                mem[(32 * s) + _32788 + 32] = mem[_37887]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _32356
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36425 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36425]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _32788
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37229 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581]
                            mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37229]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37977 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19775]
                            mem[(32 * uint32(idx)) + _19775 + 32] = mem[_37977]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38513 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_20059]
                            mem[(32 * uint32(idx)) + _20059 + 32] = mem[_38513]
                        else:
                            mem[_32788 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36554 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_36554] == mem[_36554 + 12 len 20]
                                require s < mem[_32356]
                                mem[(32 * s) + _32356 + 32] = mem[_36554 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37888 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_32788]
                                mem[(32 * s) + _32788 + 32] = mem[_37888]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _32356
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36426 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36426]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _32788
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37231 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581]
                            mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37231]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37978 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19775]
                            mem[(32 * uint32(idx)) + _19775 + 32] = mem[_37978]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38514 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_20059]
                            mem[(32 * uint32(idx)) + _20059 + 32] = mem[_38514]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36555 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_36555] == mem[_36555 + 12 len 20]
                                require s < mem[_32356]
                                mem[(32 * s) + _32356 + 32] = mem[_36555 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37889 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_32356 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _32356 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37889]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _32356
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36427 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36427]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _32356 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37233 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581]
                            mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37233]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37979 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19775]
                            mem[(32 * uint32(idx)) + _19775 + 32] = mem[_37979]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38515 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_20059]
                            mem[(32 * uint32(idx)) + _20059 + 32] = mem[_38515]
                        else:
                            mem[_32356 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36556 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_36556] == mem[_36556 + 12 len 20]
                                require s < mem[_32356]
                                mem[(32 * s) + _32356 + 32] = mem[_36556 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37890 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_32356 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _32356 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37890]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _32356
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36428 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36428]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _32356 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37235 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581]
                            mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37235]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37980 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19775]
                            mem[(32 * uint32(idx)) + _19775 + 32] = mem[_37980]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38516 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_20059]
                            mem[(32 * uint32(idx)) + _20059 + 32] = mem[_38516]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _29204 = mem[64]
                mem[mem[64]] = 192
                _29604 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _29604:
                    mem[u] = t + -_29204 - 224
                    _35940 = mem[s]
                    _36124 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _35940 + 32
                    x = t + 32
                    while v < _36124:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _36124 + 1
                    w = _35940 + (32 * _36124) + 64
                    t = t + (32 * _36124) + 32
                    u = u + 32
                    continue 
                mem[_29204 + 32] = t - _29204
                _36312 = mem[_9637]
                mem[t] = mem[_9637]
                idx = 0
                s = _9637 + 32
                u = t + (32 * _36312) + 32
                v = t + 32
                while idx < _36312:
                    mem[v] = u + -t - 32
                    _38781 = mem[s]
                    _38828 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _38781 + 32
                    x = u + 32
                    while t < _38828:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _38828 + 1
                    w = _38781 + (32 * _38828) + 64
                    u = u + (32 * _38828) + 32
                    v = v + 32
                    continue 
                mem[_29204 + 64] = u - _29204
                _38884 = mem[_9618]
                mem[u] = mem[_9618]
                mem[u + 32 len 32 * _38884] = mem[_9618 + 32 len 32 * _38884]
                mem[_29204 + 96] = u + (32 * _38884) + -_29204 + 32
                _39428 = mem[_19581]
                mem[u + (32 * _38884) + 32] = mem[_19581]
                mem[u + (32 * _38884) + 64 len 32 * _39428] = mem[_19581 + 32 len 32 * _39428]
                mem[_29204 + 128] = u + (32 * _38884) + (32 * _39428) + -_29204 + 64
                _39812 = mem[_19775]
                mem[u + (32 * _38884) + (32 * _39428) + 64] = mem[_19775]
                mem[u + (32 * _38884) + (32 * _39428) + 96 len 32 * _39812] = mem[_19775 + 32 len 32 * _39812]
                mem[_29204 + 160] = u + (32 * _38884) + (32 * _39428) + (32 * _39812) + -_29204 + 96
                _40036 = mem[_20059]
                mem[u + (32 * _38884) + (32 * _39428) + (32 * _39812) + 96] = mem[_20059]
                mem[u + (32 * _38884) + (32 * _39428) + (32 * _39812) + 128 len 32 * _40036] = mem[_20059 + 32 len 32 * _40036]
                return memory
                  from mem[64]
                   len u + (32 * _38884) + (32 * _39428) + (32 * _39812) + (32 * _40036) + -mem[64] + 128
            mem[mem[64] + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[mem[64] + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
            mem[64] = mem[64] + (98 * ('cd', 4).length) + 96
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _32357 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _32789 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36558 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_36558] == mem[_36558 + 12 len 20]
                                require s < mem[_32357]
                                mem[(32 * s) + _32357 + 32] = mem[_36558 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37891 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_32789]
                                mem[(32 * s) + _32789 + 32] = mem[_37891]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _32357
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36430 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36430]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _32789
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37238 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581]
                            mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37238]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37982 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19775]
                            mem[(32 * uint32(idx)) + _19775 + 32] = mem[_37982]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38518 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19775 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _19775 + (32 * ('cd', 4).length) + 64] = mem[_38518]
                        else:
                            mem[_32789 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36559 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_36559] == mem[_36559 + 12 len 20]
                                require s < mem[_32357]
                                mem[(32 * s) + _32357 + 32] = mem[_36559 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37892 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_32789]
                                mem[(32 * s) + _32789 + 32] = mem[_37892]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _32357
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36431 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36431]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _32789
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37240 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581]
                            mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37240]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37983 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19775]
                            mem[(32 * uint32(idx)) + _19775 + 32] = mem[_37983]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38519 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19775 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _19775 + (32 * ('cd', 4).length) + 64] = mem[_38519]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36560 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_36560] == mem[_36560 + 12 len 20]
                                require s < mem[_32357]
                                mem[(32 * s) + _32357 + 32] = mem[_36560 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37893 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_32357 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _32357 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37893]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _32357
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36432 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36432]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _32357 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37242 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581]
                            mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37242]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37984 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19775]
                            mem[(32 * uint32(idx)) + _19775 + 32] = mem[_37984]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38520 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19775 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _19775 + (32 * ('cd', 4).length) + 64] = mem[_38520]
                        else:
                            mem[_32357 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36561 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_36561] == mem[_36561 + 12 len 20]
                                require s < mem[_32357]
                                mem[(32 * s) + _32357 + 32] = mem[_36561 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37894 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_32357 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _32357 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37894]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _32357
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36433 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36433]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _32357 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37244 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581]
                            mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37244]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37985 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19775]
                            mem[(32 * uint32(idx)) + _19775 + 32] = mem[_37985]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38521 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19775 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _19775 + (32 * ('cd', 4).length) + 64] = mem[_38521]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _29205 = mem[64]
                mem[mem[64]] = 192
                _29605 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _29605:
                    mem[u] = t + -_29205 - 224
                    _35949 = mem[s]
                    _36133 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _35949 + 32
                    x = t + 32
                    while v < _36133:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _36133 + 1
                    w = _35949 + (32 * _36133) + 64
                    t = t + (32 * _36133) + 32
                    u = u + 32
                    continue 
                mem[_29205 + 32] = t - _29205
                _36317 = mem[_9637]
                mem[t] = mem[_9637]
                idx = 0
                s = _9637 + 32
                u = t + (32 * _36317) + 32
                v = t + 32
                while idx < _36317:
                    mem[v] = u + -t - 32
                    _38783 = mem[s]
                    _38829 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _38783 + 32
                    x = u + 32
                    while t < _38829:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _38829 + 1
                    w = _38783 + (32 * _38829) + 64
                    u = u + (32 * _38829) + 32
                    v = v + 32
                    continue 
                mem[_29205 + 64] = u - _29205
                _38885 = mem[_9618]
                mem[u] = mem[_9618]
                mem[u + 32 len 32 * _38885] = mem[_9618 + 32 len 32 * _38885]
                mem[_29205 + 96] = u + (32 * _38885) + -_29205 + 32
                _39429 = mem[_19581]
                mem[u + (32 * _38885) + 32] = mem[_19581]
                mem[u + (32 * _38885) + 64 len 32 * _39429] = mem[_19581 + 32 len 32 * _39429]
                mem[_29205 + 128] = u + (32 * _38885) + (32 * _39429) + -_29205 + 64
                _39813 = mem[_19775]
                mem[u + (32 * _38885) + (32 * _39429) + 64] = mem[_19775]
                mem[u + (32 * _38885) + (32 * _39429) + 96 len 32 * _39813] = mem[_19775 + 32 len 32 * _39813]
                mem[_29205 + 160] = u + (32 * _38885) + (32 * _39429) + (32 * _39813) + -_29205 + 96
                _40037 = mem[_19775 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _38885) + (32 * _39429) + (32 * _39813) + 96] = mem[_19775 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _38885) + (32 * _39429) + (32 * _39813) + 128 len 32 * _40037] = mem[_19775 + (32 * ('cd', 4).length) + 64 len 32 * _40037]
                return memory
                  from mem[64]
                   len u + (32 * _38885) + (32 * _39429) + (32 * _39813) + (32 * _40037) + -mem[64] + 128
            mem[_19775 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require uint32(idx) < ('cd', 68).length
                require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _32358 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _32790 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36563 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36563] == mem[_36563 + 12 len 20]
                            require s < mem[_32358]
                            mem[(32 * s) + _32358 + 32] = mem[_36563 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37895 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32790]
                            mem[(32 * s) + _32790 + 32] = mem[_37895]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32358
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36435 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36435]
                        require uint32(idx) < mem[_9637]
                        mem[(32 * uint32(idx)) + _9637 + 32] = _32790
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37247 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581]
                        mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37247]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37987 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19775]
                        mem[(32 * uint32(idx)) + _19775 + 32] = mem[_37987]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38523 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19775 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19775 + (32 * ('cd', 4).length) + 64] = mem[_38523]
                    else:
                        mem[_32790 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36564 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36564] == mem[_36564 + 12 len 20]
                            require s < mem[_32358]
                            mem[(32 * s) + _32358 + 32] = mem[_36564 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37896 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32790]
                            mem[(32 * s) + _32790 + 32] = mem[_37896]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32358
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36436 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36436]
                        require uint32(idx) < mem[_9637]
                        mem[(32 * uint32(idx)) + _9637 + 32] = _32790
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37249 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581]
                        mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37249]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37988 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19775]
                        mem[(32 * uint32(idx)) + _19775 + 32] = mem[_37988]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38524 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19775 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19775 + (32 * ('cd', 4).length) + 64] = mem[_38524]
                else:
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36565 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36565] == mem[_36565 + 12 len 20]
                            require s < mem[_32358]
                            mem[(32 * s) + _32358 + 32] = mem[_36565 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37897 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32358 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _32358 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37897]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32358
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36437 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36437]
                        require uint32(idx) < mem[_9637]
                        mem[(32 * uint32(idx)) + _9637 + 32] = _32358 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37251 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581]
                        mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37251]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37989 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19775]
                        mem[(32 * uint32(idx)) + _19775 + 32] = mem[_37989]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38525 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19775 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19775 + (32 * ('cd', 4).length) + 64] = mem[_38525]
                    else:
                        mem[_32358 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36566 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36566] == mem[_36566 + 12 len 20]
                            require s < mem[_32358]
                            mem[(32 * s) + _32358 + 32] = mem[_36566 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37898 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32358 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _32358 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37898]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32358
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36438 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36438]
                        require uint32(idx) < mem[_9637]
                        mem[(32 * uint32(idx)) + _9637 + 32] = _32358 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37253 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581]
                        mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37253]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37990 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19775]
                        mem[(32 * uint32(idx)) + _19775 + 32] = mem[_37990]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38526 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19775 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19775 + (32 * ('cd', 4).length) + 64] = mem[_38526]
                idx = idx + 1
                s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                continue 
            _29206 = mem[64]
            mem[mem[64]] = 192
            _29606 = mem[96]
            mem[mem[64] + 192] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 224
            u = mem[64] + 224
            while idx < _29606:
                mem[u] = t + -_29206 - 224
                _35958 = mem[s]
                _36142 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _35958 + 32
                x = t + 32
                while v < _36142:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _36142 + 1
                w = _35958 + (32 * _36142) + 64
                t = t + (32 * _36142) + 32
                u = u + 32
                continue 
            mem[_29206 + 32] = t - _29206
            _36322 = mem[_9637]
            mem[t] = mem[_9637]
            idx = 0
            s = _9637 + 32
            u = t + (32 * _36322) + 32
            v = t + 32
            while idx < _36322:
                mem[v] = u + -t - 32
                _38785 = mem[s]
                _38830 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _38785 + 32
                x = u + 32
                while t < _38830:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _38830 + 1
                w = _38785 + (32 * _38830) + 64
                u = u + (32 * _38830) + 32
                v = v + 32
                continue 
            mem[_29206 + 64] = u - _29206
            _38886 = mem[_9618]
            mem[u] = mem[_9618]
            mem[u + 32 len 32 * _38886] = mem[_9618 + 32 len 32 * _38886]
            mem[_29206 + 96] = u + (32 * _38886) + -_29206 + 32
            _39430 = mem[_19581]
            mem[u + (32 * _38886) + 32] = mem[_19581]
            mem[u + (32 * _38886) + 64 len 32 * _39430] = mem[_19581 + 32 len 32 * _39430]
            mem[_29206 + 128] = u + (32 * _38886) + (32 * _39430) + -_29206 + 64
            _39814 = mem[_19775]
            mem[u + (32 * _38886) + (32 * _39430) + 64] = mem[_19775]
            mem[u + (32 * _38886) + (32 * _39430) + 96 len 32 * _39814] = mem[_19775 + 32 len 32 * _39814]
            mem[_29206 + 160] = u + (32 * _38886) + (32 * _39430) + (32 * _39814) + -_29206 + 96
            _40038 = mem[_19775 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _38886) + (32 * _39430) + (32 * _39814) + 96] = mem[_19775 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _38886) + (32 * _39430) + (32 * _39814) + 128 len 32 * _40038] = mem[_19775 + (32 * ('cd', 4).length) + 64 len 32 * _40038]
            return memory
              from mem[64]
               len u + (32 * _38886) + (32 * _39430) + (32 * _39814) + (32 * _40038) + -mem[64] + 128
        mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[mem[64] + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
            mem[64] = mem[64] + (98 * ('cd', 4).length) + 96
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _32359 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _32791 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36568 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_36568] == mem[_36568 + 12 len 20]
                                require s < mem[_32359]
                                mem[(32 * s) + _32359 + 32] = mem[_36568 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37899 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_32791]
                                mem[(32 * s) + _32791 + 32] = mem[_37899]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _32359
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36440 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36440]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _32791
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37256 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581]
                            mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37256]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37992 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _19581 + (32 * ('cd', 4).length) + 64] = mem[_37992]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38528 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _19581 + (64 * ('cd', 4).length) + 96] = mem[_38528]
                        else:
                            mem[_32791 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36569 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_36569] == mem[_36569 + 12 len 20]
                                require s < mem[_32359]
                                mem[(32 * s) + _32359 + 32] = mem[_36569 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37900 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_32791]
                                mem[(32 * s) + _32791 + 32] = mem[_37900]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _32359
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36441 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36441]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _32791
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37258 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581]
                            mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37258]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37993 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _19581 + (32 * ('cd', 4).length) + 64] = mem[_37993]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38529 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _19581 + (64 * ('cd', 4).length) + 96] = mem[_38529]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36570 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_36570] == mem[_36570 + 12 len 20]
                                require s < mem[_32359]
                                mem[(32 * s) + _32359 + 32] = mem[_36570 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37901 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_32359 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _32359 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37901]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _32359
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36442 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36442]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _32359 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37260 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581]
                            mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37260]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37994 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _19581 + (32 * ('cd', 4).length) + 64] = mem[_37994]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38530 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _19581 + (64 * ('cd', 4).length) + 96] = mem[_38530]
                        else:
                            mem[_32359 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36571 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_36571] == mem[_36571 + 12 len 20]
                                require s < mem[_32359]
                                mem[(32 * s) + _32359 + 32] = mem[_36571 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37902 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_32359 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _32359 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37902]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _32359
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36443 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36443]
                            require uint32(idx) < mem[_9637]
                            mem[(32 * uint32(idx)) + _9637 + 32] = _32359 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37262 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581]
                            mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37262]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37995 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _19581 + (32 * ('cd', 4).length) + 64] = mem[_37995]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38531 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19581 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _19581 + (64 * ('cd', 4).length) + 96] = mem[_38531]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _29207 = mem[64]
                mem[mem[64]] = 192
                _29607 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _29607:
                    mem[u] = t + -_29207 - 224
                    _35967 = mem[s]
                    _36151 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _35967 + 32
                    x = t + 32
                    while v < _36151:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _36151 + 1
                    w = _35967 + (32 * _36151) + 64
                    t = t + (32 * _36151) + 32
                    u = u + 32
                    continue 
                mem[_29207 + 32] = t - _29207
                _36327 = mem[_9637]
                mem[t] = mem[_9637]
                idx = 0
                s = _9637 + 32
                u = t + (32 * _36327) + 32
                v = t + 32
                while idx < _36327:
                    mem[v] = u + -t - 32
                    _38787 = mem[s]
                    _38831 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _38787 + 32
                    x = u + 32
                    while t < _38831:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _38831 + 1
                    w = _38787 + (32 * _38831) + 64
                    u = u + (32 * _38831) + 32
                    v = v + 32
                    continue 
                mem[_29207 + 64] = u - _29207
                _38887 = mem[_9618]
                mem[u] = mem[_9618]
                mem[u + 32 len 32 * _38887] = mem[_9618 + 32 len 32 * _38887]
                mem[_29207 + 96] = u + (32 * _38887) + -_29207 + 32
                _39431 = mem[_19581]
                mem[u + (32 * _38887) + 32] = mem[_19581]
                mem[u + (32 * _38887) + 64 len 32 * _39431] = mem[_19581 + 32 len 32 * _39431]
                mem[_29207 + 128] = u + (32 * _38887) + (32 * _39431) + -_29207 + 64
                _39815 = mem[_19581 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _38887) + (32 * _39431) + 64] = mem[_19581 + (32 * ('cd', 4).length) + 32]
                mem[u + (32 * _38887) + (32 * _39431) + 96 len 32 * _39815] = mem[_19581 + (32 * ('cd', 4).length) + 64 len 32 * _39815]
                mem[_29207 + 160] = u + (32 * _38887) + (32 * _39431) + (32 * _39815) + -_29207 + 96
                _40039 = mem[_19581 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _38887) + (32 * _39431) + (32 * _39815) + 96] = mem[_19581 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _38887) + (32 * _39431) + (32 * _39815) + 128 len 32 * _40039] = mem[_19581 + (64 * ('cd', 4).length) + 96 len 32 * _40039]
                return memory
                  from mem[64]
                   len u + (32 * _38887) + (32 * _39431) + (32 * _39815) + (32 * _40039) + -mem[64] + 128
            mem[_19581 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require uint32(idx) < ('cd', 68).length
                require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _32360 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _32792 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36573 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36573] == mem[_36573 + 12 len 20]
                            require s < mem[_32360]
                            mem[(32 * s) + _32360 + 32] = mem[_36573 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37903 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32792]
                            mem[(32 * s) + _32792 + 32] = mem[_37903]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32360
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36445 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36445]
                        require uint32(idx) < mem[_9637]
                        mem[(32 * uint32(idx)) + _9637 + 32] = _32792
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37265 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581]
                        mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37265]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37997 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19581 + (32 * ('cd', 4).length) + 64] = mem[_37997]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38533 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _19581 + (64 * ('cd', 4).length) + 96] = mem[_38533]
                    else:
                        mem[_32792 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36574 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36574] == mem[_36574 + 12 len 20]
                            require s < mem[_32360]
                            mem[(32 * s) + _32360 + 32] = mem[_36574 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37904 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32792]
                            mem[(32 * s) + _32792 + 32] = mem[_37904]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32360
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36446 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36446]
                        require uint32(idx) < mem[_9637]
                        mem[(32 * uint32(idx)) + _9637 + 32] = _32792
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37267 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581]
                        mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37267]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37998 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19581 + (32 * ('cd', 4).length) + 64] = mem[_37998]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38534 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _19581 + (64 * ('cd', 4).length) + 96] = mem[_38534]
                else:
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36575 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36575] == mem[_36575 + 12 len 20]
                            require s < mem[_32360]
                            mem[(32 * s) + _32360 + 32] = mem[_36575 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37905 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32360 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _32360 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37905]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32360
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36447 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36447]
                        require uint32(idx) < mem[_9637]
                        mem[(32 * uint32(idx)) + _9637 + 32] = _32360 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37269 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581]
                        mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37269]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37999 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19581 + (32 * ('cd', 4).length) + 64] = mem[_37999]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38535 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _19581 + (64 * ('cd', 4).length) + 96] = mem[_38535]
                    else:
                        mem[_32360 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36576 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36576] == mem[_36576 + 12 len 20]
                            require s < mem[_32360]
                            mem[(32 * s) + _32360 + 32] = mem[_36576 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37906 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32360 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _32360 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37906]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32360
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36448 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36448]
                        require uint32(idx) < mem[_9637]
                        mem[(32 * uint32(idx)) + _9637 + 32] = _32360 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37271 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581]
                        mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37271]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38000 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19581 + (32 * ('cd', 4).length) + 64] = mem[_38000]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38536 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _19581 + (64 * ('cd', 4).length) + 96] = mem[_38536]
                idx = idx + 1
                s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                continue 
            _29208 = mem[64]
            mem[mem[64]] = 192
            _29608 = mem[96]
            mem[mem[64] + 192] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 224
            u = mem[64] + 224
            while idx < _29608:
                mem[u] = t + -_29208 - 224
                _35976 = mem[s]
                _36160 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _35976 + 32
                x = t + 32
                while v < _36160:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _36160 + 1
                w = _35976 + (32 * _36160) + 64
                t = t + (32 * _36160) + 32
                u = u + 32
                continue 
            mem[_29208 + 32] = t - _29208
            _36332 = mem[_9637]
            mem[t] = mem[_9637]
            idx = 0
            s = _9637 + 32
            u = t + (32 * _36332) + 32
            v = t + 32
            while idx < _36332:
                mem[v] = u + -t - 32
                _38789 = mem[s]
                _38832 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _38789 + 32
                x = u + 32
                while t < _38832:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _38832 + 1
                w = _38789 + (32 * _38832) + 64
                u = u + (32 * _38832) + 32
                v = v + 32
                continue 
            mem[_29208 + 64] = u - _29208
            _38888 = mem[_9618]
            mem[u] = mem[_9618]
            mem[u + 32 len 32 * _38888] = mem[_9618 + 32 len 32 * _38888]
            mem[_29208 + 96] = u + (32 * _38888) + -_29208 + 32
            _39432 = mem[_19581]
            mem[u + (32 * _38888) + 32] = mem[_19581]
            mem[u + (32 * _38888) + 64 len 32 * _39432] = mem[_19581 + 32 len 32 * _39432]
            mem[_29208 + 128] = u + (32 * _38888) + (32 * _39432) + -_29208 + 64
            _39816 = mem[_19581 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _38888) + (32 * _39432) + 64] = mem[_19581 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _38888) + (32 * _39432) + 96 len 32 * _39816] = mem[_19581 + (32 * ('cd', 4).length) + 64 len 32 * _39816]
            mem[_29208 + 160] = u + (32 * _38888) + (32 * _39432) + (32 * _39816) + -_29208 + 96
            _40040 = mem[_19581 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _38888) + (32 * _39432) + (32 * _39816) + 96] = mem[_19581 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _38888) + (32 * _39432) + (32 * _39816) + 128 len 32 * _40040] = mem[_19581 + (64 * ('cd', 4).length) + 96 len 32 * _40040]
            return memory
              from mem[64]
               len u + (32 * _38888) + (32 * _39432) + (32 * _39816) + (32 * _40040) + -mem[64] + 128
        mem[mem[64] + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[mem[64] + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
        mem[64] = mem[64] + (98 * ('cd', 4).length) + 96
        if not ('cd', 4).length:
            idx = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require uint32(idx) < ('cd', 68).length
                require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _32361 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _32793 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36578 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36578] == mem[_36578 + 12 len 20]
                            require s < mem[_32361]
                            mem[(32 * s) + _32361 + 32] = mem[_36578 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37907 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32793]
                            mem[(32 * s) + _32793 + 32] = mem[_37907]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32361
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36450 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36450]
                        require uint32(idx) < mem[_9637]
                        mem[(32 * uint32(idx)) + _9637 + 32] = _32793
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37274 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581]
                        mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37274]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38002 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19581 + (32 * ('cd', 4).length) + 64] = mem[_38002]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38538 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _19581 + (64 * ('cd', 4).length) + 96] = mem[_38538]
                    else:
                        mem[_32793 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36579 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36579] == mem[_36579 + 12 len 20]
                            require s < mem[_32361]
                            mem[(32 * s) + _32361 + 32] = mem[_36579 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37908 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32793]
                            mem[(32 * s) + _32793 + 32] = mem[_37908]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32361
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36451 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36451]
                        require uint32(idx) < mem[_9637]
                        mem[(32 * uint32(idx)) + _9637 + 32] = _32793
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37276 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581]
                        mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37276]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38003 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19581 + (32 * ('cd', 4).length) + 64] = mem[_38003]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38539 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _19581 + (64 * ('cd', 4).length) + 96] = mem[_38539]
                else:
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36580 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36580] == mem[_36580 + 12 len 20]
                            require s < mem[_32361]
                            mem[(32 * s) + _32361 + 32] = mem[_36580 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37909 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32361 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _32361 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37909]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32361
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36452 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36452]
                        require uint32(idx) < mem[_9637]
                        mem[(32 * uint32(idx)) + _9637 + 32] = _32361 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37278 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581]
                        mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37278]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38004 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19581 + (32 * ('cd', 4).length) + 64] = mem[_38004]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38540 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _19581 + (64 * ('cd', 4).length) + 96] = mem[_38540]
                    else:
                        mem[_32361 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36581 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36581] == mem[_36581 + 12 len 20]
                            require s < mem[_32361]
                            mem[(32 * s) + _32361 + 32] = mem[_36581 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37910 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32361 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _32361 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37910]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32361
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36453 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36453]
                        require uint32(idx) < mem[_9637]
                        mem[(32 * uint32(idx)) + _9637 + 32] = _32361 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37280 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581]
                        mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37280]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38005 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19581 + (32 * ('cd', 4).length) + 64] = mem[_38005]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38541 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19581 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _19581 + (64 * ('cd', 4).length) + 96] = mem[_38541]
                idx = idx + 1
                s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                continue 
            _29209 = mem[64]
            mem[mem[64]] = 192
            _29609 = mem[96]
            mem[mem[64] + 192] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 224
            u = mem[64] + 224
            while idx < _29609:
                mem[u] = t + -_29209 - 224
                _35985 = mem[s]
                _36169 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _35985 + 32
                x = t + 32
                while v < _36169:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _36169 + 1
                w = _35985 + (32 * _36169) + 64
                t = t + (32 * _36169) + 32
                u = u + 32
                continue 
            mem[_29209 + 32] = t - _29209
            _36337 = mem[_9637]
            mem[t] = mem[_9637]
            idx = 0
            s = _9637 + 32
            u = t + (32 * _36337) + 32
            v = t + 32
            while idx < _36337:
                mem[v] = u + -t - 32
                _38791 = mem[s]
                _38833 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _38791 + 32
                x = u + 32
                while t < _38833:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _38833 + 1
                w = _38791 + (32 * _38833) + 64
                u = u + (32 * _38833) + 32
                v = v + 32
                continue 
            mem[_29209 + 64] = u - _29209
            _38889 = mem[_9618]
            mem[u] = mem[_9618]
            mem[u + 32 len 32 * _38889] = mem[_9618 + 32 len 32 * _38889]
            mem[_29209 + 96] = u + (32 * _38889) + -_29209 + 32
            _39433 = mem[_19581]
            mem[u + (32 * _38889) + 32] = mem[_19581]
            mem[u + (32 * _38889) + 64 len 32 * _39433] = mem[_19581 + 32 len 32 * _39433]
            mem[_29209 + 128] = u + (32 * _38889) + (32 * _39433) + -_29209 + 64
            _39817 = mem[_19581 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _38889) + (32 * _39433) + 64] = mem[_19581 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _38889) + (32 * _39433) + 96 len 32 * _39817] = mem[_19581 + (32 * ('cd', 4).length) + 64 len 32 * _39817]
            mem[_29209 + 160] = u + (32 * _38889) + (32 * _39433) + (32 * _39817) + -_29209 + 96
            _40041 = mem[_19581 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _38889) + (32 * _39433) + (32 * _39817) + 96] = mem[_19581 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _38889) + (32 * _39433) + (32 * _39817) + 128 len 32 * _40041] = mem[_19581 + (64 * ('cd', 4).length) + 96 len 32 * _40041]
            return memory
              from mem[64]
               len u + (32 * _38889) + (32 * _39433) + (32 * _39817) + (32 * _40041) + -mem[64] + 128
        mem[_19581 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        s = 0
        s = 0
        s = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 36).length
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require uint32(idx) < ('cd', 68).length
            require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _32362 = mem[64]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _32794 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36583 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_36583] == mem[_36583 + 12 len 20]
                        require s < mem[_32362]
                        mem[(32 * s) + _32362 + 32] = mem[_36583 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37911 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_32794]
                        mem[(32 * s) + _32794 + 32] = mem[_37911]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _32362
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36455 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36455]
                    require uint32(idx) < mem[_9637]
                    mem[(32 * uint32(idx)) + _9637 + 32] = _32794
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37283 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19581]
                    mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37283]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38007 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19581 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _19581 + (32 * ('cd', 4).length) + 64] = mem[_38007]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38543 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19581 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _19581 + (64 * ('cd', 4).length) + 96] = mem[_38543]
                else:
                    mem[_32794 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36584 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_36584] == mem[_36584 + 12 len 20]
                        require s < mem[_32362]
                        mem[(32 * s) + _32362 + 32] = mem[_36584 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37912 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_32794]
                        mem[(32 * s) + _32794 + 32] = mem[_37912]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _32362
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36456 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36456]
                    require uint32(idx) < mem[_9637]
                    mem[(32 * uint32(idx)) + _9637 + 32] = _32794
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37285 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19581]
                    mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37285]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38008 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19581 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _19581 + (32 * ('cd', 4).length) + 64] = mem[_38008]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38544 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19581 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _19581 + (64 * ('cd', 4).length) + 96] = mem[_38544]
            else:
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36585 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_36585] == mem[_36585 + 12 len 20]
                        require s < mem[_32362]
                        mem[(32 * s) + _32362 + 32] = mem[_36585 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37913 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_32362 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _32362 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37913]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _32362
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36457 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36457]
                    require uint32(idx) < mem[_9637]
                    mem[(32 * uint32(idx)) + _9637 + 32] = _32362 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37287 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19581]
                    mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37287]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38009 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19581 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _19581 + (32 * ('cd', 4).length) + 64] = mem[_38009]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38545 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19581 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _19581 + (64 * ('cd', 4).length) + 96] = mem[_38545]
                else:
                    mem[_32362 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36586 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_36586] == mem[_36586 + 12 len 20]
                        require s < mem[_32362]
                        mem[(32 * s) + _32362 + 32] = mem[_36586 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37914 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_32362 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _32362 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37914]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _32362
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36458 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36458]
                    require uint32(idx) < mem[_9637]
                    mem[(32 * uint32(idx)) + _9637 + 32] = _32362 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37289 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19581]
                    mem[(32 * uint32(idx)) + _19581 + 32] = mem[_37289]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38010 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19581 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _19581 + (32 * ('cd', 4).length) + 64] = mem[_38010]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38546 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19581 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _19581 + (64 * ('cd', 4).length) + 96] = mem[_38546]
            idx = idx + 1
            s = cd[((32 * uint32(idx)) + cd[36] + 36)]
            s = cd[((32 * uint32(idx)) + cd[4] + 36)]
            s = cd[((32 * uint32(idx)) + cd[68] + 36)]
            continue 
        _29210 = mem[64]
        mem[mem[64]] = 192
        _29610 = mem[96]
        mem[mem[64] + 192] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 224
        u = mem[64] + 224
        while idx < _29610:
            mem[u] = t + -_29210 - 224
            _35994 = mem[s]
            _36178 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _35994 + 32
            x = t + 32
            while v < _36178:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            v = _36178 + 1
            w = _35994 + (32 * _36178) + 64
            t = t + (32 * _36178) + 32
            u = u + 32
            continue 
        mem[_29210 + 32] = t - _29210
        _36342 = mem[_9637]
        mem[t] = mem[_9637]
        idx = 0
        s = _9637 + 32
        u = t + (32 * _36342) + 32
        v = t + 32
        while idx < _36342:
            mem[v] = u + -t - 32
            _38793 = mem[s]
            _38834 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _38793 + 32
            x = u + 32
            while t < _38834:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            t = _38834 + 1
            w = _38793 + (32 * _38834) + 64
            u = u + (32 * _38834) + 32
            v = v + 32
            continue 
        mem[_29210 + 64] = u - _29210
        _38890 = mem[_9618]
        mem[u] = mem[_9618]
        mem[u + 32 len 32 * _38890] = mem[_9618 + 32 len 32 * _38890]
        mem[_29210 + 96] = u + (32 * _38890) + -_29210 + 32
        _39434 = mem[_19581]
        mem[u + (32 * _38890) + 32] = mem[_19581]
        mem[u + (32 * _38890) + 64 len 32 * _39434] = mem[_19581 + 32 len 32 * _39434]
        mem[_29210 + 128] = u + (32 * _38890) + (32 * _39434) + -_29210 + 64
        _39818 = mem[_19581 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _38890) + (32 * _39434) + 64] = mem[_19581 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _38890) + (32 * _39434) + 96 len 32 * _39818] = mem[_19581 + (32 * ('cd', 4).length) + 64 len 32 * _39818]
        mem[_29210 + 160] = u + (32 * _38890) + (32 * _39434) + (32 * _39818) + -_29210 + 96
        _40042 = mem[_19581 + (64 * ('cd', 4).length) + 64]
        mem[u + (32 * _38890) + (32 * _39434) + (32 * _39818) + 96] = mem[_19581 + (64 * ('cd', 4).length) + 64]
        mem[u + (32 * _38890) + (32 * _39434) + (32 * _39818) + 128 len 32 * _40042] = mem[_19581 + (64 * ('cd', 4).length) + 96 len 32 * _40042]
        return memory
          from mem[64]
           len u + (32 * _38890) + (32 * _39434) + (32 * _39818) + (32 * _40042) + -mem[64] + 128
    mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
    mem[64] = mem[64] + (64 * ('cd', 4).length) + 64
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[_9618 + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[_9618 + (98 * ('cd', 4).length) + 96] = ('cd', 4).length
            if not ('cd', 4).length:
                require ('cd', 4).length <= test266151307()
                mem[_9618 + (131 * ('cd', 4).length) + 128] = ('cd', 4).length
                mem[64] = _9618 + (164 * ('cd', 4).length) + 160
                if not ('cd', 4).length:
                    idx = 0
                    s = 0
                    s = 0
                    s = 0
                    while ('cd', 4).length > uint32(idx):
                        require uint32(idx) < ('cd', 36).length
                        require uint32(idx) < ('cd', 4).length
                        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                        require uint32(idx) < ('cd', 68).length
                        require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21332 = mem[64]
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            _21635 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29796 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29796] == mem[_29796 + 12 len 20]
                                    require s < mem[_21332]
                                    mem[(32 * s) + _21332 + 32] = mem[_29796 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32179 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21635]
                                    mem[(32 * s) + _21635 + 32] = mem[_32179]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21332
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29612 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29612]
                                require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21635
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31084 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31084]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32364 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                                mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32364]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33540 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33540]
                            else:
                                mem[_21635 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29797 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29797] == mem[_29797 + 12 len 20]
                                    require s < mem[_21332]
                                    mem[(32 * s) + _21332 + 32] = mem[_29797 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32180 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21635]
                                    mem[(32 * s) + _21635 + 32] = mem[_32180]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21332
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29613 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29613]
                                require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21635
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31086 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31086]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32365 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                                mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32365]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33541 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33541]
                        else:
                            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29798 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29798] == mem[_29798 + 12 len 20]
                                    require s < mem[_21332]
                                    mem[(32 * s) + _21332 + 32] = mem[_29798 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32181 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21332 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _21332 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32181]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21332
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29614 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29614]
                                require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21332 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31088 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31088]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32366 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                                mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32366]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33542 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33542]
                            else:
                                mem[_21332 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                                s = 0
                                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _29799 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_29799] == mem[_29799 + 12 len 20]
                                    require s < mem[_21332]
                                    mem[(32 * s) + _21332 + 32] = mem[_29799 + 12 len 20]
                                    mem[mem[64] + 4] = s
                                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args s
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _32182 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require s < mem[_21332 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                    mem[(32 * s) + _21332 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32182]
                                    s = s + 1
                                    continue 
                                require uint32(idx) < mem[96]
                                mem[(32 * uint32(idx)) + 128] = _21332
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29615 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618]
                                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29615]
                                require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                                mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21332 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _31090 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                                mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31090]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32367 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                                mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32367]
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _33543 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                                mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33543]
                        idx = idx + 1
                        s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                        s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                        continue 
                    _19493 = mem[64]
                    mem[mem[64]] = 192
                    _19687 = mem[96]
                    mem[mem[64] + 192] = mem[96]
                    idx = 0
                    s = 128
                    t = mem[64] + (32 * mem[96]) + 224
                    u = mem[64] + 224
                    while idx < _19687:
                        mem[u] = t + -_19493 - 224
                        _28899 = mem[s]
                        _29211 = mem[mem[s]]
                        mem[t] = mem[mem[s]]
                        v = 0
                        w = _28899 + 32
                        x = t + 32
                        while v < _29211:
                            mem[x] = mem[w + 12 len 20]
                            v = v + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        v = _29211 + 1
                        w = _28899 + (32 * _29211) + 64
                        t = t + (32 * _29211) + 32
                        u = u + 32
                        continue 
                    mem[_19493 + 32] = t - _19493
                    _29427 = mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[t] = mem[_9618 + (32 * ('cd', 4).length) + 32]
                    idx = 0
                    s = _9618 + (32 * ('cd', 4).length) + 64
                    u = t + (32 * _29427) + 32
                    v = t + 32
                    while idx < _29427:
                        mem[v] = u + -t - 32
                        _36003 = mem[s]
                        _36187 = mem[mem[s]]
                        mem[u] = mem[mem[s]]
                        t = 0
                        w = _36003 + 32
                        x = u + 32
                        while t < _36187:
                            mem[x] = mem[w]
                            t = t + 1
                            w = w + 32
                            x = x + 32
                            continue 
                        t = _36187 + 1
                        w = _36003 + (32 * _36187) + 64
                        u = u + (32 * _36187) + 32
                        v = v + 32
                        continue 
                    mem[_19493 + 64] = u - _19493
                    _36347 = mem[_9618]
                    mem[u] = mem[_9618]
                    mem[u + 32 len 32 * _36347] = mem[_9618 + 32 len 32 * _36347]
                    mem[_19493 + 96] = u + (32 * _36347) + -_19493 + 32
                    _38891 = mem[_9618 + (64 * ('cd', 4).length) + 64]
                    mem[u + (32 * _36347) + 32] = mem[_9618 + (64 * ('cd', 4).length) + 64]
                    mem[u + (32 * _36347) + 64 len 32 * _38891] = mem[_9618 + (64 * ('cd', 4).length) + 96 len 32 * _38891]
                    mem[_19493 + 128] = u + (32 * _36347) + (32 * _38891) + -_19493 + 64
                    _39435 = mem[_9618 + (98 * ('cd', 4).length) + 96]
                    mem[u + (32 * _36347) + (32 * _38891) + 64] = mem[_9618 + (98 * ('cd', 4).length) + 96]
                    mem[u + (32 * _36347) + (32 * _38891) + 96 len 32 * _39435] = mem[_9618 + (98 * ('cd', 4).length) + 128 len 32 * _39435]
                    mem[_19493 + 160] = u + (32 * _36347) + (32 * _38891) + (32 * _39435) + -_19493 + 96
                    _39819 = mem[_9618 + (131 * ('cd', 4).length) + 128]
                    mem[u + (32 * _36347) + (32 * _38891) + (32 * _39435) + 96] = mem[_9618 + (131 * ('cd', 4).length) + 128]
                    mem[u + (32 * _36347) + (32 * _38891) + (32 * _39435) + 128 len 32 * _39819] = mem[_9618 + (131 * ('cd', 4).length) + 160 len 32 * _39819]
                    return memory
                      from mem[64]
                       len u + (32 * _36347) + (32 * _38891) + (32 * _39435) + (32 * _39819) + -mem[64] + 128
                mem[_9618 + (131 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21333 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21636 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29801 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29801] == mem[_29801 + 12 len 20]
                                require s < mem[_21333]
                                mem[(32 * s) + _21333 + 32] = mem[_29801 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32183 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21636]
                                mem[(32 * s) + _21636 + 32] = mem[_32183]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21333
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29617 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29617]
                            require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21636
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31093 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31093]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32369 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32369]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33545 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33545]
                        else:
                            mem[_21636 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29802 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29802] == mem[_29802 + 12 len 20]
                                require s < mem[_21333]
                                mem[(32 * s) + _21333 + 32] = mem[_29802 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32184 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21636]
                                mem[(32 * s) + _21636 + 32] = mem[_32184]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21333
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29618 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29618]
                            require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21636
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31095 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31095]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32370 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32370]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33546 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33546]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29803 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29803] == mem[_29803 + 12 len 20]
                                require s < mem[_21333]
                                mem[(32 * s) + _21333 + 32] = mem[_29803 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32185 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21333 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21333 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32185]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21333
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29619 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29619]
                            require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21333 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31097 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31097]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32371 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32371]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33547 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33547]
                        else:
                            mem[_21333 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29804 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29804] == mem[_29804 + 12 len 20]
                                require s < mem[_21333]
                                mem[(32 * s) + _21333 + 32] = mem[_29804 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32186 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21333 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21333 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32186]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21333
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29620 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29620]
                            require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21333 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31099 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31099]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32372 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32372]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33548 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33548]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _19494 = mem[64]
                mem[mem[64]] = 192
                _19688 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _19688:
                    mem[u] = t + -_19494 - 224
                    _28908 = mem[s]
                    _29220 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _28908 + 32
                    x = t + 32
                    while v < _29220:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _29220 + 1
                    w = _28908 + (32 * _29220) + 64
                    t = t + (32 * _29220) + 32
                    u = u + 32
                    continue 
                mem[_19494 + 32] = t - _19494
                _29432 = mem[_9618 + (32 * ('cd', 4).length) + 32]
                mem[t] = mem[_9618 + (32 * ('cd', 4).length) + 32]
                idx = 0
                s = _9618 + (32 * ('cd', 4).length) + 64
                u = t + (32 * _29432) + 32
                v = t + 32
                while idx < _29432:
                    mem[v] = u + -t - 32
                    _36005 = mem[s]
                    _36188 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _36005 + 32
                    x = u + 32
                    while t < _36188:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _36188 + 1
                    w = _36005 + (32 * _36188) + 64
                    u = u + (32 * _36188) + 32
                    v = v + 32
                    continue 
                mem[_19494 + 64] = u - _19494
                _36348 = mem[_9618]
                mem[u] = mem[_9618]
                mem[u + 32 len 32 * _36348] = mem[_9618 + 32 len 32 * _36348]
                mem[_19494 + 96] = u + (32 * _36348) + -_19494 + 32
                _38892 = mem[_9618 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36348) + 32] = mem[_9618 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36348) + 64 len 32 * _38892] = mem[_9618 + (64 * ('cd', 4).length) + 96 len 32 * _38892]
                mem[_19494 + 128] = u + (32 * _36348) + (32 * _38892) + -_19494 + 64
                _39436 = mem[_9618 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _36348) + (32 * _38892) + 64] = mem[_9618 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _36348) + (32 * _38892) + 96 len 32 * _39436] = mem[_9618 + (98 * ('cd', 4).length) + 128 len 32 * _39436]
                mem[_19494 + 160] = u + (32 * _36348) + (32 * _38892) + (32 * _39436) + -_19494 + 96
                _39820 = mem[_9618 + (131 * ('cd', 4).length) + 128]
                mem[u + (32 * _36348) + (32 * _38892) + (32 * _39436) + 96] = mem[_9618 + (131 * ('cd', 4).length) + 128]
                mem[u + (32 * _36348) + (32 * _38892) + (32 * _39436) + 128 len 32 * _39820] = mem[_9618 + (131 * ('cd', 4).length) + 160 len 32 * _39820]
                return memory
                  from mem[64]
                   len u + (32 * _36348) + (32 * _38892) + (32 * _39436) + (32 * _39820) + -mem[64] + 128
            mem[_9618 + (98 * ('cd', 4).length) + 128 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            require ('cd', 4).length <= test266151307()
            mem[_9618 + (131 * ('cd', 4).length) + 128] = ('cd', 4).length
            mem[64] = _9618 + (164 * ('cd', 4).length) + 160
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21334 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21637 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29806 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29806] == mem[_29806 + 12 len 20]
                                require s < mem[_21334]
                                mem[(32 * s) + _21334 + 32] = mem[_29806 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32187 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21637]
                                mem[(32 * s) + _21637 + 32] = mem[_32187]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21334
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29622 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29622]
                            require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21637
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31102 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31102]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32374 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32374]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33550 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33550]
                        else:
                            mem[_21637 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29807 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29807] == mem[_29807 + 12 len 20]
                                require s < mem[_21334]
                                mem[(32 * s) + _21334 + 32] = mem[_29807 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32188 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21637]
                                mem[(32 * s) + _21637 + 32] = mem[_32188]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21334
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29623 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29623]
                            require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21637
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31104 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31104]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32375 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32375]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33551 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33551]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29808 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29808] == mem[_29808 + 12 len 20]
                                require s < mem[_21334]
                                mem[(32 * s) + _21334 + 32] = mem[_29808 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32189 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21334 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21334 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32189]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21334
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29624 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29624]
                            require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21334 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31106 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31106]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32376 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32376]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33552 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33552]
                        else:
                            mem[_21334 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29809 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29809] == mem[_29809 + 12 len 20]
                                require s < mem[_21334]
                                mem[(32 * s) + _21334 + 32] = mem[_29809 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32190 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21334 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21334 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32190]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21334
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29625 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29625]
                            require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21334 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31108 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31108]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32377 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32377]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33553 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33553]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _19495 = mem[64]
                mem[mem[64]] = 192
                _19689 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _19689:
                    mem[u] = t + -_19495 - 224
                    _28917 = mem[s]
                    _29229 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _28917 + 32
                    x = t + 32
                    while v < _29229:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _29229 + 1
                    w = _28917 + (32 * _29229) + 64
                    t = t + (32 * _29229) + 32
                    u = u + 32
                    continue 
                mem[_19495 + 32] = t - _19495
                _29437 = mem[_9618 + (32 * ('cd', 4).length) + 32]
                mem[t] = mem[_9618 + (32 * ('cd', 4).length) + 32]
                idx = 0
                s = _9618 + (32 * ('cd', 4).length) + 64
                u = t + (32 * _29437) + 32
                v = t + 32
                while idx < _29437:
                    mem[v] = u + -t - 32
                    _36007 = mem[s]
                    _36189 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _36007 + 32
                    x = u + 32
                    while t < _36189:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _36189 + 1
                    w = _36007 + (32 * _36189) + 64
                    u = u + (32 * _36189) + 32
                    v = v + 32
                    continue 
                mem[_19495 + 64] = u - _19495
                _36349 = mem[_9618]
                mem[u] = mem[_9618]
                mem[u + 32 len 32 * _36349] = mem[_9618 + 32 len 32 * _36349]
                mem[_19495 + 96] = u + (32 * _36349) + -_19495 + 32
                _38893 = mem[_9618 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36349) + 32] = mem[_9618 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36349) + 64 len 32 * _38893] = mem[_9618 + (64 * ('cd', 4).length) + 96 len 32 * _38893]
                mem[_19495 + 128] = u + (32 * _36349) + (32 * _38893) + -_19495 + 64
                _39437 = mem[_9618 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _36349) + (32 * _38893) + 64] = mem[_9618 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _36349) + (32 * _38893) + 96 len 32 * _39437] = mem[_9618 + (98 * ('cd', 4).length) + 128 len 32 * _39437]
                mem[_19495 + 160] = u + (32 * _36349) + (32 * _38893) + (32 * _39437) + -_19495 + 96
                _39821 = mem[_9618 + (131 * ('cd', 4).length) + 128]
                mem[u + (32 * _36349) + (32 * _38893) + (32 * _39437) + 96] = mem[_9618 + (131 * ('cd', 4).length) + 128]
                mem[u + (32 * _36349) + (32 * _38893) + (32 * _39437) + 128 len 32 * _39821] = mem[_9618 + (131 * ('cd', 4).length) + 160 len 32 * _39821]
                return memory
                  from mem[64]
                   len u + (32 * _36349) + (32 * _38893) + (32 * _39437) + (32 * _39821) + -mem[64] + 128
            mem[_9618 + (131 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require uint32(idx) < ('cd', 68).length
                require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _21335 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21638 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _21638 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29811 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29811] == mem[_29811 + 12 len 20]
                            require s < mem[_21335]
                            mem[(32 * s) + _21335 + 32] = mem[_29811 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32191 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21638]
                            mem[(32 * s) + _21638 + 32] = mem[_32191]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21335
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29627 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29627]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21638
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31111 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31111]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32379 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32379]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33555 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33555]
                    else:
                        mem[_21638 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29812 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29812] == mem[_29812 + 12 len 20]
                            require s < mem[_21335]
                            mem[(32 * s) + _21335 + 32] = mem[_29812 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32192 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21638]
                            mem[(32 * s) + _21638 + 32] = mem[_32192]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21335
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29628 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29628]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21638
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31113 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31113]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32380 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32380]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33556 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33556]
                else:
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _21335 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29813 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29813] == mem[_29813 + 12 len 20]
                            require s < mem[_21335]
                            mem[(32 * s) + _21335 + 32] = mem[_29813 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32193 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21335 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _21335 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32193]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21335
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29629 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29629]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21335 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31115 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31115]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32381 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32381]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33557 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33557]
                    else:
                        mem[_21335 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29814 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29814] == mem[_29814 + 12 len 20]
                            require s < mem[_21335]
                            mem[(32 * s) + _21335 + 32] = mem[_29814 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32194 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21335 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _21335 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32194]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21335
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29630 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29630]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21335 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31117 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31117]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32382 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32382]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33558 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33558]
                idx = idx + 1
                s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                continue 
            _19496 = mem[64]
            mem[mem[64]] = 192
            _19690 = mem[96]
            mem[mem[64] + 192] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 224
            u = mem[64] + 224
            while idx < _19690:
                mem[u] = t + -_19496 - 224
                _28926 = mem[s]
                _29238 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _28926 + 32
                x = t + 32
                while v < _29238:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _29238 + 1
                w = _28926 + (32 * _29238) + 64
                t = t + (32 * _29238) + 32
                u = u + 32
                continue 
            mem[_19496 + 32] = t - _19496
            _29442 = mem[_9618 + (32 * ('cd', 4).length) + 32]
            mem[t] = mem[_9618 + (32 * ('cd', 4).length) + 32]
            idx = 0
            s = _9618 + (32 * ('cd', 4).length) + 64
            u = t + (32 * _29442) + 32
            v = t + 32
            while idx < _29442:
                mem[v] = u + -t - 32
                _36009 = mem[s]
                _36190 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _36009 + 32
                x = u + 32
                while t < _36190:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _36190 + 1
                w = _36009 + (32 * _36190) + 64
                u = u + (32 * _36190) + 32
                v = v + 32
                continue 
            mem[_19496 + 64] = u - _19496
            _36350 = mem[_9618]
            mem[u] = mem[_9618]
            mem[u + 32 len 32 * _36350] = mem[_9618 + 32 len 32 * _36350]
            mem[_19496 + 96] = u + (32 * _36350) + -_19496 + 32
            _38894 = mem[_9618 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _36350) + 32] = mem[_9618 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _36350) + 64 len 32 * _38894] = mem[_9618 + (64 * ('cd', 4).length) + 96 len 32 * _38894]
            mem[_19496 + 128] = u + (32 * _36350) + (32 * _38894) + -_19496 + 64
            _39438 = mem[_9618 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _36350) + (32 * _38894) + 64] = mem[_9618 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _36350) + (32 * _38894) + 96 len 32 * _39438] = mem[_9618 + (98 * ('cd', 4).length) + 128 len 32 * _39438]
            mem[_19496 + 160] = u + (32 * _36350) + (32 * _38894) + (32 * _39438) + -_19496 + 96
            _39822 = mem[_9618 + (131 * ('cd', 4).length) + 128]
            mem[u + (32 * _36350) + (32 * _38894) + (32 * _39438) + 96] = mem[_9618 + (131 * ('cd', 4).length) + 128]
            mem[u + (32 * _36350) + (32 * _38894) + (32 * _39438) + 128 len 32 * _39822] = mem[_9618 + (131 * ('cd', 4).length) + 160 len 32 * _39822]
            return memory
              from mem[64]
               len u + (32 * _36350) + (32 * _38894) + (32 * _39438) + (32 * _39822) + -mem[64] + 128
        mem[_9618 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[_9618 + (98 * ('cd', 4).length) + 96] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            mem[_9618 + (131 * ('cd', 4).length) + 128] = ('cd', 4).length
            mem[64] = _9618 + (164 * ('cd', 4).length) + 160
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21336 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _21639 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29816 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29816] == mem[_29816 + 12 len 20]
                                require s < mem[_21336]
                                mem[(32 * s) + _21336 + 32] = mem[_29816 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32195 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21639]
                                mem[(32 * s) + _21639 + 32] = mem[_32195]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21336
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29632 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29632]
                            require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21639
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31120 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31120]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32384 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32384]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33560 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33560]
                        else:
                            mem[_21639 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29817 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29817] == mem[_29817 + 12 len 20]
                                require s < mem[_21336]
                                mem[(32 * s) + _21336 + 32] = mem[_29817 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32196 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21639]
                                mem[(32 * s) + _21639 + 32] = mem[_32196]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21336
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29633 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29633]
                            require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21639
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31122 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31122]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32385 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32385]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33561 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33561]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29818 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29818] == mem[_29818 + 12 len 20]
                                require s < mem[_21336]
                                mem[(32 * s) + _21336 + 32] = mem[_29818 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32197 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21336 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21336 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32197]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21336
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29634 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29634]
                            require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21336 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31124 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31124]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32386 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32386]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33562 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33562]
                        else:
                            mem[_21336 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _29819 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_29819] == mem[_29819 + 12 len 20]
                                require s < mem[_21336]
                                mem[(32 * s) + _21336 + 32] = mem[_29819 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _32198 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_21336 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _21336 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32198]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _21336
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29635 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29635]
                            require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21336 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _31126 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                            mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31126]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32387 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                            mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32387]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _33563 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                            mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33563]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _19497 = mem[64]
                mem[mem[64]] = 192
                _19691 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _19691:
                    mem[u] = t + -_19497 - 224
                    _28935 = mem[s]
                    _29247 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _28935 + 32
                    x = t + 32
                    while v < _29247:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _29247 + 1
                    w = _28935 + (32 * _29247) + 64
                    t = t + (32 * _29247) + 32
                    u = u + 32
                    continue 
                mem[_19497 + 32] = t - _19497
                _29447 = mem[_9618 + (32 * ('cd', 4).length) + 32]
                mem[t] = mem[_9618 + (32 * ('cd', 4).length) + 32]
                idx = 0
                s = _9618 + (32 * ('cd', 4).length) + 64
                u = t + (32 * _29447) + 32
                v = t + 32
                while idx < _29447:
                    mem[v] = u + -t - 32
                    _36011 = mem[s]
                    _36191 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _36011 + 32
                    x = u + 32
                    while t < _36191:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _36191 + 1
                    w = _36011 + (32 * _36191) + 64
                    u = u + (32 * _36191) + 32
                    v = v + 32
                    continue 
                mem[_19497 + 64] = u - _19497
                _36351 = mem[_9618]
                mem[u] = mem[_9618]
                mem[u + 32 len 32 * _36351] = mem[_9618 + 32 len 32 * _36351]
                mem[_19497 + 96] = u + (32 * _36351) + -_19497 + 32
                _38895 = mem[_9618 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36351) + 32] = mem[_9618 + (64 * ('cd', 4).length) + 64]
                mem[u + (32 * _36351) + 64 len 32 * _38895] = mem[_9618 + (64 * ('cd', 4).length) + 96 len 32 * _38895]
                mem[_19497 + 128] = u + (32 * _36351) + (32 * _38895) + -_19497 + 64
                _39439 = mem[_9618 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _36351) + (32 * _38895) + 64] = mem[_9618 + (98 * ('cd', 4).length) + 96]
                mem[u + (32 * _36351) + (32 * _38895) + 96 len 32 * _39439] = mem[_9618 + (98 * ('cd', 4).length) + 128 len 32 * _39439]
                mem[_19497 + 160] = u + (32 * _36351) + (32 * _38895) + (32 * _39439) + -_19497 + 96
                _39823 = mem[_9618 + (131 * ('cd', 4).length) + 128]
                mem[u + (32 * _36351) + (32 * _38895) + (32 * _39439) + 96] = mem[_9618 + (131 * ('cd', 4).length) + 128]
                mem[u + (32 * _36351) + (32 * _38895) + (32 * _39439) + 128 len 32 * _39823] = mem[_9618 + (131 * ('cd', 4).length) + 160 len 32 * _39823]
                return memory
                  from mem[64]
                   len u + (32 * _36351) + (32 * _38895) + (32 * _39439) + (32 * _39823) + -mem[64] + 128
            mem[_9618 + (131 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require uint32(idx) < ('cd', 68).length
                require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _21337 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21640 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _21640 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29821 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29821] == mem[_29821 + 12 len 20]
                            require s < mem[_21337]
                            mem[(32 * s) + _21337 + 32] = mem[_29821 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32199 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21640]
                            mem[(32 * s) + _21640 + 32] = mem[_32199]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21337
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29637 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29637]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21640
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31129 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31129]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32389 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32389]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33565 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33565]
                    else:
                        mem[_21640 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29822 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29822] == mem[_29822 + 12 len 20]
                            require s < mem[_21337]
                            mem[(32 * s) + _21337 + 32] = mem[_29822 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32200 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21640]
                            mem[(32 * s) + _21640 + 32] = mem[_32200]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21337
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29638 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29638]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21640
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31131 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31131]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32390 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32390]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33566 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33566]
                else:
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _21337 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29823 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29823] == mem[_29823 + 12 len 20]
                            require s < mem[_21337]
                            mem[(32 * s) + _21337 + 32] = mem[_29823 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32201 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21337 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _21337 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32201]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21337
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29639 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29639]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21337 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31133 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31133]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32391 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32391]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33567 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33567]
                    else:
                        mem[_21337 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29824 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29824] == mem[_29824 + 12 len 20]
                            require s < mem[_21337]
                            mem[(32 * s) + _21337 + 32] = mem[_29824 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32202 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21337 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _21337 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32202]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21337
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29640 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29640]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21337 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31135 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31135]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32392 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32392]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33568 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33568]
                idx = idx + 1
                s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                continue 
            _19498 = mem[64]
            mem[mem[64]] = 192
            _19692 = mem[96]
            mem[mem[64] + 192] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 224
            u = mem[64] + 224
            while idx < _19692:
                mem[u] = t + -_19498 - 224
                _28944 = mem[s]
                _29256 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _28944 + 32
                x = t + 32
                while v < _29256:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _29256 + 1
                w = _28944 + (32 * _29256) + 64
                t = t + (32 * _29256) + 32
                u = u + 32
                continue 
            mem[_19498 + 32] = t - _19498
            _29452 = mem[_9618 + (32 * ('cd', 4).length) + 32]
            mem[t] = mem[_9618 + (32 * ('cd', 4).length) + 32]
            idx = 0
            s = _9618 + (32 * ('cd', 4).length) + 64
            u = t + (32 * _29452) + 32
            v = t + 32
            while idx < _29452:
                mem[v] = u + -t - 32
                _36013 = mem[s]
                _36192 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _36013 + 32
                x = u + 32
                while t < _36192:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _36192 + 1
                w = _36013 + (32 * _36192) + 64
                u = u + (32 * _36192) + 32
                v = v + 32
                continue 
            mem[_19498 + 64] = u - _19498
            _36352 = mem[_9618]
            mem[u] = mem[_9618]
            mem[u + 32 len 32 * _36352] = mem[_9618 + 32 len 32 * _36352]
            mem[_19498 + 96] = u + (32 * _36352) + -_19498 + 32
            _38896 = mem[_9618 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _36352) + 32] = mem[_9618 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _36352) + 64 len 32 * _38896] = mem[_9618 + (64 * ('cd', 4).length) + 96 len 32 * _38896]
            mem[_19498 + 128] = u + (32 * _36352) + (32 * _38896) + -_19498 + 64
            _39440 = mem[_9618 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _36352) + (32 * _38896) + 64] = mem[_9618 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _36352) + (32 * _38896) + 96 len 32 * _39440] = mem[_9618 + (98 * ('cd', 4).length) + 128 len 32 * _39440]
            mem[_19498 + 160] = u + (32 * _36352) + (32 * _38896) + (32 * _39440) + -_19498 + 96
            _39824 = mem[_9618 + (131 * ('cd', 4).length) + 128]
            mem[u + (32 * _36352) + (32 * _38896) + (32 * _39440) + 96] = mem[_9618 + (131 * ('cd', 4).length) + 128]
            mem[u + (32 * _36352) + (32 * _38896) + (32 * _39440) + 128 len 32 * _39824] = mem[_9618 + (131 * ('cd', 4).length) + 160 len 32 * _39824]
            return memory
              from mem[64]
               len u + (32 * _36352) + (32 * _38896) + (32 * _39440) + (32 * _39824) + -mem[64] + 128
        mem[_9618 + (98 * ('cd', 4).length) + 128 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[_9618 + (131 * ('cd', 4).length) + 128] = ('cd', 4).length
        mem[64] = _9618 + (164 * ('cd', 4).length) + 160
        if not ('cd', 4).length:
            idx = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require uint32(idx) < ('cd', 68).length
                require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _21338 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _21641 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _21641 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29826 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29826] == mem[_29826 + 12 len 20]
                            require s < mem[_21338]
                            mem[(32 * s) + _21338 + 32] = mem[_29826 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32203 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21641]
                            mem[(32 * s) + _21641 + 32] = mem[_32203]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21338
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29642 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29642]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21641
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31138 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31138]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32394 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32394]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33570 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33570]
                    else:
                        mem[_21641 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29827 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29827] == mem[_29827 + 12 len 20]
                            require s < mem[_21338]
                            mem[(32 * s) + _21338 + 32] = mem[_29827 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32204 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21641]
                            mem[(32 * s) + _21641 + 32] = mem[_32204]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21338
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29643 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29643]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21641
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31140 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31140]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32395 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32395]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33571 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33571]
                else:
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = _21338 + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29828 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29828] == mem[_29828 + 12 len 20]
                            require s < mem[_21338]
                            mem[(32 * s) + _21338 + 32] = mem[_29828 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32205 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21338 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _21338 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32205]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21338
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29644 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29644]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21338 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31142 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31142]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32396 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32396]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33572 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33572]
                    else:
                        mem[_21338 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _29829 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_29829] == mem[_29829 + 12 len 20]
                            require s < mem[_21338]
                            mem[(32 * s) + _21338 + 32] = mem[_29829 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _32206 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_21338 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _21338 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32206]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _21338
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29645 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29645]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21338 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _31144 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31144]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32397 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                        mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32397]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _33573 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                        mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33573]
                idx = idx + 1
                s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                continue 
            _19499 = mem[64]
            mem[mem[64]] = 192
            _19693 = mem[96]
            mem[mem[64] + 192] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 224
            u = mem[64] + 224
            while idx < _19693:
                mem[u] = t + -_19499 - 224
                _28953 = mem[s]
                _29265 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _28953 + 32
                x = t + 32
                while v < _29265:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _29265 + 1
                w = _28953 + (32 * _29265) + 64
                t = t + (32 * _29265) + 32
                u = u + 32
                continue 
            mem[_19499 + 32] = t - _19499
            _29457 = mem[_9618 + (32 * ('cd', 4).length) + 32]
            mem[t] = mem[_9618 + (32 * ('cd', 4).length) + 32]
            idx = 0
            s = _9618 + (32 * ('cd', 4).length) + 64
            u = t + (32 * _29457) + 32
            v = t + 32
            while idx < _29457:
                mem[v] = u + -t - 32
                _36015 = mem[s]
                _36193 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _36015 + 32
                x = u + 32
                while t < _36193:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _36193 + 1
                w = _36015 + (32 * _36193) + 64
                u = u + (32 * _36193) + 32
                v = v + 32
                continue 
            mem[_19499 + 64] = u - _19499
            _36353 = mem[_9618]
            mem[u] = mem[_9618]
            mem[u + 32 len 32 * _36353] = mem[_9618 + 32 len 32 * _36353]
            mem[_19499 + 96] = u + (32 * _36353) + -_19499 + 32
            _38897 = mem[_9618 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _36353) + 32] = mem[_9618 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _36353) + 64 len 32 * _38897] = mem[_9618 + (64 * ('cd', 4).length) + 96 len 32 * _38897]
            mem[_19499 + 128] = u + (32 * _36353) + (32 * _38897) + -_19499 + 64
            _39441 = mem[_9618 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _36353) + (32 * _38897) + 64] = mem[_9618 + (98 * ('cd', 4).length) + 96]
            mem[u + (32 * _36353) + (32 * _38897) + 96 len 32 * _39441] = mem[_9618 + (98 * ('cd', 4).length) + 128 len 32 * _39441]
            mem[_19499 + 160] = u + (32 * _36353) + (32 * _38897) + (32 * _39441) + -_19499 + 96
            _39825 = mem[_9618 + (131 * ('cd', 4).length) + 128]
            mem[u + (32 * _36353) + (32 * _38897) + (32 * _39441) + 96] = mem[_9618 + (131 * ('cd', 4).length) + 128]
            mem[u + (32 * _36353) + (32 * _38897) + (32 * _39441) + 128 len 32 * _39825] = mem[_9618 + (131 * ('cd', 4).length) + 160 len 32 * _39825]
            return memory
              from mem[64]
               len u + (32 * _36353) + (32 * _38897) + (32 * _39441) + (32 * _39825) + -mem[64] + 128
        mem[_9618 + (131 * ('cd', 4).length) + 160 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        s = 0
        s = 0
        s = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 36).length
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require uint32(idx) < ('cd', 68).length
            require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _21339 = mem[64]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _21642 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29831 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_29831] == mem[_29831 + 12 len 20]
                        require s < mem[_21339]
                        mem[(32 * s) + _21339 + 32] = mem[_29831 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32207 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_21642]
                        mem[(32 * s) + _21642 + 32] = mem[_32207]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _21339
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29647 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29647]
                    require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21642
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31147 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31147]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32399 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                    mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32399]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33575 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33575]
                else:
                    mem[_21642 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29832 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_29832] == mem[_29832 + 12 len 20]
                        require s < mem[_21339]
                        mem[(32 * s) + _21339 + 32] = mem[_29832 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32208 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_21642]
                        mem[(32 * s) + _21642 + 32] = mem[_32208]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _21339
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29648 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29648]
                    require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21642
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31149 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31149]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32400 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                    mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32400]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33576 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33576]
            else:
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29833 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_29833] == mem[_29833 + 12 len 20]
                        require s < mem[_21339]
                        mem[(32 * s) + _21339 + 32] = mem[_29833 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32209 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_21339 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _21339 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32209]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _21339
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29649 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29649]
                    require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21339 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31151 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31151]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32401 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                    mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32401]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33577 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33577]
                else:
                    mem[_21339 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _29834 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_29834] == mem[_29834 + 12 len 20]
                        require s < mem[_21339]
                        mem[(32 * s) + _21339 + 32] = mem[_29834 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _32210 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_21339 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _21339 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_32210]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _21339
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _29650 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_29650]
                    require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _21339 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _31153 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _9618 + (64 * ('cd', 4).length) + 96] = mem[_31153]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _32402 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618 + (98 * ('cd', 4).length) + 96]
                    mem[(32 * uint32(idx)) + _9618 + (98 * ('cd', 4).length) + 128] = mem[_32402]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _33578 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618 + (131 * ('cd', 4).length) + 128]
                    mem[(32 * uint32(idx)) + _9618 + (131 * ('cd', 4).length) + 160] = mem[_33578]
            idx = idx + 1
            s = cd[((32 * uint32(idx)) + cd[36] + 36)]
            s = cd[((32 * uint32(idx)) + cd[4] + 36)]
            s = cd[((32 * uint32(idx)) + cd[68] + 36)]
            continue 
        _19500 = mem[64]
        mem[mem[64]] = 192
        _19694 = mem[96]
        mem[mem[64] + 192] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 224
        u = mem[64] + 224
        while idx < _19694:
            mem[u] = t + -_19500 - 224
            _28962 = mem[s]
            _29274 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _28962 + 32
            x = t + 32
            while v < _29274:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            v = _29274 + 1
            w = _28962 + (32 * _29274) + 64
            t = t + (32 * _29274) + 32
            u = u + 32
            continue 
        mem[_19500 + 32] = t - _19500
        _29462 = mem[_9618 + (32 * ('cd', 4).length) + 32]
        mem[t] = mem[_9618 + (32 * ('cd', 4).length) + 32]
        idx = 0
        s = _9618 + (32 * ('cd', 4).length) + 64
        u = t + (32 * _29462) + 32
        v = t + 32
        while idx < _29462:
            mem[v] = u + -t - 32
            _36017 = mem[s]
            _36194 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _36017 + 32
            x = u + 32
            while t < _36194:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            t = _36194 + 1
            w = _36017 + (32 * _36194) + 64
            u = u + (32 * _36194) + 32
            v = v + 32
            continue 
        mem[_19500 + 64] = u - _19500
        _36354 = mem[_9618]
        mem[u] = mem[_9618]
        mem[u + 32 len 32 * _36354] = mem[_9618 + 32 len 32 * _36354]
        mem[_19500 + 96] = u + (32 * _36354) + -_19500 + 32
        _38898 = mem[_9618 + (64 * ('cd', 4).length) + 64]
        mem[u + (32 * _36354) + 32] = mem[_9618 + (64 * ('cd', 4).length) + 64]
        mem[u + (32 * _36354) + 64 len 32 * _38898] = mem[_9618 + (64 * ('cd', 4).length) + 96 len 32 * _38898]
        mem[_19500 + 128] = u + (32 * _36354) + (32 * _38898) + -_19500 + 64
        _39442 = mem[_9618 + (98 * ('cd', 4).length) + 96]
        mem[u + (32 * _36354) + (32 * _38898) + 64] = mem[_9618 + (98 * ('cd', 4).length) + 96]
        mem[u + (32 * _36354) + (32 * _38898) + 96 len 32 * _39442] = mem[_9618 + (98 * ('cd', 4).length) + 128 len 32 * _39442]
        mem[_19500 + 160] = u + (32 * _36354) + (32 * _38898) + (32 * _39442) + -_19500 + 96
        _39826 = mem[_9618 + (131 * ('cd', 4).length) + 128]
        mem[u + (32 * _36354) + (32 * _38898) + (32 * _39442) + 96] = mem[_9618 + (131 * ('cd', 4).length) + 128]
        mem[u + (32 * _36354) + (32 * _38898) + (32 * _39442) + 128 len 32 * _39826] = mem[_9618 + (131 * ('cd', 4).length) + 160 len 32 * _39826]
        return memory
          from mem[64]
           len u + (32 * _36354) + (32 * _38898) + (32 * _39442) + (32 * _39826) + -mem[64] + 128
    mem[_9618 + (32 * ('cd', 4).length) + 64] = 96
    s = _9618 + (32 * ('cd', 4).length) + 64
    idx = ('cd', 4).length
    while idx - 1:
        mem[s + 32] = 96
        s = s + 32
        idx = idx - 1
        continue 
    require ('cd', 4).length <= test266151307()
    _19582 = mem[64]
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        _19776 = mem[64] + (32 * ('cd', 4).length) + 32
        mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
        if not ('cd', 4).length:
            require ('cd', 4).length <= test266151307()
            _20068 = mem[64] + (64 * ('cd', 4).length) + 64
            mem[mem[64] + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
            mem[64] = mem[64] + (98 * ('cd', 4).length) + 96
            if not ('cd', 4).length:
                idx = 0
                s = 0
                s = 0
                s = 0
                while ('cd', 4).length > uint32(idx):
                    require uint32(idx) < ('cd', 36).length
                    require uint32(idx) < ('cd', 4).length
                    require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                    require uint32(idx) < ('cd', 68).length
                    require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _32403 = mem[64]
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        _32867 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36596 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_36596] == mem[_36596 + 12 len 20]
                                require s < mem[_32403]
                                mem[(32 * s) + _32403 + 32] = mem[_36596 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37915 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_32867]
                                mem[(32 * s) + _32867 + 32] = mem[_37915]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _32403
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36468 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36468]
                            require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32867
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37300 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19582]
                            mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37300]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38020 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19776]
                            mem[(32 * uint32(idx)) + _19776 + 32] = mem[_38020]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38548 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_20068]
                            mem[(32 * uint32(idx)) + _20068 + 32] = mem[_38548]
                        else:
                            mem[_32867 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36597 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_36597] == mem[_36597 + 12 len 20]
                                require s < mem[_32403]
                                mem[(32 * s) + _32403 + 32] = mem[_36597 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37916 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_32867]
                                mem[(32 * s) + _32867 + 32] = mem[_37916]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _32403
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36469 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36469]
                            require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32867
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37302 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19582]
                            mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37302]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38021 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19776]
                            mem[(32 * uint32(idx)) + _19776 + 32] = mem[_38021]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38549 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_20068]
                            mem[(32 * uint32(idx)) + _20068 + 32] = mem[_38549]
                    else:
                        mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                        mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                        mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36598 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_36598] == mem[_36598 + 12 len 20]
                                require s < mem[_32403]
                                mem[(32 * s) + _32403 + 32] = mem[_36598 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37917 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_32403 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _32403 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37917]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _32403
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36470 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36470]
                            require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32403 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37304 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19582]
                            mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37304]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38022 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19776]
                            mem[(32 * uint32(idx)) + _19776 + 32] = mem[_38022]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38550 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_20068]
                            mem[(32 * uint32(idx)) + _20068 + 32] = mem[_38550]
                        else:
                            mem[_32403 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                            s = 0
                            while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _36599 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_36599] == mem[_36599 + 12 len 20]
                                require s < mem[_32403]
                                mem[(32 * s) + _32403 + 32] = mem[_36599 + 12 len 20]
                                mem[mem[64] + 4] = s
                                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args s
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _37918 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require s < mem[_32403 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                                mem[(32 * s) + _32403 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37918]
                                s = s + 1
                                continue 
                            require uint32(idx) < mem[96]
                            mem[(32 * uint32(idx)) + 128] = _32403
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36471 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_9618]
                            mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36471]
                            require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                            mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32403 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37306 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19582]
                            mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37306]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38023 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_19776]
                            mem[(32 * uint32(idx)) + _19776 + 32] = mem[_38023]
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _38551 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require uint32(idx) < mem[_20068]
                            mem[(32 * uint32(idx)) + _20068 + 32] = mem[_38551]
                    idx = idx + 1
                    s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                    s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                    continue 
                _29283 = mem[64]
                mem[mem[64]] = 192
                _29651 = mem[96]
                mem[mem[64] + 192] = mem[96]
                idx = 0
                s = 128
                t = mem[64] + (32 * mem[96]) + 224
                u = mem[64] + 224
                while idx < _29651:
                    mem[u] = t + -_29283 - 224
                    _36019 = mem[s]
                    _36195 = mem[mem[s]]
                    mem[t] = mem[mem[s]]
                    v = 0
                    w = _36019 + 32
                    x = t + 32
                    while v < _36195:
                        mem[x] = mem[w + 12 len 20]
                        v = v + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    v = _36195 + 1
                    w = _36019 + (32 * _36195) + 64
                    t = t + (32 * _36195) + 32
                    u = u + 32
                    continue 
                mem[_29283 + 32] = t - _29283
                _36355 = mem[_9618 + (32 * ('cd', 4).length) + 32]
                mem[t] = mem[_9618 + (32 * ('cd', 4).length) + 32]
                idx = 0
                s = _9618 + (32 * ('cd', 4).length) + 64
                u = t + (32 * _36355) + 32
                v = t + 32
                while idx < _36355:
                    mem[v] = u + -t - 32
                    _38811 = mem[s]
                    _38835 = mem[mem[s]]
                    mem[u] = mem[mem[s]]
                    t = 0
                    w = _38811 + 32
                    x = u + 32
                    while t < _38835:
                        mem[x] = mem[w]
                        t = t + 1
                        w = w + 32
                        x = x + 32
                        continue 
                    t = _38835 + 1
                    w = _38811 + (32 * _38835) + 64
                    u = u + (32 * _38835) + 32
                    v = v + 32
                    continue 
                mem[_29283 + 64] = u - _29283
                _38899 = mem[_9618]
                mem[u] = mem[_9618]
                mem[u + 32 len 32 * _38899] = mem[_9618 + 32 len 32 * _38899]
                mem[_29283 + 96] = u + (32 * _38899) + -_29283 + 32
                _39443 = mem[_19582]
                mem[u + (32 * _38899) + 32] = mem[_19582]
                mem[u + (32 * _38899) + 64 len 32 * _39443] = mem[_19582 + 32 len 32 * _39443]
                mem[_29283 + 128] = u + (32 * _38899) + (32 * _39443) + -_29283 + 64
                _39827 = mem[_19776]
                mem[u + (32 * _38899) + (32 * _39443) + 64] = mem[_19776]
                mem[u + (32 * _38899) + (32 * _39443) + 96 len 32 * _39827] = mem[_19776 + 32 len 32 * _39827]
                mem[_29283 + 160] = u + (32 * _38899) + (32 * _39443) + (32 * _39827) + -_29283 + 96
                _40051 = mem[_20068]
                mem[u + (32 * _38899) + (32 * _39443) + (32 * _39827) + 96] = mem[_20068]
                mem[u + (32 * _38899) + (32 * _39443) + (32 * _39827) + 128 len 32 * _40051] = mem[_20068 + 32 len 32 * _40051]
                return memory
                  from mem[64]
                   len u + (32 * _38899) + (32 * _39443) + (32 * _39827) + (32 * _40051) + -mem[64] + 128
            mem[_20068 + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
            idx = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require uint32(idx) < ('cd', 68).length
                require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _32404 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _32868 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36601 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36601] == mem[_36601 + 12 len 20]
                            require s < mem[_32404]
                            mem[(32 * s) + _32404 + 32] = mem[_36601 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37919 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32868]
                            mem[(32 * s) + _32868 + 32] = mem[_37919]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32404
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36473 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36473]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32868
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37309 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582]
                        mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37309]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38025 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19776]
                        mem[(32 * uint32(idx)) + _19776 + 32] = mem[_38025]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38553 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_20068]
                        mem[(32 * uint32(idx)) + _20068 + 32] = mem[_38553]
                    else:
                        mem[_32868 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36602 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36602] == mem[_36602 + 12 len 20]
                            require s < mem[_32404]
                            mem[(32 * s) + _32404 + 32] = mem[_36602 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37920 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32868]
                            mem[(32 * s) + _32868 + 32] = mem[_37920]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32404
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36474 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36474]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32868
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37311 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582]
                        mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37311]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38026 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19776]
                        mem[(32 * uint32(idx)) + _19776 + 32] = mem[_38026]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38554 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_20068]
                        mem[(32 * uint32(idx)) + _20068 + 32] = mem[_38554]
                else:
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36603 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36603] == mem[_36603 + 12 len 20]
                            require s < mem[_32404]
                            mem[(32 * s) + _32404 + 32] = mem[_36603 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37921 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32404 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _32404 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37921]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32404
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36475 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36475]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32404 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37313 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582]
                        mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37313]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38027 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19776]
                        mem[(32 * uint32(idx)) + _19776 + 32] = mem[_38027]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38555 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_20068]
                        mem[(32 * uint32(idx)) + _20068 + 32] = mem[_38555]
                    else:
                        mem[_32404 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36604 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36604] == mem[_36604 + 12 len 20]
                            require s < mem[_32404]
                            mem[(32 * s) + _32404 + 32] = mem[_36604 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37922 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32404 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _32404 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37922]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32404
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36476 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36476]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32404 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37315 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582]
                        mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37315]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38028 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19776]
                        mem[(32 * uint32(idx)) + _19776 + 32] = mem[_38028]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38556 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_20068]
                        mem[(32 * uint32(idx)) + _20068 + 32] = mem[_38556]
                idx = idx + 1
                s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                continue 
            _29284 = mem[64]
            mem[mem[64]] = 192
            _29652 = mem[96]
            mem[mem[64] + 192] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 224
            u = mem[64] + 224
            while idx < _29652:
                mem[u] = t + -_29284 - 224
                _36028 = mem[s]
                _36204 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _36028 + 32
                x = t + 32
                while v < _36204:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _36204 + 1
                w = _36028 + (32 * _36204) + 64
                t = t + (32 * _36204) + 32
                u = u + 32
                continue 
            mem[_29284 + 32] = t - _29284
            _36360 = mem[_9618 + (32 * ('cd', 4).length) + 32]
            mem[t] = mem[_9618 + (32 * ('cd', 4).length) + 32]
            idx = 0
            s = _9618 + (32 * ('cd', 4).length) + 64
            u = t + (32 * _36360) + 32
            v = t + 32
            while idx < _36360:
                mem[v] = u + -t - 32
                _38813 = mem[s]
                _38836 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _38813 + 32
                x = u + 32
                while t < _38836:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _38836 + 1
                w = _38813 + (32 * _38836) + 64
                u = u + (32 * _38836) + 32
                v = v + 32
                continue 
            mem[_29284 + 64] = u - _29284
            _38900 = mem[_9618]
            mem[u] = mem[_9618]
            mem[u + 32 len 32 * _38900] = mem[_9618 + 32 len 32 * _38900]
            mem[_29284 + 96] = u + (32 * _38900) + -_29284 + 32
            _39444 = mem[_19582]
            mem[u + (32 * _38900) + 32] = mem[_19582]
            mem[u + (32 * _38900) + 64 len 32 * _39444] = mem[_19582 + 32 len 32 * _39444]
            mem[_29284 + 128] = u + (32 * _38900) + (32 * _39444) + -_29284 + 64
            _39828 = mem[_19776]
            mem[u + (32 * _38900) + (32 * _39444) + 64] = mem[_19776]
            mem[u + (32 * _38900) + (32 * _39444) + 96 len 32 * _39828] = mem[_19776 + 32 len 32 * _39828]
            mem[_29284 + 160] = u + (32 * _38900) + (32 * _39444) + (32 * _39828) + -_29284 + 96
            _40052 = mem[_20068]
            mem[u + (32 * _38900) + (32 * _39444) + (32 * _39828) + 96] = mem[_20068]
            mem[u + (32 * _38900) + (32 * _39444) + (32 * _39828) + 128 len 32 * _40052] = mem[_20068 + 32 len 32 * _40052]
            return memory
              from mem[64]
               len u + (32 * _38900) + (32 * _39444) + (32 * _39828) + (32 * _40052) + -mem[64] + 128
        mem[mem[64] + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        require ('cd', 4).length <= test266151307()
        mem[mem[64] + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
        mem[64] = mem[64] + (98 * ('cd', 4).length) + 96
        if not ('cd', 4).length:
            idx = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require uint32(idx) < ('cd', 68).length
                require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _32405 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _32869 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36606 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36606] == mem[_36606 + 12 len 20]
                            require s < mem[_32405]
                            mem[(32 * s) + _32405 + 32] = mem[_36606 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37923 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32869]
                            mem[(32 * s) + _32869 + 32] = mem[_37923]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32405
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36478 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36478]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32869
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37318 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582]
                        mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37318]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38030 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19776]
                        mem[(32 * uint32(idx)) + _19776 + 32] = mem[_38030]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38558 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19776 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19776 + (32 * ('cd', 4).length) + 64] = mem[_38558]
                    else:
                        mem[_32869 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36607 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36607] == mem[_36607 + 12 len 20]
                            require s < mem[_32405]
                            mem[(32 * s) + _32405 + 32] = mem[_36607 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37924 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32869]
                            mem[(32 * s) + _32869 + 32] = mem[_37924]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32405
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36479 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36479]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32869
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37320 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582]
                        mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37320]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38031 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19776]
                        mem[(32 * uint32(idx)) + _19776 + 32] = mem[_38031]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38559 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19776 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19776 + (32 * ('cd', 4).length) + 64] = mem[_38559]
                else:
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36608 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36608] == mem[_36608 + 12 len 20]
                            require s < mem[_32405]
                            mem[(32 * s) + _32405 + 32] = mem[_36608 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37925 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32405 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _32405 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37925]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32405
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36480 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36480]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32405 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37322 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582]
                        mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37322]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38032 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19776]
                        mem[(32 * uint32(idx)) + _19776 + 32] = mem[_38032]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38560 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19776 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19776 + (32 * ('cd', 4).length) + 64] = mem[_38560]
                    else:
                        mem[_32405 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36609 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36609] == mem[_36609 + 12 len 20]
                            require s < mem[_32405]
                            mem[(32 * s) + _32405 + 32] = mem[_36609 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37926 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32405 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _32405 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37926]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32405
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36481 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36481]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32405 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37324 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582]
                        mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37324]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38033 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19776]
                        mem[(32 * uint32(idx)) + _19776 + 32] = mem[_38033]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38561 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19776 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19776 + (32 * ('cd', 4).length) + 64] = mem[_38561]
                idx = idx + 1
                s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                continue 
            _29285 = mem[64]
            mem[mem[64]] = 192
            _29653 = mem[96]
            mem[mem[64] + 192] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 224
            u = mem[64] + 224
            while idx < _29653:
                mem[u] = t + -_29285 - 224
                _36037 = mem[s]
                _36213 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _36037 + 32
                x = t + 32
                while v < _36213:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _36213 + 1
                w = _36037 + (32 * _36213) + 64
                t = t + (32 * _36213) + 32
                u = u + 32
                continue 
            mem[_29285 + 32] = t - _29285
            _36365 = mem[_9618 + (32 * ('cd', 4).length) + 32]
            mem[t] = mem[_9618 + (32 * ('cd', 4).length) + 32]
            idx = 0
            s = _9618 + (32 * ('cd', 4).length) + 64
            u = t + (32 * _36365) + 32
            v = t + 32
            while idx < _36365:
                mem[v] = u + -t - 32
                _38815 = mem[s]
                _38837 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _38815 + 32
                x = u + 32
                while t < _38837:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _38837 + 1
                w = _38815 + (32 * _38837) + 64
                u = u + (32 * _38837) + 32
                v = v + 32
                continue 
            mem[_29285 + 64] = u - _29285
            _38901 = mem[_9618]
            mem[u] = mem[_9618]
            mem[u + 32 len 32 * _38901] = mem[_9618 + 32 len 32 * _38901]
            mem[_29285 + 96] = u + (32 * _38901) + -_29285 + 32
            _39445 = mem[_19582]
            mem[u + (32 * _38901) + 32] = mem[_19582]
            mem[u + (32 * _38901) + 64 len 32 * _39445] = mem[_19582 + 32 len 32 * _39445]
            mem[_29285 + 128] = u + (32 * _38901) + (32 * _39445) + -_29285 + 64
            _39829 = mem[_19776]
            mem[u + (32 * _38901) + (32 * _39445) + 64] = mem[_19776]
            mem[u + (32 * _38901) + (32 * _39445) + 96 len 32 * _39829] = mem[_19776 + 32 len 32 * _39829]
            mem[_29285 + 160] = u + (32 * _38901) + (32 * _39445) + (32 * _39829) + -_29285 + 96
            _40053 = mem[_19776 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _38901) + (32 * _39445) + (32 * _39829) + 96] = mem[_19776 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _38901) + (32 * _39445) + (32 * _39829) + 128 len 32 * _40053] = mem[_19776 + (32 * ('cd', 4).length) + 64 len 32 * _40053]
            return memory
              from mem[64]
               len u + (32 * _38901) + (32 * _39445) + (32 * _39829) + (32 * _40053) + -mem[64] + 128
        mem[_19776 + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        s = 0
        s = 0
        s = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 36).length
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require uint32(idx) < ('cd', 68).length
            require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _32406 = mem[64]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _32870 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36611 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_36611] == mem[_36611 + 12 len 20]
                        require s < mem[_32406]
                        mem[(32 * s) + _32406 + 32] = mem[_36611 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37927 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_32870]
                        mem[(32 * s) + _32870 + 32] = mem[_37927]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _32406
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36483 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36483]
                    require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32870
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37327 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582]
                    mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37327]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38035 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19776]
                    mem[(32 * uint32(idx)) + _19776 + 32] = mem[_38035]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38563 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19776 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _19776 + (32 * ('cd', 4).length) + 64] = mem[_38563]
                else:
                    mem[_32870 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36612 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_36612] == mem[_36612 + 12 len 20]
                        require s < mem[_32406]
                        mem[(32 * s) + _32406 + 32] = mem[_36612 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37928 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_32870]
                        mem[(32 * s) + _32870 + 32] = mem[_37928]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _32406
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36484 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36484]
                    require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32870
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37329 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582]
                    mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37329]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38036 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19776]
                    mem[(32 * uint32(idx)) + _19776 + 32] = mem[_38036]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38564 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19776 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _19776 + (32 * ('cd', 4).length) + 64] = mem[_38564]
            else:
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36613 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_36613] == mem[_36613 + 12 len 20]
                        require s < mem[_32406]
                        mem[(32 * s) + _32406 + 32] = mem[_36613 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37929 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_32406 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _32406 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37929]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _32406
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36485 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36485]
                    require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32406 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37331 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582]
                    mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37331]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38037 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19776]
                    mem[(32 * uint32(idx)) + _19776 + 32] = mem[_38037]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38565 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19776 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _19776 + (32 * ('cd', 4).length) + 64] = mem[_38565]
                else:
                    mem[_32406 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36614 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_36614] == mem[_36614 + 12 len 20]
                        require s < mem[_32406]
                        mem[(32 * s) + _32406 + 32] = mem[_36614 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37930 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_32406 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _32406 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37930]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _32406
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36486 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36486]
                    require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32406 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37333 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582]
                    mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37333]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38038 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19776]
                    mem[(32 * uint32(idx)) + _19776 + 32] = mem[_38038]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38566 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19776 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _19776 + (32 * ('cd', 4).length) + 64] = mem[_38566]
            idx = idx + 1
            s = cd[((32 * uint32(idx)) + cd[36] + 36)]
            s = cd[((32 * uint32(idx)) + cd[4] + 36)]
            s = cd[((32 * uint32(idx)) + cd[68] + 36)]
            continue 
        _29286 = mem[64]
        mem[mem[64]] = 192
        _29654 = mem[96]
        mem[mem[64] + 192] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 224
        u = mem[64] + 224
        while idx < _29654:
            mem[u] = t + -_29286 - 224
            _36046 = mem[s]
            _36222 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _36046 + 32
            x = t + 32
            while v < _36222:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            v = _36222 + 1
            w = _36046 + (32 * _36222) + 64
            t = t + (32 * _36222) + 32
            u = u + 32
            continue 
        mem[_29286 + 32] = t - _29286
        _36370 = mem[_9618 + (32 * ('cd', 4).length) + 32]
        mem[t] = mem[_9618 + (32 * ('cd', 4).length) + 32]
        idx = 0
        s = _9618 + (32 * ('cd', 4).length) + 64
        u = t + (32 * _36370) + 32
        v = t + 32
        while idx < _36370:
            mem[v] = u + -t - 32
            _38817 = mem[s]
            _38838 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _38817 + 32
            x = u + 32
            while t < _38838:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            t = _38838 + 1
            w = _38817 + (32 * _38838) + 64
            u = u + (32 * _38838) + 32
            v = v + 32
            continue 
        mem[_29286 + 64] = u - _29286
        _38902 = mem[_9618]
        mem[u] = mem[_9618]
        mem[u + 32 len 32 * _38902] = mem[_9618 + 32 len 32 * _38902]
        mem[_29286 + 96] = u + (32 * _38902) + -_29286 + 32
        _39446 = mem[_19582]
        mem[u + (32 * _38902) + 32] = mem[_19582]
        mem[u + (32 * _38902) + 64 len 32 * _39446] = mem[_19582 + 32 len 32 * _39446]
        mem[_29286 + 128] = u + (32 * _38902) + (32 * _39446) + -_29286 + 64
        _39830 = mem[_19776]
        mem[u + (32 * _38902) + (32 * _39446) + 64] = mem[_19776]
        mem[u + (32 * _38902) + (32 * _39446) + 96 len 32 * _39830] = mem[_19776 + 32 len 32 * _39830]
        mem[_29286 + 160] = u + (32 * _38902) + (32 * _39446) + (32 * _39830) + -_29286 + 96
        _40054 = mem[_19776 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _38902) + (32 * _39446) + (32 * _39830) + 96] = mem[_19776 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _38902) + (32 * _39446) + (32 * _39830) + 128 len 32 * _40054] = mem[_19776 + (32 * ('cd', 4).length) + 64 len 32 * _40054]
        return memory
          from mem[64]
           len u + (32 * _38902) + (32 * _39446) + (32 * _39830) + (32 * _40054) + -mem[64] + 128
    mem[mem[64] + 32 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[mem[64] + (32 * ('cd', 4).length) + 32] = ('cd', 4).length
    if not ('cd', 4).length:
        require ('cd', 4).length <= test266151307()
        mem[mem[64] + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
        mem[64] = mem[64] + (98 * ('cd', 4).length) + 96
        if not ('cd', 4).length:
            idx = 0
            s = 0
            s = 0
            s = 0
            while ('cd', 4).length > uint32(idx):
                require uint32(idx) < ('cd', 36).length
                require uint32(idx) < ('cd', 4).length
                require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
                require uint32(idx) < ('cd', 68).length
                require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _32407 = mem[64]
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    _32871 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36616 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36616] == mem[_36616 + 12 len 20]
                            require s < mem[_32407]
                            mem[(32 * s) + _32407 + 32] = mem[_36616 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37931 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32871]
                            mem[(32 * s) + _32871 + 32] = mem[_37931]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32407
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36488 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36488]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32871
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37336 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582]
                        mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37336]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38040 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19582 + (32 * ('cd', 4).length) + 64] = mem[_38040]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38568 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _19582 + (64 * ('cd', 4).length) + 96] = mem[_38568]
                    else:
                        mem[_32871 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36617 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36617] == mem[_36617 + 12 len 20]
                            require s < mem[_32407]
                            mem[(32 * s) + _32407 + 32] = mem[_36617 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37932 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32871]
                            mem[(32 * s) + _32871 + 32] = mem[_37932]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32407
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36489 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36489]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32871
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37338 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582]
                        mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37338]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38041 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19582 + (32 * ('cd', 4).length) + 64] = mem[_38041]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38569 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _19582 + (64 * ('cd', 4).length) + 96] = mem[_38569]
                else:
                    mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                    mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                    mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                    if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36618 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36618] == mem[_36618 + 12 len 20]
                            require s < mem[_32407]
                            mem[(32 * s) + _32407 + 32] = mem[_36618 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37933 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32407 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _32407 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37933]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32407
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36490 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36490]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32407 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37340 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582]
                        mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37340]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38042 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19582 + (32 * ('cd', 4).length) + 64] = mem[_38042]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38570 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _19582 + (64 * ('cd', 4).length) + 96] = mem[_38570]
                    else:
                        mem[_32407 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                        s = 0
                        while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _36619 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_36619] == mem[_36619 + 12 len 20]
                            require s < mem[_32407]
                            mem[(32 * s) + _32407 + 32] = mem[_36619 + 12 len 20]
                            mem[mem[64] + 4] = s
                            require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                            staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args s
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _37934 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require s < mem[_32407 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                            mem[(32 * s) + _32407 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37934]
                            s = s + 1
                            continue 
                        require uint32(idx) < mem[96]
                        mem[(32 * uint32(idx)) + 128] = _32407
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36491 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_9618]
                        mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36491]
                        require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32407 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37342 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582]
                        mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37342]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38043 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582 + (32 * ('cd', 4).length) + 32]
                        mem[(32 * uint32(idx)) + _19582 + (32 * ('cd', 4).length) + 64] = mem[_38043]
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _38571 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require uint32(idx) < mem[_19582 + (64 * ('cd', 4).length) + 64]
                        mem[(32 * uint32(idx)) + _19582 + (64 * ('cd', 4).length) + 96] = mem[_38571]
                idx = idx + 1
                s = cd[((32 * uint32(idx)) + cd[36] + 36)]
                s = cd[((32 * uint32(idx)) + cd[4] + 36)]
                s = cd[((32 * uint32(idx)) + cd[68] + 36)]
                continue 
            _29287 = mem[64]
            mem[mem[64]] = 192
            _29655 = mem[96]
            mem[mem[64] + 192] = mem[96]
            idx = 0
            s = 128
            t = mem[64] + (32 * mem[96]) + 224
            u = mem[64] + 224
            while idx < _29655:
                mem[u] = t + -_29287 - 224
                _36055 = mem[s]
                _36231 = mem[mem[s]]
                mem[t] = mem[mem[s]]
                v = 0
                w = _36055 + 32
                x = t + 32
                while v < _36231:
                    mem[x] = mem[w + 12 len 20]
                    v = v + 1
                    w = w + 32
                    x = x + 32
                    continue 
                v = _36231 + 1
                w = _36055 + (32 * _36231) + 64
                t = t + (32 * _36231) + 32
                u = u + 32
                continue 
            mem[_29287 + 32] = t - _29287
            _36375 = mem[_9618 + (32 * ('cd', 4).length) + 32]
            mem[t] = mem[_9618 + (32 * ('cd', 4).length) + 32]
            idx = 0
            s = _9618 + (32 * ('cd', 4).length) + 64
            u = t + (32 * _36375) + 32
            v = t + 32
            while idx < _36375:
                mem[v] = u + -t - 32
                _38819 = mem[s]
                _38839 = mem[mem[s]]
                mem[u] = mem[mem[s]]
                t = 0
                w = _38819 + 32
                x = u + 32
                while t < _38839:
                    mem[x] = mem[w]
                    t = t + 1
                    w = w + 32
                    x = x + 32
                    continue 
                t = _38839 + 1
                w = _38819 + (32 * _38839) + 64
                u = u + (32 * _38839) + 32
                v = v + 32
                continue 
            mem[_29287 + 64] = u - _29287
            _38903 = mem[_9618]
            mem[u] = mem[_9618]
            mem[u + 32 len 32 * _38903] = mem[_9618 + 32 len 32 * _38903]
            mem[_29287 + 96] = u + (32 * _38903) + -_29287 + 32
            _39447 = mem[_19582]
            mem[u + (32 * _38903) + 32] = mem[_19582]
            mem[u + (32 * _38903) + 64 len 32 * _39447] = mem[_19582 + 32 len 32 * _39447]
            mem[_29287 + 128] = u + (32 * _38903) + (32 * _39447) + -_29287 + 64
            _39831 = mem[_19582 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _38903) + (32 * _39447) + 64] = mem[_19582 + (32 * ('cd', 4).length) + 32]
            mem[u + (32 * _38903) + (32 * _39447) + 96 len 32 * _39831] = mem[_19582 + (32 * ('cd', 4).length) + 64 len 32 * _39831]
            mem[_29287 + 160] = u + (32 * _38903) + (32 * _39447) + (32 * _39831) + -_29287 + 96
            _40055 = mem[_19582 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _38903) + (32 * _39447) + (32 * _39831) + 96] = mem[_19582 + (64 * ('cd', 4).length) + 64]
            mem[u + (32 * _38903) + (32 * _39447) + (32 * _39831) + 128 len 32 * _40055] = mem[_19582 + (64 * ('cd', 4).length) + 96 len 32 * _40055]
            return memory
              from mem[64]
               len u + (32 * _38903) + (32 * _39447) + (32 * _39831) + (32 * _40055) + -mem[64] + 128
        mem[_19582 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
        idx = 0
        s = 0
        s = 0
        s = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 36).length
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require uint32(idx) < ('cd', 68).length
            require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _32408 = mem[64]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _32872 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36621 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_36621] == mem[_36621 + 12 len 20]
                        require s < mem[_32408]
                        mem[(32 * s) + _32408 + 32] = mem[_36621 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37935 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_32872]
                        mem[(32 * s) + _32872 + 32] = mem[_37935]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _32408
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36493 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36493]
                    require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32872
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37345 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582]
                    mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37345]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38045 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _19582 + (32 * ('cd', 4).length) + 64] = mem[_38045]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38573 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _19582 + (64 * ('cd', 4).length) + 96] = mem[_38573]
                else:
                    mem[_32872 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36622 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_36622] == mem[_36622 + 12 len 20]
                        require s < mem[_32408]
                        mem[(32 * s) + _32408 + 32] = mem[_36622 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37936 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_32872]
                        mem[(32 * s) + _32872 + 32] = mem[_37936]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _32408
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36494 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36494]
                    require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32872
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37347 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582]
                    mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37347]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38046 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _19582 + (32 * ('cd', 4).length) + 64] = mem[_38046]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38574 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _19582 + (64 * ('cd', 4).length) + 96] = mem[_38574]
            else:
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36623 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_36623] == mem[_36623 + 12 len 20]
                        require s < mem[_32408]
                        mem[(32 * s) + _32408 + 32] = mem[_36623 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37937 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_32408 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _32408 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37937]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _32408
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36495 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36495]
                    require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32408 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37349 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582]
                    mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37349]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38047 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _19582 + (32 * ('cd', 4).length) + 64] = mem[_38047]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38575 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _19582 + (64 * ('cd', 4).length) + 96] = mem[_38575]
                else:
                    mem[_32408 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36624 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_36624] == mem[_36624 + 12 len 20]
                        require s < mem[_32408]
                        mem[(32 * s) + _32408 + 32] = mem[_36624 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37938 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_32408 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _32408 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37938]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _32408
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36496 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36496]
                    require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32408 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37351 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582]
                    mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37351]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38048 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _19582 + (32 * ('cd', 4).length) + 64] = mem[_38048]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38576 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _19582 + (64 * ('cd', 4).length) + 96] = mem[_38576]
            idx = idx + 1
            s = cd[((32 * uint32(idx)) + cd[36] + 36)]
            s = cd[((32 * uint32(idx)) + cd[4] + 36)]
            s = cd[((32 * uint32(idx)) + cd[68] + 36)]
            continue 
        _29288 = mem[64]
        mem[mem[64]] = 192
        _29656 = mem[96]
        mem[mem[64] + 192] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 224
        u = mem[64] + 224
        while idx < _29656:
            mem[u] = t + -_29288 - 224
            _36064 = mem[s]
            _36240 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _36064 + 32
            x = t + 32
            while v < _36240:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            v = _36240 + 1
            w = _36064 + (32 * _36240) + 64
            t = t + (32 * _36240) + 32
            u = u + 32
            continue 
        mem[_29288 + 32] = t - _29288
        _36380 = mem[_9618 + (32 * ('cd', 4).length) + 32]
        mem[t] = mem[_9618 + (32 * ('cd', 4).length) + 32]
        idx = 0
        s = _9618 + (32 * ('cd', 4).length) + 64
        u = t + (32 * _36380) + 32
        v = t + 32
        while idx < _36380:
            mem[v] = u + -t - 32
            _38821 = mem[s]
            _38840 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _38821 + 32
            x = u + 32
            while t < _38840:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            t = _38840 + 1
            w = _38821 + (32 * _38840) + 64
            u = u + (32 * _38840) + 32
            v = v + 32
            continue 
        mem[_29288 + 64] = u - _29288
        _38904 = mem[_9618]
        mem[u] = mem[_9618]
        mem[u + 32 len 32 * _38904] = mem[_9618 + 32 len 32 * _38904]
        mem[_29288 + 96] = u + (32 * _38904) + -_29288 + 32
        _39448 = mem[_19582]
        mem[u + (32 * _38904) + 32] = mem[_19582]
        mem[u + (32 * _38904) + 64 len 32 * _39448] = mem[_19582 + 32 len 32 * _39448]
        mem[_29288 + 128] = u + (32 * _38904) + (32 * _39448) + -_29288 + 64
        _39832 = mem[_19582 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _38904) + (32 * _39448) + 64] = mem[_19582 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _38904) + (32 * _39448) + 96 len 32 * _39832] = mem[_19582 + (32 * ('cd', 4).length) + 64 len 32 * _39832]
        mem[_29288 + 160] = u + (32 * _38904) + (32 * _39448) + (32 * _39832) + -_29288 + 96
        _40056 = mem[_19582 + (64 * ('cd', 4).length) + 64]
        mem[u + (32 * _38904) + (32 * _39448) + (32 * _39832) + 96] = mem[_19582 + (64 * ('cd', 4).length) + 64]
        mem[u + (32 * _38904) + (32 * _39448) + (32 * _39832) + 128 len 32 * _40056] = mem[_19582 + (64 * ('cd', 4).length) + 96 len 32 * _40056]
        return memory
          from mem[64]
           len u + (32 * _38904) + (32 * _39448) + (32 * _39832) + (32 * _40056) + -mem[64] + 128
    mem[mem[64] + (32 * ('cd', 4).length) + 64 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    require ('cd', 4).length <= test266151307()
    mem[mem[64] + (64 * ('cd', 4).length) + 64] = ('cd', 4).length
    mem[64] = mem[64] + (98 * ('cd', 4).length) + 96
    if not ('cd', 4).length:
        idx = 0
        s = 0
        s = 0
        s = 0
        while ('cd', 4).length > uint32(idx):
            require uint32(idx) < ('cd', 36).length
            require uint32(idx) < ('cd', 4).length
            require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
            require uint32(idx) < ('cd', 68).length
            require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _32409 = mem[64]
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                _32873 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36626 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_36626] == mem[_36626 + 12 len 20]
                        require s < mem[_32409]
                        mem[(32 * s) + _32409 + 32] = mem[_36626 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37939 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_32873]
                        mem[(32 * s) + _32873 + 32] = mem[_37939]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _32409
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36498 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36498]
                    require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32873
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37354 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582]
                    mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37354]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38050 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _19582 + (32 * ('cd', 4).length) + 64] = mem[_38050]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38578 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _19582 + (64 * ('cd', 4).length) + 96] = mem[_38578]
                else:
                    mem[_32873 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36627 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_36627] == mem[_36627 + 12 len 20]
                        require s < mem[_32409]
                        mem[(32 * s) + _32409 + 32] = mem[_36627 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37940 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_32873]
                        mem[(32 * s) + _32873 + 32] = mem[_37940]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _32409
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36499 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36499]
                    require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32873
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37356 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582]
                    mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37356]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38051 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _19582 + (32 * ('cd', 4).length) + 64] = mem[_38051]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38579 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _19582 + (64 * ('cd', 4).length) + 96] = mem[_38579]
            else:
                mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
                mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
                mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
                if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36628 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_36628] == mem[_36628 + 12 len 20]
                        require s < mem[_32409]
                        mem[(32 * s) + _32409 + 32] = mem[_36628 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37941 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_32409 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _32409 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37941]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _32409
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36500 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36500]
                    require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32409 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37358 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582]
                    mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37358]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38052 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _19582 + (32 * ('cd', 4).length) + 64] = mem[_38052]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38580 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _19582 + (64 * ('cd', 4).length) + 96] = mem[_38580]
                else:
                    mem[_32409 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                    s = 0
                    while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _36629 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_36629] == mem[_36629 + 12 len 20]
                        require s < mem[_32409]
                        mem[(32 * s) + _32409 + 32] = mem[_36629 + 12 len 20]
                        mem[mem[64] + 4] = s
                        require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                        staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                                gas gas_remaining wei
                               args s
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _37942 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require s < mem[_32409 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                        mem[(32 * s) + _32409 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37942]
                        s = s + 1
                        continue 
                    require uint32(idx) < mem[96]
                    mem[(32 * uint32(idx)) + 128] = _32409
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36501 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_9618]
                    mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36501]
                    require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32409 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37360 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582]
                    mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37360]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38053 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582 + (32 * ('cd', 4).length) + 32]
                    mem[(32 * uint32(idx)) + _19582 + (32 * ('cd', 4).length) + 64] = mem[_38053]
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _38581 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require uint32(idx) < mem[_19582 + (64 * ('cd', 4).length) + 64]
                    mem[(32 * uint32(idx)) + _19582 + (64 * ('cd', 4).length) + 96] = mem[_38581]
            idx = idx + 1
            s = cd[((32 * uint32(idx)) + cd[36] + 36)]
            s = cd[((32 * uint32(idx)) + cd[4] + 36)]
            s = cd[((32 * uint32(idx)) + cd[68] + 36)]
            continue 
        _29289 = mem[64]
        mem[mem[64]] = 192
        _29657 = mem[96]
        mem[mem[64] + 192] = mem[96]
        idx = 0
        s = 128
        t = mem[64] + (32 * mem[96]) + 224
        u = mem[64] + 224
        while idx < _29657:
            mem[u] = t + -_29289 - 224
            _36073 = mem[s]
            _36249 = mem[mem[s]]
            mem[t] = mem[mem[s]]
            v = 0
            w = _36073 + 32
            x = t + 32
            while v < _36249:
                mem[x] = mem[w + 12 len 20]
                v = v + 1
                w = w + 32
                x = x + 32
                continue 
            v = _36249 + 1
            w = _36073 + (32 * _36249) + 64
            t = t + (32 * _36249) + 32
            u = u + 32
            continue 
        mem[_29289 + 32] = t - _29289
        _36385 = mem[_9618 + (32 * ('cd', 4).length) + 32]
        mem[t] = mem[_9618 + (32 * ('cd', 4).length) + 32]
        idx = 0
        s = _9618 + (32 * ('cd', 4).length) + 64
        u = t + (32 * _36385) + 32
        v = t + 32
        while idx < _36385:
            mem[v] = u + -t - 32
            _38823 = mem[s]
            _38841 = mem[mem[s]]
            mem[u] = mem[mem[s]]
            t = 0
            w = _38823 + 32
            x = u + 32
            while t < _38841:
                mem[x] = mem[w]
                t = t + 1
                w = w + 32
                x = x + 32
                continue 
            t = _38841 + 1
            w = _38823 + (32 * _38841) + 64
            u = u + (32 * _38841) + 32
            v = v + 32
            continue 
        mem[_29289 + 64] = u - _29289
        _38905 = mem[_9618]
        mem[u] = mem[_9618]
        mem[u + 32 len 32 * _38905] = mem[_9618 + 32 len 32 * _38905]
        mem[_29289 + 96] = u + (32 * _38905) + -_29289 + 32
        _39449 = mem[_19582]
        mem[u + (32 * _38905) + 32] = mem[_19582]
        mem[u + (32 * _38905) + 64 len 32 * _39449] = mem[_19582 + 32 len 32 * _39449]
        mem[_29289 + 128] = u + (32 * _38905) + (32 * _39449) + -_29289 + 64
        _39833 = mem[_19582 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _38905) + (32 * _39449) + 64] = mem[_19582 + (32 * ('cd', 4).length) + 32]
        mem[u + (32 * _38905) + (32 * _39449) + 96 len 32 * _39833] = mem[_19582 + (32 * ('cd', 4).length) + 64 len 32 * _39833]
        mem[_29289 + 160] = u + (32 * _38905) + (32 * _39449) + (32 * _39833) + -_29289 + 96
        _40057 = mem[_19582 + (64 * ('cd', 4).length) + 64]
        mem[u + (32 * _38905) + (32 * _39449) + (32 * _39833) + 96] = mem[_19582 + (64 * ('cd', 4).length) + 64]
        mem[u + (32 * _38905) + (32 * _39449) + (32 * _39833) + 128 len 32 * _40057] = mem[_19582 + (64 * ('cd', 4).length) + 96 len 32 * _40057]
        return memory
          from mem[64]
           len u + (32 * _38905) + (32 * _39449) + (32 * _39833) + (32 * _40057) + -mem[64] + 128
    mem[_19582 + (64 * ('cd', 4).length) + 96 len 32 * ('cd', 4).length] = call.data[calldata.size len 32 * ('cd', 4).length]
    idx = 0
    s = 0
    s = 0
    s = 0
    while ('cd', 4).length > uint32(idx):
        require uint32(idx) < ('cd', 36).length
        require uint32(idx) < ('cd', 4).length
        require cd[((32 * uint32(idx)) + cd[4] + 36)] == address(cd[((32 * uint32(idx)) + cd[4] + 36)])
        require uint32(idx) < ('cd', 68).length
        require cd[((32 * uint32(idx)) + cd[68] + 36)] == address(cd[((32 * uint32(idx)) + cd[68] + 36)])
        require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
        _32410 = mem[64]
        if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            _32874 = mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36631 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_36631] == mem[_36631 + 12 len 20]
                    require s < mem[_32410]
                    mem[(32 * s) + _32410 + 32] = mem[_36631 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37943 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_32874]
                    mem[(32 * s) + _32874 + 32] = mem[_37943]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _32410
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36503 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_9618]
                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36503]
                require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32874
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _37363 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_19582]
                mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37363]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _38055 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_19582 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _19582 + (32 * ('cd', 4).length) + 64] = mem[_38055]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _38583 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_19582 + (64 * ('cd', 4).length) + 64]
                mem[(32 * uint32(idx)) + _19582 + (64 * ('cd', 4).length) + 96] = mem[_38583]
            else:
                mem[_32874 + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36632 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_36632] == mem[_36632 + 12 len 20]
                    require s < mem[_32410]
                    mem[(32 * s) + _32410 + 32] = mem[_36632 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37944 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_32874]
                    mem[(32 * s) + _32874 + 32] = mem[_37944]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _32410
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36504 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_9618]
                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36504]
                require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32874
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _37365 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_19582]
                mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37365]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _38056 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_19582 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _19582 + (32 * ('cd', 4).length) + 64] = mem[_38056]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _38584 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_19582 + (64 * ('cd', 4).length) + 64]
                mem[(32 * uint32(idx)) + _19582 + (64 * ('cd', 4).length) + 96] = mem[_38584]
        else:
            mem[mem[64] + 32 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
            require cd[((32 * uint32(idx)) + cd[36] + 36)] <= test266151307()
            mem[mem[64] + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32] = cd[((32 * uint32(idx)) + cd[36] + 36)]
            mem[64] = mem[64] + (64 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64
            if not cd[((32 * uint32(idx)) + cd[36] + 36)]:
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36633 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_36633] == mem[_36633 + 12 len 20]
                    require s < mem[_32410]
                    mem[(32 * s) + _32410 + 32] = mem[_36633 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37945 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_32410 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _32410 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37945]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _32410
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36505 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_9618]
                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36505]
                require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32410 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _37367 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_19582]
                mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37367]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _38057 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_19582 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _19582 + (32 * ('cd', 4).length) + 64] = mem[_38057]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _38585 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_19582 + (64 * ('cd', 4).length) + 64]
                mem[(32 * uint32(idx)) + _19582 + (64 * ('cd', 4).length) + 96] = mem[_38585]
            else:
                mem[_32410 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64 len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]] = call.data[calldata.size len 32 * cd[((32 * uint32(idx)) + cd[36] + 36)]]
                s = 0
                while s < cd[((32 * uint32(idx)) + cd[36] + 36)]:
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).coins(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _36634 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_36634] == mem[_36634 + 12 len 20]
                    require s < mem[_32410]
                    mem[(32 * s) + _32410 + 32] = mem[_36634 + 12 len 20]
                    mem[mem[64] + 4] = s
                    require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                    staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).balances(uint256 arg1) with:
                            gas gas_remaining wei
                           args s
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _37946 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require s < mem[_32410 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32]
                    mem[(32 * s) + _32410 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 64] = mem[_37946]
                    s = s + 1
                    continue 
                require uint32(idx) < mem[96]
                mem[(32 * uint32(idx)) + 128] = _32410
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).A() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _36506 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_9618]
                mem[(32 * uint32(idx)) + _9618 + 32] = mem[_36506]
                require uint32(idx) < mem[_9618 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _9618 + (32 * ('cd', 4).length) + 64] = _32410 + (32 * cd[((32 * uint32(idx)) + cd[36] + 36)]) + 32
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).fee() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _37369 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_19582]
                mem[(32 * uint32(idx)) + _19582 + 32] = mem[_37369]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[4] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[4] + 36)]).get_virtual_price() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _38058 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_19582 + (32 * ('cd', 4).length) + 32]
                mem[(32 * uint32(idx)) + _19582 + (32 * ('cd', 4).length) + 64] = mem[_38058]
                require ext_code.size(address(cd[((32 * uint32(idx)) + cd[68] + 36)]))
                staticcall address(cd[((32 * uint32(idx)) + cd[68] + 36)]).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _38586 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require uint32(idx) < mem[_19582 + (64 * ('cd', 4).length) + 64]
                mem[(32 * uint32(idx)) + _19582 + (64 * ('cd', 4).length) + 96] = mem[_38586]
        idx = idx + 1
        s = cd[((32 * uint32(idx)) + cd[36] + 36)]
        s = cd[((32 * uint32(idx)) + cd[4] + 36)]
        s = cd[((32 * uint32(idx)) + cd[68] + 36)]
        continue 
    _29290 = mem[64]
    mem[mem[64]] = 192
    _29658 = mem[96]
    mem[mem[64] + 192] = mem[96]
    idx = 0
    s = 128
    t = mem[64] + (32 * mem[96]) + 224
    u = mem[64] + 224
    while idx < _29658:
        mem[u] = t + -_29290 - 224
        _36082 = mem[s]
        _36258 = mem[mem[s]]
        mem[t] = mem[mem[s]]
        v = 0
        w = _36082 + 32
        x = t + 32
        while v < _36258:
            mem[x] = mem[w + 12 len 20]
            v = v + 1
            w = w + 32
            x = x + 32
            continue 
        v = _36258 + 1
        w = _36082 + (32 * _36258) + 64
        t = t + (32 * _36258) + 32
        u = u + 32
        continue 
    mem[_29290 + 32] = t - _29290
    _36390 = mem[_9618 + (32 * ('cd', 4).length) + 32]
    mem[t] = mem[_9618 + (32 * ('cd', 4).length) + 32]
    idx = 0
    s = _9618 + (32 * ('cd', 4).length) + 64
    u = t + (32 * _36390) + 32
    v = t + 32
    while idx < _36390:
        mem[v] = u + -t - 32
        _38825 = mem[s]
        _38842 = mem[mem[s]]
        mem[u] = mem[mem[s]]
        t = 0
        w = _38825 + 32
        x = u + 32
        while t < _38842:
            mem[x] = mem[w]
            t = t + 1
            w = w + 32
            x = x + 32
            continue 
        t = _38842 + 1
        w = _38825 + (32 * _38842) + 64
        u = u + (32 * _38842) + 32
        v = v + 32
        continue 
    mem[_29290 + 64] = u - _29290
    _38906 = mem[_9618]
    mem[u] = mem[_9618]
    mem[u + 32 len 32 * _38906] = mem[_9618 + 32 len 32 * _38906]
    mem[_29290 + 96] = u + (32 * _38906) + -_29290 + 32
    _39450 = mem[_19582]
    mem[u + (32 * _38906) + 32] = mem[_19582]
    mem[u + (32 * _38906) + 64 len 32 * _39450] = mem[_19582 + 32 len 32 * _39450]
    mem[_29290 + 128] = u + (32 * _38906) + (32 * _39450) + -_29290 + 64
    _39834 = mem[_19582 + (32 * ('cd', 4).length) + 32]
    mem[u + (32 * _38906) + (32 * _39450) + 64] = mem[_19582 + (32 * ('cd', 4).length) + 32]
    mem[u + (32 * _38906) + (32 * _39450) + 96 len 32 * _39834] = mem[_19582 + (32 * ('cd', 4).length) + 64 len 32 * _39834]
    mem[_29290 + 160] = u + (32 * _38906) + (32 * _39450) + (32 * _39834) + -_29290 + 96
    _40058 = mem[_19582 + (64 * ('cd', 4).length) + 64]
    mem[u + (32 * _38906) + (32 * _39450) + (32 * _39834) + 96] = mem[_19582 + (64 * ('cd', 4).length) + 64]
    mem[u + (32 * _38906) + (32 * _39450) + (32 * _39834) + 128 len 32 * _40058] = mem[_19582 + (64 * ('cd', 4).length) + 96 len 32 * _40058]
    return memory
      from mem[64]
       len u + (32 * _38906) + (32 * _39450) + (32 * _39834) + (32 * _40058) + -mem[64] + 128
}



}
