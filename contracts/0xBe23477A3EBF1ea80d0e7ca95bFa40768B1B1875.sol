contract main {




// =====================  Runtime code  =====================


#
#  - resetApprovals()
#  - approveContracts()
#  - rebalanceCollateral()
#
const sub_2cf4e4ee(?) = ext_call.return_data[0]

const routerAddress = 0xf491e7b69e4244ad4002bc14e878a34207e38c29

const sub_3ad184e4(?) = 0xe45ac34e528907d0a0239ab5db507688070b20bf

const sub_668ecbf2(?) = 0x30872e4fc4edbfd7a352bfc2463eb4fae9c09086

const comptrollerAddress = 0x260e596dabe3afc463e75b6cc05d8c46acacfb09

const sub_6c1a35be(?) = 0x2b4c76d0dc16be1c31d4c1dc53bf9b45987fc75c

const farmPid = 2

const sub_b2ad2f0f(?) = 0x5aa53f03197e08c4851cad8c92c7922da5857e5d

const sub_c1e32a3d(?) = 0xec7178f4c41f346b2721907f5cf7628e388a7a58

const farmToken = 0x841fad6eae12c286d1fd18d1d525dffa75c7effe

const sub_e43e7b94(?) = 0xe0654c8e6fd4d733349ac7e09f6f23da256bf475

const sub_eb61c72a(?) = ext_call.return_data[0]

const farmAddress = 0x2b2929e785374c651a81a63878ab22742656dcdd


uint256 stor0;
address owner;
mapping of uint256 balanceOf;
mapping of uint256 allowance;
uint256 totalSupply;
array of uint256 name;
array of uint256 symbol;
uint8 decimals;
address stor7; offset 8
address stor8;
address stor9;
address stor12;
address strategistAddress;
address keeperAddress;
uint256 sub_1a55f6eb;
uint256 sub_1fa98a80;
uint256 sub_f8c1e75e;
uint256 sub_a9b0ca38;
uint256 sub_c089f572;
uint256 sub_0e04c946;
uint256 lastHarvest;
uint256 withdrawalFee;
uint256 reserveAllocation;
uint256 depositLimit;

function name() payable {
    return name[0 len name.length]
}

function sub_0e04c946(?) payable {
    return sub_0e04c946
}

function totalSupply() payable {
    return totalSupply
}

function sub_1a55f6eb(?) payable {
    return sub_1a55f6eb
}

function sub_1fa98a80(?) payable {
    return sub_1fa98a80
}

function strategist() payable {
    return strategistAddress
}

function decimals() payable {
    return decimals
}

function balanceOf(address arg1) payable {
    require calldata.size - 4 >= 32
    return balanceOf[address(arg1)]
}

function withdrawalFee() payable {
    return withdrawalFee
}

function owner() payable {
    return owner
}

function symbol() payable {
    return symbol[0 len symbol.length]
}

function sub_a9b0ca38(?) payable {
    return sub_a9b0ca38
}

function keeper() payable {
    return keeperAddress
}

function sub_c089f572(?) payable {
    return sub_c089f572
}

function allowance(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    return allowance[address(arg1)][address(arg2)]
}

function depositLimit() payable {
    return depositLimit
}

function lastHarvest() payable {
    return lastHarvest
}

function sub_f8c1e75e(?) payable {
    return sub_f8c1e75e
}

function reserveAllocation() payable {
    return reserveAllocation
}

function _fallback() payable {
    revert
}

function isOwner() payable {
    return (msg.sender == owner)
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function sub_d2d9a69d(?) payable {
    require calldata.size - 4 >= 32
    if strategistAddress != msg.sender:
        require msg.sender == owner
    idx = 0
    while idx < 10:
        idx = idx + 1
        continue 
}

function setKeeper(address arg1) payable {
    require calldata.size - 4 >= 32
    if strategistAddress != msg.sender:
        require msg.sender == owner
    require arg1
    keeperAddress = arg1
    emit UpdatedKeeper(arg1);
}

function setStrategist(address arg1) payable {
    require calldata.size - 4 >= 32
    if strategistAddress != msg.sender:
        require msg.sender == owner
    require arg1
    strategistAddress = arg1
    emit UpdatedStrategist(arg1);
}

function sub_94c04ced(?) payable {
    require calldata.size - 4 >= 96
    if strategistAddress != msg.sender:
        require msg.sender == owner
    require 750000 > arg2
    require arg2 >= arg3
    require arg3 >= arg1
    sub_f8c1e75e = arg2
    sub_a9b0ca38 = arg1
}

function setFees(uint256 arg1, uint256 arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    if strategistAddress != msg.sender:
        require msg.sender == owner
    require arg1 <= 5000
    require arg2 <= 50000
    require arg3 <= 100000
    sub_c089f572 = arg2
    withdrawalFee = arg1
}

function sub_8ad56bff(?) payable {
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function sub_c3b49f3d(?) payable {
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function sub_feb6848a(?) payable {
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function sub_5627f7b5(?) payable {
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args 0xe45ac34e528907d0a0239ab5db507688070b20bf
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    38,
                    0x654f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573,
                    mem[202 len 26]
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function approve(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    36,
                    0x7345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573,
                    mem[200 len 28]
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    34,
                    0x7345524332303a20617070726f766520746f20746865207a65726f20616464726573,
                    mem[198 len 30]
    allowance[address(msg.sender)][address(arg1)] = arg2
    emit Approval(arg2, msg.sender, arg1);
    return 1
}

function sub_b574d287(?) payable {
    require calldata.size - 4 >= 64
    if strategistAddress != msg.sender:
        require msg.sender == owner
    if arg2 > 10^6:
        revert with 0, 'SafeMath: subtraction overflow'
    if not -arg2 + 10^6:
        if not arg2:
            revert with 0, 'SafeMath: division by zero'
        require arg1 <= 50000
        require 0 / arg2 <= 750000
    else:
        if (-1 * 10^6 * arg2) + 10^12 / -arg2 + 10^6 != 10^6:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not arg2:
            revert with 0, 'SafeMath: division by zero'
        require arg1 <= 50000
        require (-1 * 10^6 * arg2) + 10^12 / arg2 <= 750000
    reserveAllocation = arg1
    sub_1a55f6eb = arg2
    sub_1fa98a80 = -arg2 + 10^6
}

function decreaseAllowance(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if arg2 > allowance[address(msg.sender)][address(arg1)]:
        revert with 0, 
                    32,
                    37,
                    0x6545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a6572,
                    mem[165 len 27],
                    mem[219 len 5]
    if not msg.sender:
        revert with 0, 32, 36, 0x7345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[296 len 28]
    if not arg1:
        revert with 0, 32, 34, 0x7345524332303a20617070726f766520746f20746865207a65726f20616464726573, mem[294 len 30]
    allowance[address(msg.sender)][address(arg1)] -= arg2
    emit Approval((allowance[address(msg.sender)][address(arg1)] - arg2), msg.sender, arg1);
    return 1
}

function increaseAllowance(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if arg2 + allowance[address(msg.sender)][address(arg1)] < allowance[address(msg.sender)][address(arg1)]:
        revert with 0, 'SafeMath: addition overflow'
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    36,
                    0x7345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573,
                    mem[200 len 28]
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    34,
                    0x7345524332303a20617070726f766520746f20746865207a65726f20616464726573,
                    mem[198 len 30]
    allowance[address(msg.sender)][address(arg1)] += arg2
    emit Approval((arg2 + allowance[address(msg.sender)][address(arg1)]), msg.sender, arg1);
    return 1
}

function sub_a9c19c66(?) payable {
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        return 0
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    return (ext_call.return_data[0] * ext_call.return_data[0] / 10^18)
}

function transfer(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    if not msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    37,
                    0x7345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                    mem[201 len 27]
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    35,
                    0xfe45524332303a207472616e7366657220746f20746865207a65726f20616464726573,
                    mem[199 len 29]
    if arg2 > balanceOf[address(msg.sender)]:
        revert with 0, 
                    32,
                    38,
                    0x7345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63,
                    mem[166 len 26],
                    mem[218 len 6]
    balanceOf[address(msg.sender)] -= arg2
    if arg2 + balanceOf[arg1] < balanceOf[arg1]:
        revert with 0, 'SafeMath: addition overflow'
    balanceOf[address(arg1)] = arg2 + balanceOf[arg1]
    emit Transfer(arg2, msg.sender, arg1);
    return 1
}

function sub_4d54e307(?) payable {
    require calldata.size - 4 >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not arg1:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return (0 / ext_call.return_data[0])
    if ext_call.return_data[0] * arg1 / arg1 != ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    return (ext_call.return_data[0] * arg1 / ext_call.return_data[0])
}

function sub_7845790c(?) payable {
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return (0 / ext_call.return_data[0])
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    return (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
}

function sub_cad20a29(?) payable {
    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
    staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return (0 / ext_call.return_data[0])
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    return (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
}

function transferFrom(address arg1, address arg2, uint256 arg3) payable {
    require calldata.size - 4 >= 96
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    37,
                    0x7345524332303a207472616e736665722066726f6d20746865207a65726f20616464726573,
                    mem[201 len 27]
    if not arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    35,
                    0xfe45524332303a207472616e7366657220746f20746865207a65726f20616464726573,
                    mem[199 len 29]
    if arg3 > balanceOf[address(arg1)]:
        revert with 0, 
                    32,
                    38,
                    0x7345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e63,
                    mem[166 len 26],
                    mem[218 len 6]
    balanceOf[address(arg1)] -= arg3
    if arg3 + balanceOf[arg2] < balanceOf[arg2]:
        revert with 0, 'SafeMath: addition overflow'
    balanceOf[address(arg2)] = arg3 + balanceOf[arg2]
    emit Transfer(arg3, arg1, arg2);
    if arg3 > allowance[address(arg1)][address(msg.sender)]:
        revert with 0, 
                    32,
                    40,
                    0x7745524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63,
                    mem[264 len 24],
                    mem[312 len 8]
    if not arg1:
        revert with 0, 32, 36, 0x7345524332303a20617070726f76652066726f6d20746865207a65726f20616464726573, mem[392 len 28]
    if not msg.sender:
        revert with 0, 32, 34, 0x7345524332303a20617070726f766520746f20746865207a65726f20616464726573, mem[390 len 30]
    allowance[address(arg1)][address(msg.sender)] -= arg3
    emit Approval((allowance[address(arg1)][address(msg.sender)] - arg3), arg1, msg.sender);
    return 1
}

function sub_e6e7114b(?) payable {
    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
    staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(stor12)
        staticcall stor12.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
        staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if 0 / ext_call.return_data[0]:
                if 10^6 * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 10^6:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            revert with 0, 'SafeMath: division by zero'
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not 0 / ext_call.return_data[0]:
            if not ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
                revert with 0, 'SafeMath: division by zero'
            return (0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18)
        if 10^6 * 0 / ext_call.return_data[0] / 0 / ext_call.return_data[0] != 10^6:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
            revert with 0, 'SafeMath: division by zero'
        return (10^6 * 0 / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18)
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]:
            if 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        revert with 0, 'SafeMath: division by zero'
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
    if not ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]:
        if not ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
            revert with 0, 'SafeMath: division by zero'
        return (0 / ext_call.return_data[0] * ext_call.return_data[0] / 10^18)
    if 10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
    if not ext_call.return_data[0] * ext_call.return_data[0] / 10^18:
        revert with 0, 'SafeMath: division by zero'
    return (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^18)
}

function calcPoolValueInToken() payable {
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                return ext_call.return_data[0]
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            return (ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]))
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            return (ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]))
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return ext_call.return_data[0]
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
    staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            return ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0])
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]))
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]))
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    return ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0])
}

function getPricePerFullShare() payable {
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    return (0 / totalSupply)
                if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                if not totalSupply:
                    revert with 0, 'SafeMath: division by zero'
                return (10^6 * ext_call.return_data[0] / totalSupply)
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                if not totalSupply:
                    revert with 0, 'SafeMath: division by zero'
                return (0 / totalSupply)
            if (10^6 * ext_call.return_data[0]) - (10^6 * 0 / ext_call.return_data[0]) + (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != 10^6:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not totalSupply:
                revert with 0, 'SafeMath: division by zero'
            return ((10^6 * ext_call.return_data[0]) - (10^6 * 0 / ext_call.return_data[0]) + (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) / totalSupply)
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                if not totalSupply:
                    revert with 0, 'SafeMath: division by zero'
                return (0 / totalSupply)
            if (10^6 * ext_call.return_data[0]) - (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (10^6 * 0 / ext_call.return_data[0]) / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != 10^6:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not totalSupply:
                revert with 0, 'SafeMath: division by zero'
            return ((10^6 * ext_call.return_data[0]) - (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (10^6 * 0 / ext_call.return_data[0]) / totalSupply)
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not ext_call.return_data[0]:
            if not totalSupply:
                revert with 0, 'SafeMath: division by zero'
            return (0 / totalSupply)
        if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not totalSupply:
            revert with 0, 'SafeMath: division by zero'
        return (10^6 * ext_call.return_data[0] / totalSupply)
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
    staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                if not totalSupply:
                    revert with 0, 'SafeMath: division by zero'
                return (0 / totalSupply)
            if (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + (10^6 * ext_call.return_data[0]) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != 10^6:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not totalSupply:
                revert with 0, 'SafeMath: division by zero'
            return ((10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + (10^6 * ext_call.return_data[0]) / totalSupply)
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
            if not totalSupply:
                revert with 0, 'SafeMath: division by zero'
            return (0 / totalSupply)
        if (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + (10^6 * ext_call.return_data[0]) - (10^6 * 0 / ext_call.return_data[0]) + (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != 10^6:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not totalSupply:
            revert with 0, 'SafeMath: division by zero'
        return ((10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + (10^6 * ext_call.return_data[0]) - (10^6 * 0 / ext_call.return_data[0]) + (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) / totalSupply)
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
            if not totalSupply:
                revert with 0, 'SafeMath: division by zero'
            return (0 / totalSupply)
        if (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + (10^6 * ext_call.return_data[0]) - (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (10^6 * 0 / ext_call.return_data[0]) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != 10^6:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not totalSupply:
            revert with 0, 'SafeMath: division by zero'
        return ((10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + (10^6 * ext_call.return_data[0]) - (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (10^6 * 0 / ext_call.return_data[0]) / totalSupply)
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
        if not totalSupply:
            revert with 0, 'SafeMath: division by zero'
        return (0 / totalSupply)
    if (10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + (10^6 * ext_call.return_data[0]) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != 10^6:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
    if not totalSupply:
        revert with 0, 'SafeMath: division by zero'
    return ((10^6 * ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + (10^6 * ext_call.return_data[0]) / totalSupply)
}

function sub_11d1a392(?) payable {
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    return (0 / ext_call.return_data[0])
                if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                return (10^6 * ext_call.return_data[0] / ext_call.return_data[0])
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                    revert with 0, 'SafeMath: division by zero'
                return (0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]))
            if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                revert with 0, 'SafeMath: division by zero'
            return (10^6 * ext_call.return_data[0] / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]))
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                    revert with 0, 'SafeMath: division by zero'
                return (0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]))
            if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                revert with 0, 'SafeMath: division by zero'
            return (10^6 * ext_call.return_data[0] / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]))
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            return (0 / ext_call.return_data[0])
        if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return (10^6 * ext_call.return_data[0] / ext_call.return_data[0])
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    33,
                    0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                    mem[197 len 31]
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
    staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            if not ext_call.return_data[0]:
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                return (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0])
            if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
            if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            return (10^6 * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0])
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not ext_call.return_data[0]:
            if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                revert with 0, 'SafeMath: division by zero'
            return (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]))
        if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
            revert with 0, 'SafeMath: division by zero'
        return (10^6 * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]))
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor8)
    staticcall stor8.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args stor9
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        if not ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        if not ext_call.return_data[0]:
            if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                revert with 0, 'SafeMath: division by zero'
            return (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]))
        if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
            revert with 0, 'SafeMath: division by zero'
        return (10^6 * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]))
    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
    if not ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    if not ext_call.return_data[0]:
        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
            revert with 0, 'SafeMath: division by zero'
        return (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0])
    if 10^6 * ext_call.return_data[0] / ext_call.return_data[0] != 10^6:
        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
    if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
        revert with 0, 'SafeMath: division by zero'
    return (10^6 * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0])
}

function deposit(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    stor0++
    if not arg1:
        revert with 0, 'deposit must be greater than 0'
    require arg1 <= depositLimit
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if arg1 + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += arg1
                    if arg1 + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += arg1
                    emit Transfer(arg1, 0, msg.sender);
                else:
                    if not arg1:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / ext_call.return_data[0]
                        if (0 / ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / ext_call.return_data[0]
                        emit Transfer((0 / ext_call.return_data[0]), 0, msg.sender);
                    else:
                        if totalSupply * arg1 / arg1 != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * arg1 / ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * arg1 / ext_call.return_data[0]
                        if (totalSupply * arg1 / ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * arg1 / ext_call.return_data[0]
                        emit Transfer((totalSupply * arg1 / ext_call.return_data[0]), 0, msg.sender);
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if arg1 + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += arg1
                    if arg1 + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += arg1
                    emit Transfer(arg1, 0, msg.sender);
                else:
                    if not arg1:
                        if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        if (0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        emit Transfer((0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])), 0, msg.sender);
                    else:
                        if totalSupply * arg1 / arg1 != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * arg1 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * arg1 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        if (totalSupply * arg1 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * arg1 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        emit Transfer((totalSupply * arg1 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])), 0, msg.sender);
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if arg1 + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += arg1
                    if arg1 + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += arg1
                    emit Transfer(arg1, 0, msg.sender);
                else:
                    if not arg1:
                        if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        if (0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        emit Transfer((0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])), 0, msg.sender);
                    else:
                        if totalSupply * arg1 / arg1 != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * arg1 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * arg1 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        if (totalSupply * arg1 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * arg1 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        emit Transfer((totalSupply * arg1 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])), 0, msg.sender);
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if arg1 + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += arg1
                    if arg1 + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += arg1
                    emit Transfer(arg1, 0, msg.sender);
                else:
                    if not arg1:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / ext_call.return_data[0]
                        if (0 / ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / ext_call.return_data[0]
                        emit Transfer((0 / ext_call.return_data[0]), 0, msg.sender);
                    else:
                        if totalSupply * arg1 / arg1 != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * arg1 / ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * arg1 / ext_call.return_data[0]
                        if (totalSupply * arg1 / ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * arg1 / ext_call.return_data[0]
                        emit Transfer((totalSupply * arg1 / ext_call.return_data[0]), 0, msg.sender);
    else:
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if arg1 + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += arg1
                    if arg1 + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += arg1
                    emit Transfer(arg1, 0, msg.sender);
                else:
                    if not arg1:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        emit Transfer((0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]), 0, msg.sender);
                    else:
                        if totalSupply * arg1 / arg1 != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        if (totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        emit Transfer((totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]), 0, msg.sender);
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if arg1 + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += arg1
                    if arg1 + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += arg1
                    emit Transfer(arg1, 0, msg.sender);
                else:
                    if not arg1:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        emit Transfer((0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])), 0, msg.sender);
                    else:
                        if totalSupply * arg1 / arg1 != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        if (totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        emit Transfer((totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])), 0, msg.sender);
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if arg1 + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += arg1
                    if arg1 + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += arg1
                    emit Transfer(arg1, 0, msg.sender);
                else:
                    if not arg1:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        emit Transfer((0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])), 0, msg.sender);
                    else:
                        if totalSupply * arg1 / arg1 != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        if (totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        emit Transfer((totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])), 0, msg.sender);
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, arg1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if arg1 + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += arg1
                    if arg1 + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += arg1
                    emit Transfer(arg1, 0, msg.sender);
                else:
                    if not arg1:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        emit Transfer((0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]), 0, msg.sender);
                    else:
                        if totalSupply * arg1 / arg1 != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        if (totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        emit Transfer((totalSupply * arg1 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]), 0, msg.sender);
    if stor0 + 1 != stor0:
        revert with 0, 'ReentrancyGuard: reentrant call'
}

function depositAll() payable {
    require ext_code.size(stor7)
    staticcall stor7.0x70a08231 with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    stor0++
    if not ext_call.return_data[0]:
        revert with 0, 'deposit must be greater than 0'
    require ext_call.return_data[0] <= depositLimit
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if ext_call.return_data[0] + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += ext_call.return_data[0]
                    if ext_call.return_data[0] + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                else:
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / ext_call.return_data[0]
                        if (0 / ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / ext_call.return_data[0]
                        emit Transfer((0 / ext_call.return_data[0]), 0, msg.sender);
                    else:
                        if totalSupply * ext_call.return_data[0] / ext_call.return_data[0] != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * ext_call.return_data[0] / ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * ext_call.return_data[0] / ext_call.return_data[0]
                        if (totalSupply * ext_call.return_data[0] / ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * ext_call.return_data[0] / ext_call.return_data[0]
                        emit Transfer((totalSupply * ext_call.return_data[0] / ext_call.return_data[0]), 0, msg.sender);
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if ext_call.return_data[0] + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += ext_call.return_data[0]
                    if ext_call.return_data[0] + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                else:
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        if (0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        emit Transfer((0 / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])), 0, msg.sender);
                    else:
                        if totalSupply * ext_call.return_data[0] / ext_call.return_data[0] != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        if (totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        emit Transfer((totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])), 0, msg.sender);
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if ext_call.return_data[0] + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += ext_call.return_data[0]
                    if ext_call.return_data[0] + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                else:
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        if (0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        emit Transfer((0 / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])), 0, msg.sender);
                    else:
                        if totalSupply * ext_call.return_data[0] / ext_call.return_data[0] != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        if (totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        emit Transfer((totalSupply * ext_call.return_data[0] / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])), 0, msg.sender);
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if ext_call.return_data[0] + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += ext_call.return_data[0]
                    if ext_call.return_data[0] + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                else:
                    if not ext_call.return_data[0]:
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / ext_call.return_data[0]
                        if (0 / ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / ext_call.return_data[0]
                        emit Transfer((0 / ext_call.return_data[0]), 0, msg.sender);
                    else:
                        if totalSupply * ext_call.return_data[0] / ext_call.return_data[0] != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * ext_call.return_data[0] / ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * ext_call.return_data[0] / ext_call.return_data[0]
                        if (totalSupply * ext_call.return_data[0] / ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * ext_call.return_data[0] / ext_call.return_data[0]
                        emit Transfer((totalSupply * ext_call.return_data[0] / ext_call.return_data[0]), 0, msg.sender);
    else:
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if ext_call.return_data[0] + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += ext_call.return_data[0]
                    if ext_call.return_data[0] + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                else:
                    if not ext_call.return_data[0]:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        emit Transfer((0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]), 0, msg.sender);
                    else:
                        if totalSupply * ext_call.return_data[0] / ext_call.return_data[0] != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        if (totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        emit Transfer((totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]), 0, msg.sender);
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if ext_call.return_data[0] + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += ext_call.return_data[0]
                    if ext_call.return_data[0] + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                else:
                    if not ext_call.return_data[0]:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        emit Transfer((0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])), 0, msg.sender);
                    else:
                        if totalSupply * ext_call.return_data[0] / ext_call.return_data[0] != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        if (totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])
                        emit Transfer((totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0])), 0, msg.sender);
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if ext_call.return_data[0] + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += ext_call.return_data[0]
                    if ext_call.return_data[0] + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                else:
                    if not ext_call.return_data[0]:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        emit Transfer((0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])), 0, msg.sender);
                    else:
                        if totalSupply * ext_call.return_data[0] / ext_call.return_data[0] != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        if (totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])
                        emit Transfer((totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0])), 0, msg.sender);
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor7)
                call stor7.0x23b872dd with:
                     gas gas_remaining wei
                    args msg.sender, this.address, ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not totalSupply:
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if ext_call.return_data[0] + totalSupply < totalSupply:
                        revert with 0, 'SafeMath: addition overflow'
                    totalSupply += ext_call.return_data[0]
                    if ext_call.return_data[0] + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                        revert with 0, 'SafeMath: addition overflow'
                    balanceOf[address(msg.sender)] += ext_call.return_data[0]
                    emit Transfer(ext_call.return_data[0], 0, msg.sender);
                else:
                    if not ext_call.return_data[0]:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        if (0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += 0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        emit Transfer((0 / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]), 0, msg.sender);
                    else:
                        if totalSupply * ext_call.return_data[0] / ext_call.return_data[0] != totalSupply:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if (totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + totalSupply < totalSupply:
                            revert with 0, 'SafeMath: addition overflow'
                        totalSupply += totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        if (totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]) + balanceOf[address(msg.sender)] < balanceOf[address(msg.sender)]:
                            revert with 0, 'SafeMath: addition overflow'
                        balanceOf[address(msg.sender)] += totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]
                        emit Transfer((totalSupply * ext_call.return_data[0] / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]), 0, msg.sender);
    if stor0 + 1 != stor0:
        revert with 0, 'ReentrancyGuard: reentrant call'
}

function withdraw(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    stor0++
    if not arg1:
        revert with 0, 'withdraw must be greater than 0'
    if arg1 > balanceOf[address(msg.sender)]:
        revert with 0, 'insufficient balance'
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / ext_call.return_data[0] != arg1:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                            if 0 > (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6 > (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != arg1:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                            if 0 > (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6 > (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != arg1:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                            if 0 > (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6 > (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / ext_call.return_data[0] != arg1:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                            if 0 > (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6 > (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
    else:
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != arg1:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                            if 0 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != arg1:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                            if 0 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (0 / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != arg1:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                            if 0 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (0 / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != arg1:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if arg1 > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] -= arg1
                    if arg1 > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= arg1
                    emit Transfer(arg1, msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                            if 0 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * arg1) + (ext_call.return_data[0] * arg1) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * arg1) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
    if stor0 + 1 != stor0:
        revert with 0, 'ReentrancyGuard: reentrant call'
}

function withdrawAll() payable {
    stor0++
    if not balanceOf[address(msg.sender)]:
        revert with 0, 'withdraw must be greater than 0'
    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
        revert with 0, 'insufficient balance'
    require ext_code.size(stor12)
    staticcall stor12.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
    staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / ext_call.return_data[0] != balanceOf[address(msg.sender)]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                            if 0 > (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6 > (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != balanceOf[address(msg.sender)]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                            if 0 > (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6 > (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != balanceOf[address(msg.sender)]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                            if 0 > (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6 > (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / ext_call.return_data[0] != balanceOf[address(msg.sender)]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                            if 0 > (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6 > (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
    else:
        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                        32,
                        33,
                        0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                        mem[197 len 31]
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
        staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor8)
        staticcall stor8.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args stor9
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != balanceOf[address(msg.sender)]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                            if 0 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != balanceOf[address(msg.sender)]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                            if 0 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
            if not ext_call.return_data[0]:
                revert with 0, 'SafeMath: division by zero'
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != balanceOf[address(msg.sender)]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                            if 0 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (0 / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 0 / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, 0 / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not 0 / totalSupply:
                            if 0 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, 0 / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, 0 / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * 0 / totalSupply / 0 / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * 0 / totalSupply / 10^6 > 0 / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (0 / totalSupply) - (withdrawalFee * 0 / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
                else:
                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != balanceOf[address(msg.sender)]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                    if not totalSupply:
                        revert with 0, 'SafeMath: division by zero'
                    if not msg.sender:
                        revert with 0, 32, 33, 0x6545524332303a206275726e2066726f6d20746865207a65726f20616464726573, mem[453 len 31]
                    if balanceOf[address(msg.sender)] > balanceOf[address(msg.sender)]:
                        revert with 0, 32, 34, 0x7345524332303a206275726e20616d6f756e7420657863656564732062616c616e63, mem[418 len 30], mem[478 len 2]
                    balanceOf[address(msg.sender)] = 0
                    if balanceOf[address(msg.sender)] > totalSupply:
                        revert with 0, 'SafeMath: subtraction overflow'
                    totalSupply -= balanceOf[address(msg.sender)]
                    emit Transfer(balanceOf[address(msg.sender)], msg.sender, 0);
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                        if not ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                            revert with 0, 'SafeERC20: call to non-contract'
                        mem[612 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                        call stor7 with:
                           funct uint32(msg.sender)
                             gas gas_remaining wei
                            args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[676 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[644 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[644]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 723 len 22]
                    else:
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                            if 0 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) << 224, mem[804 len 4]
                        else:
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply != withdrawalFee:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[613 len 31]
                            if withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6 > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply:
                                revert with 0, 'SafeMath: subtraction overflow'
                            idx = 0
                            while idx < 10:
                                idx = idx + 1
                                continue 
                            if not ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            if 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 == ext_code.hash(stor7):
                                revert with 0, 'SafeERC20: call to non-contract'
                            mem[740 len 64] = unknown_0xa9059cbb(?????), msg.sender, Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) >> 32
                            call stor7 with:
                               funct uint32(msg.sender)
                                 gas gas_remaining wei
                                args Mask(224, 32, ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply) - (withdrawalFee * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * balanceOf[address(msg.sender)]) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * balanceOf[address(msg.sender)]) / totalSupply / 10^6)) << 224, mem[804 len 4]
                        if not return_data.size:
                            require not ext_call.success
                            revert with 0, 'SafeERC20: low-level call failed'
                        mem[772 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'SafeERC20: low-level call failed'
                        if return_data.size:
                            require return_data.size >= 32
                            if not mem[772]:
                                revert with 0, 
                                            32,
                                            42,
                                            0x735361666545524332303a204552433230206f7065726174696f6e20646964206e6f7420737563636565,
                                            mem[ceil32(return_data.size) + 851 len 22]
    if stor0 + 1 != stor0:
        revert with 0, 'ReentrancyGuard: reentrant call'
}

function sub_ae263a1d(?) payable {
    if msg.sender == keeperAddress:
        require ext_code.size(stor7)
        staticcall stor7.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(stor12)
        staticcall stor12.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
        staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if not ext_call.return_data[0]:
            mem[96] = 26
            mem[128] = 'SafeMath: division by zero'
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
            staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                mem[160] = 26
                mem[192] = 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    mem[224] = 26
                    mem[256] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > 0:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17588 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17588] = 30
                                mem[_17588 + 32] = 'SafeMath: subtraction overflow'
                                if 0 > ext_call.return_data[0]:
                                    _17746 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17746 + 68] = mem[idx + _17588 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17746 + 68] = mem[_17746 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17746 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0]:
                                    _18628 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18628] = 26
                                    mem[_18628 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19524 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19524] = 26
                                    mem[_19524 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19524 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _23940 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_23940] = 26
                                        mem[_23940 + 32] = 'SafeMath: division by zero'
                                        _24628 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24628] = 26
                                        mem[_24628 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24628 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27169 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27169]
                                        mem[_27169 + 32] = stor8
                                        require 1 < mem[_27169]
                                        mem[_27169 + 64] = stor7
                                        mem[_27169 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27169 + 100] = ext_call.return_data[0]
                                        mem[_27169 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27169 + 196] = this.address
                                        mem[_27169 + 228] = block.timestamp + 120
                                        mem[_27169 + 164] = 160
                                        mem[_27169 + 260] = mem[_27169]
                                        s = 0
                                        while s < 32 * mem[_27169]:
                                            mem[s + _27169 + 292] = mem[s + _27169 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27169 + 260 len (32 * mem[_27169]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24100 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24100] = 26
                                            mem[_24100 + 32] = 'SafeMath: division by zero'
                                            _24692 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24692] = 26
                                            mem[_24692 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24692 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28111 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28111]
                                            mem[_28111 + 32] = stor8
                                            require 1 < mem[_28111]
                                            mem[_28111 + 64] = stor7
                                            mem[_28111 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28111 + 100] = ext_call.return_data[0]
                                            mem[_28111 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28111 + 196] = this.address
                                            mem[_28111 + 228] = block.timestamp + 120
                                            mem[_28111 + 164] = 160
                                            mem[_28111 + 260] = mem[_28111]
                                            s = 0
                                            while s < 32 * mem[_28111]:
                                                mem[s + _28111 + 292] = mem[s + _28111 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28111 + 260 len (32 * mem[_28111]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24308 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24308] = 26
                                            mem[_24308 + 32] = 'SafeMath: division by zero'
                                            _24849 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24849] = 26
                                            mem[_24849 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24849 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29135 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29135]
                                            mem[_29135 + 32] = stor8
                                            require 1 < mem[_29135]
                                            mem[_29135 + 64] = stor7
                                            mem[_29135 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29135 + 100] = ext_call.return_data[0]
                                            mem[_29135 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29135 + 196] = this.address
                                            mem[_29135 + 228] = block.timestamp + 120
                                            mem[_29135 + 164] = 160
                                            mem[_29135 + 260] = mem[_29135]
                                            s = 0
                                            while s < 32 * mem[_29135]:
                                                mem[s + _29135 + 292] = mem[s + _29135 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29135 + 260 len (32 * mem[_29135]) + 32]
                                else:
                                    if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18676 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18676] = 26
                                    mem[_18676 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not 725000 * ext_call.return_data[0] / 10^6:
                                        _19636 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19636] = 26
                                        mem[_19636 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19636 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24099 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24099] = 26
                                            mem[_24099 + 32] = 'SafeMath: division by zero'
                                            _24691 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24691] = 26
                                            mem[_24691 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24691 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28105 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28105]
                                            mem[_28105 + 32] = stor8
                                            require 1 < mem[_28105]
                                            mem[_28105 + 64] = stor7
                                            mem[_28105 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28105 + 100] = ext_call.return_data[0]
                                            mem[_28105 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28105 + 196] = this.address
                                            mem[_28105 + 228] = block.timestamp + 120
                                            mem[_28105 + 164] = 160
                                            mem[_28105 + 260] = mem[_28105]
                                            s = 0
                                            while s < 32 * mem[_28105]:
                                                mem[s + _28105 + 292] = mem[s + _28105 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28105 + 260 len (32 * mem[_28105]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24307 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24307] = 26
                                            mem[_24307 + 32] = 'SafeMath: division by zero'
                                            _24848 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24848] = 26
                                            mem[_24848 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24848 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29129 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29129]
                                            mem[_29129 + 32] = stor8
                                            require 1 < mem[_29129]
                                            mem[_29129 + 64] = stor7
                                            mem[_29129 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29129 + 100] = ext_call.return_data[0]
                                            mem[_29129 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29129 + 196] = this.address
                                            mem[_29129 + 228] = block.timestamp + 120
                                            mem[_29129 + 164] = 160
                                            mem[_29129 + 260] = mem[_29129]
                                            s = 0
                                            while s < 32 * mem[_29129]:
                                                mem[s + _29129 + 292] = mem[s + _29129 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29129 + 260 len (32 * mem[_29129]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24500 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24500] = 26
                                        mem[_24500 + 32] = 'SafeMath: division by zero'
                                        _25181 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25181] = 26
                                        mem[_25181 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25181 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30093 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30093]
                                        mem[_30093 + 32] = stor8
                                        require 1 < mem[_30093]
                                        mem[_30093 + 64] = stor7
                                        mem[_30093 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30093 + 100] = ext_call.return_data[0]
                                        mem[_30093 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30093 + 196] = this.address
                                        mem[_30093 + 228] = block.timestamp + 120
                                        mem[_30093 + 164] = 160
                                        mem[_30093 + 260] = mem[_30093]
                                        s = 0
                                        while s < 32 * mem[_30093]:
                                            mem[s + _30093 + 292] = mem[s + _30093 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30093 + 260 len (32 * mem[_30093]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30093]) + 1
                                        s = ext_call.return_data[0]
                                        continue 
                                    if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19729 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19729] = 26
                                    mem[_19729 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19729 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24306 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24306] = 26
                                        mem[_24306 + 32] = 'SafeMath: division by zero'
                                        _24847 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24847] = 26
                                        mem[_24847 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24847 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29123 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29123]
                                        mem[_29123 + 32] = stor8
                                        require 1 < mem[_29123]
                                        mem[_29123 + 64] = stor7
                                        mem[_29123 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29123 + 100] = ext_call.return_data[0]
                                        mem[_29123 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29123 + 196] = this.address
                                        mem[_29123 + 228] = block.timestamp + 120
                                        mem[_29123 + 164] = 160
                                        mem[_29123 + 260] = mem[_29123]
                                        s = 0
                                        while s < 32 * mem[_29123]:
                                            mem[s + _29123 + 292] = mem[s + _29123 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29123 + 260 len (32 * mem[_29123]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24499 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24499] = 26
                                            mem[_24499 + 32] = 'SafeMath: division by zero'
                                            _25180 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25180] = 26
                                            mem[_25180 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25180 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30087 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30087]
                                            mem[_30087 + 32] = stor8
                                            require 1 < mem[_30087]
                                            mem[_30087 + 64] = stor7
                                            mem[_30087 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30087 + 100] = ext_call.return_data[0]
                                            mem[_30087 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30087 + 196] = this.address
                                            mem[_30087 + 228] = block.timestamp + 120
                                            mem[_30087 + 164] = 160
                                            mem[_30087 + 260] = mem[_30087]
                                            s = 0
                                            while s < 32 * mem[_30087]:
                                                mem[s + _30087 + 292] = mem[s + _30087 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30087 + 260 len (32 * mem[_30087]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30087]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24580 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24580] = 26
                                        mem[_24580 + 32] = 'SafeMath: division by zero'
                                        _25687 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25687] = 26
                                        mem[_25687 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25687 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30733 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30733]
                                        mem[_30733 + 32] = stor8
                                        require 1 < mem[_30733]
                                        mem[_30733 + 64] = stor7
                                        mem[_30733 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30733 + 100] = ext_call.return_data[0]
                                        mem[_30733 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30733 + 196] = this.address
                                        mem[_30733 + 228] = block.timestamp + 120
                                        mem[_30733 + 164] = 160
                                        mem[_30733 + 260] = mem[_30733]
                                        s = 0
                                        while s < 32 * mem[_30733]:
                                            mem[s + _30733 + 292] = mem[s + _30733 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30733 + 260 len (32 * mem[_30733]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] != reserveAllocation:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17586 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17586] = 30
                                mem[_17586 + 32] = 'SafeMath: subtraction overflow'
                                if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    _17740 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17740 + 68] = mem[idx + _17586 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17740 + 68] = mem[_17740 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17740 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                    _18627 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18627] = 26
                                    mem[_18627 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19521 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19521] = 26
                                    mem[_19521 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19521 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _23937 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_23937] = 26
                                        mem[_23937 + 32] = 'SafeMath: division by zero'
                                        _24627 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24627] = 26
                                        mem[_24627 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24627 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27150 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27150]
                                        mem[_27150 + 32] = stor8
                                        require 1 < mem[_27150]
                                        mem[_27150 + 64] = stor7
                                        mem[_27150 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27150 + 100] = ext_call.return_data[0]
                                        mem[_27150 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27150 + 196] = this.address
                                        mem[_27150 + 228] = block.timestamp + 120
                                        mem[_27150 + 164] = 160
                                        mem[_27150 + 260] = mem[_27150]
                                        s = 0
                                        while s < 32 * mem[_27150]:
                                            mem[s + _27150 + 292] = mem[s + _27150 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27150 + 260 len (32 * mem[_27150]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24096 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24096] = 26
                                            mem[_24096 + 32] = 'SafeMath: division by zero'
                                            _24690 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24690] = 26
                                            mem[_24690 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24690 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28090 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28090]
                                            mem[_28090 + 32] = stor8
                                            require 1 < mem[_28090]
                                            mem[_28090 + 64] = stor7
                                            mem[_28090 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28090 + 100] = ext_call.return_data[0]
                                            mem[_28090 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28090 + 196] = this.address
                                            mem[_28090 + 228] = block.timestamp + 120
                                            mem[_28090 + 164] = 160
                                            mem[_28090 + 260] = mem[_28090]
                                            s = 0
                                            while s < 32 * mem[_28090]:
                                                mem[s + _28090 + 292] = mem[s + _28090 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28090 + 260 len (32 * mem[_28090]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24303 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24303] = 26
                                            mem[_24303 + 32] = 'SafeMath: division by zero'
                                            _24843 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24843] = 26
                                            mem[_24843 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24843 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29113 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29113]
                                            mem[_29113 + 32] = stor8
                                            require 1 < mem[_29113]
                                            mem[_29113 + 64] = stor7
                                            mem[_29113 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29113 + 100] = ext_call.return_data[0]
                                            mem[_29113 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29113 + 196] = this.address
                                            mem[_29113 + 228] = block.timestamp + 120
                                            mem[_29113 + 164] = 160
                                            mem[_29113 + 260] = mem[_29113]
                                            s = 0
                                            while s < 32 * mem[_29113]:
                                                mem[s + _29113 + 292] = mem[s + _29113 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29113 + 260 len (32 * mem[_29113]) + 32]
                                else:
                                    if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18675 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18675] = 26
                                    mem[_18675 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                        _19635 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19635] = 26
                                        mem[_19635 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19635 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24095 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24095] = 26
                                            mem[_24095 + 32] = 'SafeMath: division by zero'
                                            _24689 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24689] = 26
                                            mem[_24689 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24689 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28084 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28084]
                                            mem[_28084 + 32] = stor8
                                            require 1 < mem[_28084]
                                            mem[_28084 + 64] = stor7
                                            mem[_28084 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28084 + 100] = ext_call.return_data[0]
                                            mem[_28084 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28084 + 196] = this.address
                                            mem[_28084 + 228] = block.timestamp + 120
                                            mem[_28084 + 164] = 160
                                            mem[_28084 + 260] = mem[_28084]
                                            s = 0
                                            while s < 32 * mem[_28084]:
                                                mem[s + _28084 + 292] = mem[s + _28084 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28084 + 260 len (32 * mem[_28084]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24302 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24302] = 26
                                            mem[_24302 + 32] = 'SafeMath: division by zero'
                                            _24842 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24842] = 26
                                            mem[_24842 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24842 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29107 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29107]
                                            mem[_29107 + 32] = stor8
                                            require 1 < mem[_29107]
                                            mem[_29107 + 64] = stor7
                                            mem[_29107 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29107 + 100] = ext_call.return_data[0]
                                            mem[_29107 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29107 + 196] = this.address
                                            mem[_29107 + 228] = block.timestamp + 120
                                            mem[_29107 + 164] = 160
                                            mem[_29107 + 260] = mem[_29107]
                                            s = 0
                                            while s < 32 * mem[_29107]:
                                                mem[s + _29107 + 292] = mem[s + _29107 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29107 + 260 len (32 * mem[_29107]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24498 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24498] = 26
                                        mem[_24498 + 32] = 'SafeMath: division by zero'
                                        _25172 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25172] = 26
                                        mem[_25172 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25172 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30077 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30077]
                                        mem[_30077 + 32] = stor8
                                        require 1 < mem[_30077]
                                        mem[_30077 + 64] = stor7
                                        mem[_30077 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30077 + 100] = ext_call.return_data[0]
                                        mem[_30077 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30077 + 196] = this.address
                                        mem[_30077 + 228] = block.timestamp + 120
                                        mem[_30077 + 164] = 160
                                        mem[_30077 + 260] = mem[_30077]
                                        s = 0
                                        while s < 32 * mem[_30077]:
                                            mem[s + _30077 + 292] = mem[s + _30077 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30077 + 260 len (32 * mem[_30077]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30077]) + 1
                                        s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                        continue 
                                    if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19725 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19725] = 26
                                    mem[_19725 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19725 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24301 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24301] = 26
                                        mem[_24301 + 32] = 'SafeMath: division by zero'
                                        _24841 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24841] = 26
                                        mem[_24841 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24841 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29101 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29101]
                                        mem[_29101 + 32] = stor8
                                        require 1 < mem[_29101]
                                        mem[_29101 + 64] = stor7
                                        mem[_29101 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29101 + 100] = ext_call.return_data[0]
                                        mem[_29101 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29101 + 196] = this.address
                                        mem[_29101 + 228] = block.timestamp + 120
                                        mem[_29101 + 164] = 160
                                        mem[_29101 + 260] = mem[_29101]
                                        s = 0
                                        while s < 32 * mem[_29101]:
                                            mem[s + _29101 + 292] = mem[s + _29101 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29101 + 260 len (32 * mem[_29101]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24497 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24497] = 26
                                            mem[_24497 + 32] = 'SafeMath: division by zero'
                                            _25171 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25171] = 26
                                            mem[_25171 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25171 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30071 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30071]
                                            mem[_30071 + 32] = stor8
                                            require 1 < mem[_30071]
                                            mem[_30071 + 64] = stor7
                                            mem[_30071 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30071 + 100] = ext_call.return_data[0]
                                            mem[_30071 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30071 + 196] = this.address
                                            mem[_30071 + 228] = block.timestamp + 120
                                            mem[_30071 + 164] = 160
                                            mem[_30071 + 260] = mem[_30071]
                                            s = 0
                                            while s < 32 * mem[_30071]:
                                                mem[s + _30071 + 292] = mem[s + _30071 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30071 + 260 len (32 * mem[_30071]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30071]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24579 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24579] = 26
                                        mem[_24579 + 32] = 'SafeMath: division by zero'
                                        _25673 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25673] = 26
                                        mem[_25673 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25673 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30725 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30725]
                                        mem[_30725 + 32] = stor8
                                        require 1 < mem[_30725]
                                        mem[_30725 + 64] = stor7
                                        mem[_30725 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30725 + 100] = ext_call.return_data[0]
                                        mem[_30725 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30725 + 196] = this.address
                                        mem[_30725 + 228] = block.timestamp + 120
                                        mem[_30725 + 164] = 160
                                        mem[_30725 + 260] = mem[_30725]
                                        s = 0
                                        while s < 32 * mem[_30725]:
                                            mem[s + _30725 + 292] = mem[s + _30725 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30725 + 260 len (32 * mem[_30725]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                    mem[224] = 26
                    mem[256] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > 0:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17584 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17584] = 30
                                mem[_17584 + 32] = 'SafeMath: subtraction overflow'
                                if 0 > ext_call.return_data[0]:
                                    _17734 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17734 + 68] = mem[idx + _17584 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17734 + 68] = mem[_17734 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17734 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0]:
                                    _18626 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18626] = 26
                                    mem[_18626 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19518 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19518] = 26
                                    mem[_19518 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19518 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _23934 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_23934] = 26
                                        mem[_23934 + 32] = 'SafeMath: division by zero'
                                        _24626 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24626] = 26
                                        mem[_24626 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24626 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27131 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27131]
                                        mem[_27131 + 32] = stor8
                                        require 1 < mem[_27131]
                                        mem[_27131 + 64] = stor7
                                        mem[_27131 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27131 + 100] = ext_call.return_data[0]
                                        mem[_27131 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27131 + 196] = this.address
                                        mem[_27131 + 228] = block.timestamp + 120
                                        mem[_27131 + 164] = 160
                                        mem[_27131 + 260] = mem[_27131]
                                        s = 0
                                        while s < 32 * mem[_27131]:
                                            mem[s + _27131 + 292] = mem[s + _27131 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27131 + 260 len (32 * mem[_27131]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24092 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24092] = 26
                                            mem[_24092 + 32] = 'SafeMath: division by zero'
                                            _24688 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24688] = 26
                                            mem[_24688 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24688 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28069 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28069]
                                            mem[_28069 + 32] = stor8
                                            require 1 < mem[_28069]
                                            mem[_28069 + 64] = stor7
                                            mem[_28069 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28069 + 100] = ext_call.return_data[0]
                                            mem[_28069 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28069 + 196] = this.address
                                            mem[_28069 + 228] = block.timestamp + 120
                                            mem[_28069 + 164] = 160
                                            mem[_28069 + 260] = mem[_28069]
                                            s = 0
                                            while s < 32 * mem[_28069]:
                                                mem[s + _28069 + 292] = mem[s + _28069 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28069 + 260 len (32 * mem[_28069]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24298 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24298] = 26
                                            mem[_24298 + 32] = 'SafeMath: division by zero'
                                            _24837 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24837] = 26
                                            mem[_24837 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24837 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29091 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29091]
                                            mem[_29091 + 32] = stor8
                                            require 1 < mem[_29091]
                                            mem[_29091 + 64] = stor7
                                            mem[_29091 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29091 + 100] = ext_call.return_data[0]
                                            mem[_29091 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29091 + 196] = this.address
                                            mem[_29091 + 228] = block.timestamp + 120
                                            mem[_29091 + 164] = 160
                                            mem[_29091 + 260] = mem[_29091]
                                            s = 0
                                            while s < 32 * mem[_29091]:
                                                mem[s + _29091 + 292] = mem[s + _29091 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29091 + 260 len (32 * mem[_29091]) + 32]
                                else:
                                    if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18674 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18674] = 26
                                    mem[_18674 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not 725000 * ext_call.return_data[0] / 10^6:
                                        _19634 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19634] = 26
                                        mem[_19634 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19634 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24091 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24091] = 26
                                            mem[_24091 + 32] = 'SafeMath: division by zero'
                                            _24687 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24687] = 26
                                            mem[_24687 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24687 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28063 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28063]
                                            mem[_28063 + 32] = stor8
                                            require 1 < mem[_28063]
                                            mem[_28063 + 64] = stor7
                                            mem[_28063 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28063 + 100] = ext_call.return_data[0]
                                            mem[_28063 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28063 + 196] = this.address
                                            mem[_28063 + 228] = block.timestamp + 120
                                            mem[_28063 + 164] = 160
                                            mem[_28063 + 260] = mem[_28063]
                                            s = 0
                                            while s < 32 * mem[_28063]:
                                                mem[s + _28063 + 292] = mem[s + _28063 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28063 + 260 len (32 * mem[_28063]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24297 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24297] = 26
                                            mem[_24297 + 32] = 'SafeMath: division by zero'
                                            _24836 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24836] = 26
                                            mem[_24836 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24836 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29085 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29085]
                                            mem[_29085 + 32] = stor8
                                            require 1 < mem[_29085]
                                            mem[_29085 + 64] = stor7
                                            mem[_29085 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29085 + 100] = ext_call.return_data[0]
                                            mem[_29085 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29085 + 196] = this.address
                                            mem[_29085 + 228] = block.timestamp + 120
                                            mem[_29085 + 164] = 160
                                            mem[_29085 + 260] = mem[_29085]
                                            s = 0
                                            while s < 32 * mem[_29085]:
                                                mem[s + _29085 + 292] = mem[s + _29085 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29085 + 260 len (32 * mem[_29085]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24496 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24496] = 26
                                        mem[_24496 + 32] = 'SafeMath: division by zero'
                                        _25163 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25163] = 26
                                        mem[_25163 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25163 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30061 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30061]
                                        mem[_30061 + 32] = stor8
                                        require 1 < mem[_30061]
                                        mem[_30061 + 64] = stor7
                                        mem[_30061 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30061 + 100] = ext_call.return_data[0]
                                        mem[_30061 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30061 + 196] = this.address
                                        mem[_30061 + 228] = block.timestamp + 120
                                        mem[_30061 + 164] = 160
                                        mem[_30061 + 260] = mem[_30061]
                                        s = 0
                                        while s < 32 * mem[_30061]:
                                            mem[s + _30061 + 292] = mem[s + _30061 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30061 + 260 len (32 * mem[_30061]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30061]) + 1
                                        s = ext_call.return_data[0]
                                        continue 
                                    if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19721 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19721] = 26
                                    mem[_19721 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19721 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24296 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24296] = 26
                                        mem[_24296 + 32] = 'SafeMath: division by zero'
                                        _24835 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24835] = 26
                                        mem[_24835 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24835 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29079 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29079]
                                        mem[_29079 + 32] = stor8
                                        require 1 < mem[_29079]
                                        mem[_29079 + 64] = stor7
                                        mem[_29079 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29079 + 100] = ext_call.return_data[0]
                                        mem[_29079 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29079 + 196] = this.address
                                        mem[_29079 + 228] = block.timestamp + 120
                                        mem[_29079 + 164] = 160
                                        mem[_29079 + 260] = mem[_29079]
                                        s = 0
                                        while s < 32 * mem[_29079]:
                                            mem[s + _29079 + 292] = mem[s + _29079 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29079 + 260 len (32 * mem[_29079]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24495 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24495] = 26
                                            mem[_24495 + 32] = 'SafeMath: division by zero'
                                            _25162 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25162] = 26
                                            mem[_25162 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25162 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30055 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30055]
                                            mem[_30055 + 32] = stor8
                                            require 1 < mem[_30055]
                                            mem[_30055 + 64] = stor7
                                            mem[_30055 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30055 + 100] = ext_call.return_data[0]
                                            mem[_30055 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30055 + 196] = this.address
                                            mem[_30055 + 228] = block.timestamp + 120
                                            mem[_30055 + 164] = 160
                                            mem[_30055 + 260] = mem[_30055]
                                            s = 0
                                            while s < 32 * mem[_30055]:
                                                mem[s + _30055 + 292] = mem[s + _30055 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30055 + 260 len (32 * mem[_30055]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30055]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24578 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24578] = 26
                                        mem[_24578 + 32] = 'SafeMath: division by zero'
                                        _25659 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25659] = 26
                                        mem[_25659 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25659 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30717 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30717]
                                        mem[_30717 + 32] = stor8
                                        require 1 < mem[_30717]
                                        mem[_30717 + 64] = stor7
                                        mem[_30717 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30717 + 100] = ext_call.return_data[0]
                                        mem[_30717 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30717 + 196] = this.address
                                        mem[_30717 + 228] = block.timestamp + 120
                                        mem[_30717 + 164] = 160
                                        mem[_30717 + 260] = mem[_30717]
                                        s = 0
                                        while s < 32 * mem[_30717]:
                                            mem[s + _30717 + 292] = mem[s + _30717 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30717 + 260 len (32 * mem[_30717]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != reserveAllocation:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17582 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17582] = 30
                                mem[_17582 + 32] = 'SafeMath: subtraction overflow'
                                if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    _17728 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17728 + 68] = mem[idx + _17582 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17728 + 68] = mem[_17728 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17728 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                    _18625 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18625] = 26
                                    mem[_18625 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19515 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19515] = 26
                                    mem[_19515 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19515 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _23931 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_23931] = 26
                                        mem[_23931 + 32] = 'SafeMath: division by zero'
                                        _24625 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24625] = 26
                                        mem[_24625 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24625 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27112 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27112]
                                        mem[_27112 + 32] = stor8
                                        require 1 < mem[_27112]
                                        mem[_27112 + 64] = stor7
                                        mem[_27112 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27112 + 100] = ext_call.return_data[0]
                                        mem[_27112 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27112 + 196] = this.address
                                        mem[_27112 + 228] = block.timestamp + 120
                                        mem[_27112 + 164] = 160
                                        mem[_27112 + 260] = mem[_27112]
                                        s = 0
                                        while s < 32 * mem[_27112]:
                                            mem[s + _27112 + 292] = mem[s + _27112 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27112 + 260 len (32 * mem[_27112]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24088 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24088] = 26
                                            mem[_24088 + 32] = 'SafeMath: division by zero'
                                            _24686 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24686] = 26
                                            mem[_24686 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24686 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28048 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28048]
                                            mem[_28048 + 32] = stor8
                                            require 1 < mem[_28048]
                                            mem[_28048 + 64] = stor7
                                            mem[_28048 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28048 + 100] = ext_call.return_data[0]
                                            mem[_28048 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28048 + 196] = this.address
                                            mem[_28048 + 228] = block.timestamp + 120
                                            mem[_28048 + 164] = 160
                                            mem[_28048 + 260] = mem[_28048]
                                            s = 0
                                            while s < 32 * mem[_28048]:
                                                mem[s + _28048 + 292] = mem[s + _28048 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28048 + 260 len (32 * mem[_28048]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24293 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24293] = 26
                                            mem[_24293 + 32] = 'SafeMath: division by zero'
                                            _24831 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24831] = 26
                                            mem[_24831 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24831 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29069 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29069]
                                            mem[_29069 + 32] = stor8
                                            require 1 < mem[_29069]
                                            mem[_29069 + 64] = stor7
                                            mem[_29069 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29069 + 100] = ext_call.return_data[0]
                                            mem[_29069 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29069 + 196] = this.address
                                            mem[_29069 + 228] = block.timestamp + 120
                                            mem[_29069 + 164] = 160
                                            mem[_29069 + 260] = mem[_29069]
                                            s = 0
                                            while s < 32 * mem[_29069]:
                                                mem[s + _29069 + 292] = mem[s + _29069 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29069 + 260 len (32 * mem[_29069]) + 32]
                                else:
                                    if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18673 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18673] = 26
                                    mem[_18673 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                        _19633 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19633] = 26
                                        mem[_19633 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19633 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24087 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24087] = 26
                                            mem[_24087 + 32] = 'SafeMath: division by zero'
                                            _24685 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24685] = 26
                                            mem[_24685 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24685 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28042 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28042]
                                            mem[_28042 + 32] = stor8
                                            require 1 < mem[_28042]
                                            mem[_28042 + 64] = stor7
                                            mem[_28042 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28042 + 100] = ext_call.return_data[0]
                                            mem[_28042 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28042 + 196] = this.address
                                            mem[_28042 + 228] = block.timestamp + 120
                                            mem[_28042 + 164] = 160
                                            mem[_28042 + 260] = mem[_28042]
                                            s = 0
                                            while s < 32 * mem[_28042]:
                                                mem[s + _28042 + 292] = mem[s + _28042 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28042 + 260 len (32 * mem[_28042]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24292 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24292] = 26
                                            mem[_24292 + 32] = 'SafeMath: division by zero'
                                            _24830 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24830] = 26
                                            mem[_24830 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24830 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29063 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29063]
                                            mem[_29063 + 32] = stor8
                                            require 1 < mem[_29063]
                                            mem[_29063 + 64] = stor7
                                            mem[_29063 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29063 + 100] = ext_call.return_data[0]
                                            mem[_29063 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29063 + 196] = this.address
                                            mem[_29063 + 228] = block.timestamp + 120
                                            mem[_29063 + 164] = 160
                                            mem[_29063 + 260] = mem[_29063]
                                            s = 0
                                            while s < 32 * mem[_29063]:
                                                mem[s + _29063 + 292] = mem[s + _29063 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29063 + 260 len (32 * mem[_29063]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24494 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24494] = 26
                                        mem[_24494 + 32] = 'SafeMath: division by zero'
                                        _25154 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25154] = 26
                                        mem[_25154 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25154 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30045 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30045]
                                        mem[_30045 + 32] = stor8
                                        require 1 < mem[_30045]
                                        mem[_30045 + 64] = stor7
                                        mem[_30045 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30045 + 100] = ext_call.return_data[0]
                                        mem[_30045 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30045 + 196] = this.address
                                        mem[_30045 + 228] = block.timestamp + 120
                                        mem[_30045 + 164] = 160
                                        mem[_30045 + 260] = mem[_30045]
                                        s = 0
                                        while s < 32 * mem[_30045]:
                                            mem[s + _30045 + 292] = mem[s + _30045 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30045 + 260 len (32 * mem[_30045]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30045]) + 1
                                        s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                        continue 
                                    if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19717 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19717] = 26
                                    mem[_19717 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19717 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24291 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24291] = 26
                                        mem[_24291 + 32] = 'SafeMath: division by zero'
                                        _24829 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24829] = 26
                                        mem[_24829 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24829 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29057 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29057]
                                        mem[_29057 + 32] = stor8
                                        require 1 < mem[_29057]
                                        mem[_29057 + 64] = stor7
                                        mem[_29057 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29057 + 100] = ext_call.return_data[0]
                                        mem[_29057 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29057 + 196] = this.address
                                        mem[_29057 + 228] = block.timestamp + 120
                                        mem[_29057 + 164] = 160
                                        mem[_29057 + 260] = mem[_29057]
                                        s = 0
                                        while s < 32 * mem[_29057]:
                                            mem[s + _29057 + 292] = mem[s + _29057 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29057 + 260 len (32 * mem[_29057]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24493 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24493] = 26
                                            mem[_24493 + 32] = 'SafeMath: division by zero'
                                            _25153 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25153] = 26
                                            mem[_25153 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25153 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30039 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30039]
                                            mem[_30039 + 32] = stor8
                                            require 1 < mem[_30039]
                                            mem[_30039 + 64] = stor7
                                            mem[_30039 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30039 + 100] = ext_call.return_data[0]
                                            mem[_30039 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30039 + 196] = this.address
                                            mem[_30039 + 228] = block.timestamp + 120
                                            mem[_30039 + 164] = 160
                                            mem[_30039 + 260] = mem[_30039]
                                            s = 0
                                            while s < 32 * mem[_30039]:
                                                mem[s + _30039 + 292] = mem[s + _30039 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30039 + 260 len (32 * mem[_30039]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30039]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24577 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24577] = 26
                                        mem[_24577 + 32] = 'SafeMath: division by zero'
                                        _25645 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25645] = 26
                                        mem[_25645 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25645 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30709 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30709]
                                        mem[_30709 + 32] = stor8
                                        require 1 < mem[_30709]
                                        mem[_30709 + 64] = stor7
                                        mem[_30709 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30709 + 100] = ext_call.return_data[0]
                                        mem[_30709 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30709 + 196] = this.address
                                        mem[_30709 + 228] = block.timestamp + 120
                                        mem[_30709 + 164] = 160
                                        mem[_30709 + 260] = mem[_30709]
                                        s = 0
                                        while s < 32 * mem[_30709]:
                                            mem[s + _30709 + 292] = mem[s + _30709 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30709 + 260 len (32 * mem[_30709]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                mem[160] = 26
                mem[192] = 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    mem[224] = 26
                    mem[256] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > 0:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17580 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17580] = 30
                                mem[_17580 + 32] = 'SafeMath: subtraction overflow'
                                if 0 > ext_call.return_data[0]:
                                    _17722 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17722 + 68] = mem[idx + _17580 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17722 + 68] = mem[_17722 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17722 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0]:
                                    _18624 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18624] = 26
                                    mem[_18624 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19512 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19512] = 26
                                    mem[_19512 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19512 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _23928 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_23928] = 26
                                        mem[_23928 + 32] = 'SafeMath: division by zero'
                                        _24624 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24624] = 26
                                        mem[_24624 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24624 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27093 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27093]
                                        mem[_27093 + 32] = stor8
                                        require 1 < mem[_27093]
                                        mem[_27093 + 64] = stor7
                                        mem[_27093 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27093 + 100] = ext_call.return_data[0]
                                        mem[_27093 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27093 + 196] = this.address
                                        mem[_27093 + 228] = block.timestamp + 120
                                        mem[_27093 + 164] = 160
                                        mem[_27093 + 260] = mem[_27093]
                                        s = 0
                                        while s < 32 * mem[_27093]:
                                            mem[s + _27093 + 292] = mem[s + _27093 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27093 + 260 len (32 * mem[_27093]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24084 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24084] = 26
                                            mem[_24084 + 32] = 'SafeMath: division by zero'
                                            _24684 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24684] = 26
                                            mem[_24684 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24684 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28027 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28027]
                                            mem[_28027 + 32] = stor8
                                            require 1 < mem[_28027]
                                            mem[_28027 + 64] = stor7
                                            mem[_28027 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28027 + 100] = ext_call.return_data[0]
                                            mem[_28027 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28027 + 196] = this.address
                                            mem[_28027 + 228] = block.timestamp + 120
                                            mem[_28027 + 164] = 160
                                            mem[_28027 + 260] = mem[_28027]
                                            s = 0
                                            while s < 32 * mem[_28027]:
                                                mem[s + _28027 + 292] = mem[s + _28027 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28027 + 260 len (32 * mem[_28027]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24288 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24288] = 26
                                            mem[_24288 + 32] = 'SafeMath: division by zero'
                                            _24825 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24825] = 26
                                            mem[_24825 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24825 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29047 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29047]
                                            mem[_29047 + 32] = stor8
                                            require 1 < mem[_29047]
                                            mem[_29047 + 64] = stor7
                                            mem[_29047 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29047 + 100] = ext_call.return_data[0]
                                            mem[_29047 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29047 + 196] = this.address
                                            mem[_29047 + 228] = block.timestamp + 120
                                            mem[_29047 + 164] = 160
                                            mem[_29047 + 260] = mem[_29047]
                                            s = 0
                                            while s < 32 * mem[_29047]:
                                                mem[s + _29047 + 292] = mem[s + _29047 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29047 + 260 len (32 * mem[_29047]) + 32]
                                else:
                                    if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18672 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18672] = 26
                                    mem[_18672 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not 725000 * ext_call.return_data[0] / 10^6:
                                        _19632 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19632] = 26
                                        mem[_19632 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19632 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24083 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24083] = 26
                                            mem[_24083 + 32] = 'SafeMath: division by zero'
                                            _24683 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24683] = 26
                                            mem[_24683 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24683 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28021 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28021]
                                            mem[_28021 + 32] = stor8
                                            require 1 < mem[_28021]
                                            mem[_28021 + 64] = stor7
                                            mem[_28021 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28021 + 100] = ext_call.return_data[0]
                                            mem[_28021 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28021 + 196] = this.address
                                            mem[_28021 + 228] = block.timestamp + 120
                                            mem[_28021 + 164] = 160
                                            mem[_28021 + 260] = mem[_28021]
                                            s = 0
                                            while s < 32 * mem[_28021]:
                                                mem[s + _28021 + 292] = mem[s + _28021 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28021 + 260 len (32 * mem[_28021]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24287 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24287] = 26
                                            mem[_24287 + 32] = 'SafeMath: division by zero'
                                            _24824 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24824] = 26
                                            mem[_24824 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24824 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29041 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29041]
                                            mem[_29041 + 32] = stor8
                                            require 1 < mem[_29041]
                                            mem[_29041 + 64] = stor7
                                            mem[_29041 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29041 + 100] = ext_call.return_data[0]
                                            mem[_29041 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29041 + 196] = this.address
                                            mem[_29041 + 228] = block.timestamp + 120
                                            mem[_29041 + 164] = 160
                                            mem[_29041 + 260] = mem[_29041]
                                            s = 0
                                            while s < 32 * mem[_29041]:
                                                mem[s + _29041 + 292] = mem[s + _29041 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29041 + 260 len (32 * mem[_29041]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24492 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24492] = 26
                                        mem[_24492 + 32] = 'SafeMath: division by zero'
                                        _25145 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25145] = 26
                                        mem[_25145 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25145 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30029 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30029]
                                        mem[_30029 + 32] = stor8
                                        require 1 < mem[_30029]
                                        mem[_30029 + 64] = stor7
                                        mem[_30029 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30029 + 100] = ext_call.return_data[0]
                                        mem[_30029 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30029 + 196] = this.address
                                        mem[_30029 + 228] = block.timestamp + 120
                                        mem[_30029 + 164] = 160
                                        mem[_30029 + 260] = mem[_30029]
                                        s = 0
                                        while s < 32 * mem[_30029]:
                                            mem[s + _30029 + 292] = mem[s + _30029 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30029 + 260 len (32 * mem[_30029]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30029]) + 1
                                        s = ext_call.return_data[0]
                                        continue 
                                    if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19713 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19713] = 26
                                    mem[_19713 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19713 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24286 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24286] = 26
                                        mem[_24286 + 32] = 'SafeMath: division by zero'
                                        _24823 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24823] = 26
                                        mem[_24823 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24823 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29035 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29035]
                                        mem[_29035 + 32] = stor8
                                        require 1 < mem[_29035]
                                        mem[_29035 + 64] = stor7
                                        mem[_29035 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29035 + 100] = ext_call.return_data[0]
                                        mem[_29035 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29035 + 196] = this.address
                                        mem[_29035 + 228] = block.timestamp + 120
                                        mem[_29035 + 164] = 160
                                        mem[_29035 + 260] = mem[_29035]
                                        s = 0
                                        while s < 32 * mem[_29035]:
                                            mem[s + _29035 + 292] = mem[s + _29035 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29035 + 260 len (32 * mem[_29035]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24491 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24491] = 26
                                            mem[_24491 + 32] = 'SafeMath: division by zero'
                                            _25144 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25144] = 26
                                            mem[_25144 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25144 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30023 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30023]
                                            mem[_30023 + 32] = stor8
                                            require 1 < mem[_30023]
                                            mem[_30023 + 64] = stor7
                                            mem[_30023 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30023 + 100] = ext_call.return_data[0]
                                            mem[_30023 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30023 + 196] = this.address
                                            mem[_30023 + 228] = block.timestamp + 120
                                            mem[_30023 + 164] = 160
                                            mem[_30023 + 260] = mem[_30023]
                                            s = 0
                                            while s < 32 * mem[_30023]:
                                                mem[s + _30023 + 292] = mem[s + _30023 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30023 + 260 len (32 * mem[_30023]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30023]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24576 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24576] = 26
                                        mem[_24576 + 32] = 'SafeMath: division by zero'
                                        _25631 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25631] = 26
                                        mem[_25631 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25631 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30701 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30701]
                                        mem[_30701 + 32] = stor8
                                        require 1 < mem[_30701]
                                        mem[_30701 + 64] = stor7
                                        mem[_30701 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30701 + 100] = ext_call.return_data[0]
                                        mem[_30701 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30701 + 196] = this.address
                                        mem[_30701 + 228] = block.timestamp + 120
                                        mem[_30701 + 164] = 160
                                        mem[_30701 + 260] = mem[_30701]
                                        s = 0
                                        while s < 32 * mem[_30701]:
                                            mem[s + _30701 + 292] = mem[s + _30701 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30701 + 260 len (32 * mem[_30701]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != reserveAllocation:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17578 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17578] = 30
                                mem[_17578 + 32] = 'SafeMath: subtraction overflow'
                                if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    _17716 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17716 + 68] = mem[idx + _17578 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17716 + 68] = mem[_17716 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17716 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                    _18623 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18623] = 26
                                    mem[_18623 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19509 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19509] = 26
                                    mem[_19509 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19509 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _23925 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_23925] = 26
                                        mem[_23925 + 32] = 'SafeMath: division by zero'
                                        _24623 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24623] = 26
                                        mem[_24623 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24623 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27074 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27074]
                                        mem[_27074 + 32] = stor8
                                        require 1 < mem[_27074]
                                        mem[_27074 + 64] = stor7
                                        mem[_27074 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27074 + 100] = ext_call.return_data[0]
                                        mem[_27074 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27074 + 196] = this.address
                                        mem[_27074 + 228] = block.timestamp + 120
                                        mem[_27074 + 164] = 160
                                        mem[_27074 + 260] = mem[_27074]
                                        s = 0
                                        while s < 32 * mem[_27074]:
                                            mem[s + _27074 + 292] = mem[s + _27074 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27074 + 260 len (32 * mem[_27074]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24080 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24080] = 26
                                            mem[_24080 + 32] = 'SafeMath: division by zero'
                                            _24682 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24682] = 26
                                            mem[_24682 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24682 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28006 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28006]
                                            mem[_28006 + 32] = stor8
                                            require 1 < mem[_28006]
                                            mem[_28006 + 64] = stor7
                                            mem[_28006 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28006 + 100] = ext_call.return_data[0]
                                            mem[_28006 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28006 + 196] = this.address
                                            mem[_28006 + 228] = block.timestamp + 120
                                            mem[_28006 + 164] = 160
                                            mem[_28006 + 260] = mem[_28006]
                                            s = 0
                                            while s < 32 * mem[_28006]:
                                                mem[s + _28006 + 292] = mem[s + _28006 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28006 + 260 len (32 * mem[_28006]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24283 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24283] = 26
                                            mem[_24283 + 32] = 'SafeMath: division by zero'
                                            _24819 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24819] = 26
                                            mem[_24819 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24819 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29025 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29025]
                                            mem[_29025 + 32] = stor8
                                            require 1 < mem[_29025]
                                            mem[_29025 + 64] = stor7
                                            mem[_29025 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29025 + 100] = ext_call.return_data[0]
                                            mem[_29025 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29025 + 196] = this.address
                                            mem[_29025 + 228] = block.timestamp + 120
                                            mem[_29025 + 164] = 160
                                            mem[_29025 + 260] = mem[_29025]
                                            s = 0
                                            while s < 32 * mem[_29025]:
                                                mem[s + _29025 + 292] = mem[s + _29025 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29025 + 260 len (32 * mem[_29025]) + 32]
                                else:
                                    if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18671 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18671] = 26
                                    mem[_18671 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                        _19631 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19631] = 26
                                        mem[_19631 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19631 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24079 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24079] = 26
                                            mem[_24079 + 32] = 'SafeMath: division by zero'
                                            _24681 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24681] = 26
                                            mem[_24681 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24681 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28000 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28000]
                                            mem[_28000 + 32] = stor8
                                            require 1 < mem[_28000]
                                            mem[_28000 + 64] = stor7
                                            mem[_28000 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28000 + 100] = ext_call.return_data[0]
                                            mem[_28000 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28000 + 196] = this.address
                                            mem[_28000 + 228] = block.timestamp + 120
                                            mem[_28000 + 164] = 160
                                            mem[_28000 + 260] = mem[_28000]
                                            s = 0
                                            while s < 32 * mem[_28000]:
                                                mem[s + _28000 + 292] = mem[s + _28000 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28000 + 260 len (32 * mem[_28000]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24282 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24282] = 26
                                            mem[_24282 + 32] = 'SafeMath: division by zero'
                                            _24818 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24818] = 26
                                            mem[_24818 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24818 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29019 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29019]
                                            mem[_29019 + 32] = stor8
                                            require 1 < mem[_29019]
                                            mem[_29019 + 64] = stor7
                                            mem[_29019 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29019 + 100] = ext_call.return_data[0]
                                            mem[_29019 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29019 + 196] = this.address
                                            mem[_29019 + 228] = block.timestamp + 120
                                            mem[_29019 + 164] = 160
                                            mem[_29019 + 260] = mem[_29019]
                                            s = 0
                                            while s < 32 * mem[_29019]:
                                                mem[s + _29019 + 292] = mem[s + _29019 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29019 + 260 len (32 * mem[_29019]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24490 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24490] = 26
                                        mem[_24490 + 32] = 'SafeMath: division by zero'
                                        _25136 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25136] = 26
                                        mem[_25136 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25136 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30013 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30013]
                                        mem[_30013 + 32] = stor8
                                        require 1 < mem[_30013]
                                        mem[_30013 + 64] = stor7
                                        mem[_30013 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30013 + 100] = ext_call.return_data[0]
                                        mem[_30013 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30013 + 196] = this.address
                                        mem[_30013 + 228] = block.timestamp + 120
                                        mem[_30013 + 164] = 160
                                        mem[_30013 + 260] = mem[_30013]
                                        s = 0
                                        while s < 32 * mem[_30013]:
                                            mem[s + _30013 + 292] = mem[s + _30013 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30013 + 260 len (32 * mem[_30013]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_30013]) + 1
                                        s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                        continue 
                                    if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19709 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19709] = 26
                                    mem[_19709 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19709 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24281 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24281] = 26
                                        mem[_24281 + 32] = 'SafeMath: division by zero'
                                        _24817 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24817] = 26
                                        mem[_24817 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24817 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29013 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29013]
                                        mem[_29013 + 32] = stor8
                                        require 1 < mem[_29013]
                                        mem[_29013 + 64] = stor7
                                        mem[_29013 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29013 + 100] = ext_call.return_data[0]
                                        mem[_29013 + 132] = 0 / ext_call.return_data[0]
                                        mem[_29013 + 196] = this.address
                                        mem[_29013 + 228] = block.timestamp + 120
                                        mem[_29013 + 164] = 160
                                        mem[_29013 + 260] = mem[_29013]
                                        s = 0
                                        while s < 32 * mem[_29013]:
                                            mem[s + _29013 + 292] = mem[s + _29013 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29013 + 260 len (32 * mem[_29013]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24489 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24489] = 26
                                            mem[_24489 + 32] = 'SafeMath: division by zero'
                                            _25135 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25135] = 26
                                            mem[_25135 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25135 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30007 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30007]
                                            mem[_30007 + 32] = stor8
                                            require 1 < mem[_30007]
                                            mem[_30007 + 64] = stor7
                                            mem[_30007 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30007 + 100] = ext_call.return_data[0]
                                            mem[_30007 + 132] = 0 / ext_call.return_data[0]
                                            mem[_30007 + 196] = this.address
                                            mem[_30007 + 228] = block.timestamp + 120
                                            mem[_30007 + 164] = 160
                                            mem[_30007 + 260] = mem[_30007]
                                            s = 0
                                            while s < 32 * mem[_30007]:
                                                mem[s + _30007 + 292] = mem[s + _30007 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30007 + 260 len (32 * mem[_30007]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30007]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24575 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24575] = 26
                                        mem[_24575 + 32] = 'SafeMath: division by zero'
                                        _25617 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25617] = 26
                                        mem[_25617 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25617 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30693 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30693]
                                        mem[_30693 + 32] = stor8
                                        require 1 < mem[_30693]
                                        mem[_30693 + 64] = stor7
                                        mem[_30693 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30693 + 100] = ext_call.return_data[0]
                                        mem[_30693 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30693 + 196] = this.address
                                        mem[_30693 + 228] = block.timestamp + 120
                                        mem[_30693 + 164] = 160
                                        mem[_30693 + 260] = mem[_30693]
                                        s = 0
                                        while s < 32 * mem[_30693]:
                                            mem[s + _30693 + 292] = mem[s + _30693 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30693 + 260 len (32 * mem[_30693]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                    mem[224] = 26
                    mem[256] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > 0:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17576 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17576] = 30
                                mem[_17576 + 32] = 'SafeMath: subtraction overflow'
                                if 0 > ext_call.return_data[0]:
                                    _17710 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17710 + 68] = mem[idx + _17576 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17710 + 68] = mem[_17710 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17710 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0]:
                                    _18622 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18622] = 26
                                    mem[_18622 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19506 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19506] = 26
                                    mem[_19506 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19506 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _23922 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_23922] = 26
                                        mem[_23922 + 32] = 'SafeMath: division by zero'
                                        _24622 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24622] = 26
                                        mem[_24622 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24622 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27055 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27055]
                                        mem[_27055 + 32] = stor8
                                        require 1 < mem[_27055]
                                        mem[_27055 + 64] = stor7
                                        mem[_27055 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27055 + 100] = ext_call.return_data[0]
                                        mem[_27055 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27055 + 196] = this.address
                                        mem[_27055 + 228] = block.timestamp + 120
                                        mem[_27055 + 164] = 160
                                        mem[_27055 + 260] = mem[_27055]
                                        s = 0
                                        while s < 32 * mem[_27055]:
                                            mem[s + _27055 + 292] = mem[s + _27055 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27055 + 260 len (32 * mem[_27055]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24076 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24076] = 26
                                            mem[_24076 + 32] = 'SafeMath: division by zero'
                                            _24680 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24680] = 26
                                            mem[_24680 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24680 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27985 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27985]
                                            mem[_27985 + 32] = stor8
                                            require 1 < mem[_27985]
                                            mem[_27985 + 64] = stor7
                                            mem[_27985 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27985 + 100] = ext_call.return_data[0]
                                            mem[_27985 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27985 + 196] = this.address
                                            mem[_27985 + 228] = block.timestamp + 120
                                            mem[_27985 + 164] = 160
                                            mem[_27985 + 260] = mem[_27985]
                                            s = 0
                                            while s < 32 * mem[_27985]:
                                                mem[s + _27985 + 292] = mem[s + _27985 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27985 + 260 len (32 * mem[_27985]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24278 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24278] = 26
                                            mem[_24278 + 32] = 'SafeMath: division by zero'
                                            _24813 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24813] = 26
                                            mem[_24813 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24813 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29003 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29003]
                                            mem[_29003 + 32] = stor8
                                            require 1 < mem[_29003]
                                            mem[_29003 + 64] = stor7
                                            mem[_29003 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29003 + 100] = ext_call.return_data[0]
                                            mem[_29003 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_29003 + 196] = this.address
                                            mem[_29003 + 228] = block.timestamp + 120
                                            mem[_29003 + 164] = 160
                                            mem[_29003 + 260] = mem[_29003]
                                            s = 0
                                            while s < 32 * mem[_29003]:
                                                mem[s + _29003 + 292] = mem[s + _29003 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29003 + 260 len (32 * mem[_29003]) + 32]
                                else:
                                    if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18670 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18670] = 26
                                    mem[_18670 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not 725000 * ext_call.return_data[0] / 10^6:
                                        _19630 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19630] = 26
                                        mem[_19630 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19630 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24075 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24075] = 26
                                            mem[_24075 + 32] = 'SafeMath: division by zero'
                                            _24679 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24679] = 26
                                            mem[_24679 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24679 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27979 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27979]
                                            mem[_27979 + 32] = stor8
                                            require 1 < mem[_27979]
                                            mem[_27979 + 64] = stor7
                                            mem[_27979 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27979 + 100] = ext_call.return_data[0]
                                            mem[_27979 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27979 + 196] = this.address
                                            mem[_27979 + 228] = block.timestamp + 120
                                            mem[_27979 + 164] = 160
                                            mem[_27979 + 260] = mem[_27979]
                                            s = 0
                                            while s < 32 * mem[_27979]:
                                                mem[s + _27979 + 292] = mem[s + _27979 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27979 + 260 len (32 * mem[_27979]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24277 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24277] = 26
                                            mem[_24277 + 32] = 'SafeMath: division by zero'
                                            _24812 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24812] = 26
                                            mem[_24812 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24812 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28997 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28997]
                                            mem[_28997 + 32] = stor8
                                            require 1 < mem[_28997]
                                            mem[_28997 + 64] = stor7
                                            mem[_28997 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28997 + 100] = ext_call.return_data[0]
                                            mem[_28997 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28997 + 196] = this.address
                                            mem[_28997 + 228] = block.timestamp + 120
                                            mem[_28997 + 164] = 160
                                            mem[_28997 + 260] = mem[_28997]
                                            s = 0
                                            while s < 32 * mem[_28997]:
                                                mem[s + _28997 + 292] = mem[s + _28997 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28997 + 260 len (32 * mem[_28997]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24488 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24488] = 26
                                        mem[_24488 + 32] = 'SafeMath: division by zero'
                                        _25127 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25127] = 26
                                        mem[_25127 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25127 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29997 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29997]
                                        mem[_29997 + 32] = stor8
                                        require 1 < mem[_29997]
                                        mem[_29997 + 64] = stor7
                                        mem[_29997 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29997 + 100] = ext_call.return_data[0]
                                        mem[_29997 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_29997 + 196] = this.address
                                        mem[_29997 + 228] = block.timestamp + 120
                                        mem[_29997 + 164] = 160
                                        mem[_29997 + 260] = mem[_29997]
                                        s = 0
                                        while s < 32 * mem[_29997]:
                                            mem[s + _29997 + 292] = mem[s + _29997 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29997 + 260 len (32 * mem[_29997]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_29997]) + 1
                                        s = ext_call.return_data[0]
                                        continue 
                                    if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19705 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19705] = 26
                                    mem[_19705 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19705 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24276 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24276] = 26
                                        mem[_24276 + 32] = 'SafeMath: division by zero'
                                        _24811 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24811] = 26
                                        mem[_24811 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24811 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _28991 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_28991]
                                        mem[_28991 + 32] = stor8
                                        require 1 < mem[_28991]
                                        mem[_28991 + 64] = stor7
                                        mem[_28991 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_28991 + 100] = ext_call.return_data[0]
                                        mem[_28991 + 132] = 0 / ext_call.return_data[0]
                                        mem[_28991 + 196] = this.address
                                        mem[_28991 + 228] = block.timestamp + 120
                                        mem[_28991 + 164] = 160
                                        mem[_28991 + 260] = mem[_28991]
                                        s = 0
                                        while s < 32 * mem[_28991]:
                                            mem[s + _28991 + 292] = mem[s + _28991 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28991 + 260 len (32 * mem[_28991]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24487 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24487] = 26
                                            mem[_24487 + 32] = 'SafeMath: division by zero'
                                            _25126 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25126] = 26
                                            mem[_25126 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25126 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29991 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29991]
                                            mem[_29991 + 32] = stor8
                                            require 1 < mem[_29991]
                                            mem[_29991 + 64] = stor7
                                            mem[_29991 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29991 + 100] = ext_call.return_data[0]
                                            mem[_29991 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29991 + 196] = this.address
                                            mem[_29991 + 228] = block.timestamp + 120
                                            mem[_29991 + 164] = 160
                                            mem[_29991 + 260] = mem[_29991]
                                            s = 0
                                            while s < 32 * mem[_29991]:
                                                mem[s + _29991 + 292] = mem[s + _29991 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29991 + 260 len (32 * mem[_29991]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_29991]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24574 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24574] = 26
                                        mem[_24574 + 32] = 'SafeMath: division by zero'
                                        _25603 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25603] = 26
                                        mem[_25603 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25603 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30685 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30685]
                                        mem[_30685 + 32] = stor8
                                        require 1 < mem[_30685]
                                        mem[_30685 + 64] = stor7
                                        mem[_30685 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30685 + 100] = ext_call.return_data[0]
                                        mem[_30685 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30685 + 196] = this.address
                                        mem[_30685 + 228] = block.timestamp + 120
                                        mem[_30685 + 164] = 160
                                        mem[_30685 + 260] = mem[_30685]
                                        s = 0
                                        while s < 32 * mem[_30685]:
                                            mem[s + _30685 + 292] = mem[s + _30685 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30685 + 260 len (32 * mem[_30685]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] != reserveAllocation:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17574 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17574] = 30
                                mem[_17574 + 32] = 'SafeMath: subtraction overflow'
                                if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    _17704 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17704 + 68] = mem[idx + _17574 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17704 + 68] = mem[_17704 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17704 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                    _18621 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18621] = 26
                                    mem[_18621 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19503 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19503] = 26
                                    mem[_19503 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19503 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _23919 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_23919] = 26
                                        mem[_23919 + 32] = 'SafeMath: division by zero'
                                        _24621 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24621] = 26
                                        mem[_24621 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24621 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27036 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27036]
                                        mem[_27036 + 32] = stor8
                                        require 1 < mem[_27036]
                                        mem[_27036 + 64] = stor7
                                        mem[_27036 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27036 + 100] = ext_call.return_data[0]
                                        mem[_27036 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27036 + 196] = this.address
                                        mem[_27036 + 228] = block.timestamp + 120
                                        mem[_27036 + 164] = 160
                                        mem[_27036 + 260] = mem[_27036]
                                        s = 0
                                        while s < 32 * mem[_27036]:
                                            mem[s + _27036 + 292] = mem[s + _27036 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27036 + 260 len (32 * mem[_27036]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24072 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24072] = 26
                                            mem[_24072 + 32] = 'SafeMath: division by zero'
                                            _24678 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24678] = 26
                                            mem[_24678 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24678 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27964 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27964]
                                            mem[_27964 + 32] = stor8
                                            require 1 < mem[_27964]
                                            mem[_27964 + 64] = stor7
                                            mem[_27964 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27964 + 100] = ext_call.return_data[0]
                                            mem[_27964 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27964 + 196] = this.address
                                            mem[_27964 + 228] = block.timestamp + 120
                                            mem[_27964 + 164] = 160
                                            mem[_27964 + 260] = mem[_27964]
                                            s = 0
                                            while s < 32 * mem[_27964]:
                                                mem[s + _27964 + 292] = mem[s + _27964 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27964 + 260 len (32 * mem[_27964]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24273 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24273] = 26
                                            mem[_24273 + 32] = 'SafeMath: division by zero'
                                            _24807 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24807] = 26
                                            mem[_24807 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24807 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28981 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28981]
                                            mem[_28981 + 32] = stor8
                                            require 1 < mem[_28981]
                                            mem[_28981 + 64] = stor7
                                            mem[_28981 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28981 + 100] = ext_call.return_data[0]
                                            mem[_28981 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_28981 + 196] = this.address
                                            mem[_28981 + 228] = block.timestamp + 120
                                            mem[_28981 + 164] = 160
                                            mem[_28981 + 260] = mem[_28981]
                                            s = 0
                                            while s < 32 * mem[_28981]:
                                                mem[s + _28981 + 292] = mem[s + _28981 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28981 + 260 len (32 * mem[_28981]) + 32]
                                else:
                                    if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18669 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18669] = 26
                                    mem[_18669 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                        _19629 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19629] = 26
                                        mem[_19629 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19629 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24071 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24071] = 26
                                            mem[_24071 + 32] = 'SafeMath: division by zero'
                                            _24677 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24677] = 26
                                            mem[_24677 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24677 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27958 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27958]
                                            mem[_27958 + 32] = stor8
                                            require 1 < mem[_27958]
                                            mem[_27958 + 64] = stor7
                                            mem[_27958 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27958 + 100] = ext_call.return_data[0]
                                            mem[_27958 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27958 + 196] = this.address
                                            mem[_27958 + 228] = block.timestamp + 120
                                            mem[_27958 + 164] = 160
                                            mem[_27958 + 260] = mem[_27958]
                                            s = 0
                                            while s < 32 * mem[_27958]:
                                                mem[s + _27958 + 292] = mem[s + _27958 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27958 + 260 len (32 * mem[_27958]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24272 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24272] = 26
                                            mem[_24272 + 32] = 'SafeMath: division by zero'
                                            _24806 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24806] = 26
                                            mem[_24806 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24806 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28975 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28975]
                                            mem[_28975 + 32] = stor8
                                            require 1 < mem[_28975]
                                            mem[_28975 + 64] = stor7
                                            mem[_28975 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28975 + 100] = ext_call.return_data[0]
                                            mem[_28975 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28975 + 196] = this.address
                                            mem[_28975 + 228] = block.timestamp + 120
                                            mem[_28975 + 164] = 160
                                            mem[_28975 + 260] = mem[_28975]
                                            s = 0
                                            while s < 32 * mem[_28975]:
                                                mem[s + _28975 + 292] = mem[s + _28975 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28975 + 260 len (32 * mem[_28975]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24486 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24486] = 26
                                        mem[_24486 + 32] = 'SafeMath: division by zero'
                                        _25118 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25118] = 26
                                        mem[_25118 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25118 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29981 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29981]
                                        mem[_29981 + 32] = stor8
                                        require 1 < mem[_29981]
                                        mem[_29981 + 64] = stor7
                                        mem[_29981 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29981 + 100] = ext_call.return_data[0]
                                        mem[_29981 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_29981 + 196] = this.address
                                        mem[_29981 + 228] = block.timestamp + 120
                                        mem[_29981 + 164] = 160
                                        mem[_29981 + 260] = mem[_29981]
                                        s = 0
                                        while s < 32 * mem[_29981]:
                                            mem[s + _29981 + 292] = mem[s + _29981 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29981 + 260 len (32 * mem[_29981]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_29981]) + 1
                                        s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                        continue 
                                    if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19701 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19701] = 26
                                    mem[_19701 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19701 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24271 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24271] = 26
                                        mem[_24271 + 32] = 'SafeMath: division by zero'
                                        _24805 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24805] = 26
                                        mem[_24805 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24805 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _28969 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_28969]
                                        mem[_28969 + 32] = stor8
                                        require 1 < mem[_28969]
                                        mem[_28969 + 64] = stor7
                                        mem[_28969 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_28969 + 100] = ext_call.return_data[0]
                                        mem[_28969 + 132] = 0 / ext_call.return_data[0]
                                        mem[_28969 + 196] = this.address
                                        mem[_28969 + 228] = block.timestamp + 120
                                        mem[_28969 + 164] = 160
                                        mem[_28969 + 260] = mem[_28969]
                                        s = 0
                                        while s < 32 * mem[_28969]:
                                            mem[s + _28969 + 292] = mem[s + _28969 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28969 + 260 len (32 * mem[_28969]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24485 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24485] = 26
                                            mem[_24485 + 32] = 'SafeMath: division by zero'
                                            _25117 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25117] = 26
                                            mem[_25117 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25117 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29975 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29975]
                                            mem[_29975 + 32] = stor8
                                            require 1 < mem[_29975]
                                            mem[_29975 + 64] = stor7
                                            mem[_29975 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29975 + 100] = ext_call.return_data[0]
                                            mem[_29975 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29975 + 196] = this.address
                                            mem[_29975 + 228] = block.timestamp + 120
                                            mem[_29975 + 164] = 160
                                            mem[_29975 + 260] = mem[_29975]
                                            s = 0
                                            while s < 32 * mem[_29975]:
                                                mem[s + _29975 + 292] = mem[s + _29975 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29975 + 260 len (32 * mem[_29975]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_29975]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24573 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24573] = 26
                                        mem[_24573 + 32] = 'SafeMath: division by zero'
                                        _25589 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25589] = 26
                                        mem[_25589 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25589 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30677 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30677]
                                        mem[_30677 + 32] = stor8
                                        require 1 < mem[_30677]
                                        mem[_30677 + 64] = stor7
                                        mem[_30677 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30677 + 100] = ext_call.return_data[0]
                                        mem[_30677 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30677 + 196] = this.address
                                        mem[_30677 + 228] = block.timestamp + 120
                                        mem[_30677 + 164] = 160
                                        mem[_30677 + 260] = mem[_30677]
                                        s = 0
                                        while s < 32 * mem[_30677]:
                                            mem[s + _30677 + 292] = mem[s + _30677 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30677 + 260 len (32 * mem[_30677]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
        else:
            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            mem[96] = 26
            mem[128] = 'SafeMath: division by zero'
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
            staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor8)
            staticcall stor8.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args stor9
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                mem[160] = 26
                mem[192] = 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    mem[224] = 26
                    mem[256] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > 0:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17572 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17572] = 30
                                mem[_17572 + 32] = 'SafeMath: subtraction overflow'
                                if 0 > ext_call.return_data[0]:
                                    _17698 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17698 + 68] = mem[idx + _17572 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17698 + 68] = mem[_17698 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17698 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0]:
                                    _18620 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18620] = 26
                                    mem[_18620 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19500 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19500] = 26
                                    mem[_19500 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19500 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _23916 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_23916] = 26
                                        mem[_23916 + 32] = 'SafeMath: division by zero'
                                        _24620 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24620] = 26
                                        mem[_24620 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24620 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _27017 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_27017]
                                        mem[_27017 + 32] = stor8
                                        require 1 < mem[_27017]
                                        mem[_27017 + 64] = stor7
                                        mem[_27017 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_27017 + 100] = ext_call.return_data[0]
                                        mem[_27017 + 132] = 0 / ext_call.return_data[0]
                                        mem[_27017 + 196] = this.address
                                        mem[_27017 + 228] = block.timestamp + 120
                                        mem[_27017 + 164] = 160
                                        mem[_27017 + 260] = mem[_27017]
                                        s = 0
                                        while s < 32 * mem[_27017]:
                                            mem[s + _27017 + 292] = mem[s + _27017 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27017 + 260 len (32 * mem[_27017]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24068 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24068] = 26
                                            mem[_24068 + 32] = 'SafeMath: division by zero'
                                            _24676 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24676] = 26
                                            mem[_24676 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24676 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27943 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27943]
                                            mem[_27943 + 32] = stor8
                                            require 1 < mem[_27943]
                                            mem[_27943 + 64] = stor7
                                            mem[_27943 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27943 + 100] = ext_call.return_data[0]
                                            mem[_27943 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27943 + 196] = this.address
                                            mem[_27943 + 228] = block.timestamp + 120
                                            mem[_27943 + 164] = 160
                                            mem[_27943 + 260] = mem[_27943]
                                            s = 0
                                            while s < 32 * mem[_27943]:
                                                mem[s + _27943 + 292] = mem[s + _27943 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27943 + 260 len (32 * mem[_27943]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24268 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24268] = 26
                                            mem[_24268 + 32] = 'SafeMath: division by zero'
                                            _24801 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24801] = 26
                                            mem[_24801 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24801 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28959 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28959]
                                            mem[_28959 + 32] = stor8
                                            require 1 < mem[_28959]
                                            mem[_28959 + 64] = stor7
                                            mem[_28959 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28959 + 100] = ext_call.return_data[0]
                                            mem[_28959 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_28959 + 196] = this.address
                                            mem[_28959 + 228] = block.timestamp + 120
                                            mem[_28959 + 164] = 160
                                            mem[_28959 + 260] = mem[_28959]
                                            s = 0
                                            while s < 32 * mem[_28959]:
                                                mem[s + _28959 + 292] = mem[s + _28959 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28959 + 260 len (32 * mem[_28959]) + 32]
                                else:
                                    if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18668 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18668] = 26
                                    mem[_18668 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not 725000 * ext_call.return_data[0] / 10^6:
                                        _19628 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19628] = 26
                                        mem[_19628 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19628 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24067 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24067] = 26
                                            mem[_24067 + 32] = 'SafeMath: division by zero'
                                            _24675 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24675] = 26
                                            mem[_24675 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24675 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27937 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27937]
                                            mem[_27937 + 32] = stor8
                                            require 1 < mem[_27937]
                                            mem[_27937 + 64] = stor7
                                            mem[_27937 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27937 + 100] = ext_call.return_data[0]
                                            mem[_27937 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27937 + 196] = this.address
                                            mem[_27937 + 228] = block.timestamp + 120
                                            mem[_27937 + 164] = 160
                                            mem[_27937 + 260] = mem[_27937]
                                            s = 0
                                            while s < 32 * mem[_27937]:
                                                mem[s + _27937 + 292] = mem[s + _27937 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27937 + 260 len (32 * mem[_27937]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24267 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24267] = 26
                                            mem[_24267 + 32] = 'SafeMath: division by zero'
                                            _24800 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24800] = 26
                                            mem[_24800 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24800 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28953 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28953]
                                            mem[_28953 + 32] = stor8
                                            require 1 < mem[_28953]
                                            mem[_28953 + 64] = stor7
                                            mem[_28953 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28953 + 100] = ext_call.return_data[0]
                                            mem[_28953 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28953 + 196] = this.address
                                            mem[_28953 + 228] = block.timestamp + 120
                                            mem[_28953 + 164] = 160
                                            mem[_28953 + 260] = mem[_28953]
                                            s = 0
                                            while s < 32 * mem[_28953]:
                                                mem[s + _28953 + 292] = mem[s + _28953 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28953 + 260 len (32 * mem[_28953]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24484 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24484] = 26
                                        mem[_24484 + 32] = 'SafeMath: division by zero'
                                        _25109 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25109] = 26
                                        mem[_25109 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25109 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29965 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29965]
                                        mem[_29965 + 32] = stor8
                                        require 1 < mem[_29965]
                                        mem[_29965 + 64] = stor7
                                        mem[_29965 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29965 + 100] = ext_call.return_data[0]
                                        mem[_29965 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_29965 + 196] = this.address
                                        mem[_29965 + 228] = block.timestamp + 120
                                        mem[_29965 + 164] = 160
                                        mem[_29965 + 260] = mem[_29965]
                                        s = 0
                                        while s < 32 * mem[_29965]:
                                            mem[s + _29965 + 292] = mem[s + _29965 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29965 + 260 len (32 * mem[_29965]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_29965]) + 1
                                        s = ext_call.return_data[0]
                                        continue 
                                    if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19697 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19697] = 26
                                    mem[_19697 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19697 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24266 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24266] = 26
                                        mem[_24266 + 32] = 'SafeMath: division by zero'
                                        _24799 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24799] = 26
                                        mem[_24799 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24799 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _28947 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_28947]
                                        mem[_28947 + 32] = stor8
                                        require 1 < mem[_28947]
                                        mem[_28947 + 64] = stor7
                                        mem[_28947 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_28947 + 100] = ext_call.return_data[0]
                                        mem[_28947 + 132] = 0 / ext_call.return_data[0]
                                        mem[_28947 + 196] = this.address
                                        mem[_28947 + 228] = block.timestamp + 120
                                        mem[_28947 + 164] = 160
                                        mem[_28947 + 260] = mem[_28947]
                                        s = 0
                                        while s < 32 * mem[_28947]:
                                            mem[s + _28947 + 292] = mem[s + _28947 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28947 + 260 len (32 * mem[_28947]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24483 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24483] = 26
                                            mem[_24483 + 32] = 'SafeMath: division by zero'
                                            _25108 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25108] = 26
                                            mem[_25108 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25108 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29959 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29959]
                                            mem[_29959 + 32] = stor8
                                            require 1 < mem[_29959]
                                            mem[_29959 + 64] = stor7
                                            mem[_29959 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29959 + 100] = ext_call.return_data[0]
                                            mem[_29959 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29959 + 196] = this.address
                                            mem[_29959 + 228] = block.timestamp + 120
                                            mem[_29959 + 164] = 160
                                            mem[_29959 + 260] = mem[_29959]
                                            s = 0
                                            while s < 32 * mem[_29959]:
                                                mem[s + _29959 + 292] = mem[s + _29959 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29959 + 260 len (32 * mem[_29959]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_29959]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24572 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24572] = 26
                                        mem[_24572 + 32] = 'SafeMath: division by zero'
                                        _25575 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25575] = 26
                                        mem[_25575 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25575 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30669 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30669]
                                        mem[_30669 + 32] = stor8
                                        require 1 < mem[_30669]
                                        mem[_30669 + 64] = stor7
                                        mem[_30669 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30669 + 100] = ext_call.return_data[0]
                                        mem[_30669 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30669 + 196] = this.address
                                        mem[_30669 + 228] = block.timestamp + 120
                                        mem[_30669 + 164] = 160
                                        mem[_30669 + 260] = mem[_30669]
                                        s = 0
                                        while s < 32 * mem[_30669]:
                                            mem[s + _30669 + 292] = mem[s + _30669 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30669 + 260 len (32 * mem[_30669]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != reserveAllocation:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17570 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17570] = 30
                                mem[_17570 + 32] = 'SafeMath: subtraction overflow'
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    _17692 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17692 + 68] = mem[idx + _17570 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17692 + 68] = mem[_17692 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17692 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                    _18619 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18619] = 26
                                    mem[_18619 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19497 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19497] = 26
                                    mem[_19497 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19497 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _23913 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_23913] = 26
                                        mem[_23913 + 32] = 'SafeMath: division by zero'
                                        _24619 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24619] = 26
                                        mem[_24619 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24619 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _26998 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_26998]
                                        mem[_26998 + 32] = stor8
                                        require 1 < mem[_26998]
                                        mem[_26998 + 64] = stor7
                                        mem[_26998 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_26998 + 100] = ext_call.return_data[0]
                                        mem[_26998 + 132] = 0 / ext_call.return_data[0]
                                        mem[_26998 + 196] = this.address
                                        mem[_26998 + 228] = block.timestamp + 120
                                        mem[_26998 + 164] = 160
                                        mem[_26998 + 260] = mem[_26998]
                                        s = 0
                                        while s < 32 * mem[_26998]:
                                            mem[s + _26998 + 292] = mem[s + _26998 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_26998 + 260 len (32 * mem[_26998]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24064 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24064] = 26
                                            mem[_24064 + 32] = 'SafeMath: division by zero'
                                            _24674 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24674] = 26
                                            mem[_24674 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24674 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27922 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27922]
                                            mem[_27922 + 32] = stor8
                                            require 1 < mem[_27922]
                                            mem[_27922 + 64] = stor7
                                            mem[_27922 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27922 + 100] = ext_call.return_data[0]
                                            mem[_27922 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27922 + 196] = this.address
                                            mem[_27922 + 228] = block.timestamp + 120
                                            mem[_27922 + 164] = 160
                                            mem[_27922 + 260] = mem[_27922]
                                            s = 0
                                            while s < 32 * mem[_27922]:
                                                mem[s + _27922 + 292] = mem[s + _27922 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27922 + 260 len (32 * mem[_27922]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24263 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24263] = 26
                                            mem[_24263 + 32] = 'SafeMath: division by zero'
                                            _24795 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24795] = 26
                                            mem[_24795 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24795 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28937 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28937]
                                            mem[_28937 + 32] = stor8
                                            require 1 < mem[_28937]
                                            mem[_28937 + 64] = stor7
                                            mem[_28937 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28937 + 100] = ext_call.return_data[0]
                                            mem[_28937 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_28937 + 196] = this.address
                                            mem[_28937 + 228] = block.timestamp + 120
                                            mem[_28937 + 164] = 160
                                            mem[_28937 + 260] = mem[_28937]
                                            s = 0
                                            while s < 32 * mem[_28937]:
                                                mem[s + _28937 + 292] = mem[s + _28937 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28937 + 260 len (32 * mem[_28937]) + 32]
                                else:
                                    if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18667 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18667] = 26
                                    mem[_18667 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                        _19627 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19627] = 26
                                        mem[_19627 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19627 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24063 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24063] = 26
                                            mem[_24063 + 32] = 'SafeMath: division by zero'
                                            _24673 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24673] = 26
                                            mem[_24673 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24673 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27916 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27916]
                                            mem[_27916 + 32] = stor8
                                            require 1 < mem[_27916]
                                            mem[_27916 + 64] = stor7
                                            mem[_27916 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27916 + 100] = ext_call.return_data[0]
                                            mem[_27916 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27916 + 196] = this.address
                                            mem[_27916 + 228] = block.timestamp + 120
                                            mem[_27916 + 164] = 160
                                            mem[_27916 + 260] = mem[_27916]
                                            s = 0
                                            while s < 32 * mem[_27916]:
                                                mem[s + _27916 + 292] = mem[s + _27916 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27916 + 260 len (32 * mem[_27916]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24262 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24262] = 26
                                            mem[_24262 + 32] = 'SafeMath: division by zero'
                                            _24794 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24794] = 26
                                            mem[_24794 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24794 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28931 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28931]
                                            mem[_28931 + 32] = stor8
                                            require 1 < mem[_28931]
                                            mem[_28931 + 64] = stor7
                                            mem[_28931 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28931 + 100] = ext_call.return_data[0]
                                            mem[_28931 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28931 + 196] = this.address
                                            mem[_28931 + 228] = block.timestamp + 120
                                            mem[_28931 + 164] = 160
                                            mem[_28931 + 260] = mem[_28931]
                                            s = 0
                                            while s < 32 * mem[_28931]:
                                                mem[s + _28931 + 292] = mem[s + _28931 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28931 + 260 len (32 * mem[_28931]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24482 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24482] = 26
                                        mem[_24482 + 32] = 'SafeMath: division by zero'
                                        _25100 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25100] = 26
                                        mem[_25100 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25100 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29949 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29949]
                                        mem[_29949 + 32] = stor8
                                        require 1 < mem[_29949]
                                        mem[_29949 + 64] = stor7
                                        mem[_29949 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29949 + 100] = ext_call.return_data[0]
                                        mem[_29949 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_29949 + 196] = this.address
                                        mem[_29949 + 228] = block.timestamp + 120
                                        mem[_29949 + 164] = 160
                                        mem[_29949 + 260] = mem[_29949]
                                        s = 0
                                        while s < 32 * mem[_29949]:
                                            mem[s + _29949 + 292] = mem[s + _29949 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29949 + 260 len (32 * mem[_29949]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_29949]) + 1
                                        s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                        continue 
                                    if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19693 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19693] = 26
                                    mem[_19693 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19693 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24261 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24261] = 26
                                        mem[_24261 + 32] = 'SafeMath: division by zero'
                                        _24793 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24793] = 26
                                        mem[_24793 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24793 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _28925 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_28925]
                                        mem[_28925 + 32] = stor8
                                        require 1 < mem[_28925]
                                        mem[_28925 + 64] = stor7
                                        mem[_28925 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_28925 + 100] = ext_call.return_data[0]
                                        mem[_28925 + 132] = 0 / ext_call.return_data[0]
                                        mem[_28925 + 196] = this.address
                                        mem[_28925 + 228] = block.timestamp + 120
                                        mem[_28925 + 164] = 160
                                        mem[_28925 + 260] = mem[_28925]
                                        s = 0
                                        while s < 32 * mem[_28925]:
                                            mem[s + _28925 + 292] = mem[s + _28925 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28925 + 260 len (32 * mem[_28925]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24481 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24481] = 26
                                            mem[_24481 + 32] = 'SafeMath: division by zero'
                                            _25099 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25099] = 26
                                            mem[_25099 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25099 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29943 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29943]
                                            mem[_29943 + 32] = stor8
                                            require 1 < mem[_29943]
                                            mem[_29943 + 64] = stor7
                                            mem[_29943 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29943 + 100] = ext_call.return_data[0]
                                            mem[_29943 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29943 + 196] = this.address
                                            mem[_29943 + 228] = block.timestamp + 120
                                            mem[_29943 + 164] = 160
                                            mem[_29943 + 260] = mem[_29943]
                                            s = 0
                                            while s < 32 * mem[_29943]:
                                                mem[s + _29943 + 292] = mem[s + _29943 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29943 + 260 len (32 * mem[_29943]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_29943]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24571 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24571] = 26
                                        mem[_24571 + 32] = 'SafeMath: division by zero'
                                        _25561 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25561] = 26
                                        mem[_25561 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25561 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30661 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30661]
                                        mem[_30661 + 32] = stor8
                                        require 1 < mem[_30661]
                                        mem[_30661 + 64] = stor7
                                        mem[_30661 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30661 + 100] = ext_call.return_data[0]
                                        mem[_30661 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30661 + 196] = this.address
                                        mem[_30661 + 228] = block.timestamp + 120
                                        mem[_30661 + 164] = 160
                                        mem[_30661 + 260] = mem[_30661]
                                        s = 0
                                        while s < 32 * mem[_30661]:
                                            mem[s + _30661 + 292] = mem[s + _30661 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30661 + 260 len (32 * mem[_30661]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                    mem[224] = 26
                    mem[256] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > 0:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17568 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17568] = 30
                                mem[_17568 + 32] = 'SafeMath: subtraction overflow'
                                if 0 > ext_call.return_data[0]:
                                    _17686 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17686 + 68] = mem[idx + _17568 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17686 + 68] = mem[_17686 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17686 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0]:
                                    _18618 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18618] = 26
                                    mem[_18618 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19494 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19494] = 26
                                    mem[_19494 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19494 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _23910 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_23910] = 26
                                        mem[_23910 + 32] = 'SafeMath: division by zero'
                                        _24618 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24618] = 26
                                        mem[_24618 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24618 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _26979 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_26979]
                                        mem[_26979 + 32] = stor8
                                        require 1 < mem[_26979]
                                        mem[_26979 + 64] = stor7
                                        mem[_26979 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_26979 + 100] = ext_call.return_data[0]
                                        mem[_26979 + 132] = 0 / ext_call.return_data[0]
                                        mem[_26979 + 196] = this.address
                                        mem[_26979 + 228] = block.timestamp + 120
                                        mem[_26979 + 164] = 160
                                        mem[_26979 + 260] = mem[_26979]
                                        s = 0
                                        while s < 32 * mem[_26979]:
                                            mem[s + _26979 + 292] = mem[s + _26979 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_26979 + 260 len (32 * mem[_26979]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24060 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24060] = 26
                                            mem[_24060 + 32] = 'SafeMath: division by zero'
                                            _24672 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24672] = 26
                                            mem[_24672 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24672 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27901 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27901]
                                            mem[_27901 + 32] = stor8
                                            require 1 < mem[_27901]
                                            mem[_27901 + 64] = stor7
                                            mem[_27901 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27901 + 100] = ext_call.return_data[0]
                                            mem[_27901 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27901 + 196] = this.address
                                            mem[_27901 + 228] = block.timestamp + 120
                                            mem[_27901 + 164] = 160
                                            mem[_27901 + 260] = mem[_27901]
                                            s = 0
                                            while s < 32 * mem[_27901]:
                                                mem[s + _27901 + 292] = mem[s + _27901 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27901 + 260 len (32 * mem[_27901]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24258 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24258] = 26
                                            mem[_24258 + 32] = 'SafeMath: division by zero'
                                            _24789 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24789] = 26
                                            mem[_24789 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24789 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28915 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28915]
                                            mem[_28915 + 32] = stor8
                                            require 1 < mem[_28915]
                                            mem[_28915 + 64] = stor7
                                            mem[_28915 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28915 + 100] = ext_call.return_data[0]
                                            mem[_28915 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_28915 + 196] = this.address
                                            mem[_28915 + 228] = block.timestamp + 120
                                            mem[_28915 + 164] = 160
                                            mem[_28915 + 260] = mem[_28915]
                                            s = 0
                                            while s < 32 * mem[_28915]:
                                                mem[s + _28915 + 292] = mem[s + _28915 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28915 + 260 len (32 * mem[_28915]) + 32]
                                else:
                                    if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18666 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18666] = 26
                                    mem[_18666 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not 725000 * ext_call.return_data[0] / 10^6:
                                        _19626 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19626] = 26
                                        mem[_19626 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19626 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24059 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24059] = 26
                                            mem[_24059 + 32] = 'SafeMath: division by zero'
                                            _24671 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24671] = 26
                                            mem[_24671 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24671 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27895 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27895]
                                            mem[_27895 + 32] = stor8
                                            require 1 < mem[_27895]
                                            mem[_27895 + 64] = stor7
                                            mem[_27895 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27895 + 100] = ext_call.return_data[0]
                                            mem[_27895 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27895 + 196] = this.address
                                            mem[_27895 + 228] = block.timestamp + 120
                                            mem[_27895 + 164] = 160
                                            mem[_27895 + 260] = mem[_27895]
                                            s = 0
                                            while s < 32 * mem[_27895]:
                                                mem[s + _27895 + 292] = mem[s + _27895 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27895 + 260 len (32 * mem[_27895]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24257 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24257] = 26
                                            mem[_24257 + 32] = 'SafeMath: division by zero'
                                            _24788 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24788] = 26
                                            mem[_24788 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24788 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28909 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28909]
                                            mem[_28909 + 32] = stor8
                                            require 1 < mem[_28909]
                                            mem[_28909 + 64] = stor7
                                            mem[_28909 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28909 + 100] = ext_call.return_data[0]
                                            mem[_28909 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28909 + 196] = this.address
                                            mem[_28909 + 228] = block.timestamp + 120
                                            mem[_28909 + 164] = 160
                                            mem[_28909 + 260] = mem[_28909]
                                            s = 0
                                            while s < 32 * mem[_28909]:
                                                mem[s + _28909 + 292] = mem[s + _28909 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28909 + 260 len (32 * mem[_28909]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24480 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24480] = 26
                                        mem[_24480 + 32] = 'SafeMath: division by zero'
                                        _25091 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25091] = 26
                                        mem[_25091 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25091 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29933 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29933]
                                        mem[_29933 + 32] = stor8
                                        require 1 < mem[_29933]
                                        mem[_29933 + 64] = stor7
                                        mem[_29933 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29933 + 100] = ext_call.return_data[0]
                                        mem[_29933 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_29933 + 196] = this.address
                                        mem[_29933 + 228] = block.timestamp + 120
                                        mem[_29933 + 164] = 160
                                        mem[_29933 + 260] = mem[_29933]
                                        s = 0
                                        while s < 32 * mem[_29933]:
                                            mem[s + _29933 + 292] = mem[s + _29933 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29933 + 260 len (32 * mem[_29933]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_29933]) + 1
                                        s = ext_call.return_data[0]
                                        continue 
                                    if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19689 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19689] = 26
                                    mem[_19689 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19689 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24256 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24256] = 26
                                        mem[_24256 + 32] = 'SafeMath: division by zero'
                                        _24787 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24787] = 26
                                        mem[_24787 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24787 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _28903 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_28903]
                                        mem[_28903 + 32] = stor8
                                        require 1 < mem[_28903]
                                        mem[_28903 + 64] = stor7
                                        mem[_28903 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_28903 + 100] = ext_call.return_data[0]
                                        mem[_28903 + 132] = 0 / ext_call.return_data[0]
                                        mem[_28903 + 196] = this.address
                                        mem[_28903 + 228] = block.timestamp + 120
                                        mem[_28903 + 164] = 160
                                        mem[_28903 + 260] = mem[_28903]
                                        s = 0
                                        while s < 32 * mem[_28903]:
                                            mem[s + _28903 + 292] = mem[s + _28903 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28903 + 260 len (32 * mem[_28903]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24479 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24479] = 26
                                            mem[_24479 + 32] = 'SafeMath: division by zero'
                                            _25090 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25090] = 26
                                            mem[_25090 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25090 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29927 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29927]
                                            mem[_29927 + 32] = stor8
                                            require 1 < mem[_29927]
                                            mem[_29927 + 64] = stor7
                                            mem[_29927 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29927 + 100] = ext_call.return_data[0]
                                            mem[_29927 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29927 + 196] = this.address
                                            mem[_29927 + 228] = block.timestamp + 120
                                            mem[_29927 + 164] = 160
                                            mem[_29927 + 260] = mem[_29927]
                                            s = 0
                                            while s < 32 * mem[_29927]:
                                                mem[s + _29927 + 292] = mem[s + _29927 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29927 + 260 len (32 * mem[_29927]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_29927]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24570 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24570] = 26
                                        mem[_24570 + 32] = 'SafeMath: division by zero'
                                        _25547 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25547] = 26
                                        mem[_25547 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25547 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30653 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30653]
                                        mem[_30653 + 32] = stor8
                                        require 1 < mem[_30653]
                                        mem[_30653 + 64] = stor7
                                        mem[_30653 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30653 + 100] = ext_call.return_data[0]
                                        mem[_30653 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30653 + 196] = this.address
                                        mem[_30653 + 228] = block.timestamp + 120
                                        mem[_30653 + 164] = 160
                                        mem[_30653 + 260] = mem[_30653]
                                        s = 0
                                        while s < 32 * mem[_30653]:
                                            mem[s + _30653 + 292] = mem[s + _30653 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30653 + 260 len (32 * mem[_30653]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != reserveAllocation:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17566 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17566] = 30
                                mem[_17566 + 32] = 'SafeMath: subtraction overflow'
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    _17680 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17680 + 68] = mem[idx + _17566 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17680 + 68] = mem[_17680 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17680 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                    _18617 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18617] = 26
                                    mem[_18617 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19491 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19491] = 26
                                    mem[_19491 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19491 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _23907 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_23907] = 26
                                        mem[_23907 + 32] = 'SafeMath: division by zero'
                                        _24617 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24617] = 26
                                        mem[_24617 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24617 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _26960 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_26960]
                                        mem[_26960 + 32] = stor8
                                        require 1 < mem[_26960]
                                        mem[_26960 + 64] = stor7
                                        mem[_26960 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_26960 + 100] = ext_call.return_data[0]
                                        mem[_26960 + 132] = 0 / ext_call.return_data[0]
                                        mem[_26960 + 196] = this.address
                                        mem[_26960 + 228] = block.timestamp + 120
                                        mem[_26960 + 164] = 160
                                        mem[_26960 + 260] = mem[_26960]
                                        s = 0
                                        while s < 32 * mem[_26960]:
                                            mem[s + _26960 + 292] = mem[s + _26960 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_26960 + 260 len (32 * mem[_26960]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24056 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24056] = 26
                                            mem[_24056 + 32] = 'SafeMath: division by zero'
                                            _24670 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24670] = 26
                                            mem[_24670 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24670 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27880 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27880]
                                            mem[_27880 + 32] = stor8
                                            require 1 < mem[_27880]
                                            mem[_27880 + 64] = stor7
                                            mem[_27880 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27880 + 100] = ext_call.return_data[0]
                                            mem[_27880 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27880 + 196] = this.address
                                            mem[_27880 + 228] = block.timestamp + 120
                                            mem[_27880 + 164] = 160
                                            mem[_27880 + 260] = mem[_27880]
                                            s = 0
                                            while s < 32 * mem[_27880]:
                                                mem[s + _27880 + 292] = mem[s + _27880 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27880 + 260 len (32 * mem[_27880]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24253 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24253] = 26
                                            mem[_24253 + 32] = 'SafeMath: division by zero'
                                            _24783 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24783] = 26
                                            mem[_24783 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24783 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28893 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28893]
                                            mem[_28893 + 32] = stor8
                                            require 1 < mem[_28893]
                                            mem[_28893 + 64] = stor7
                                            mem[_28893 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28893 + 100] = ext_call.return_data[0]
                                            mem[_28893 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_28893 + 196] = this.address
                                            mem[_28893 + 228] = block.timestamp + 120
                                            mem[_28893 + 164] = 160
                                            mem[_28893 + 260] = mem[_28893]
                                            s = 0
                                            while s < 32 * mem[_28893]:
                                                mem[s + _28893 + 292] = mem[s + _28893 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28893 + 260 len (32 * mem[_28893]) + 32]
                                else:
                                    if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18665 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18665] = 26
                                    mem[_18665 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                        _19625 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19625] = 26
                                        mem[_19625 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19625 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24055 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24055] = 26
                                            mem[_24055 + 32] = 'SafeMath: division by zero'
                                            _24669 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24669] = 26
                                            mem[_24669 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24669 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27874 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27874]
                                            mem[_27874 + 32] = stor8
                                            require 1 < mem[_27874]
                                            mem[_27874 + 64] = stor7
                                            mem[_27874 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27874 + 100] = ext_call.return_data[0]
                                            mem[_27874 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27874 + 196] = this.address
                                            mem[_27874 + 228] = block.timestamp + 120
                                            mem[_27874 + 164] = 160
                                            mem[_27874 + 260] = mem[_27874]
                                            s = 0
                                            while s < 32 * mem[_27874]:
                                                mem[s + _27874 + 292] = mem[s + _27874 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27874 + 260 len (32 * mem[_27874]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24252 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24252] = 26
                                            mem[_24252 + 32] = 'SafeMath: division by zero'
                                            _24782 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24782] = 26
                                            mem[_24782 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24782 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28887 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28887]
                                            mem[_28887 + 32] = stor8
                                            require 1 < mem[_28887]
                                            mem[_28887 + 64] = stor7
                                            mem[_28887 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28887 + 100] = ext_call.return_data[0]
                                            mem[_28887 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28887 + 196] = this.address
                                            mem[_28887 + 228] = block.timestamp + 120
                                            mem[_28887 + 164] = 160
                                            mem[_28887 + 260] = mem[_28887]
                                            s = 0
                                            while s < 32 * mem[_28887]:
                                                mem[s + _28887 + 292] = mem[s + _28887 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28887 + 260 len (32 * mem[_28887]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24478 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24478] = 26
                                        mem[_24478 + 32] = 'SafeMath: division by zero'
                                        _25082 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25082] = 26
                                        mem[_25082 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25082 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29917 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29917]
                                        mem[_29917 + 32] = stor8
                                        require 1 < mem[_29917]
                                        mem[_29917 + 64] = stor7
                                        mem[_29917 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29917 + 100] = ext_call.return_data[0]
                                        mem[_29917 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_29917 + 196] = this.address
                                        mem[_29917 + 228] = block.timestamp + 120
                                        mem[_29917 + 164] = 160
                                        mem[_29917 + 260] = mem[_29917]
                                        s = 0
                                        while s < 32 * mem[_29917]:
                                            mem[s + _29917 + 292] = mem[s + _29917 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29917 + 260 len (32 * mem[_29917]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_29917]) + 1
                                        s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                        continue 
                                    if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19685 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19685] = 26
                                    mem[_19685 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19685 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24251 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24251] = 26
                                        mem[_24251 + 32] = 'SafeMath: division by zero'
                                        _24781 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24781] = 26
                                        mem[_24781 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24781 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _28881 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_28881]
                                        mem[_28881 + 32] = stor8
                                        require 1 < mem[_28881]
                                        mem[_28881 + 64] = stor7
                                        mem[_28881 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_28881 + 100] = ext_call.return_data[0]
                                        mem[_28881 + 132] = 0 / ext_call.return_data[0]
                                        mem[_28881 + 196] = this.address
                                        mem[_28881 + 228] = block.timestamp + 120
                                        mem[_28881 + 164] = 160
                                        mem[_28881 + 260] = mem[_28881]
                                        s = 0
                                        while s < 32 * mem[_28881]:
                                            mem[s + _28881 + 292] = mem[s + _28881 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28881 + 260 len (32 * mem[_28881]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24477 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24477] = 26
                                            mem[_24477 + 32] = 'SafeMath: division by zero'
                                            _25081 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25081] = 26
                                            mem[_25081 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25081 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29911 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29911]
                                            mem[_29911 + 32] = stor8
                                            require 1 < mem[_29911]
                                            mem[_29911 + 64] = stor7
                                            mem[_29911 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29911 + 100] = ext_call.return_data[0]
                                            mem[_29911 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29911 + 196] = this.address
                                            mem[_29911 + 228] = block.timestamp + 120
                                            mem[_29911 + 164] = 160
                                            mem[_29911 + 260] = mem[_29911]
                                            s = 0
                                            while s < 32 * mem[_29911]:
                                                mem[s + _29911 + 292] = mem[s + _29911 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29911 + 260 len (32 * mem[_29911]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_29911]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24569 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24569] = 26
                                        mem[_24569 + 32] = 'SafeMath: division by zero'
                                        _25533 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25533] = 26
                                        mem[_25533 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25533 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30645 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30645]
                                        mem[_30645 + 32] = stor8
                                        require 1 < mem[_30645]
                                        mem[_30645 + 64] = stor7
                                        mem[_30645 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30645 + 100] = ext_call.return_data[0]
                                        mem[_30645 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30645 + 196] = this.address
                                        mem[_30645 + 228] = block.timestamp + 120
                                        mem[_30645 + 164] = 160
                                        mem[_30645 + 260] = mem[_30645]
                                        s = 0
                                        while s < 32 * mem[_30645]:
                                            mem[s + _30645 + 292] = mem[s + _30645 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30645 + 260 len (32 * mem[_30645]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                mem[160] = 26
                mem[192] = 'SafeMath: division by zero'
                if not ext_call.return_data[0]:
                    revert with 0, 'SafeMath: division by zero'
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    mem[224] = 26
                    mem[256] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > 0:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17564 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17564] = 30
                                mem[_17564 + 32] = 'SafeMath: subtraction overflow'
                                if 0 > ext_call.return_data[0]:
                                    _17674 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17674 + 68] = mem[idx + _17564 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17674 + 68] = mem[_17674 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17674 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0]:
                                    _18616 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18616] = 26
                                    mem[_18616 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19488 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19488] = 26
                                    mem[_19488 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19488 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _23904 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_23904] = 26
                                        mem[_23904 + 32] = 'SafeMath: division by zero'
                                        _24616 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24616] = 26
                                        mem[_24616 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24616 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _26941 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_26941]
                                        mem[_26941 + 32] = stor8
                                        require 1 < mem[_26941]
                                        mem[_26941 + 64] = stor7
                                        mem[_26941 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_26941 + 100] = ext_call.return_data[0]
                                        mem[_26941 + 132] = 0 / ext_call.return_data[0]
                                        mem[_26941 + 196] = this.address
                                        mem[_26941 + 228] = block.timestamp + 120
                                        mem[_26941 + 164] = 160
                                        mem[_26941 + 260] = mem[_26941]
                                        s = 0
                                        while s < 32 * mem[_26941]:
                                            mem[s + _26941 + 292] = mem[s + _26941 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_26941 + 260 len (32 * mem[_26941]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24052 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24052] = 26
                                            mem[_24052 + 32] = 'SafeMath: division by zero'
                                            _24668 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24668] = 26
                                            mem[_24668 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24668 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27859 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27859]
                                            mem[_27859 + 32] = stor8
                                            require 1 < mem[_27859]
                                            mem[_27859 + 64] = stor7
                                            mem[_27859 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27859 + 100] = ext_call.return_data[0]
                                            mem[_27859 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27859 + 196] = this.address
                                            mem[_27859 + 228] = block.timestamp + 120
                                            mem[_27859 + 164] = 160
                                            mem[_27859 + 260] = mem[_27859]
                                            s = 0
                                            while s < 32 * mem[_27859]:
                                                mem[s + _27859 + 292] = mem[s + _27859 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27859 + 260 len (32 * mem[_27859]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24248 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24248] = 26
                                            mem[_24248 + 32] = 'SafeMath: division by zero'
                                            _24777 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24777] = 26
                                            mem[_24777 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24777 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28871 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28871]
                                            mem[_28871 + 32] = stor8
                                            require 1 < mem[_28871]
                                            mem[_28871 + 64] = stor7
                                            mem[_28871 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28871 + 100] = ext_call.return_data[0]
                                            mem[_28871 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_28871 + 196] = this.address
                                            mem[_28871 + 228] = block.timestamp + 120
                                            mem[_28871 + 164] = 160
                                            mem[_28871 + 260] = mem[_28871]
                                            s = 0
                                            while s < 32 * mem[_28871]:
                                                mem[s + _28871 + 292] = mem[s + _28871 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28871 + 260 len (32 * mem[_28871]) + 32]
                                else:
                                    if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18664 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18664] = 26
                                    mem[_18664 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not 725000 * ext_call.return_data[0] / 10^6:
                                        _19624 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19624] = 26
                                        mem[_19624 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19624 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24051 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24051] = 26
                                            mem[_24051 + 32] = 'SafeMath: division by zero'
                                            _24667 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24667] = 26
                                            mem[_24667 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24667 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27853 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27853]
                                            mem[_27853 + 32] = stor8
                                            require 1 < mem[_27853]
                                            mem[_27853 + 64] = stor7
                                            mem[_27853 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27853 + 100] = ext_call.return_data[0]
                                            mem[_27853 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27853 + 196] = this.address
                                            mem[_27853 + 228] = block.timestamp + 120
                                            mem[_27853 + 164] = 160
                                            mem[_27853 + 260] = mem[_27853]
                                            s = 0
                                            while s < 32 * mem[_27853]:
                                                mem[s + _27853 + 292] = mem[s + _27853 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27853 + 260 len (32 * mem[_27853]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24247 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24247] = 26
                                            mem[_24247 + 32] = 'SafeMath: division by zero'
                                            _24776 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24776] = 26
                                            mem[_24776 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24776 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28865 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28865]
                                            mem[_28865 + 32] = stor8
                                            require 1 < mem[_28865]
                                            mem[_28865 + 64] = stor7
                                            mem[_28865 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28865 + 100] = ext_call.return_data[0]
                                            mem[_28865 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28865 + 196] = this.address
                                            mem[_28865 + 228] = block.timestamp + 120
                                            mem[_28865 + 164] = 160
                                            mem[_28865 + 260] = mem[_28865]
                                            s = 0
                                            while s < 32 * mem[_28865]:
                                                mem[s + _28865 + 292] = mem[s + _28865 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28865 + 260 len (32 * mem[_28865]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24476 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24476] = 26
                                        mem[_24476 + 32] = 'SafeMath: division by zero'
                                        _25073 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25073] = 26
                                        mem[_25073 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25073 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29901 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29901]
                                        mem[_29901 + 32] = stor8
                                        require 1 < mem[_29901]
                                        mem[_29901 + 64] = stor7
                                        mem[_29901 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29901 + 100] = ext_call.return_data[0]
                                        mem[_29901 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_29901 + 196] = this.address
                                        mem[_29901 + 228] = block.timestamp + 120
                                        mem[_29901 + 164] = 160
                                        mem[_29901 + 260] = mem[_29901]
                                        s = 0
                                        while s < 32 * mem[_29901]:
                                            mem[s + _29901 + 292] = mem[s + _29901 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29901 + 260 len (32 * mem[_29901]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_29901]) + 1
                                        s = ext_call.return_data[0]
                                        continue 
                                    if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19681 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19681] = 26
                                    mem[_19681 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19681 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24246 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24246] = 26
                                        mem[_24246 + 32] = 'SafeMath: division by zero'
                                        _24775 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24775] = 26
                                        mem[_24775 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24775 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _28859 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_28859]
                                        mem[_28859 + 32] = stor8
                                        require 1 < mem[_28859]
                                        mem[_28859 + 64] = stor7
                                        mem[_28859 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_28859 + 100] = ext_call.return_data[0]
                                        mem[_28859 + 132] = 0 / ext_call.return_data[0]
                                        mem[_28859 + 196] = this.address
                                        mem[_28859 + 228] = block.timestamp + 120
                                        mem[_28859 + 164] = 160
                                        mem[_28859 + 260] = mem[_28859]
                                        s = 0
                                        while s < 32 * mem[_28859]:
                                            mem[s + _28859 + 292] = mem[s + _28859 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28859 + 260 len (32 * mem[_28859]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24475 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24475] = 26
                                            mem[_24475 + 32] = 'SafeMath: division by zero'
                                            _25072 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25072] = 26
                                            mem[_25072 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25072 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29895 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29895]
                                            mem[_29895 + 32] = stor8
                                            require 1 < mem[_29895]
                                            mem[_29895 + 64] = stor7
                                            mem[_29895 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29895 + 100] = ext_call.return_data[0]
                                            mem[_29895 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29895 + 196] = this.address
                                            mem[_29895 + 228] = block.timestamp + 120
                                            mem[_29895 + 164] = 160
                                            mem[_29895 + 260] = mem[_29895]
                                            s = 0
                                            while s < 32 * mem[_29895]:
                                                mem[s + _29895 + 292] = mem[s + _29895 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29895 + 260 len (32 * mem[_29895]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_29895]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24568 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24568] = 26
                                        mem[_24568 + 32] = 'SafeMath: division by zero'
                                        _25519 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25519] = 26
                                        mem[_25519 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25519 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30637 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30637]
                                        mem[_30637 + 32] = stor8
                                        require 1 < mem[_30637]
                                        mem[_30637 + 64] = stor7
                                        mem[_30637 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30637 + 100] = ext_call.return_data[0]
                                        mem[_30637 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30637 + 196] = this.address
                                        mem[_30637 + 228] = block.timestamp + 120
                                        mem[_30637 + 164] = 160
                                        mem[_30637 + 260] = mem[_30637]
                                        s = 0
                                        while s < 32 * mem[_30637]:
                                            mem[s + _30637 + 292] = mem[s + _30637 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30637 + 260 len (32 * mem[_30637]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != reserveAllocation:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17562 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17562] = 30
                                mem[_17562 + 32] = 'SafeMath: subtraction overflow'
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    _17668 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17668 + 68] = mem[idx + _17562 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17668 + 68] = mem[_17668 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17668 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                    _18615 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18615] = 26
                                    mem[_18615 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19485 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19485] = 26
                                    mem[_19485 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19485 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _23901 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_23901] = 26
                                        mem[_23901 + 32] = 'SafeMath: division by zero'
                                        _24615 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24615] = 26
                                        mem[_24615 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24615 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _26922 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_26922]
                                        mem[_26922 + 32] = stor8
                                        require 1 < mem[_26922]
                                        mem[_26922 + 64] = stor7
                                        mem[_26922 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_26922 + 100] = ext_call.return_data[0]
                                        mem[_26922 + 132] = 0 / ext_call.return_data[0]
                                        mem[_26922 + 196] = this.address
                                        mem[_26922 + 228] = block.timestamp + 120
                                        mem[_26922 + 164] = 160
                                        mem[_26922 + 260] = mem[_26922]
                                        s = 0
                                        while s < 32 * mem[_26922]:
                                            mem[s + _26922 + 292] = mem[s + _26922 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_26922 + 260 len (32 * mem[_26922]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24048 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24048] = 26
                                            mem[_24048 + 32] = 'SafeMath: division by zero'
                                            _24666 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24666] = 26
                                            mem[_24666 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24666 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27838 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27838]
                                            mem[_27838 + 32] = stor8
                                            require 1 < mem[_27838]
                                            mem[_27838 + 64] = stor7
                                            mem[_27838 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27838 + 100] = ext_call.return_data[0]
                                            mem[_27838 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27838 + 196] = this.address
                                            mem[_27838 + 228] = block.timestamp + 120
                                            mem[_27838 + 164] = 160
                                            mem[_27838 + 260] = mem[_27838]
                                            s = 0
                                            while s < 32 * mem[_27838]:
                                                mem[s + _27838 + 292] = mem[s + _27838 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27838 + 260 len (32 * mem[_27838]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24243 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24243] = 26
                                            mem[_24243 + 32] = 'SafeMath: division by zero'
                                            _24771 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24771] = 26
                                            mem[_24771 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24771 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28849 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28849]
                                            mem[_28849 + 32] = stor8
                                            require 1 < mem[_28849]
                                            mem[_28849 + 64] = stor7
                                            mem[_28849 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28849 + 100] = ext_call.return_data[0]
                                            mem[_28849 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_28849 + 196] = this.address
                                            mem[_28849 + 228] = block.timestamp + 120
                                            mem[_28849 + 164] = 160
                                            mem[_28849 + 260] = mem[_28849]
                                            s = 0
                                            while s < 32 * mem[_28849]:
                                                mem[s + _28849 + 292] = mem[s + _28849 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28849 + 260 len (32 * mem[_28849]) + 32]
                                else:
                                    if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18663 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18663] = 26
                                    mem[_18663 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                        _19623 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19623] = 26
                                        mem[_19623 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19623 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24047 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24047] = 26
                                            mem[_24047 + 32] = 'SafeMath: division by zero'
                                            _24665 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24665] = 26
                                            mem[_24665 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24665 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27832 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27832]
                                            mem[_27832 + 32] = stor8
                                            require 1 < mem[_27832]
                                            mem[_27832 + 64] = stor7
                                            mem[_27832 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27832 + 100] = ext_call.return_data[0]
                                            mem[_27832 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27832 + 196] = this.address
                                            mem[_27832 + 228] = block.timestamp + 120
                                            mem[_27832 + 164] = 160
                                            mem[_27832 + 260] = mem[_27832]
                                            s = 0
                                            while s < 32 * mem[_27832]:
                                                mem[s + _27832 + 292] = mem[s + _27832 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27832 + 260 len (32 * mem[_27832]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24242 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24242] = 26
                                            mem[_24242 + 32] = 'SafeMath: division by zero'
                                            _24770 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24770] = 26
                                            mem[_24770 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24770 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28843 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28843]
                                            mem[_28843 + 32] = stor8
                                            require 1 < mem[_28843]
                                            mem[_28843 + 64] = stor7
                                            mem[_28843 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28843 + 100] = ext_call.return_data[0]
                                            mem[_28843 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28843 + 196] = this.address
                                            mem[_28843 + 228] = block.timestamp + 120
                                            mem[_28843 + 164] = 160
                                            mem[_28843 + 260] = mem[_28843]
                                            s = 0
                                            while s < 32 * mem[_28843]:
                                                mem[s + _28843 + 292] = mem[s + _28843 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28843 + 260 len (32 * mem[_28843]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24474 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24474] = 26
                                        mem[_24474 + 32] = 'SafeMath: division by zero'
                                        _25064 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25064] = 26
                                        mem[_25064 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25064 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29885 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29885]
                                        mem[_29885 + 32] = stor8
                                        require 1 < mem[_29885]
                                        mem[_29885 + 64] = stor7
                                        mem[_29885 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29885 + 100] = ext_call.return_data[0]
                                        mem[_29885 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_29885 + 196] = this.address
                                        mem[_29885 + 228] = block.timestamp + 120
                                        mem[_29885 + 164] = 160
                                        mem[_29885 + 260] = mem[_29885]
                                        s = 0
                                        while s < 32 * mem[_29885]:
                                            mem[s + _29885 + 292] = mem[s + _29885 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29885 + 260 len (32 * mem[_29885]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_29885]) + 1
                                        s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                        continue 
                                    if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19677 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19677] = 26
                                    mem[_19677 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19677 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24241 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24241] = 26
                                        mem[_24241 + 32] = 'SafeMath: division by zero'
                                        _24769 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24769] = 26
                                        mem[_24769 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24769 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _28837 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_28837]
                                        mem[_28837 + 32] = stor8
                                        require 1 < mem[_28837]
                                        mem[_28837 + 64] = stor7
                                        mem[_28837 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_28837 + 100] = ext_call.return_data[0]
                                        mem[_28837 + 132] = 0 / ext_call.return_data[0]
                                        mem[_28837 + 196] = this.address
                                        mem[_28837 + 228] = block.timestamp + 120
                                        mem[_28837 + 164] = 160
                                        mem[_28837 + 260] = mem[_28837]
                                        s = 0
                                        while s < 32 * mem[_28837]:
                                            mem[s + _28837 + 292] = mem[s + _28837 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28837 + 260 len (32 * mem[_28837]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24473 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24473] = 26
                                            mem[_24473 + 32] = 'SafeMath: division by zero'
                                            _25063 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25063] = 26
                                            mem[_25063 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25063 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29879 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29879]
                                            mem[_29879 + 32] = stor8
                                            require 1 < mem[_29879]
                                            mem[_29879 + 64] = stor7
                                            mem[_29879 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29879 + 100] = ext_call.return_data[0]
                                            mem[_29879 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29879 + 196] = this.address
                                            mem[_29879 + 228] = block.timestamp + 120
                                            mem[_29879 + 164] = 160
                                            mem[_29879 + 260] = mem[_29879]
                                            s = 0
                                            while s < 32 * mem[_29879]:
                                                mem[s + _29879 + 292] = mem[s + _29879 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29879 + 260 len (32 * mem[_29879]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_29879]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24567 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24567] = 26
                                        mem[_24567 + 32] = 'SafeMath: division by zero'
                                        _25505 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25505] = 26
                                        mem[_25505 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25505 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30629 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30629]
                                        mem[_30629 + 32] = stor8
                                        require 1 < mem[_30629]
                                        mem[_30629 + 64] = stor7
                                        mem[_30629 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30629 + 100] = ext_call.return_data[0]
                                        mem[_30629 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30629 + 196] = this.address
                                        mem[_30629 + 228] = block.timestamp + 120
                                        mem[_30629 + 164] = 160
                                        mem[_30629 + 260] = mem[_30629]
                                        s = 0
                                        while s < 32 * mem[_30629]:
                                            mem[s + _30629 + 292] = mem[s + _30629 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30629 + 260 len (32 * mem[_30629]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                    mem[224] = 26
                    mem[256] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > 0:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17560 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17560] = 30
                                mem[_17560 + 32] = 'SafeMath: subtraction overflow'
                                if 0 > ext_call.return_data[0]:
                                    _17662 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17662 + 68] = mem[idx + _17560 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17662 + 68] = mem[_17662 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17662 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0]:
                                    _18614 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18614] = 26
                                    mem[_18614 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19482 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19482] = 26
                                    mem[_19482 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19482 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _23898 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_23898] = 26
                                        mem[_23898 + 32] = 'SafeMath: division by zero'
                                        _24614 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24614] = 26
                                        mem[_24614 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24614 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _26903 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_26903]
                                        mem[_26903 + 32] = stor8
                                        require 1 < mem[_26903]
                                        mem[_26903 + 64] = stor7
                                        mem[_26903 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_26903 + 100] = ext_call.return_data[0]
                                        mem[_26903 + 132] = 0 / ext_call.return_data[0]
                                        mem[_26903 + 196] = this.address
                                        mem[_26903 + 228] = block.timestamp + 120
                                        mem[_26903 + 164] = 160
                                        mem[_26903 + 260] = mem[_26903]
                                        s = 0
                                        while s < 32 * mem[_26903]:
                                            mem[s + _26903 + 292] = mem[s + _26903 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_26903 + 260 len (32 * mem[_26903]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24044 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24044] = 26
                                            mem[_24044 + 32] = 'SafeMath: division by zero'
                                            _24664 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24664] = 26
                                            mem[_24664 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24664 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27817 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27817]
                                            mem[_27817 + 32] = stor8
                                            require 1 < mem[_27817]
                                            mem[_27817 + 64] = stor7
                                            mem[_27817 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27817 + 100] = ext_call.return_data[0]
                                            mem[_27817 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27817 + 196] = this.address
                                            mem[_27817 + 228] = block.timestamp + 120
                                            mem[_27817 + 164] = 160
                                            mem[_27817 + 260] = mem[_27817]
                                            s = 0
                                            while s < 32 * mem[_27817]:
                                                mem[s + _27817 + 292] = mem[s + _27817 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27817 + 260 len (32 * mem[_27817]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24238 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24238] = 26
                                            mem[_24238 + 32] = 'SafeMath: division by zero'
                                            _24765 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24765] = 26
                                            mem[_24765 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24765 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28827 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28827]
                                            mem[_28827 + 32] = stor8
                                            require 1 < mem[_28827]
                                            mem[_28827 + 64] = stor7
                                            mem[_28827 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28827 + 100] = ext_call.return_data[0]
                                            mem[_28827 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_28827 + 196] = this.address
                                            mem[_28827 + 228] = block.timestamp + 120
                                            mem[_28827 + 164] = 160
                                            mem[_28827 + 260] = mem[_28827]
                                            s = 0
                                            while s < 32 * mem[_28827]:
                                                mem[s + _28827 + 292] = mem[s + _28827 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28827 + 260 len (32 * mem[_28827]) + 32]
                                else:
                                    if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18662 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18662] = 26
                                    mem[_18662 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not 725000 * ext_call.return_data[0] / 10^6:
                                        _19622 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19622] = 26
                                        mem[_19622 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19622 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24043 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24043] = 26
                                            mem[_24043 + 32] = 'SafeMath: division by zero'
                                            _24663 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24663] = 26
                                            mem[_24663 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24663 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27811 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27811]
                                            mem[_27811 + 32] = stor8
                                            require 1 < mem[_27811]
                                            mem[_27811 + 64] = stor7
                                            mem[_27811 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27811 + 100] = ext_call.return_data[0]
                                            mem[_27811 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27811 + 196] = this.address
                                            mem[_27811 + 228] = block.timestamp + 120
                                            mem[_27811 + 164] = 160
                                            mem[_27811 + 260] = mem[_27811]
                                            s = 0
                                            while s < 32 * mem[_27811]:
                                                mem[s + _27811 + 292] = mem[s + _27811 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27811 + 260 len (32 * mem[_27811]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24237 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24237] = 26
                                            mem[_24237 + 32] = 'SafeMath: division by zero'
                                            _24764 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24764] = 26
                                            mem[_24764 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24764 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28821 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28821]
                                            mem[_28821 + 32] = stor8
                                            require 1 < mem[_28821]
                                            mem[_28821 + 64] = stor7
                                            mem[_28821 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28821 + 100] = ext_call.return_data[0]
                                            mem[_28821 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28821 + 196] = this.address
                                            mem[_28821 + 228] = block.timestamp + 120
                                            mem[_28821 + 164] = 160
                                            mem[_28821 + 260] = mem[_28821]
                                            s = 0
                                            while s < 32 * mem[_28821]:
                                                mem[s + _28821 + 292] = mem[s + _28821 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28821 + 260 len (32 * mem[_28821]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24472 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24472] = 26
                                        mem[_24472 + 32] = 'SafeMath: division by zero'
                                        _25055 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25055] = 26
                                        mem[_25055 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25055 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29869 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29869]
                                        mem[_29869 + 32] = stor8
                                        require 1 < mem[_29869]
                                        mem[_29869 + 64] = stor7
                                        mem[_29869 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29869 + 100] = ext_call.return_data[0]
                                        mem[_29869 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_29869 + 196] = this.address
                                        mem[_29869 + 228] = block.timestamp + 120
                                        mem[_29869 + 164] = 160
                                        mem[_29869 + 260] = mem[_29869]
                                        s = 0
                                        while s < 32 * mem[_29869]:
                                            mem[s + _29869 + 292] = mem[s + _29869 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29869 + 260 len (32 * mem[_29869]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_29869]) + 1
                                        s = ext_call.return_data[0]
                                        continue 
                                    if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19673 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19673] = 26
                                    mem[_19673 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19673 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24236 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24236] = 26
                                        mem[_24236 + 32] = 'SafeMath: division by zero'
                                        _24763 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24763] = 26
                                        mem[_24763 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24763 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _28815 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_28815]
                                        mem[_28815 + 32] = stor8
                                        require 1 < mem[_28815]
                                        mem[_28815 + 64] = stor7
                                        mem[_28815 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_28815 + 100] = ext_call.return_data[0]
                                        mem[_28815 + 132] = 0 / ext_call.return_data[0]
                                        mem[_28815 + 196] = this.address
                                        mem[_28815 + 228] = block.timestamp + 120
                                        mem[_28815 + 164] = 160
                                        mem[_28815 + 260] = mem[_28815]
                                        s = 0
                                        while s < 32 * mem[_28815]:
                                            mem[s + _28815 + 292] = mem[s + _28815 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28815 + 260 len (32 * mem[_28815]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24471 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24471] = 26
                                            mem[_24471 + 32] = 'SafeMath: division by zero'
                                            _25054 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25054] = 26
                                            mem[_25054 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25054 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29863 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29863]
                                            mem[_29863 + 32] = stor8
                                            require 1 < mem[_29863]
                                            mem[_29863 + 64] = stor7
                                            mem[_29863 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29863 + 100] = ext_call.return_data[0]
                                            mem[_29863 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29863 + 196] = this.address
                                            mem[_29863 + 228] = block.timestamp + 120
                                            mem[_29863 + 164] = 160
                                            mem[_29863 + 260] = mem[_29863]
                                            s = 0
                                            while s < 32 * mem[_29863]:
                                                mem[s + _29863 + 292] = mem[s + _29863 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29863 + 260 len (32 * mem[_29863]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_29863]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24566 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24566] = 26
                                        mem[_24566 + 32] = 'SafeMath: division by zero'
                                        _25491 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25491] = 26
                                        mem[_25491 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25491 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30621 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30621]
                                        mem[_30621 + 32] = stor8
                                        require 1 < mem[_30621]
                                        mem[_30621 + 64] = stor7
                                        mem[_30621 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30621 + 100] = ext_call.return_data[0]
                                        mem[_30621 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30621 + 196] = this.address
                                        mem[_30621 + 228] = block.timestamp + 120
                                        mem[_30621 + 164] = 160
                                        mem[_30621 + 260] = mem[_30621]
                                        s = 0
                                        while s < 32 * mem[_30621]:
                                            mem[s + _30621 + 292] = mem[s + _30621 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30621 + 260 len (32 * mem[_30621]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if 0 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != reserveAllocation:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                        mem[64] = 352
                        mem[288] = 26
                        mem[320] = 'SafeMath: division by zero'
                        if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                            idx = 0
                            s = 0
                            while idx < 5:
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                _17558 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_17558] = 30
                                mem[_17558 + 32] = 'SafeMath: subtraction overflow'
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    _17656 = mem[64]
                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 32
                                    mem[mem[64] + 36] = 30
                                    idx = 0
                                    while idx < 30:
                                        mem[idx + _17656 + 68] = mem[idx + _17558 + 32]
                                        idx = idx + 32
                                        continue 
                                    mem[_17656 + 68] = mem[_17656 + 70 len 30]
                                    revert with memory
                                      from mem[64]
                                       len _17656 + -mem[64] + 100
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                    _18613 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18613] = 26
                                    mem[_18613 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _19479 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19479] = 26
                                    mem[_19479 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19479 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (0 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _23895 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_23895] = 26
                                        mem[_23895 + 32] = 'SafeMath: division by zero'
                                        _24613 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24613] = 26
                                        mem[_24613 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24613 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _26884 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_26884]
                                        mem[_26884 + 32] = stor8
                                        require 1 < mem[_26884]
                                        mem[_26884 + 64] = stor7
                                        mem[_26884 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_26884 + 100] = ext_call.return_data[0]
                                        mem[_26884 + 132] = 0 / ext_call.return_data[0]
                                        mem[_26884 + 196] = this.address
                                        mem[_26884 + 228] = block.timestamp + 120
                                        mem[_26884 + 164] = 160
                                        mem[_26884 + 260] = mem[_26884]
                                        s = 0
                                        while s < 32 * mem[_26884]:
                                            mem[s + _26884 + 292] = mem[s + _26884 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_26884 + 260 len (32 * mem[_26884]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24040 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24040] = 26
                                            mem[_24040 + 32] = 'SafeMath: division by zero'
                                            _24662 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24662] = 26
                                            mem[_24662 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24662 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27796 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27796]
                                            mem[_27796 + 32] = stor8
                                            require 1 < mem[_27796]
                                            mem[_27796 + 64] = stor7
                                            mem[_27796 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27796 + 100] = ext_call.return_data[0]
                                            mem[_27796 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27796 + 196] = this.address
                                            mem[_27796 + 228] = block.timestamp + 120
                                            mem[_27796 + 164] = 160
                                            mem[_27796 + 260] = mem[_27796]
                                            s = 0
                                            while s < 32 * mem[_27796]:
                                                mem[s + _27796 + 292] = mem[s + _27796 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27796 + 260 len (32 * mem[_27796]) + 32]
                                        else:
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24233 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24233] = 26
                                            mem[_24233 + 32] = 'SafeMath: division by zero'
                                            _24759 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24759] = 26
                                            mem[_24759 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24759 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28805 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28805]
                                            mem[_28805 + 32] = stor8
                                            require 1 < mem[_28805]
                                            mem[_28805 + 64] = stor7
                                            mem[_28805 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28805 + 100] = ext_call.return_data[0]
                                            mem[_28805 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_28805 + 196] = this.address
                                            mem[_28805 + 228] = block.timestamp + 120
                                            mem[_28805 + 164] = 160
                                            mem[_28805 + 260] = mem[_28805]
                                            s = 0
                                            while s < 32 * mem[_28805]:
                                                mem[s + _28805 + 292] = mem[s + _28805 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28805 + 260 len (32 * mem[_28805]) + 32]
                                else:
                                    if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _18661 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_18661] = 26
                                    mem[_18661 + 32] = 'SafeMath: division by zero'
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                        _19621 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19621] = 26
                                        mem[_19621 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19621 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24039 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24039] = 26
                                            mem[_24039 + 32] = 'SafeMath: division by zero'
                                            _24661 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24661] = 26
                                            mem[_24661 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24661 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27790 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27790]
                                            mem[_27790 + 32] = stor8
                                            require 1 < mem[_27790]
                                            mem[_27790 + 64] = stor7
                                            mem[_27790 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27790 + 100] = ext_call.return_data[0]
                                            mem[_27790 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27790 + 196] = this.address
                                            mem[_27790 + 228] = block.timestamp + 120
                                            mem[_27790 + 164] = 160
                                            mem[_27790 + 260] = mem[_27790]
                                            s = 0
                                            while s < 32 * mem[_27790]:
                                                mem[s + _27790 + 292] = mem[s + _27790 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27790 + 260 len (32 * mem[_27790]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24232 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24232] = 26
                                            mem[_24232 + 32] = 'SafeMath: division by zero'
                                            _24758 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24758] = 26
                                            mem[_24758 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24758 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _28799 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_28799]
                                            mem[_28799 + 32] = stor8
                                            require 1 < mem[_28799]
                                            mem[_28799 + 64] = stor7
                                            mem[_28799 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_28799 + 100] = ext_call.return_data[0]
                                            mem[_28799 + 132] = 0 / ext_call.return_data[0]
                                            mem[_28799 + 196] = this.address
                                            mem[_28799 + 228] = block.timestamp + 120
                                            mem[_28799 + 164] = 160
                                            mem[_28799 + 260] = mem[_28799]
                                            s = 0
                                            while s < 32 * mem[_28799]:
                                                mem[s + _28799 + 292] = mem[s + _28799 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28799 + 260 len (32 * mem[_28799]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            idx = idx + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24470 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24470] = 26
                                        mem[_24470 + 32] = 'SafeMath: division by zero'
                                        _25046 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25046] = 26
                                        mem[_25046 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25046 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _29853 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_29853]
                                        mem[_29853 + 32] = stor8
                                        require 1 < mem[_29853]
                                        mem[_29853 + 64] = stor7
                                        mem[_29853 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_29853 + 100] = ext_call.return_data[0]
                                        mem[_29853 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_29853 + 196] = this.address
                                        mem[_29853 + 228] = block.timestamp + 120
                                        mem[_29853 + 164] = 160
                                        mem[_29853 + 260] = mem[_29853]
                                        s = 0
                                        while s < 32 * mem[_29853]:
                                            mem[s + _29853 + 292] = mem[s + _29853 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29853 + 260 len (32 * mem[_29853]) + 32]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        s = floor32(mem[_29853]) + 1
                                        s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                        continue 
                                    if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                    _19669 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_19669] = 26
                                    mem[_19669 + 32] = 'SafeMath: division by zero'
                                    if not ext_call.return_data[0]:
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 26
                                        mem[mem[64] + 68] = 'SafeMath: division by zero'
                                        idx = 32
                                        while idx < 26:
                                            mem[idx + mem[64] + 68] = mem[idx + _19669 + 32]
                                            idx = idx + 32
                                            continue 
                                        revert with 0, 'SafeMath: division by zero'
                                    require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                    call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_code.size(stor8)
                                    staticcall stor8.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    mem[mem[64] + 4] = stor9
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args stor9
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    if not ext_call.return_data[0]:
                                        _24231 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24231] = 26
                                        mem[_24231 + 32] = 'SafeMath: division by zero'
                                        _24757 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24757] = 26
                                        mem[_24757 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _24757 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _28793 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_28793]
                                        mem[_28793 + 32] = stor8
                                        require 1 < mem[_28793]
                                        mem[_28793 + 64] = stor7
                                        mem[_28793 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_28793 + 100] = ext_call.return_data[0]
                                        mem[_28793 + 132] = 0 / ext_call.return_data[0]
                                        mem[_28793 + 196] = this.address
                                        mem[_28793 + 228] = block.timestamp + 120
                                        mem[_28793 + 164] = 160
                                        mem[_28793 + 260] = mem[_28793]
                                        s = 0
                                        while s < 32 * mem[_28793]:
                                            mem[s + _28793 + 292] = mem[s + _28793 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28793 + 260 len (32 * mem[_28793]) + 32]
                                    else:
                                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        if not ext_call.return_data[0] * ext_call.return_data[0]:
                                            _24469 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24469] = 26
                                            mem[_24469 + 32] = 'SafeMath: division by zero'
                                            _25045 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25045] = 26
                                            mem[_25045 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25045 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29847 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29847]
                                            mem[_29847 + 32] = stor8
                                            require 1 < mem[_29847]
                                            mem[_29847 + 64] = stor7
                                            mem[_29847 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29847 + 100] = ext_call.return_data[0]
                                            mem[_29847 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29847 + 196] = this.address
                                            mem[_29847 + 228] = block.timestamp + 120
                                            mem[_29847 + 164] = 160
                                            mem[_29847 + 260] = mem[_29847]
                                            s = 0
                                            while s < 32 * mem[_29847]:
                                                mem[s + _29847 + 292] = mem[s + _29847 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29847 + 260 len (32 * mem[_29847]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_29847]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _24565 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_24565] = 26
                                        mem[_24565 + 32] = 'SafeMath: division by zero'
                                        _25477 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_25477] = 26
                                        mem[_25477 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _25477 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        _30613 = mem[64]
                                        mem[mem[64]] = 2
                                        mem[64] = mem[64] + 96
                                        require mem[_30613]
                                        mem[_30613 + 32] = stor8
                                        require 1 < mem[_30613]
                                        mem[_30613 + 64] = stor7
                                        mem[_30613 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                        mem[_30613 + 100] = ext_call.return_data[0]
                                        mem[_30613 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                        mem[_30613 + 196] = this.address
                                        mem[_30613 + 228] = block.timestamp + 120
                                        mem[_30613 + 164] = 160
                                        mem[_30613 + 260] = mem[_30613]
                                        s = 0
                                        while s < 32 * mem[_30613]:
                                            mem[s + _30613 + 292] = mem[s + _30613 + 32]
                                            s = s + 32
                                            continue 
                                        require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                        call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                             gas gas_remaining wei
                                            args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30613 + 260 len (32 * mem[_30613]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                continue 
                            require ext_code.size(stor7)
                            staticcall stor7.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                revert with 0, 'SafeMath: subtraction overflow'
                            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                            call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                 gas gas_remaining wei
                                args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
    else:
        if msg.sender == strategistAddress:
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor12)
            staticcall stor12.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
            staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                mem[96] = 26
                mem[128] = 'SafeMath: division by zero'
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    mem[160] = 26
                    mem[192] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17620 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17620] = 30
                                    mem[_17620 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17842 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17842 + 68] = mem[idx + _17620 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17842 + 68] = mem[_17842 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17842 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18644 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18644] = 26
                                        mem[_18644 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19572 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19572] = 26
                                        mem[_19572 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19572 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23988 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23988] = 26
                                            mem[_23988 + 32] = 'SafeMath: division by zero'
                                            _24644 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24644] = 26
                                            mem[_24644 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24644 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27473 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27473]
                                            mem[_27473 + 32] = stor8
                                            require 1 < mem[_27473]
                                            mem[_27473 + 64] = stor7
                                            mem[_27473 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27473 + 100] = ext_call.return_data[0]
                                            mem[_27473 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27473 + 196] = this.address
                                            mem[_27473 + 228] = block.timestamp + 120
                                            mem[_27473 + 164] = 160
                                            mem[_27473 + 260] = mem[_27473]
                                            s = 0
                                            while s < 32 * mem[_27473]:
                                                mem[s + _27473 + 292] = mem[s + _27473 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27473 + 260 len (32 * mem[_27473]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24164 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24164] = 26
                                                mem[_24164 + 32] = 'SafeMath: division by zero'
                                                _24724 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24724] = 26
                                                mem[_24724 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24724 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28447 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28447]
                                                mem[_28447 + 32] = stor8
                                                require 1 < mem[_28447]
                                                mem[_28447 + 64] = stor7
                                                mem[_28447 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28447 + 100] = ext_call.return_data[0]
                                                mem[_28447 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28447 + 196] = this.address
                                                mem[_28447 + 228] = block.timestamp + 120
                                                mem[_28447 + 164] = 160
                                                mem[_28447 + 260] = mem[_28447]
                                                s = 0
                                                while s < 32 * mem[_28447]:
                                                    mem[s + _28447 + 292] = mem[s + _28447 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28447 + 260 len (32 * mem[_28447]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24388 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24388] = 26
                                                mem[_24388 + 32] = 'SafeMath: division by zero'
                                                _24945 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24945] = 26
                                                mem[_24945 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24945 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29487 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29487]
                                                mem[_29487 + 32] = stor8
                                                require 1 < mem[_29487]
                                                mem[_29487 + 64] = stor7
                                                mem[_29487 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29487 + 100] = ext_call.return_data[0]
                                                mem[_29487 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29487 + 196] = this.address
                                                mem[_29487 + 228] = block.timestamp + 120
                                                mem[_29487 + 164] = 160
                                                mem[_29487 + 260] = mem[_29487]
                                                s = 0
                                                while s < 32 * mem[_29487]:
                                                    mem[s + _29487 + 292] = mem[s + _29487 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29487 + 260 len (32 * mem[_29487]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18692 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18692] = 26
                                        mem[_18692 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19652 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19652] = 26
                                            mem[_19652 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19652 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24163 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24163] = 26
                                                mem[_24163 + 32] = 'SafeMath: division by zero'
                                                _24723 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24723] = 26
                                                mem[_24723 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24723 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28441 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28441]
                                                mem[_28441 + 32] = stor8
                                                require 1 < mem[_28441]
                                                mem[_28441 + 64] = stor7
                                                mem[_28441 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28441 + 100] = ext_call.return_data[0]
                                                mem[_28441 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28441 + 196] = this.address
                                                mem[_28441 + 228] = block.timestamp + 120
                                                mem[_28441 + 164] = 160
                                                mem[_28441 + 260] = mem[_28441]
                                                s = 0
                                                while s < 32 * mem[_28441]:
                                                    mem[s + _28441 + 292] = mem[s + _28441 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28441 + 260 len (32 * mem[_28441]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24387 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24387] = 26
                                                mem[_24387 + 32] = 'SafeMath: division by zero'
                                                _24944 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24944] = 26
                                                mem[_24944 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24944 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29481 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29481]
                                                mem[_29481 + 32] = stor8
                                                require 1 < mem[_29481]
                                                mem[_29481 + 64] = stor7
                                                mem[_29481 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29481 + 100] = ext_call.return_data[0]
                                                mem[_29481 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29481 + 196] = this.address
                                                mem[_29481 + 228] = block.timestamp + 120
                                                mem[_29481 + 164] = 160
                                                mem[_29481 + 260] = mem[_29481]
                                                s = 0
                                                while s < 32 * mem[_29481]:
                                                    mem[s + _29481 + 292] = mem[s + _29481 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29481 + 260 len (32 * mem[_29481]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24532 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24532] = 26
                                            mem[_24532 + 32] = 'SafeMath: division by zero'
                                            _25325 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25325] = 26
                                            mem[_25325 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25325 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30349 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30349]
                                            mem[_30349 + 32] = stor8
                                            require 1 < mem[_30349]
                                            mem[_30349 + 64] = stor7
                                            mem[_30349 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30349 + 100] = ext_call.return_data[0]
                                            mem[_30349 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30349 + 196] = this.address
                                            mem[_30349 + 228] = block.timestamp + 120
                                            mem[_30349 + 164] = 160
                                            mem[_30349 + 260] = mem[_30349]
                                            s = 0
                                            while s < 32 * mem[_30349]:
                                                mem[s + _30349 + 292] = mem[s + _30349 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30349 + 260 len (32 * mem[_30349]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30349]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19793 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19793] = 26
                                        mem[_19793 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19793 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24386 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24386] = 26
                                            mem[_24386 + 32] = 'SafeMath: division by zero'
                                            _24943 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24943] = 26
                                            mem[_24943 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24943 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29475 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29475]
                                            mem[_29475 + 32] = stor8
                                            require 1 < mem[_29475]
                                            mem[_29475 + 64] = stor7
                                            mem[_29475 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29475 + 100] = ext_call.return_data[0]
                                            mem[_29475 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29475 + 196] = this.address
                                            mem[_29475 + 228] = block.timestamp + 120
                                            mem[_29475 + 164] = 160
                                            mem[_29475 + 260] = mem[_29475]
                                            s = 0
                                            while s < 32 * mem[_29475]:
                                                mem[s + _29475 + 292] = mem[s + _29475 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29475 + 260 len (32 * mem[_29475]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24531 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24531] = 26
                                                mem[_24531 + 32] = 'SafeMath: division by zero'
                                                _25324 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25324] = 26
                                                mem[_25324 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25324 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30343 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30343]
                                                mem[_30343 + 32] = stor8
                                                require 1 < mem[_30343]
                                                mem[_30343 + 64] = stor7
                                                mem[_30343 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30343 + 100] = ext_call.return_data[0]
                                                mem[_30343 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30343 + 196] = this.address
                                                mem[_30343 + 228] = block.timestamp + 120
                                                mem[_30343 + 164] = 160
                                                mem[_30343 + 260] = mem[_30343]
                                                s = 0
                                                while s < 32 * mem[_30343]:
                                                    mem[s + _30343 + 292] = mem[s + _30343 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30343 + 260 len (32 * mem[_30343]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30343]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24596 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24596] = 26
                                            mem[_24596 + 32] = 'SafeMath: division by zero'
                                            _25911 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25911] = 26
                                            mem[_25911 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25911 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30861 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30861]
                                            mem[_30861 + 32] = stor8
                                            require 1 < mem[_30861]
                                            mem[_30861 + 64] = stor7
                                            mem[_30861 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30861 + 100] = ext_call.return_data[0]
                                            mem[_30861 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30861 + 196] = this.address
                                            mem[_30861 + 228] = block.timestamp + 120
                                            mem[_30861 + 164] = 160
                                            mem[_30861 + 260] = mem[_30861]
                                            s = 0
                                            while s < 32 * mem[_30861]:
                                                mem[s + _30861 + 292] = mem[s + _30861 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30861 + 260 len (32 * mem[_30861]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17618 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17618] = 30
                                    mem[_17618 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17836 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17836 + 68] = mem[idx + _17618 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17836 + 68] = mem[_17836 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17836 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18643 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18643] = 26
                                        mem[_18643 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19569 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19569] = 26
                                        mem[_19569 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19569 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23985 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23985] = 26
                                            mem[_23985 + 32] = 'SafeMath: division by zero'
                                            _24643 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24643] = 26
                                            mem[_24643 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24643 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27454 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27454]
                                            mem[_27454 + 32] = stor8
                                            require 1 < mem[_27454]
                                            mem[_27454 + 64] = stor7
                                            mem[_27454 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27454 + 100] = ext_call.return_data[0]
                                            mem[_27454 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27454 + 196] = this.address
                                            mem[_27454 + 228] = block.timestamp + 120
                                            mem[_27454 + 164] = 160
                                            mem[_27454 + 260] = mem[_27454]
                                            s = 0
                                            while s < 32 * mem[_27454]:
                                                mem[s + _27454 + 292] = mem[s + _27454 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27454 + 260 len (32 * mem[_27454]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24160 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24160] = 26
                                                mem[_24160 + 32] = 'SafeMath: division by zero'
                                                _24722 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24722] = 26
                                                mem[_24722 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24722 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28426 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28426]
                                                mem[_28426 + 32] = stor8
                                                require 1 < mem[_28426]
                                                mem[_28426 + 64] = stor7
                                                mem[_28426 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28426 + 100] = ext_call.return_data[0]
                                                mem[_28426 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28426 + 196] = this.address
                                                mem[_28426 + 228] = block.timestamp + 120
                                                mem[_28426 + 164] = 160
                                                mem[_28426 + 260] = mem[_28426]
                                                s = 0
                                                while s < 32 * mem[_28426]:
                                                    mem[s + _28426 + 292] = mem[s + _28426 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28426 + 260 len (32 * mem[_28426]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24383 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24383] = 26
                                                mem[_24383 + 32] = 'SafeMath: division by zero'
                                                _24939 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24939] = 26
                                                mem[_24939 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24939 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29465 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29465]
                                                mem[_29465 + 32] = stor8
                                                require 1 < mem[_29465]
                                                mem[_29465 + 64] = stor7
                                                mem[_29465 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29465 + 100] = ext_call.return_data[0]
                                                mem[_29465 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29465 + 196] = this.address
                                                mem[_29465 + 228] = block.timestamp + 120
                                                mem[_29465 + 164] = 160
                                                mem[_29465 + 260] = mem[_29465]
                                                s = 0
                                                while s < 32 * mem[_29465]:
                                                    mem[s + _29465 + 292] = mem[s + _29465 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29465 + 260 len (32 * mem[_29465]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18691 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18691] = 26
                                        mem[_18691 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19651 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19651] = 26
                                            mem[_19651 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19651 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24159 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24159] = 26
                                                mem[_24159 + 32] = 'SafeMath: division by zero'
                                                _24721 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24721] = 26
                                                mem[_24721 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24721 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28420 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28420]
                                                mem[_28420 + 32] = stor8
                                                require 1 < mem[_28420]
                                                mem[_28420 + 64] = stor7
                                                mem[_28420 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28420 + 100] = ext_call.return_data[0]
                                                mem[_28420 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28420 + 196] = this.address
                                                mem[_28420 + 228] = block.timestamp + 120
                                                mem[_28420 + 164] = 160
                                                mem[_28420 + 260] = mem[_28420]
                                                s = 0
                                                while s < 32 * mem[_28420]:
                                                    mem[s + _28420 + 292] = mem[s + _28420 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28420 + 260 len (32 * mem[_28420]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24382 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24382] = 26
                                                mem[_24382 + 32] = 'SafeMath: division by zero'
                                                _24938 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24938] = 26
                                                mem[_24938 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24938 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29459 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29459]
                                                mem[_29459 + 32] = stor8
                                                require 1 < mem[_29459]
                                                mem[_29459 + 64] = stor7
                                                mem[_29459 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29459 + 100] = ext_call.return_data[0]
                                                mem[_29459 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29459 + 196] = this.address
                                                mem[_29459 + 228] = block.timestamp + 120
                                                mem[_29459 + 164] = 160
                                                mem[_29459 + 260] = mem[_29459]
                                                s = 0
                                                while s < 32 * mem[_29459]:
                                                    mem[s + _29459 + 292] = mem[s + _29459 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29459 + 260 len (32 * mem[_29459]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24530 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24530] = 26
                                            mem[_24530 + 32] = 'SafeMath: division by zero'
                                            _25316 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25316] = 26
                                            mem[_25316 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25316 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30333 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30333]
                                            mem[_30333 + 32] = stor8
                                            require 1 < mem[_30333]
                                            mem[_30333 + 64] = stor7
                                            mem[_30333 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30333 + 100] = ext_call.return_data[0]
                                            mem[_30333 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30333 + 196] = this.address
                                            mem[_30333 + 228] = block.timestamp + 120
                                            mem[_30333 + 164] = 160
                                            mem[_30333 + 260] = mem[_30333]
                                            s = 0
                                            while s < 32 * mem[_30333]:
                                                mem[s + _30333 + 292] = mem[s + _30333 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30333 + 260 len (32 * mem[_30333]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30333]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19789 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19789] = 26
                                        mem[_19789 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19789 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24381 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24381] = 26
                                            mem[_24381 + 32] = 'SafeMath: division by zero'
                                            _24937 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24937] = 26
                                            mem[_24937 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24937 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29453 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29453]
                                            mem[_29453 + 32] = stor8
                                            require 1 < mem[_29453]
                                            mem[_29453 + 64] = stor7
                                            mem[_29453 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29453 + 100] = ext_call.return_data[0]
                                            mem[_29453 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29453 + 196] = this.address
                                            mem[_29453 + 228] = block.timestamp + 120
                                            mem[_29453 + 164] = 160
                                            mem[_29453 + 260] = mem[_29453]
                                            s = 0
                                            while s < 32 * mem[_29453]:
                                                mem[s + _29453 + 292] = mem[s + _29453 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29453 + 260 len (32 * mem[_29453]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24529 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24529] = 26
                                                mem[_24529 + 32] = 'SafeMath: division by zero'
                                                _25315 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25315] = 26
                                                mem[_25315 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25315 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30327 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30327]
                                                mem[_30327 + 32] = stor8
                                                require 1 < mem[_30327]
                                                mem[_30327 + 64] = stor7
                                                mem[_30327 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30327 + 100] = ext_call.return_data[0]
                                                mem[_30327 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30327 + 196] = this.address
                                                mem[_30327 + 228] = block.timestamp + 120
                                                mem[_30327 + 164] = 160
                                                mem[_30327 + 260] = mem[_30327]
                                                s = 0
                                                while s < 32 * mem[_30327]:
                                                    mem[s + _30327 + 292] = mem[s + _30327 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30327 + 260 len (32 * mem[_30327]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30327]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24595 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24595] = 26
                                            mem[_24595 + 32] = 'SafeMath: division by zero'
                                            _25897 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25897] = 26
                                            mem[_25897 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25897 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30853 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30853]
                                            mem[_30853 + 32] = stor8
                                            require 1 < mem[_30853]
                                            mem[_30853 + 64] = stor7
                                            mem[_30853 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30853 + 100] = ext_call.return_data[0]
                                            mem[_30853 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30853 + 196] = this.address
                                            mem[_30853 + 228] = block.timestamp + 120
                                            mem[_30853 + 164] = 160
                                            mem[_30853 + 260] = mem[_30853]
                                            s = 0
                                            while s < 32 * mem[_30853]:
                                                mem[s + _30853 + 292] = mem[s + _30853 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30853 + 260 len (32 * mem[_30853]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17616 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17616] = 30
                                    mem[_17616 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17830 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17830 + 68] = mem[idx + _17616 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17830 + 68] = mem[_17830 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17830 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18642 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18642] = 26
                                        mem[_18642 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19566 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19566] = 26
                                        mem[_19566 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19566 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23982 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23982] = 26
                                            mem[_23982 + 32] = 'SafeMath: division by zero'
                                            _24642 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24642] = 26
                                            mem[_24642 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24642 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27435 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27435]
                                            mem[_27435 + 32] = stor8
                                            require 1 < mem[_27435]
                                            mem[_27435 + 64] = stor7
                                            mem[_27435 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27435 + 100] = ext_call.return_data[0]
                                            mem[_27435 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27435 + 196] = this.address
                                            mem[_27435 + 228] = block.timestamp + 120
                                            mem[_27435 + 164] = 160
                                            mem[_27435 + 260] = mem[_27435]
                                            s = 0
                                            while s < 32 * mem[_27435]:
                                                mem[s + _27435 + 292] = mem[s + _27435 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27435 + 260 len (32 * mem[_27435]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24156 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24156] = 26
                                                mem[_24156 + 32] = 'SafeMath: division by zero'
                                                _24720 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24720] = 26
                                                mem[_24720 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24720 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28405 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28405]
                                                mem[_28405 + 32] = stor8
                                                require 1 < mem[_28405]
                                                mem[_28405 + 64] = stor7
                                                mem[_28405 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28405 + 100] = ext_call.return_data[0]
                                                mem[_28405 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28405 + 196] = this.address
                                                mem[_28405 + 228] = block.timestamp + 120
                                                mem[_28405 + 164] = 160
                                                mem[_28405 + 260] = mem[_28405]
                                                s = 0
                                                while s < 32 * mem[_28405]:
                                                    mem[s + _28405 + 292] = mem[s + _28405 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28405 + 260 len (32 * mem[_28405]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24378 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24378] = 26
                                                mem[_24378 + 32] = 'SafeMath: division by zero'
                                                _24933 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24933] = 26
                                                mem[_24933 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24933 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29443 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29443]
                                                mem[_29443 + 32] = stor8
                                                require 1 < mem[_29443]
                                                mem[_29443 + 64] = stor7
                                                mem[_29443 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29443 + 100] = ext_call.return_data[0]
                                                mem[_29443 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29443 + 196] = this.address
                                                mem[_29443 + 228] = block.timestamp + 120
                                                mem[_29443 + 164] = 160
                                                mem[_29443 + 260] = mem[_29443]
                                                s = 0
                                                while s < 32 * mem[_29443]:
                                                    mem[s + _29443 + 292] = mem[s + _29443 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29443 + 260 len (32 * mem[_29443]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18690 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18690] = 26
                                        mem[_18690 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19650 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19650] = 26
                                            mem[_19650 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19650 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24155 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24155] = 26
                                                mem[_24155 + 32] = 'SafeMath: division by zero'
                                                _24719 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24719] = 26
                                                mem[_24719 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24719 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28399 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28399]
                                                mem[_28399 + 32] = stor8
                                                require 1 < mem[_28399]
                                                mem[_28399 + 64] = stor7
                                                mem[_28399 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28399 + 100] = ext_call.return_data[0]
                                                mem[_28399 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28399 + 196] = this.address
                                                mem[_28399 + 228] = block.timestamp + 120
                                                mem[_28399 + 164] = 160
                                                mem[_28399 + 260] = mem[_28399]
                                                s = 0
                                                while s < 32 * mem[_28399]:
                                                    mem[s + _28399 + 292] = mem[s + _28399 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28399 + 260 len (32 * mem[_28399]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24377 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24377] = 26
                                                mem[_24377 + 32] = 'SafeMath: division by zero'
                                                _24932 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24932] = 26
                                                mem[_24932 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24932 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29437 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29437]
                                                mem[_29437 + 32] = stor8
                                                require 1 < mem[_29437]
                                                mem[_29437 + 64] = stor7
                                                mem[_29437 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29437 + 100] = ext_call.return_data[0]
                                                mem[_29437 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29437 + 196] = this.address
                                                mem[_29437 + 228] = block.timestamp + 120
                                                mem[_29437 + 164] = 160
                                                mem[_29437 + 260] = mem[_29437]
                                                s = 0
                                                while s < 32 * mem[_29437]:
                                                    mem[s + _29437 + 292] = mem[s + _29437 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29437 + 260 len (32 * mem[_29437]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24528 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24528] = 26
                                            mem[_24528 + 32] = 'SafeMath: division by zero'
                                            _25307 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25307] = 26
                                            mem[_25307 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25307 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30317 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30317]
                                            mem[_30317 + 32] = stor8
                                            require 1 < mem[_30317]
                                            mem[_30317 + 64] = stor7
                                            mem[_30317 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30317 + 100] = ext_call.return_data[0]
                                            mem[_30317 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30317 + 196] = this.address
                                            mem[_30317 + 228] = block.timestamp + 120
                                            mem[_30317 + 164] = 160
                                            mem[_30317 + 260] = mem[_30317]
                                            s = 0
                                            while s < 32 * mem[_30317]:
                                                mem[s + _30317 + 292] = mem[s + _30317 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30317 + 260 len (32 * mem[_30317]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30317]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19785 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19785] = 26
                                        mem[_19785 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19785 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24376 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24376] = 26
                                            mem[_24376 + 32] = 'SafeMath: division by zero'
                                            _24931 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24931] = 26
                                            mem[_24931 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24931 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29431 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29431]
                                            mem[_29431 + 32] = stor8
                                            require 1 < mem[_29431]
                                            mem[_29431 + 64] = stor7
                                            mem[_29431 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29431 + 100] = ext_call.return_data[0]
                                            mem[_29431 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29431 + 196] = this.address
                                            mem[_29431 + 228] = block.timestamp + 120
                                            mem[_29431 + 164] = 160
                                            mem[_29431 + 260] = mem[_29431]
                                            s = 0
                                            while s < 32 * mem[_29431]:
                                                mem[s + _29431 + 292] = mem[s + _29431 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29431 + 260 len (32 * mem[_29431]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24527 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24527] = 26
                                                mem[_24527 + 32] = 'SafeMath: division by zero'
                                                _25306 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25306] = 26
                                                mem[_25306 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25306 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30311 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30311]
                                                mem[_30311 + 32] = stor8
                                                require 1 < mem[_30311]
                                                mem[_30311 + 64] = stor7
                                                mem[_30311 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30311 + 100] = ext_call.return_data[0]
                                                mem[_30311 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30311 + 196] = this.address
                                                mem[_30311 + 228] = block.timestamp + 120
                                                mem[_30311 + 164] = 160
                                                mem[_30311 + 260] = mem[_30311]
                                                s = 0
                                                while s < 32 * mem[_30311]:
                                                    mem[s + _30311 + 292] = mem[s + _30311 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30311 + 260 len (32 * mem[_30311]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30311]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24594 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24594] = 26
                                            mem[_24594 + 32] = 'SafeMath: division by zero'
                                            _25883 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25883] = 26
                                            mem[_25883 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25883 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30845 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30845]
                                            mem[_30845 + 32] = stor8
                                            require 1 < mem[_30845]
                                            mem[_30845 + 64] = stor7
                                            mem[_30845 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30845 + 100] = ext_call.return_data[0]
                                            mem[_30845 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30845 + 196] = this.address
                                            mem[_30845 + 228] = block.timestamp + 120
                                            mem[_30845 + 164] = 160
                                            mem[_30845 + 260] = mem[_30845]
                                            s = 0
                                            while s < 32 * mem[_30845]:
                                                mem[s + _30845 + 292] = mem[s + _30845 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30845 + 260 len (32 * mem[_30845]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17614 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17614] = 30
                                    mem[_17614 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17824 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17824 + 68] = mem[idx + _17614 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17824 + 68] = mem[_17824 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17824 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18641 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18641] = 26
                                        mem[_18641 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19563 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19563] = 26
                                        mem[_19563 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19563 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23979 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23979] = 26
                                            mem[_23979 + 32] = 'SafeMath: division by zero'
                                            _24641 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24641] = 26
                                            mem[_24641 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24641 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27416 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27416]
                                            mem[_27416 + 32] = stor8
                                            require 1 < mem[_27416]
                                            mem[_27416 + 64] = stor7
                                            mem[_27416 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27416 + 100] = ext_call.return_data[0]
                                            mem[_27416 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27416 + 196] = this.address
                                            mem[_27416 + 228] = block.timestamp + 120
                                            mem[_27416 + 164] = 160
                                            mem[_27416 + 260] = mem[_27416]
                                            s = 0
                                            while s < 32 * mem[_27416]:
                                                mem[s + _27416 + 292] = mem[s + _27416 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27416 + 260 len (32 * mem[_27416]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24152 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24152] = 26
                                                mem[_24152 + 32] = 'SafeMath: division by zero'
                                                _24718 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24718] = 26
                                                mem[_24718 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24718 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28384 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28384]
                                                mem[_28384 + 32] = stor8
                                                require 1 < mem[_28384]
                                                mem[_28384 + 64] = stor7
                                                mem[_28384 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28384 + 100] = ext_call.return_data[0]
                                                mem[_28384 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28384 + 196] = this.address
                                                mem[_28384 + 228] = block.timestamp + 120
                                                mem[_28384 + 164] = 160
                                                mem[_28384 + 260] = mem[_28384]
                                                s = 0
                                                while s < 32 * mem[_28384]:
                                                    mem[s + _28384 + 292] = mem[s + _28384 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28384 + 260 len (32 * mem[_28384]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24373 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24373] = 26
                                                mem[_24373 + 32] = 'SafeMath: division by zero'
                                                _24927 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24927] = 26
                                                mem[_24927 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24927 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29421 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29421]
                                                mem[_29421 + 32] = stor8
                                                require 1 < mem[_29421]
                                                mem[_29421 + 64] = stor7
                                                mem[_29421 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29421 + 100] = ext_call.return_data[0]
                                                mem[_29421 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29421 + 196] = this.address
                                                mem[_29421 + 228] = block.timestamp + 120
                                                mem[_29421 + 164] = 160
                                                mem[_29421 + 260] = mem[_29421]
                                                s = 0
                                                while s < 32 * mem[_29421]:
                                                    mem[s + _29421 + 292] = mem[s + _29421 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29421 + 260 len (32 * mem[_29421]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18689 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18689] = 26
                                        mem[_18689 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19649 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19649] = 26
                                            mem[_19649 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19649 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24151 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24151] = 26
                                                mem[_24151 + 32] = 'SafeMath: division by zero'
                                                _24717 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24717] = 26
                                                mem[_24717 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24717 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28378 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28378]
                                                mem[_28378 + 32] = stor8
                                                require 1 < mem[_28378]
                                                mem[_28378 + 64] = stor7
                                                mem[_28378 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28378 + 100] = ext_call.return_data[0]
                                                mem[_28378 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28378 + 196] = this.address
                                                mem[_28378 + 228] = block.timestamp + 120
                                                mem[_28378 + 164] = 160
                                                mem[_28378 + 260] = mem[_28378]
                                                s = 0
                                                while s < 32 * mem[_28378]:
                                                    mem[s + _28378 + 292] = mem[s + _28378 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28378 + 260 len (32 * mem[_28378]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24372 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24372] = 26
                                                mem[_24372 + 32] = 'SafeMath: division by zero'
                                                _24926 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24926] = 26
                                                mem[_24926 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24926 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29415 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29415]
                                                mem[_29415 + 32] = stor8
                                                require 1 < mem[_29415]
                                                mem[_29415 + 64] = stor7
                                                mem[_29415 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29415 + 100] = ext_call.return_data[0]
                                                mem[_29415 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29415 + 196] = this.address
                                                mem[_29415 + 228] = block.timestamp + 120
                                                mem[_29415 + 164] = 160
                                                mem[_29415 + 260] = mem[_29415]
                                                s = 0
                                                while s < 32 * mem[_29415]:
                                                    mem[s + _29415 + 292] = mem[s + _29415 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29415 + 260 len (32 * mem[_29415]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24526 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24526] = 26
                                            mem[_24526 + 32] = 'SafeMath: division by zero'
                                            _25298 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25298] = 26
                                            mem[_25298 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25298 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30301 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30301]
                                            mem[_30301 + 32] = stor8
                                            require 1 < mem[_30301]
                                            mem[_30301 + 64] = stor7
                                            mem[_30301 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30301 + 100] = ext_call.return_data[0]
                                            mem[_30301 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30301 + 196] = this.address
                                            mem[_30301 + 228] = block.timestamp + 120
                                            mem[_30301 + 164] = 160
                                            mem[_30301 + 260] = mem[_30301]
                                            s = 0
                                            while s < 32 * mem[_30301]:
                                                mem[s + _30301 + 292] = mem[s + _30301 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30301 + 260 len (32 * mem[_30301]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30301]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19781 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19781] = 26
                                        mem[_19781 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19781 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24371 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24371] = 26
                                            mem[_24371 + 32] = 'SafeMath: division by zero'
                                            _24925 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24925] = 26
                                            mem[_24925 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24925 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29409 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29409]
                                            mem[_29409 + 32] = stor8
                                            require 1 < mem[_29409]
                                            mem[_29409 + 64] = stor7
                                            mem[_29409 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29409 + 100] = ext_call.return_data[0]
                                            mem[_29409 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29409 + 196] = this.address
                                            mem[_29409 + 228] = block.timestamp + 120
                                            mem[_29409 + 164] = 160
                                            mem[_29409 + 260] = mem[_29409]
                                            s = 0
                                            while s < 32 * mem[_29409]:
                                                mem[s + _29409 + 292] = mem[s + _29409 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29409 + 260 len (32 * mem[_29409]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24525 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24525] = 26
                                                mem[_24525 + 32] = 'SafeMath: division by zero'
                                                _25297 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25297] = 26
                                                mem[_25297 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25297 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30295 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30295]
                                                mem[_30295 + 32] = stor8
                                                require 1 < mem[_30295]
                                                mem[_30295 + 64] = stor7
                                                mem[_30295 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30295 + 100] = ext_call.return_data[0]
                                                mem[_30295 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30295 + 196] = this.address
                                                mem[_30295 + 228] = block.timestamp + 120
                                                mem[_30295 + 164] = 160
                                                mem[_30295 + 260] = mem[_30295]
                                                s = 0
                                                while s < 32 * mem[_30295]:
                                                    mem[s + _30295 + 292] = mem[s + _30295 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30295 + 260 len (32 * mem[_30295]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30295]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24593 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24593] = 26
                                            mem[_24593 + 32] = 'SafeMath: division by zero'
                                            _25869 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25869] = 26
                                            mem[_25869 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25869 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30837 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30837]
                                            mem[_30837 + 32] = stor8
                                            require 1 < mem[_30837]
                                            mem[_30837 + 64] = stor7
                                            mem[_30837 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30837 + 100] = ext_call.return_data[0]
                                            mem[_30837 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30837 + 196] = this.address
                                            mem[_30837 + 228] = block.timestamp + 120
                                            mem[_30837 + 164] = 160
                                            mem[_30837 + 260] = mem[_30837]
                                            s = 0
                                            while s < 32 * mem[_30837]:
                                                mem[s + _30837 + 292] = mem[s + _30837 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30837 + 260 len (32 * mem[_30837]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                    mem[160] = 26
                    mem[192] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17612 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17612] = 30
                                    mem[_17612 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17818 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17818 + 68] = mem[idx + _17612 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17818 + 68] = mem[_17818 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17818 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18640 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18640] = 26
                                        mem[_18640 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19560 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19560] = 26
                                        mem[_19560 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19560 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23976 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23976] = 26
                                            mem[_23976 + 32] = 'SafeMath: division by zero'
                                            _24640 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24640] = 26
                                            mem[_24640 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24640 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27397 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27397]
                                            mem[_27397 + 32] = stor8
                                            require 1 < mem[_27397]
                                            mem[_27397 + 64] = stor7
                                            mem[_27397 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27397 + 100] = ext_call.return_data[0]
                                            mem[_27397 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27397 + 196] = this.address
                                            mem[_27397 + 228] = block.timestamp + 120
                                            mem[_27397 + 164] = 160
                                            mem[_27397 + 260] = mem[_27397]
                                            s = 0
                                            while s < 32 * mem[_27397]:
                                                mem[s + _27397 + 292] = mem[s + _27397 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27397 + 260 len (32 * mem[_27397]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24148 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24148] = 26
                                                mem[_24148 + 32] = 'SafeMath: division by zero'
                                                _24716 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24716] = 26
                                                mem[_24716 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24716 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28363 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28363]
                                                mem[_28363 + 32] = stor8
                                                require 1 < mem[_28363]
                                                mem[_28363 + 64] = stor7
                                                mem[_28363 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28363 + 100] = ext_call.return_data[0]
                                                mem[_28363 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28363 + 196] = this.address
                                                mem[_28363 + 228] = block.timestamp + 120
                                                mem[_28363 + 164] = 160
                                                mem[_28363 + 260] = mem[_28363]
                                                s = 0
                                                while s < 32 * mem[_28363]:
                                                    mem[s + _28363 + 292] = mem[s + _28363 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28363 + 260 len (32 * mem[_28363]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24368 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24368] = 26
                                                mem[_24368 + 32] = 'SafeMath: division by zero'
                                                _24921 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24921] = 26
                                                mem[_24921 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24921 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29399 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29399]
                                                mem[_29399 + 32] = stor8
                                                require 1 < mem[_29399]
                                                mem[_29399 + 64] = stor7
                                                mem[_29399 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29399 + 100] = ext_call.return_data[0]
                                                mem[_29399 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29399 + 196] = this.address
                                                mem[_29399 + 228] = block.timestamp + 120
                                                mem[_29399 + 164] = 160
                                                mem[_29399 + 260] = mem[_29399]
                                                s = 0
                                                while s < 32 * mem[_29399]:
                                                    mem[s + _29399 + 292] = mem[s + _29399 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29399 + 260 len (32 * mem[_29399]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18688 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18688] = 26
                                        mem[_18688 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19648 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19648] = 26
                                            mem[_19648 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19648 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24147 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24147] = 26
                                                mem[_24147 + 32] = 'SafeMath: division by zero'
                                                _24715 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24715] = 26
                                                mem[_24715 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24715 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28357 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28357]
                                                mem[_28357 + 32] = stor8
                                                require 1 < mem[_28357]
                                                mem[_28357 + 64] = stor7
                                                mem[_28357 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28357 + 100] = ext_call.return_data[0]
                                                mem[_28357 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28357 + 196] = this.address
                                                mem[_28357 + 228] = block.timestamp + 120
                                                mem[_28357 + 164] = 160
                                                mem[_28357 + 260] = mem[_28357]
                                                s = 0
                                                while s < 32 * mem[_28357]:
                                                    mem[s + _28357 + 292] = mem[s + _28357 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28357 + 260 len (32 * mem[_28357]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24367 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24367] = 26
                                                mem[_24367 + 32] = 'SafeMath: division by zero'
                                                _24920 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24920] = 26
                                                mem[_24920 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24920 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29393 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29393]
                                                mem[_29393 + 32] = stor8
                                                require 1 < mem[_29393]
                                                mem[_29393 + 64] = stor7
                                                mem[_29393 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29393 + 100] = ext_call.return_data[0]
                                                mem[_29393 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29393 + 196] = this.address
                                                mem[_29393 + 228] = block.timestamp + 120
                                                mem[_29393 + 164] = 160
                                                mem[_29393 + 260] = mem[_29393]
                                                s = 0
                                                while s < 32 * mem[_29393]:
                                                    mem[s + _29393 + 292] = mem[s + _29393 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29393 + 260 len (32 * mem[_29393]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24524 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24524] = 26
                                            mem[_24524 + 32] = 'SafeMath: division by zero'
                                            _25289 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25289] = 26
                                            mem[_25289 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25289 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30285 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30285]
                                            mem[_30285 + 32] = stor8
                                            require 1 < mem[_30285]
                                            mem[_30285 + 64] = stor7
                                            mem[_30285 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30285 + 100] = ext_call.return_data[0]
                                            mem[_30285 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30285 + 196] = this.address
                                            mem[_30285 + 228] = block.timestamp + 120
                                            mem[_30285 + 164] = 160
                                            mem[_30285 + 260] = mem[_30285]
                                            s = 0
                                            while s < 32 * mem[_30285]:
                                                mem[s + _30285 + 292] = mem[s + _30285 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30285 + 260 len (32 * mem[_30285]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30285]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19777 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19777] = 26
                                        mem[_19777 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19777 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24366 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24366] = 26
                                            mem[_24366 + 32] = 'SafeMath: division by zero'
                                            _24919 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24919] = 26
                                            mem[_24919 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24919 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29387 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29387]
                                            mem[_29387 + 32] = stor8
                                            require 1 < mem[_29387]
                                            mem[_29387 + 64] = stor7
                                            mem[_29387 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29387 + 100] = ext_call.return_data[0]
                                            mem[_29387 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29387 + 196] = this.address
                                            mem[_29387 + 228] = block.timestamp + 120
                                            mem[_29387 + 164] = 160
                                            mem[_29387 + 260] = mem[_29387]
                                            s = 0
                                            while s < 32 * mem[_29387]:
                                                mem[s + _29387 + 292] = mem[s + _29387 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29387 + 260 len (32 * mem[_29387]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24523 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24523] = 26
                                                mem[_24523 + 32] = 'SafeMath: division by zero'
                                                _25288 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25288] = 26
                                                mem[_25288 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25288 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30279 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30279]
                                                mem[_30279 + 32] = stor8
                                                require 1 < mem[_30279]
                                                mem[_30279 + 64] = stor7
                                                mem[_30279 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30279 + 100] = ext_call.return_data[0]
                                                mem[_30279 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30279 + 196] = this.address
                                                mem[_30279 + 228] = block.timestamp + 120
                                                mem[_30279 + 164] = 160
                                                mem[_30279 + 260] = mem[_30279]
                                                s = 0
                                                while s < 32 * mem[_30279]:
                                                    mem[s + _30279 + 292] = mem[s + _30279 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30279 + 260 len (32 * mem[_30279]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30279]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24592 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24592] = 26
                                            mem[_24592 + 32] = 'SafeMath: division by zero'
                                            _25855 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25855] = 26
                                            mem[_25855 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25855 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30829 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30829]
                                            mem[_30829 + 32] = stor8
                                            require 1 < mem[_30829]
                                            mem[_30829 + 64] = stor7
                                            mem[_30829 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30829 + 100] = ext_call.return_data[0]
                                            mem[_30829 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30829 + 196] = this.address
                                            mem[_30829 + 228] = block.timestamp + 120
                                            mem[_30829 + 164] = 160
                                            mem[_30829 + 260] = mem[_30829]
                                            s = 0
                                            while s < 32 * mem[_30829]:
                                                mem[s + _30829 + 292] = mem[s + _30829 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30829 + 260 len (32 * mem[_30829]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17610 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17610] = 30
                                    mem[_17610 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17812 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17812 + 68] = mem[idx + _17610 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17812 + 68] = mem[_17812 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17812 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18639 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18639] = 26
                                        mem[_18639 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19557 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19557] = 26
                                        mem[_19557 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19557 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23973 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23973] = 26
                                            mem[_23973 + 32] = 'SafeMath: division by zero'
                                            _24639 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24639] = 26
                                            mem[_24639 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24639 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27378 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27378]
                                            mem[_27378 + 32] = stor8
                                            require 1 < mem[_27378]
                                            mem[_27378 + 64] = stor7
                                            mem[_27378 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27378 + 100] = ext_call.return_data[0]
                                            mem[_27378 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27378 + 196] = this.address
                                            mem[_27378 + 228] = block.timestamp + 120
                                            mem[_27378 + 164] = 160
                                            mem[_27378 + 260] = mem[_27378]
                                            s = 0
                                            while s < 32 * mem[_27378]:
                                                mem[s + _27378 + 292] = mem[s + _27378 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27378 + 260 len (32 * mem[_27378]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24144 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24144] = 26
                                                mem[_24144 + 32] = 'SafeMath: division by zero'
                                                _24714 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24714] = 26
                                                mem[_24714 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24714 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28342 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28342]
                                                mem[_28342 + 32] = stor8
                                                require 1 < mem[_28342]
                                                mem[_28342 + 64] = stor7
                                                mem[_28342 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28342 + 100] = ext_call.return_data[0]
                                                mem[_28342 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28342 + 196] = this.address
                                                mem[_28342 + 228] = block.timestamp + 120
                                                mem[_28342 + 164] = 160
                                                mem[_28342 + 260] = mem[_28342]
                                                s = 0
                                                while s < 32 * mem[_28342]:
                                                    mem[s + _28342 + 292] = mem[s + _28342 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28342 + 260 len (32 * mem[_28342]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24363 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24363] = 26
                                                mem[_24363 + 32] = 'SafeMath: division by zero'
                                                _24915 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24915] = 26
                                                mem[_24915 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24915 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29377 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29377]
                                                mem[_29377 + 32] = stor8
                                                require 1 < mem[_29377]
                                                mem[_29377 + 64] = stor7
                                                mem[_29377 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29377 + 100] = ext_call.return_data[0]
                                                mem[_29377 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29377 + 196] = this.address
                                                mem[_29377 + 228] = block.timestamp + 120
                                                mem[_29377 + 164] = 160
                                                mem[_29377 + 260] = mem[_29377]
                                                s = 0
                                                while s < 32 * mem[_29377]:
                                                    mem[s + _29377 + 292] = mem[s + _29377 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29377 + 260 len (32 * mem[_29377]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18687 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18687] = 26
                                        mem[_18687 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19647 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19647] = 26
                                            mem[_19647 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19647 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24143 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24143] = 26
                                                mem[_24143 + 32] = 'SafeMath: division by zero'
                                                _24713 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24713] = 26
                                                mem[_24713 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24713 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28336 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28336]
                                                mem[_28336 + 32] = stor8
                                                require 1 < mem[_28336]
                                                mem[_28336 + 64] = stor7
                                                mem[_28336 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28336 + 100] = ext_call.return_data[0]
                                                mem[_28336 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28336 + 196] = this.address
                                                mem[_28336 + 228] = block.timestamp + 120
                                                mem[_28336 + 164] = 160
                                                mem[_28336 + 260] = mem[_28336]
                                                s = 0
                                                while s < 32 * mem[_28336]:
                                                    mem[s + _28336 + 292] = mem[s + _28336 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28336 + 260 len (32 * mem[_28336]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24362 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24362] = 26
                                                mem[_24362 + 32] = 'SafeMath: division by zero'
                                                _24914 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24914] = 26
                                                mem[_24914 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24914 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29371 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29371]
                                                mem[_29371 + 32] = stor8
                                                require 1 < mem[_29371]
                                                mem[_29371 + 64] = stor7
                                                mem[_29371 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29371 + 100] = ext_call.return_data[0]
                                                mem[_29371 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29371 + 196] = this.address
                                                mem[_29371 + 228] = block.timestamp + 120
                                                mem[_29371 + 164] = 160
                                                mem[_29371 + 260] = mem[_29371]
                                                s = 0
                                                while s < 32 * mem[_29371]:
                                                    mem[s + _29371 + 292] = mem[s + _29371 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29371 + 260 len (32 * mem[_29371]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24522 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24522] = 26
                                            mem[_24522 + 32] = 'SafeMath: division by zero'
                                            _25280 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25280] = 26
                                            mem[_25280 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25280 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30269 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30269]
                                            mem[_30269 + 32] = stor8
                                            require 1 < mem[_30269]
                                            mem[_30269 + 64] = stor7
                                            mem[_30269 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30269 + 100] = ext_call.return_data[0]
                                            mem[_30269 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30269 + 196] = this.address
                                            mem[_30269 + 228] = block.timestamp + 120
                                            mem[_30269 + 164] = 160
                                            mem[_30269 + 260] = mem[_30269]
                                            s = 0
                                            while s < 32 * mem[_30269]:
                                                mem[s + _30269 + 292] = mem[s + _30269 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30269 + 260 len (32 * mem[_30269]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30269]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19773 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19773] = 26
                                        mem[_19773 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19773 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24361 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24361] = 26
                                            mem[_24361 + 32] = 'SafeMath: division by zero'
                                            _24913 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24913] = 26
                                            mem[_24913 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24913 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29365 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29365]
                                            mem[_29365 + 32] = stor8
                                            require 1 < mem[_29365]
                                            mem[_29365 + 64] = stor7
                                            mem[_29365 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29365 + 100] = ext_call.return_data[0]
                                            mem[_29365 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29365 + 196] = this.address
                                            mem[_29365 + 228] = block.timestamp + 120
                                            mem[_29365 + 164] = 160
                                            mem[_29365 + 260] = mem[_29365]
                                            s = 0
                                            while s < 32 * mem[_29365]:
                                                mem[s + _29365 + 292] = mem[s + _29365 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29365 + 260 len (32 * mem[_29365]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24521 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24521] = 26
                                                mem[_24521 + 32] = 'SafeMath: division by zero'
                                                _25279 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25279] = 26
                                                mem[_25279 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25279 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30263 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30263]
                                                mem[_30263 + 32] = stor8
                                                require 1 < mem[_30263]
                                                mem[_30263 + 64] = stor7
                                                mem[_30263 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30263 + 100] = ext_call.return_data[0]
                                                mem[_30263 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30263 + 196] = this.address
                                                mem[_30263 + 228] = block.timestamp + 120
                                                mem[_30263 + 164] = 160
                                                mem[_30263 + 260] = mem[_30263]
                                                s = 0
                                                while s < 32 * mem[_30263]:
                                                    mem[s + _30263 + 292] = mem[s + _30263 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30263 + 260 len (32 * mem[_30263]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30263]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24591 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24591] = 26
                                            mem[_24591 + 32] = 'SafeMath: division by zero'
                                            _25841 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25841] = 26
                                            mem[_25841 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25841 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30821 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30821]
                                            mem[_30821 + 32] = stor8
                                            require 1 < mem[_30821]
                                            mem[_30821 + 64] = stor7
                                            mem[_30821 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30821 + 100] = ext_call.return_data[0]
                                            mem[_30821 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30821 + 196] = this.address
                                            mem[_30821 + 228] = block.timestamp + 120
                                            mem[_30821 + 164] = 160
                                            mem[_30821 + 260] = mem[_30821]
                                            s = 0
                                            while s < 32 * mem[_30821]:
                                                mem[s + _30821 + 292] = mem[s + _30821 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30821 + 260 len (32 * mem[_30821]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17608 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17608] = 30
                                    mem[_17608 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17806 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17806 + 68] = mem[idx + _17608 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17806 + 68] = mem[_17806 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17806 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18638 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18638] = 26
                                        mem[_18638 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19554 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19554] = 26
                                        mem[_19554 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19554 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23970 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23970] = 26
                                            mem[_23970 + 32] = 'SafeMath: division by zero'
                                            _24638 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24638] = 26
                                            mem[_24638 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24638 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27359 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27359]
                                            mem[_27359 + 32] = stor8
                                            require 1 < mem[_27359]
                                            mem[_27359 + 64] = stor7
                                            mem[_27359 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27359 + 100] = ext_call.return_data[0]
                                            mem[_27359 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27359 + 196] = this.address
                                            mem[_27359 + 228] = block.timestamp + 120
                                            mem[_27359 + 164] = 160
                                            mem[_27359 + 260] = mem[_27359]
                                            s = 0
                                            while s < 32 * mem[_27359]:
                                                mem[s + _27359 + 292] = mem[s + _27359 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27359 + 260 len (32 * mem[_27359]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24140 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24140] = 26
                                                mem[_24140 + 32] = 'SafeMath: division by zero'
                                                _24712 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24712] = 26
                                                mem[_24712 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24712 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28321 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28321]
                                                mem[_28321 + 32] = stor8
                                                require 1 < mem[_28321]
                                                mem[_28321 + 64] = stor7
                                                mem[_28321 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28321 + 100] = ext_call.return_data[0]
                                                mem[_28321 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28321 + 196] = this.address
                                                mem[_28321 + 228] = block.timestamp + 120
                                                mem[_28321 + 164] = 160
                                                mem[_28321 + 260] = mem[_28321]
                                                s = 0
                                                while s < 32 * mem[_28321]:
                                                    mem[s + _28321 + 292] = mem[s + _28321 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28321 + 260 len (32 * mem[_28321]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24358 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24358] = 26
                                                mem[_24358 + 32] = 'SafeMath: division by zero'
                                                _24909 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24909] = 26
                                                mem[_24909 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24909 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29355 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29355]
                                                mem[_29355 + 32] = stor8
                                                require 1 < mem[_29355]
                                                mem[_29355 + 64] = stor7
                                                mem[_29355 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29355 + 100] = ext_call.return_data[0]
                                                mem[_29355 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29355 + 196] = this.address
                                                mem[_29355 + 228] = block.timestamp + 120
                                                mem[_29355 + 164] = 160
                                                mem[_29355 + 260] = mem[_29355]
                                                s = 0
                                                while s < 32 * mem[_29355]:
                                                    mem[s + _29355 + 292] = mem[s + _29355 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29355 + 260 len (32 * mem[_29355]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18686 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18686] = 26
                                        mem[_18686 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19646 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19646] = 26
                                            mem[_19646 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19646 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24139 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24139] = 26
                                                mem[_24139 + 32] = 'SafeMath: division by zero'
                                                _24711 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24711] = 26
                                                mem[_24711 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24711 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28315 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28315]
                                                mem[_28315 + 32] = stor8
                                                require 1 < mem[_28315]
                                                mem[_28315 + 64] = stor7
                                                mem[_28315 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28315 + 100] = ext_call.return_data[0]
                                                mem[_28315 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28315 + 196] = this.address
                                                mem[_28315 + 228] = block.timestamp + 120
                                                mem[_28315 + 164] = 160
                                                mem[_28315 + 260] = mem[_28315]
                                                s = 0
                                                while s < 32 * mem[_28315]:
                                                    mem[s + _28315 + 292] = mem[s + _28315 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28315 + 260 len (32 * mem[_28315]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24357 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24357] = 26
                                                mem[_24357 + 32] = 'SafeMath: division by zero'
                                                _24908 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24908] = 26
                                                mem[_24908 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24908 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29349 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29349]
                                                mem[_29349 + 32] = stor8
                                                require 1 < mem[_29349]
                                                mem[_29349 + 64] = stor7
                                                mem[_29349 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29349 + 100] = ext_call.return_data[0]
                                                mem[_29349 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29349 + 196] = this.address
                                                mem[_29349 + 228] = block.timestamp + 120
                                                mem[_29349 + 164] = 160
                                                mem[_29349 + 260] = mem[_29349]
                                                s = 0
                                                while s < 32 * mem[_29349]:
                                                    mem[s + _29349 + 292] = mem[s + _29349 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29349 + 260 len (32 * mem[_29349]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24520 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24520] = 26
                                            mem[_24520 + 32] = 'SafeMath: division by zero'
                                            _25271 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25271] = 26
                                            mem[_25271 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25271 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30253 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30253]
                                            mem[_30253 + 32] = stor8
                                            require 1 < mem[_30253]
                                            mem[_30253 + 64] = stor7
                                            mem[_30253 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30253 + 100] = ext_call.return_data[0]
                                            mem[_30253 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30253 + 196] = this.address
                                            mem[_30253 + 228] = block.timestamp + 120
                                            mem[_30253 + 164] = 160
                                            mem[_30253 + 260] = mem[_30253]
                                            s = 0
                                            while s < 32 * mem[_30253]:
                                                mem[s + _30253 + 292] = mem[s + _30253 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30253 + 260 len (32 * mem[_30253]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30253]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19769 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19769] = 26
                                        mem[_19769 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19769 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24356 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24356] = 26
                                            mem[_24356 + 32] = 'SafeMath: division by zero'
                                            _24907 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24907] = 26
                                            mem[_24907 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24907 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29343 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29343]
                                            mem[_29343 + 32] = stor8
                                            require 1 < mem[_29343]
                                            mem[_29343 + 64] = stor7
                                            mem[_29343 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29343 + 100] = ext_call.return_data[0]
                                            mem[_29343 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29343 + 196] = this.address
                                            mem[_29343 + 228] = block.timestamp + 120
                                            mem[_29343 + 164] = 160
                                            mem[_29343 + 260] = mem[_29343]
                                            s = 0
                                            while s < 32 * mem[_29343]:
                                                mem[s + _29343 + 292] = mem[s + _29343 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29343 + 260 len (32 * mem[_29343]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24519 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24519] = 26
                                                mem[_24519 + 32] = 'SafeMath: division by zero'
                                                _25270 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25270] = 26
                                                mem[_25270 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25270 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30247 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30247]
                                                mem[_30247 + 32] = stor8
                                                require 1 < mem[_30247]
                                                mem[_30247 + 64] = stor7
                                                mem[_30247 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30247 + 100] = ext_call.return_data[0]
                                                mem[_30247 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30247 + 196] = this.address
                                                mem[_30247 + 228] = block.timestamp + 120
                                                mem[_30247 + 164] = 160
                                                mem[_30247 + 260] = mem[_30247]
                                                s = 0
                                                while s < 32 * mem[_30247]:
                                                    mem[s + _30247 + 292] = mem[s + _30247 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30247 + 260 len (32 * mem[_30247]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30247]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24590 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24590] = 26
                                            mem[_24590 + 32] = 'SafeMath: division by zero'
                                            _25827 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25827] = 26
                                            mem[_25827 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25827 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30813 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30813]
                                            mem[_30813 + 32] = stor8
                                            require 1 < mem[_30813]
                                            mem[_30813 + 64] = stor7
                                            mem[_30813 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30813 + 100] = ext_call.return_data[0]
                                            mem[_30813 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30813 + 196] = this.address
                                            mem[_30813 + 228] = block.timestamp + 120
                                            mem[_30813 + 164] = 160
                                            mem[_30813 + 260] = mem[_30813]
                                            s = 0
                                            while s < 32 * mem[_30813]:
                                                mem[s + _30813 + 292] = mem[s + _30813 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30813 + 260 len (32 * mem[_30813]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17606 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17606] = 30
                                    mem[_17606 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17800 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17800 + 68] = mem[idx + _17606 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17800 + 68] = mem[_17800 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17800 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18637 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18637] = 26
                                        mem[_18637 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19551 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19551] = 26
                                        mem[_19551 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19551 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23967 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23967] = 26
                                            mem[_23967 + 32] = 'SafeMath: division by zero'
                                            _24637 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24637] = 26
                                            mem[_24637 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24637 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27340 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27340]
                                            mem[_27340 + 32] = stor8
                                            require 1 < mem[_27340]
                                            mem[_27340 + 64] = stor7
                                            mem[_27340 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27340 + 100] = ext_call.return_data[0]
                                            mem[_27340 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27340 + 196] = this.address
                                            mem[_27340 + 228] = block.timestamp + 120
                                            mem[_27340 + 164] = 160
                                            mem[_27340 + 260] = mem[_27340]
                                            s = 0
                                            while s < 32 * mem[_27340]:
                                                mem[s + _27340 + 292] = mem[s + _27340 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27340 + 260 len (32 * mem[_27340]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24136 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24136] = 26
                                                mem[_24136 + 32] = 'SafeMath: division by zero'
                                                _24710 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24710] = 26
                                                mem[_24710 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24710 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28300 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28300]
                                                mem[_28300 + 32] = stor8
                                                require 1 < mem[_28300]
                                                mem[_28300 + 64] = stor7
                                                mem[_28300 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28300 + 100] = ext_call.return_data[0]
                                                mem[_28300 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28300 + 196] = this.address
                                                mem[_28300 + 228] = block.timestamp + 120
                                                mem[_28300 + 164] = 160
                                                mem[_28300 + 260] = mem[_28300]
                                                s = 0
                                                while s < 32 * mem[_28300]:
                                                    mem[s + _28300 + 292] = mem[s + _28300 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28300 + 260 len (32 * mem[_28300]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24353 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24353] = 26
                                                mem[_24353 + 32] = 'SafeMath: division by zero'
                                                _24903 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24903] = 26
                                                mem[_24903 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24903 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29333 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29333]
                                                mem[_29333 + 32] = stor8
                                                require 1 < mem[_29333]
                                                mem[_29333 + 64] = stor7
                                                mem[_29333 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29333 + 100] = ext_call.return_data[0]
                                                mem[_29333 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29333 + 196] = this.address
                                                mem[_29333 + 228] = block.timestamp + 120
                                                mem[_29333 + 164] = 160
                                                mem[_29333 + 260] = mem[_29333]
                                                s = 0
                                                while s < 32 * mem[_29333]:
                                                    mem[s + _29333 + 292] = mem[s + _29333 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29333 + 260 len (32 * mem[_29333]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18685 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18685] = 26
                                        mem[_18685 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19645 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19645] = 26
                                            mem[_19645 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19645 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24135 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24135] = 26
                                                mem[_24135 + 32] = 'SafeMath: division by zero'
                                                _24709 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24709] = 26
                                                mem[_24709 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24709 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28294 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28294]
                                                mem[_28294 + 32] = stor8
                                                require 1 < mem[_28294]
                                                mem[_28294 + 64] = stor7
                                                mem[_28294 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28294 + 100] = ext_call.return_data[0]
                                                mem[_28294 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28294 + 196] = this.address
                                                mem[_28294 + 228] = block.timestamp + 120
                                                mem[_28294 + 164] = 160
                                                mem[_28294 + 260] = mem[_28294]
                                                s = 0
                                                while s < 32 * mem[_28294]:
                                                    mem[s + _28294 + 292] = mem[s + _28294 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28294 + 260 len (32 * mem[_28294]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24352 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24352] = 26
                                                mem[_24352 + 32] = 'SafeMath: division by zero'
                                                _24902 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24902] = 26
                                                mem[_24902 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24902 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29327 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29327]
                                                mem[_29327 + 32] = stor8
                                                require 1 < mem[_29327]
                                                mem[_29327 + 64] = stor7
                                                mem[_29327 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29327 + 100] = ext_call.return_data[0]
                                                mem[_29327 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29327 + 196] = this.address
                                                mem[_29327 + 228] = block.timestamp + 120
                                                mem[_29327 + 164] = 160
                                                mem[_29327 + 260] = mem[_29327]
                                                s = 0
                                                while s < 32 * mem[_29327]:
                                                    mem[s + _29327 + 292] = mem[s + _29327 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29327 + 260 len (32 * mem[_29327]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24518 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24518] = 26
                                            mem[_24518 + 32] = 'SafeMath: division by zero'
                                            _25262 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25262] = 26
                                            mem[_25262 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25262 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30237 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30237]
                                            mem[_30237 + 32] = stor8
                                            require 1 < mem[_30237]
                                            mem[_30237 + 64] = stor7
                                            mem[_30237 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30237 + 100] = ext_call.return_data[0]
                                            mem[_30237 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30237 + 196] = this.address
                                            mem[_30237 + 228] = block.timestamp + 120
                                            mem[_30237 + 164] = 160
                                            mem[_30237 + 260] = mem[_30237]
                                            s = 0
                                            while s < 32 * mem[_30237]:
                                                mem[s + _30237 + 292] = mem[s + _30237 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30237 + 260 len (32 * mem[_30237]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30237]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19765 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19765] = 26
                                        mem[_19765 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19765 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24351 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24351] = 26
                                            mem[_24351 + 32] = 'SafeMath: division by zero'
                                            _24901 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24901] = 26
                                            mem[_24901 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24901 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29321 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29321]
                                            mem[_29321 + 32] = stor8
                                            require 1 < mem[_29321]
                                            mem[_29321 + 64] = stor7
                                            mem[_29321 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29321 + 100] = ext_call.return_data[0]
                                            mem[_29321 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29321 + 196] = this.address
                                            mem[_29321 + 228] = block.timestamp + 120
                                            mem[_29321 + 164] = 160
                                            mem[_29321 + 260] = mem[_29321]
                                            s = 0
                                            while s < 32 * mem[_29321]:
                                                mem[s + _29321 + 292] = mem[s + _29321 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29321 + 260 len (32 * mem[_29321]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24517 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24517] = 26
                                                mem[_24517 + 32] = 'SafeMath: division by zero'
                                                _25261 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25261] = 26
                                                mem[_25261 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25261 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30231 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30231]
                                                mem[_30231 + 32] = stor8
                                                require 1 < mem[_30231]
                                                mem[_30231 + 64] = stor7
                                                mem[_30231 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30231 + 100] = ext_call.return_data[0]
                                                mem[_30231 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30231 + 196] = this.address
                                                mem[_30231 + 228] = block.timestamp + 120
                                                mem[_30231 + 164] = 160
                                                mem[_30231 + 260] = mem[_30231]
                                                s = 0
                                                while s < 32 * mem[_30231]:
                                                    mem[s + _30231 + 292] = mem[s + _30231 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30231 + 260 len (32 * mem[_30231]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30231]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24589 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24589] = 26
                                            mem[_24589 + 32] = 'SafeMath: division by zero'
                                            _25813 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25813] = 26
                                            mem[_25813 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25813 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30805 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30805]
                                            mem[_30805 + 32] = stor8
                                            require 1 < mem[_30805]
                                            mem[_30805 + 64] = stor7
                                            mem[_30805 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30805 + 100] = ext_call.return_data[0]
                                            mem[_30805 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30805 + 196] = this.address
                                            mem[_30805 + 228] = block.timestamp + 120
                                            mem[_30805 + 164] = 160
                                            mem[_30805 + 260] = mem[_30805]
                                            s = 0
                                            while s < 32 * mem[_30805]:
                                                mem[s + _30805 + 292] = mem[s + _30805 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30805 + 260 len (32 * mem[_30805]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                mem[96] = 26
                mem[128] = 'SafeMath: division by zero'
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    mem[160] = 26
                    mem[192] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17604 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17604] = 30
                                    mem[_17604 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17794 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17794 + 68] = mem[idx + _17604 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17794 + 68] = mem[_17794 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17794 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18636 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18636] = 26
                                        mem[_18636 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19548 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19548] = 26
                                        mem[_19548 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19548 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23964 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23964] = 26
                                            mem[_23964 + 32] = 'SafeMath: division by zero'
                                            _24636 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24636] = 26
                                            mem[_24636 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24636 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27321 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27321]
                                            mem[_27321 + 32] = stor8
                                            require 1 < mem[_27321]
                                            mem[_27321 + 64] = stor7
                                            mem[_27321 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27321 + 100] = ext_call.return_data[0]
                                            mem[_27321 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27321 + 196] = this.address
                                            mem[_27321 + 228] = block.timestamp + 120
                                            mem[_27321 + 164] = 160
                                            mem[_27321 + 260] = mem[_27321]
                                            s = 0
                                            while s < 32 * mem[_27321]:
                                                mem[s + _27321 + 292] = mem[s + _27321 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27321 + 260 len (32 * mem[_27321]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24132 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24132] = 26
                                                mem[_24132 + 32] = 'SafeMath: division by zero'
                                                _24708 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24708] = 26
                                                mem[_24708 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24708 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28279 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28279]
                                                mem[_28279 + 32] = stor8
                                                require 1 < mem[_28279]
                                                mem[_28279 + 64] = stor7
                                                mem[_28279 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28279 + 100] = ext_call.return_data[0]
                                                mem[_28279 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28279 + 196] = this.address
                                                mem[_28279 + 228] = block.timestamp + 120
                                                mem[_28279 + 164] = 160
                                                mem[_28279 + 260] = mem[_28279]
                                                s = 0
                                                while s < 32 * mem[_28279]:
                                                    mem[s + _28279 + 292] = mem[s + _28279 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28279 + 260 len (32 * mem[_28279]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24348 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24348] = 26
                                                mem[_24348 + 32] = 'SafeMath: division by zero'
                                                _24897 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24897] = 26
                                                mem[_24897 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24897 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29311 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29311]
                                                mem[_29311 + 32] = stor8
                                                require 1 < mem[_29311]
                                                mem[_29311 + 64] = stor7
                                                mem[_29311 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29311 + 100] = ext_call.return_data[0]
                                                mem[_29311 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29311 + 196] = this.address
                                                mem[_29311 + 228] = block.timestamp + 120
                                                mem[_29311 + 164] = 160
                                                mem[_29311 + 260] = mem[_29311]
                                                s = 0
                                                while s < 32 * mem[_29311]:
                                                    mem[s + _29311 + 292] = mem[s + _29311 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29311 + 260 len (32 * mem[_29311]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18684 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18684] = 26
                                        mem[_18684 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19644 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19644] = 26
                                            mem[_19644 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19644 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24131 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24131] = 26
                                                mem[_24131 + 32] = 'SafeMath: division by zero'
                                                _24707 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24707] = 26
                                                mem[_24707 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24707 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28273 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28273]
                                                mem[_28273 + 32] = stor8
                                                require 1 < mem[_28273]
                                                mem[_28273 + 64] = stor7
                                                mem[_28273 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28273 + 100] = ext_call.return_data[0]
                                                mem[_28273 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28273 + 196] = this.address
                                                mem[_28273 + 228] = block.timestamp + 120
                                                mem[_28273 + 164] = 160
                                                mem[_28273 + 260] = mem[_28273]
                                                s = 0
                                                while s < 32 * mem[_28273]:
                                                    mem[s + _28273 + 292] = mem[s + _28273 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28273 + 260 len (32 * mem[_28273]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24347 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24347] = 26
                                                mem[_24347 + 32] = 'SafeMath: division by zero'
                                                _24896 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24896] = 26
                                                mem[_24896 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24896 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29305 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29305]
                                                mem[_29305 + 32] = stor8
                                                require 1 < mem[_29305]
                                                mem[_29305 + 64] = stor7
                                                mem[_29305 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29305 + 100] = ext_call.return_data[0]
                                                mem[_29305 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29305 + 196] = this.address
                                                mem[_29305 + 228] = block.timestamp + 120
                                                mem[_29305 + 164] = 160
                                                mem[_29305 + 260] = mem[_29305]
                                                s = 0
                                                while s < 32 * mem[_29305]:
                                                    mem[s + _29305 + 292] = mem[s + _29305 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29305 + 260 len (32 * mem[_29305]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24516 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24516] = 26
                                            mem[_24516 + 32] = 'SafeMath: division by zero'
                                            _25253 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25253] = 26
                                            mem[_25253 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25253 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30221 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30221]
                                            mem[_30221 + 32] = stor8
                                            require 1 < mem[_30221]
                                            mem[_30221 + 64] = stor7
                                            mem[_30221 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30221 + 100] = ext_call.return_data[0]
                                            mem[_30221 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30221 + 196] = this.address
                                            mem[_30221 + 228] = block.timestamp + 120
                                            mem[_30221 + 164] = 160
                                            mem[_30221 + 260] = mem[_30221]
                                            s = 0
                                            while s < 32 * mem[_30221]:
                                                mem[s + _30221 + 292] = mem[s + _30221 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30221 + 260 len (32 * mem[_30221]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30221]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19761 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19761] = 26
                                        mem[_19761 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19761 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24346 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24346] = 26
                                            mem[_24346 + 32] = 'SafeMath: division by zero'
                                            _24895 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24895] = 26
                                            mem[_24895 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24895 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29299 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29299]
                                            mem[_29299 + 32] = stor8
                                            require 1 < mem[_29299]
                                            mem[_29299 + 64] = stor7
                                            mem[_29299 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29299 + 100] = ext_call.return_data[0]
                                            mem[_29299 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29299 + 196] = this.address
                                            mem[_29299 + 228] = block.timestamp + 120
                                            mem[_29299 + 164] = 160
                                            mem[_29299 + 260] = mem[_29299]
                                            s = 0
                                            while s < 32 * mem[_29299]:
                                                mem[s + _29299 + 292] = mem[s + _29299 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29299 + 260 len (32 * mem[_29299]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24515 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24515] = 26
                                                mem[_24515 + 32] = 'SafeMath: division by zero'
                                                _25252 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25252] = 26
                                                mem[_25252 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25252 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30215 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30215]
                                                mem[_30215 + 32] = stor8
                                                require 1 < mem[_30215]
                                                mem[_30215 + 64] = stor7
                                                mem[_30215 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30215 + 100] = ext_call.return_data[0]
                                                mem[_30215 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30215 + 196] = this.address
                                                mem[_30215 + 228] = block.timestamp + 120
                                                mem[_30215 + 164] = 160
                                                mem[_30215 + 260] = mem[_30215]
                                                s = 0
                                                while s < 32 * mem[_30215]:
                                                    mem[s + _30215 + 292] = mem[s + _30215 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30215 + 260 len (32 * mem[_30215]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30215]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24588 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24588] = 26
                                            mem[_24588 + 32] = 'SafeMath: division by zero'
                                            _25799 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25799] = 26
                                            mem[_25799 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25799 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30797 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30797]
                                            mem[_30797 + 32] = stor8
                                            require 1 < mem[_30797]
                                            mem[_30797 + 64] = stor7
                                            mem[_30797 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30797 + 100] = ext_call.return_data[0]
                                            mem[_30797 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30797 + 196] = this.address
                                            mem[_30797 + 228] = block.timestamp + 120
                                            mem[_30797 + 164] = 160
                                            mem[_30797 + 260] = mem[_30797]
                                            s = 0
                                            while s < 32 * mem[_30797]:
                                                mem[s + _30797 + 292] = mem[s + _30797 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30797 + 260 len (32 * mem[_30797]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17602 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17602] = 30
                                    mem[_17602 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17788 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17788 + 68] = mem[idx + _17602 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17788 + 68] = mem[_17788 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17788 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18635 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18635] = 26
                                        mem[_18635 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19545 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19545] = 26
                                        mem[_19545 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19545 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23961 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23961] = 26
                                            mem[_23961 + 32] = 'SafeMath: division by zero'
                                            _24635 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24635] = 26
                                            mem[_24635 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24635 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27302 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27302]
                                            mem[_27302 + 32] = stor8
                                            require 1 < mem[_27302]
                                            mem[_27302 + 64] = stor7
                                            mem[_27302 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27302 + 100] = ext_call.return_data[0]
                                            mem[_27302 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27302 + 196] = this.address
                                            mem[_27302 + 228] = block.timestamp + 120
                                            mem[_27302 + 164] = 160
                                            mem[_27302 + 260] = mem[_27302]
                                            s = 0
                                            while s < 32 * mem[_27302]:
                                                mem[s + _27302 + 292] = mem[s + _27302 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27302 + 260 len (32 * mem[_27302]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24128 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24128] = 26
                                                mem[_24128 + 32] = 'SafeMath: division by zero'
                                                _24706 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24706] = 26
                                                mem[_24706 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24706 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28258 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28258]
                                                mem[_28258 + 32] = stor8
                                                require 1 < mem[_28258]
                                                mem[_28258 + 64] = stor7
                                                mem[_28258 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28258 + 100] = ext_call.return_data[0]
                                                mem[_28258 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28258 + 196] = this.address
                                                mem[_28258 + 228] = block.timestamp + 120
                                                mem[_28258 + 164] = 160
                                                mem[_28258 + 260] = mem[_28258]
                                                s = 0
                                                while s < 32 * mem[_28258]:
                                                    mem[s + _28258 + 292] = mem[s + _28258 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28258 + 260 len (32 * mem[_28258]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24343 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24343] = 26
                                                mem[_24343 + 32] = 'SafeMath: division by zero'
                                                _24891 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24891] = 26
                                                mem[_24891 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24891 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29289 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29289]
                                                mem[_29289 + 32] = stor8
                                                require 1 < mem[_29289]
                                                mem[_29289 + 64] = stor7
                                                mem[_29289 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29289 + 100] = ext_call.return_data[0]
                                                mem[_29289 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29289 + 196] = this.address
                                                mem[_29289 + 228] = block.timestamp + 120
                                                mem[_29289 + 164] = 160
                                                mem[_29289 + 260] = mem[_29289]
                                                s = 0
                                                while s < 32 * mem[_29289]:
                                                    mem[s + _29289 + 292] = mem[s + _29289 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29289 + 260 len (32 * mem[_29289]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18683 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18683] = 26
                                        mem[_18683 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19643 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19643] = 26
                                            mem[_19643 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19643 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24127 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24127] = 26
                                                mem[_24127 + 32] = 'SafeMath: division by zero'
                                                _24705 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24705] = 26
                                                mem[_24705 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24705 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28252 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28252]
                                                mem[_28252 + 32] = stor8
                                                require 1 < mem[_28252]
                                                mem[_28252 + 64] = stor7
                                                mem[_28252 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28252 + 100] = ext_call.return_data[0]
                                                mem[_28252 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28252 + 196] = this.address
                                                mem[_28252 + 228] = block.timestamp + 120
                                                mem[_28252 + 164] = 160
                                                mem[_28252 + 260] = mem[_28252]
                                                s = 0
                                                while s < 32 * mem[_28252]:
                                                    mem[s + _28252 + 292] = mem[s + _28252 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28252 + 260 len (32 * mem[_28252]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24342 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24342] = 26
                                                mem[_24342 + 32] = 'SafeMath: division by zero'
                                                _24890 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24890] = 26
                                                mem[_24890 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24890 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29283 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29283]
                                                mem[_29283 + 32] = stor8
                                                require 1 < mem[_29283]
                                                mem[_29283 + 64] = stor7
                                                mem[_29283 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29283 + 100] = ext_call.return_data[0]
                                                mem[_29283 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29283 + 196] = this.address
                                                mem[_29283 + 228] = block.timestamp + 120
                                                mem[_29283 + 164] = 160
                                                mem[_29283 + 260] = mem[_29283]
                                                s = 0
                                                while s < 32 * mem[_29283]:
                                                    mem[s + _29283 + 292] = mem[s + _29283 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29283 + 260 len (32 * mem[_29283]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24514 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24514] = 26
                                            mem[_24514 + 32] = 'SafeMath: division by zero'
                                            _25244 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25244] = 26
                                            mem[_25244 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25244 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30205 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30205]
                                            mem[_30205 + 32] = stor8
                                            require 1 < mem[_30205]
                                            mem[_30205 + 64] = stor7
                                            mem[_30205 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30205 + 100] = ext_call.return_data[0]
                                            mem[_30205 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30205 + 196] = this.address
                                            mem[_30205 + 228] = block.timestamp + 120
                                            mem[_30205 + 164] = 160
                                            mem[_30205 + 260] = mem[_30205]
                                            s = 0
                                            while s < 32 * mem[_30205]:
                                                mem[s + _30205 + 292] = mem[s + _30205 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30205 + 260 len (32 * mem[_30205]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30205]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19757 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19757] = 26
                                        mem[_19757 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19757 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24341 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24341] = 26
                                            mem[_24341 + 32] = 'SafeMath: division by zero'
                                            _24889 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24889] = 26
                                            mem[_24889 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24889 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29277 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29277]
                                            mem[_29277 + 32] = stor8
                                            require 1 < mem[_29277]
                                            mem[_29277 + 64] = stor7
                                            mem[_29277 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29277 + 100] = ext_call.return_data[0]
                                            mem[_29277 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29277 + 196] = this.address
                                            mem[_29277 + 228] = block.timestamp + 120
                                            mem[_29277 + 164] = 160
                                            mem[_29277 + 260] = mem[_29277]
                                            s = 0
                                            while s < 32 * mem[_29277]:
                                                mem[s + _29277 + 292] = mem[s + _29277 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29277 + 260 len (32 * mem[_29277]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24513 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24513] = 26
                                                mem[_24513 + 32] = 'SafeMath: division by zero'
                                                _25243 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25243] = 26
                                                mem[_25243 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25243 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30199 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30199]
                                                mem[_30199 + 32] = stor8
                                                require 1 < mem[_30199]
                                                mem[_30199 + 64] = stor7
                                                mem[_30199 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30199 + 100] = ext_call.return_data[0]
                                                mem[_30199 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30199 + 196] = this.address
                                                mem[_30199 + 228] = block.timestamp + 120
                                                mem[_30199 + 164] = 160
                                                mem[_30199 + 260] = mem[_30199]
                                                s = 0
                                                while s < 32 * mem[_30199]:
                                                    mem[s + _30199 + 292] = mem[s + _30199 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30199 + 260 len (32 * mem[_30199]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30199]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24587 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24587] = 26
                                            mem[_24587 + 32] = 'SafeMath: division by zero'
                                            _25785 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25785] = 26
                                            mem[_25785 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25785 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30789 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30789]
                                            mem[_30789 + 32] = stor8
                                            require 1 < mem[_30789]
                                            mem[_30789 + 64] = stor7
                                            mem[_30789 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30789 + 100] = ext_call.return_data[0]
                                            mem[_30789 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30789 + 196] = this.address
                                            mem[_30789 + 228] = block.timestamp + 120
                                            mem[_30789 + 164] = 160
                                            mem[_30789 + 260] = mem[_30789]
                                            s = 0
                                            while s < 32 * mem[_30789]:
                                                mem[s + _30789 + 292] = mem[s + _30789 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30789 + 260 len (32 * mem[_30789]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17600 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17600] = 30
                                    mem[_17600 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17782 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17782 + 68] = mem[idx + _17600 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17782 + 68] = mem[_17782 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17782 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18634 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18634] = 26
                                        mem[_18634 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19542 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19542] = 26
                                        mem[_19542 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19542 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23958 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23958] = 26
                                            mem[_23958 + 32] = 'SafeMath: division by zero'
                                            _24634 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24634] = 26
                                            mem[_24634 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24634 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27283 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27283]
                                            mem[_27283 + 32] = stor8
                                            require 1 < mem[_27283]
                                            mem[_27283 + 64] = stor7
                                            mem[_27283 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27283 + 100] = ext_call.return_data[0]
                                            mem[_27283 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27283 + 196] = this.address
                                            mem[_27283 + 228] = block.timestamp + 120
                                            mem[_27283 + 164] = 160
                                            mem[_27283 + 260] = mem[_27283]
                                            s = 0
                                            while s < 32 * mem[_27283]:
                                                mem[s + _27283 + 292] = mem[s + _27283 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27283 + 260 len (32 * mem[_27283]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24124 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24124] = 26
                                                mem[_24124 + 32] = 'SafeMath: division by zero'
                                                _24704 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24704] = 26
                                                mem[_24704 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24704 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28237 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28237]
                                                mem[_28237 + 32] = stor8
                                                require 1 < mem[_28237]
                                                mem[_28237 + 64] = stor7
                                                mem[_28237 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28237 + 100] = ext_call.return_data[0]
                                                mem[_28237 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28237 + 196] = this.address
                                                mem[_28237 + 228] = block.timestamp + 120
                                                mem[_28237 + 164] = 160
                                                mem[_28237 + 260] = mem[_28237]
                                                s = 0
                                                while s < 32 * mem[_28237]:
                                                    mem[s + _28237 + 292] = mem[s + _28237 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28237 + 260 len (32 * mem[_28237]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24338 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24338] = 26
                                                mem[_24338 + 32] = 'SafeMath: division by zero'
                                                _24885 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24885] = 26
                                                mem[_24885 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24885 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29267 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29267]
                                                mem[_29267 + 32] = stor8
                                                require 1 < mem[_29267]
                                                mem[_29267 + 64] = stor7
                                                mem[_29267 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29267 + 100] = ext_call.return_data[0]
                                                mem[_29267 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29267 + 196] = this.address
                                                mem[_29267 + 228] = block.timestamp + 120
                                                mem[_29267 + 164] = 160
                                                mem[_29267 + 260] = mem[_29267]
                                                s = 0
                                                while s < 32 * mem[_29267]:
                                                    mem[s + _29267 + 292] = mem[s + _29267 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29267 + 260 len (32 * mem[_29267]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18682 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18682] = 26
                                        mem[_18682 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19642 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19642] = 26
                                            mem[_19642 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19642 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24123 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24123] = 26
                                                mem[_24123 + 32] = 'SafeMath: division by zero'
                                                _24703 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24703] = 26
                                                mem[_24703 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24703 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28231 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28231]
                                                mem[_28231 + 32] = stor8
                                                require 1 < mem[_28231]
                                                mem[_28231 + 64] = stor7
                                                mem[_28231 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28231 + 100] = ext_call.return_data[0]
                                                mem[_28231 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28231 + 196] = this.address
                                                mem[_28231 + 228] = block.timestamp + 120
                                                mem[_28231 + 164] = 160
                                                mem[_28231 + 260] = mem[_28231]
                                                s = 0
                                                while s < 32 * mem[_28231]:
                                                    mem[s + _28231 + 292] = mem[s + _28231 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28231 + 260 len (32 * mem[_28231]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24337 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24337] = 26
                                                mem[_24337 + 32] = 'SafeMath: division by zero'
                                                _24884 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24884] = 26
                                                mem[_24884 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24884 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29261 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29261]
                                                mem[_29261 + 32] = stor8
                                                require 1 < mem[_29261]
                                                mem[_29261 + 64] = stor7
                                                mem[_29261 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29261 + 100] = ext_call.return_data[0]
                                                mem[_29261 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29261 + 196] = this.address
                                                mem[_29261 + 228] = block.timestamp + 120
                                                mem[_29261 + 164] = 160
                                                mem[_29261 + 260] = mem[_29261]
                                                s = 0
                                                while s < 32 * mem[_29261]:
                                                    mem[s + _29261 + 292] = mem[s + _29261 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29261 + 260 len (32 * mem[_29261]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24512 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24512] = 26
                                            mem[_24512 + 32] = 'SafeMath: division by zero'
                                            _25235 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25235] = 26
                                            mem[_25235 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25235 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30189 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30189]
                                            mem[_30189 + 32] = stor8
                                            require 1 < mem[_30189]
                                            mem[_30189 + 64] = stor7
                                            mem[_30189 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30189 + 100] = ext_call.return_data[0]
                                            mem[_30189 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30189 + 196] = this.address
                                            mem[_30189 + 228] = block.timestamp + 120
                                            mem[_30189 + 164] = 160
                                            mem[_30189 + 260] = mem[_30189]
                                            s = 0
                                            while s < 32 * mem[_30189]:
                                                mem[s + _30189 + 292] = mem[s + _30189 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30189 + 260 len (32 * mem[_30189]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30189]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19753 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19753] = 26
                                        mem[_19753 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19753 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24336 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24336] = 26
                                            mem[_24336 + 32] = 'SafeMath: division by zero'
                                            _24883 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24883] = 26
                                            mem[_24883 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24883 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29255 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29255]
                                            mem[_29255 + 32] = stor8
                                            require 1 < mem[_29255]
                                            mem[_29255 + 64] = stor7
                                            mem[_29255 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29255 + 100] = ext_call.return_data[0]
                                            mem[_29255 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29255 + 196] = this.address
                                            mem[_29255 + 228] = block.timestamp + 120
                                            mem[_29255 + 164] = 160
                                            mem[_29255 + 260] = mem[_29255]
                                            s = 0
                                            while s < 32 * mem[_29255]:
                                                mem[s + _29255 + 292] = mem[s + _29255 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29255 + 260 len (32 * mem[_29255]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24511 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24511] = 26
                                                mem[_24511 + 32] = 'SafeMath: division by zero'
                                                _25234 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25234] = 26
                                                mem[_25234 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25234 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30183 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30183]
                                                mem[_30183 + 32] = stor8
                                                require 1 < mem[_30183]
                                                mem[_30183 + 64] = stor7
                                                mem[_30183 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30183 + 100] = ext_call.return_data[0]
                                                mem[_30183 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30183 + 196] = this.address
                                                mem[_30183 + 228] = block.timestamp + 120
                                                mem[_30183 + 164] = 160
                                                mem[_30183 + 260] = mem[_30183]
                                                s = 0
                                                while s < 32 * mem[_30183]:
                                                    mem[s + _30183 + 292] = mem[s + _30183 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30183 + 260 len (32 * mem[_30183]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30183]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24586 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24586] = 26
                                            mem[_24586 + 32] = 'SafeMath: division by zero'
                                            _25771 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25771] = 26
                                            mem[_25771 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25771 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30781 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30781]
                                            mem[_30781 + 32] = stor8
                                            require 1 < mem[_30781]
                                            mem[_30781 + 64] = stor7
                                            mem[_30781 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30781 + 100] = ext_call.return_data[0]
                                            mem[_30781 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30781 + 196] = this.address
                                            mem[_30781 + 228] = block.timestamp + 120
                                            mem[_30781 + 164] = 160
                                            mem[_30781 + 260] = mem[_30781]
                                            s = 0
                                            while s < 32 * mem[_30781]:
                                                mem[s + _30781 + 292] = mem[s + _30781 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30781 + 260 len (32 * mem[_30781]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17598 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17598] = 30
                                    mem[_17598 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17776 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17776 + 68] = mem[idx + _17598 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17776 + 68] = mem[_17776 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17776 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18633 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18633] = 26
                                        mem[_18633 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19539 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19539] = 26
                                        mem[_19539 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19539 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23955 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23955] = 26
                                            mem[_23955 + 32] = 'SafeMath: division by zero'
                                            _24633 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24633] = 26
                                            mem[_24633 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24633 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27264 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27264]
                                            mem[_27264 + 32] = stor8
                                            require 1 < mem[_27264]
                                            mem[_27264 + 64] = stor7
                                            mem[_27264 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27264 + 100] = ext_call.return_data[0]
                                            mem[_27264 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27264 + 196] = this.address
                                            mem[_27264 + 228] = block.timestamp + 120
                                            mem[_27264 + 164] = 160
                                            mem[_27264 + 260] = mem[_27264]
                                            s = 0
                                            while s < 32 * mem[_27264]:
                                                mem[s + _27264 + 292] = mem[s + _27264 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27264 + 260 len (32 * mem[_27264]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24120 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24120] = 26
                                                mem[_24120 + 32] = 'SafeMath: division by zero'
                                                _24702 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24702] = 26
                                                mem[_24702 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24702 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28216 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28216]
                                                mem[_28216 + 32] = stor8
                                                require 1 < mem[_28216]
                                                mem[_28216 + 64] = stor7
                                                mem[_28216 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28216 + 100] = ext_call.return_data[0]
                                                mem[_28216 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28216 + 196] = this.address
                                                mem[_28216 + 228] = block.timestamp + 120
                                                mem[_28216 + 164] = 160
                                                mem[_28216 + 260] = mem[_28216]
                                                s = 0
                                                while s < 32 * mem[_28216]:
                                                    mem[s + _28216 + 292] = mem[s + _28216 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28216 + 260 len (32 * mem[_28216]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24333 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24333] = 26
                                                mem[_24333 + 32] = 'SafeMath: division by zero'
                                                _24879 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24879] = 26
                                                mem[_24879 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24879 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29245 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29245]
                                                mem[_29245 + 32] = stor8
                                                require 1 < mem[_29245]
                                                mem[_29245 + 64] = stor7
                                                mem[_29245 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29245 + 100] = ext_call.return_data[0]
                                                mem[_29245 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29245 + 196] = this.address
                                                mem[_29245 + 228] = block.timestamp + 120
                                                mem[_29245 + 164] = 160
                                                mem[_29245 + 260] = mem[_29245]
                                                s = 0
                                                while s < 32 * mem[_29245]:
                                                    mem[s + _29245 + 292] = mem[s + _29245 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29245 + 260 len (32 * mem[_29245]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18681 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18681] = 26
                                        mem[_18681 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19641 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19641] = 26
                                            mem[_19641 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19641 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24119 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24119] = 26
                                                mem[_24119 + 32] = 'SafeMath: division by zero'
                                                _24701 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24701] = 26
                                                mem[_24701 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24701 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28210 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28210]
                                                mem[_28210 + 32] = stor8
                                                require 1 < mem[_28210]
                                                mem[_28210 + 64] = stor7
                                                mem[_28210 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28210 + 100] = ext_call.return_data[0]
                                                mem[_28210 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28210 + 196] = this.address
                                                mem[_28210 + 228] = block.timestamp + 120
                                                mem[_28210 + 164] = 160
                                                mem[_28210 + 260] = mem[_28210]
                                                s = 0
                                                while s < 32 * mem[_28210]:
                                                    mem[s + _28210 + 292] = mem[s + _28210 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28210 + 260 len (32 * mem[_28210]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24332 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24332] = 26
                                                mem[_24332 + 32] = 'SafeMath: division by zero'
                                                _24878 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24878] = 26
                                                mem[_24878 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24878 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29239 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29239]
                                                mem[_29239 + 32] = stor8
                                                require 1 < mem[_29239]
                                                mem[_29239 + 64] = stor7
                                                mem[_29239 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29239 + 100] = ext_call.return_data[0]
                                                mem[_29239 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29239 + 196] = this.address
                                                mem[_29239 + 228] = block.timestamp + 120
                                                mem[_29239 + 164] = 160
                                                mem[_29239 + 260] = mem[_29239]
                                                s = 0
                                                while s < 32 * mem[_29239]:
                                                    mem[s + _29239 + 292] = mem[s + _29239 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29239 + 260 len (32 * mem[_29239]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24510 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24510] = 26
                                            mem[_24510 + 32] = 'SafeMath: division by zero'
                                            _25226 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25226] = 26
                                            mem[_25226 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25226 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30173 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30173]
                                            mem[_30173 + 32] = stor8
                                            require 1 < mem[_30173]
                                            mem[_30173 + 64] = stor7
                                            mem[_30173 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30173 + 100] = ext_call.return_data[0]
                                            mem[_30173 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30173 + 196] = this.address
                                            mem[_30173 + 228] = block.timestamp + 120
                                            mem[_30173 + 164] = 160
                                            mem[_30173 + 260] = mem[_30173]
                                            s = 0
                                            while s < 32 * mem[_30173]:
                                                mem[s + _30173 + 292] = mem[s + _30173 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30173 + 260 len (32 * mem[_30173]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30173]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19749 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19749] = 26
                                        mem[_19749 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19749 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24331 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24331] = 26
                                            mem[_24331 + 32] = 'SafeMath: division by zero'
                                            _24877 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24877] = 26
                                            mem[_24877 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24877 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29233 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29233]
                                            mem[_29233 + 32] = stor8
                                            require 1 < mem[_29233]
                                            mem[_29233 + 64] = stor7
                                            mem[_29233 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29233 + 100] = ext_call.return_data[0]
                                            mem[_29233 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29233 + 196] = this.address
                                            mem[_29233 + 228] = block.timestamp + 120
                                            mem[_29233 + 164] = 160
                                            mem[_29233 + 260] = mem[_29233]
                                            s = 0
                                            while s < 32 * mem[_29233]:
                                                mem[s + _29233 + 292] = mem[s + _29233 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29233 + 260 len (32 * mem[_29233]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24509 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24509] = 26
                                                mem[_24509 + 32] = 'SafeMath: division by zero'
                                                _25225 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25225] = 26
                                                mem[_25225 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25225 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30167 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30167]
                                                mem[_30167 + 32] = stor8
                                                require 1 < mem[_30167]
                                                mem[_30167 + 64] = stor7
                                                mem[_30167 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30167 + 100] = ext_call.return_data[0]
                                                mem[_30167 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30167 + 196] = this.address
                                                mem[_30167 + 228] = block.timestamp + 120
                                                mem[_30167 + 164] = 160
                                                mem[_30167 + 260] = mem[_30167]
                                                s = 0
                                                while s < 32 * mem[_30167]:
                                                    mem[s + _30167 + 292] = mem[s + _30167 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30167 + 260 len (32 * mem[_30167]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30167]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24585 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24585] = 26
                                            mem[_24585 + 32] = 'SafeMath: division by zero'
                                            _25757 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25757] = 26
                                            mem[_25757 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25757 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30773 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30773]
                                            mem[_30773 + 32] = stor8
                                            require 1 < mem[_30773]
                                            mem[_30773 + 64] = stor7
                                            mem[_30773 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30773 + 100] = ext_call.return_data[0]
                                            mem[_30773 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30773 + 196] = this.address
                                            mem[_30773 + 228] = block.timestamp + 120
                                            mem[_30773 + 164] = 160
                                            mem[_30773 + 260] = mem[_30773]
                                            s = 0
                                            while s < 32 * mem[_30773]:
                                                mem[s + _30773 + 292] = mem[s + _30773 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30773 + 260 len (32 * mem[_30773]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                    mem[160] = 26
                    mem[192] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17596 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17596] = 30
                                    mem[_17596 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17770 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17770 + 68] = mem[idx + _17596 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17770 + 68] = mem[_17770 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17770 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18632 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18632] = 26
                                        mem[_18632 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19536 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19536] = 26
                                        mem[_19536 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19536 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23952 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23952] = 26
                                            mem[_23952 + 32] = 'SafeMath: division by zero'
                                            _24632 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24632] = 26
                                            mem[_24632 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24632 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27245 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27245]
                                            mem[_27245 + 32] = stor8
                                            require 1 < mem[_27245]
                                            mem[_27245 + 64] = stor7
                                            mem[_27245 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27245 + 100] = ext_call.return_data[0]
                                            mem[_27245 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27245 + 196] = this.address
                                            mem[_27245 + 228] = block.timestamp + 120
                                            mem[_27245 + 164] = 160
                                            mem[_27245 + 260] = mem[_27245]
                                            s = 0
                                            while s < 32 * mem[_27245]:
                                                mem[s + _27245 + 292] = mem[s + _27245 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27245 + 260 len (32 * mem[_27245]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24116 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24116] = 26
                                                mem[_24116 + 32] = 'SafeMath: division by zero'
                                                _24700 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24700] = 26
                                                mem[_24700 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24700 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28195 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28195]
                                                mem[_28195 + 32] = stor8
                                                require 1 < mem[_28195]
                                                mem[_28195 + 64] = stor7
                                                mem[_28195 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28195 + 100] = ext_call.return_data[0]
                                                mem[_28195 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28195 + 196] = this.address
                                                mem[_28195 + 228] = block.timestamp + 120
                                                mem[_28195 + 164] = 160
                                                mem[_28195 + 260] = mem[_28195]
                                                s = 0
                                                while s < 32 * mem[_28195]:
                                                    mem[s + _28195 + 292] = mem[s + _28195 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28195 + 260 len (32 * mem[_28195]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24328 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24328] = 26
                                                mem[_24328 + 32] = 'SafeMath: division by zero'
                                                _24873 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24873] = 26
                                                mem[_24873 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24873 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29223 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29223]
                                                mem[_29223 + 32] = stor8
                                                require 1 < mem[_29223]
                                                mem[_29223 + 64] = stor7
                                                mem[_29223 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29223 + 100] = ext_call.return_data[0]
                                                mem[_29223 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29223 + 196] = this.address
                                                mem[_29223 + 228] = block.timestamp + 120
                                                mem[_29223 + 164] = 160
                                                mem[_29223 + 260] = mem[_29223]
                                                s = 0
                                                while s < 32 * mem[_29223]:
                                                    mem[s + _29223 + 292] = mem[s + _29223 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29223 + 260 len (32 * mem[_29223]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18680 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18680] = 26
                                        mem[_18680 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19640 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19640] = 26
                                            mem[_19640 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19640 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24115 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24115] = 26
                                                mem[_24115 + 32] = 'SafeMath: division by zero'
                                                _24699 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24699] = 26
                                                mem[_24699 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24699 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28189 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28189]
                                                mem[_28189 + 32] = stor8
                                                require 1 < mem[_28189]
                                                mem[_28189 + 64] = stor7
                                                mem[_28189 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28189 + 100] = ext_call.return_data[0]
                                                mem[_28189 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28189 + 196] = this.address
                                                mem[_28189 + 228] = block.timestamp + 120
                                                mem[_28189 + 164] = 160
                                                mem[_28189 + 260] = mem[_28189]
                                                s = 0
                                                while s < 32 * mem[_28189]:
                                                    mem[s + _28189 + 292] = mem[s + _28189 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28189 + 260 len (32 * mem[_28189]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24327 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24327] = 26
                                                mem[_24327 + 32] = 'SafeMath: division by zero'
                                                _24872 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24872] = 26
                                                mem[_24872 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24872 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29217 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29217]
                                                mem[_29217 + 32] = stor8
                                                require 1 < mem[_29217]
                                                mem[_29217 + 64] = stor7
                                                mem[_29217 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29217 + 100] = ext_call.return_data[0]
                                                mem[_29217 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29217 + 196] = this.address
                                                mem[_29217 + 228] = block.timestamp + 120
                                                mem[_29217 + 164] = 160
                                                mem[_29217 + 260] = mem[_29217]
                                                s = 0
                                                while s < 32 * mem[_29217]:
                                                    mem[s + _29217 + 292] = mem[s + _29217 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29217 + 260 len (32 * mem[_29217]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24508 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24508] = 26
                                            mem[_24508 + 32] = 'SafeMath: division by zero'
                                            _25217 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25217] = 26
                                            mem[_25217 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25217 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30157 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30157]
                                            mem[_30157 + 32] = stor8
                                            require 1 < mem[_30157]
                                            mem[_30157 + 64] = stor7
                                            mem[_30157 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30157 + 100] = ext_call.return_data[0]
                                            mem[_30157 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30157 + 196] = this.address
                                            mem[_30157 + 228] = block.timestamp + 120
                                            mem[_30157 + 164] = 160
                                            mem[_30157 + 260] = mem[_30157]
                                            s = 0
                                            while s < 32 * mem[_30157]:
                                                mem[s + _30157 + 292] = mem[s + _30157 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30157 + 260 len (32 * mem[_30157]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30157]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19745 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19745] = 26
                                        mem[_19745 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19745 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24326 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24326] = 26
                                            mem[_24326 + 32] = 'SafeMath: division by zero'
                                            _24871 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24871] = 26
                                            mem[_24871 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24871 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29211 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29211]
                                            mem[_29211 + 32] = stor8
                                            require 1 < mem[_29211]
                                            mem[_29211 + 64] = stor7
                                            mem[_29211 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29211 + 100] = ext_call.return_data[0]
                                            mem[_29211 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29211 + 196] = this.address
                                            mem[_29211 + 228] = block.timestamp + 120
                                            mem[_29211 + 164] = 160
                                            mem[_29211 + 260] = mem[_29211]
                                            s = 0
                                            while s < 32 * mem[_29211]:
                                                mem[s + _29211 + 292] = mem[s + _29211 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29211 + 260 len (32 * mem[_29211]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24507 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24507] = 26
                                                mem[_24507 + 32] = 'SafeMath: division by zero'
                                                _25216 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25216] = 26
                                                mem[_25216 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25216 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30151 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30151]
                                                mem[_30151 + 32] = stor8
                                                require 1 < mem[_30151]
                                                mem[_30151 + 64] = stor7
                                                mem[_30151 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30151 + 100] = ext_call.return_data[0]
                                                mem[_30151 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30151 + 196] = this.address
                                                mem[_30151 + 228] = block.timestamp + 120
                                                mem[_30151 + 164] = 160
                                                mem[_30151 + 260] = mem[_30151]
                                                s = 0
                                                while s < 32 * mem[_30151]:
                                                    mem[s + _30151 + 292] = mem[s + _30151 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30151 + 260 len (32 * mem[_30151]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30151]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24584 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24584] = 26
                                            mem[_24584 + 32] = 'SafeMath: division by zero'
                                            _25743 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25743] = 26
                                            mem[_25743 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25743 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30765 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30765]
                                            mem[_30765 + 32] = stor8
                                            require 1 < mem[_30765]
                                            mem[_30765 + 64] = stor7
                                            mem[_30765 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30765 + 100] = ext_call.return_data[0]
                                            mem[_30765 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30765 + 196] = this.address
                                            mem[_30765 + 228] = block.timestamp + 120
                                            mem[_30765 + 164] = 160
                                            mem[_30765 + 260] = mem[_30765]
                                            s = 0
                                            while s < 32 * mem[_30765]:
                                                mem[s + _30765 + 292] = mem[s + _30765 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30765 + 260 len (32 * mem[_30765]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17594 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17594] = 30
                                    mem[_17594 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17764 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17764 + 68] = mem[idx + _17594 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17764 + 68] = mem[_17764 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17764 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18631 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18631] = 26
                                        mem[_18631 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19533 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19533] = 26
                                        mem[_19533 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19533 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23949 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23949] = 26
                                            mem[_23949 + 32] = 'SafeMath: division by zero'
                                            _24631 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24631] = 26
                                            mem[_24631 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24631 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27226 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27226]
                                            mem[_27226 + 32] = stor8
                                            require 1 < mem[_27226]
                                            mem[_27226 + 64] = stor7
                                            mem[_27226 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27226 + 100] = ext_call.return_data[0]
                                            mem[_27226 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27226 + 196] = this.address
                                            mem[_27226 + 228] = block.timestamp + 120
                                            mem[_27226 + 164] = 160
                                            mem[_27226 + 260] = mem[_27226]
                                            s = 0
                                            while s < 32 * mem[_27226]:
                                                mem[s + _27226 + 292] = mem[s + _27226 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27226 + 260 len (32 * mem[_27226]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24112 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24112] = 26
                                                mem[_24112 + 32] = 'SafeMath: division by zero'
                                                _24698 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24698] = 26
                                                mem[_24698 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24698 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28174 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28174]
                                                mem[_28174 + 32] = stor8
                                                require 1 < mem[_28174]
                                                mem[_28174 + 64] = stor7
                                                mem[_28174 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28174 + 100] = ext_call.return_data[0]
                                                mem[_28174 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28174 + 196] = this.address
                                                mem[_28174 + 228] = block.timestamp + 120
                                                mem[_28174 + 164] = 160
                                                mem[_28174 + 260] = mem[_28174]
                                                s = 0
                                                while s < 32 * mem[_28174]:
                                                    mem[s + _28174 + 292] = mem[s + _28174 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28174 + 260 len (32 * mem[_28174]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24323 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24323] = 26
                                                mem[_24323 + 32] = 'SafeMath: division by zero'
                                                _24867 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24867] = 26
                                                mem[_24867 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24867 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29201 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29201]
                                                mem[_29201 + 32] = stor8
                                                require 1 < mem[_29201]
                                                mem[_29201 + 64] = stor7
                                                mem[_29201 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29201 + 100] = ext_call.return_data[0]
                                                mem[_29201 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29201 + 196] = this.address
                                                mem[_29201 + 228] = block.timestamp + 120
                                                mem[_29201 + 164] = 160
                                                mem[_29201 + 260] = mem[_29201]
                                                s = 0
                                                while s < 32 * mem[_29201]:
                                                    mem[s + _29201 + 292] = mem[s + _29201 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29201 + 260 len (32 * mem[_29201]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18679 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18679] = 26
                                        mem[_18679 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19639 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19639] = 26
                                            mem[_19639 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19639 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24111 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24111] = 26
                                                mem[_24111 + 32] = 'SafeMath: division by zero'
                                                _24697 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24697] = 26
                                                mem[_24697 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24697 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28168 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28168]
                                                mem[_28168 + 32] = stor8
                                                require 1 < mem[_28168]
                                                mem[_28168 + 64] = stor7
                                                mem[_28168 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28168 + 100] = ext_call.return_data[0]
                                                mem[_28168 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28168 + 196] = this.address
                                                mem[_28168 + 228] = block.timestamp + 120
                                                mem[_28168 + 164] = 160
                                                mem[_28168 + 260] = mem[_28168]
                                                s = 0
                                                while s < 32 * mem[_28168]:
                                                    mem[s + _28168 + 292] = mem[s + _28168 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28168 + 260 len (32 * mem[_28168]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24322 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24322] = 26
                                                mem[_24322 + 32] = 'SafeMath: division by zero'
                                                _24866 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24866] = 26
                                                mem[_24866 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24866 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29195 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29195]
                                                mem[_29195 + 32] = stor8
                                                require 1 < mem[_29195]
                                                mem[_29195 + 64] = stor7
                                                mem[_29195 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29195 + 100] = ext_call.return_data[0]
                                                mem[_29195 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29195 + 196] = this.address
                                                mem[_29195 + 228] = block.timestamp + 120
                                                mem[_29195 + 164] = 160
                                                mem[_29195 + 260] = mem[_29195]
                                                s = 0
                                                while s < 32 * mem[_29195]:
                                                    mem[s + _29195 + 292] = mem[s + _29195 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29195 + 260 len (32 * mem[_29195]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24506 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24506] = 26
                                            mem[_24506 + 32] = 'SafeMath: division by zero'
                                            _25208 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25208] = 26
                                            mem[_25208 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25208 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30141 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30141]
                                            mem[_30141 + 32] = stor8
                                            require 1 < mem[_30141]
                                            mem[_30141 + 64] = stor7
                                            mem[_30141 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30141 + 100] = ext_call.return_data[0]
                                            mem[_30141 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30141 + 196] = this.address
                                            mem[_30141 + 228] = block.timestamp + 120
                                            mem[_30141 + 164] = 160
                                            mem[_30141 + 260] = mem[_30141]
                                            s = 0
                                            while s < 32 * mem[_30141]:
                                                mem[s + _30141 + 292] = mem[s + _30141 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30141 + 260 len (32 * mem[_30141]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30141]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19741 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19741] = 26
                                        mem[_19741 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19741 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24321 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24321] = 26
                                            mem[_24321 + 32] = 'SafeMath: division by zero'
                                            _24865 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24865] = 26
                                            mem[_24865 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24865 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29189 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29189]
                                            mem[_29189 + 32] = stor8
                                            require 1 < mem[_29189]
                                            mem[_29189 + 64] = stor7
                                            mem[_29189 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29189 + 100] = ext_call.return_data[0]
                                            mem[_29189 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29189 + 196] = this.address
                                            mem[_29189 + 228] = block.timestamp + 120
                                            mem[_29189 + 164] = 160
                                            mem[_29189 + 260] = mem[_29189]
                                            s = 0
                                            while s < 32 * mem[_29189]:
                                                mem[s + _29189 + 292] = mem[s + _29189 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29189 + 260 len (32 * mem[_29189]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24505 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24505] = 26
                                                mem[_24505 + 32] = 'SafeMath: division by zero'
                                                _25207 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25207] = 26
                                                mem[_25207 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25207 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30135 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30135]
                                                mem[_30135 + 32] = stor8
                                                require 1 < mem[_30135]
                                                mem[_30135 + 64] = stor7
                                                mem[_30135 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30135 + 100] = ext_call.return_data[0]
                                                mem[_30135 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30135 + 196] = this.address
                                                mem[_30135 + 228] = block.timestamp + 120
                                                mem[_30135 + 164] = 160
                                                mem[_30135 + 260] = mem[_30135]
                                                s = 0
                                                while s < 32 * mem[_30135]:
                                                    mem[s + _30135 + 292] = mem[s + _30135 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30135 + 260 len (32 * mem[_30135]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30135]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24583 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24583] = 26
                                            mem[_24583 + 32] = 'SafeMath: division by zero'
                                            _25729 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25729] = 26
                                            mem[_25729 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25729 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30757 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30757]
                                            mem[_30757 + 32] = stor8
                                            require 1 < mem[_30757]
                                            mem[_30757 + 64] = stor7
                                            mem[_30757 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30757 + 100] = ext_call.return_data[0]
                                            mem[_30757 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30757 + 196] = this.address
                                            mem[_30757 + 228] = block.timestamp + 120
                                            mem[_30757 + 164] = 160
                                            mem[_30757 + 260] = mem[_30757]
                                            s = 0
                                            while s < 32 * mem[_30757]:
                                                mem[s + _30757 + 292] = mem[s + _30757 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30757 + 260 len (32 * mem[_30757]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17592 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17592] = 30
                                    mem[_17592 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17758 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17758 + 68] = mem[idx + _17592 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17758 + 68] = mem[_17758 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17758 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18630 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18630] = 26
                                        mem[_18630 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19530 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19530] = 26
                                        mem[_19530 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19530 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23946 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23946] = 26
                                            mem[_23946 + 32] = 'SafeMath: division by zero'
                                            _24630 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24630] = 26
                                            mem[_24630 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24630 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27207 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27207]
                                            mem[_27207 + 32] = stor8
                                            require 1 < mem[_27207]
                                            mem[_27207 + 64] = stor7
                                            mem[_27207 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27207 + 100] = ext_call.return_data[0]
                                            mem[_27207 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27207 + 196] = this.address
                                            mem[_27207 + 228] = block.timestamp + 120
                                            mem[_27207 + 164] = 160
                                            mem[_27207 + 260] = mem[_27207]
                                            s = 0
                                            while s < 32 * mem[_27207]:
                                                mem[s + _27207 + 292] = mem[s + _27207 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27207 + 260 len (32 * mem[_27207]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24108 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24108] = 26
                                                mem[_24108 + 32] = 'SafeMath: division by zero'
                                                _24696 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24696] = 26
                                                mem[_24696 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24696 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28153 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28153]
                                                mem[_28153 + 32] = stor8
                                                require 1 < mem[_28153]
                                                mem[_28153 + 64] = stor7
                                                mem[_28153 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28153 + 100] = ext_call.return_data[0]
                                                mem[_28153 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28153 + 196] = this.address
                                                mem[_28153 + 228] = block.timestamp + 120
                                                mem[_28153 + 164] = 160
                                                mem[_28153 + 260] = mem[_28153]
                                                s = 0
                                                while s < 32 * mem[_28153]:
                                                    mem[s + _28153 + 292] = mem[s + _28153 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28153 + 260 len (32 * mem[_28153]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24318 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24318] = 26
                                                mem[_24318 + 32] = 'SafeMath: division by zero'
                                                _24861 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24861] = 26
                                                mem[_24861 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24861 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29179 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29179]
                                                mem[_29179 + 32] = stor8
                                                require 1 < mem[_29179]
                                                mem[_29179 + 64] = stor7
                                                mem[_29179 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29179 + 100] = ext_call.return_data[0]
                                                mem[_29179 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29179 + 196] = this.address
                                                mem[_29179 + 228] = block.timestamp + 120
                                                mem[_29179 + 164] = 160
                                                mem[_29179 + 260] = mem[_29179]
                                                s = 0
                                                while s < 32 * mem[_29179]:
                                                    mem[s + _29179 + 292] = mem[s + _29179 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29179 + 260 len (32 * mem[_29179]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18678 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18678] = 26
                                        mem[_18678 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19638 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19638] = 26
                                            mem[_19638 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19638 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24107 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24107] = 26
                                                mem[_24107 + 32] = 'SafeMath: division by zero'
                                                _24695 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24695] = 26
                                                mem[_24695 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24695 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28147 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28147]
                                                mem[_28147 + 32] = stor8
                                                require 1 < mem[_28147]
                                                mem[_28147 + 64] = stor7
                                                mem[_28147 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28147 + 100] = ext_call.return_data[0]
                                                mem[_28147 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28147 + 196] = this.address
                                                mem[_28147 + 228] = block.timestamp + 120
                                                mem[_28147 + 164] = 160
                                                mem[_28147 + 260] = mem[_28147]
                                                s = 0
                                                while s < 32 * mem[_28147]:
                                                    mem[s + _28147 + 292] = mem[s + _28147 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28147 + 260 len (32 * mem[_28147]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24317 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24317] = 26
                                                mem[_24317 + 32] = 'SafeMath: division by zero'
                                                _24860 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24860] = 26
                                                mem[_24860 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24860 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29173 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29173]
                                                mem[_29173 + 32] = stor8
                                                require 1 < mem[_29173]
                                                mem[_29173 + 64] = stor7
                                                mem[_29173 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29173 + 100] = ext_call.return_data[0]
                                                mem[_29173 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29173 + 196] = this.address
                                                mem[_29173 + 228] = block.timestamp + 120
                                                mem[_29173 + 164] = 160
                                                mem[_29173 + 260] = mem[_29173]
                                                s = 0
                                                while s < 32 * mem[_29173]:
                                                    mem[s + _29173 + 292] = mem[s + _29173 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29173 + 260 len (32 * mem[_29173]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24504 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24504] = 26
                                            mem[_24504 + 32] = 'SafeMath: division by zero'
                                            _25199 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25199] = 26
                                            mem[_25199 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25199 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30125 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30125]
                                            mem[_30125 + 32] = stor8
                                            require 1 < mem[_30125]
                                            mem[_30125 + 64] = stor7
                                            mem[_30125 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30125 + 100] = ext_call.return_data[0]
                                            mem[_30125 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30125 + 196] = this.address
                                            mem[_30125 + 228] = block.timestamp + 120
                                            mem[_30125 + 164] = 160
                                            mem[_30125 + 260] = mem[_30125]
                                            s = 0
                                            while s < 32 * mem[_30125]:
                                                mem[s + _30125 + 292] = mem[s + _30125 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30125 + 260 len (32 * mem[_30125]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30125]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19737 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19737] = 26
                                        mem[_19737 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19737 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24316 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24316] = 26
                                            mem[_24316 + 32] = 'SafeMath: division by zero'
                                            _24859 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24859] = 26
                                            mem[_24859 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24859 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29167 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29167]
                                            mem[_29167 + 32] = stor8
                                            require 1 < mem[_29167]
                                            mem[_29167 + 64] = stor7
                                            mem[_29167 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29167 + 100] = ext_call.return_data[0]
                                            mem[_29167 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29167 + 196] = this.address
                                            mem[_29167 + 228] = block.timestamp + 120
                                            mem[_29167 + 164] = 160
                                            mem[_29167 + 260] = mem[_29167]
                                            s = 0
                                            while s < 32 * mem[_29167]:
                                                mem[s + _29167 + 292] = mem[s + _29167 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29167 + 260 len (32 * mem[_29167]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24503 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24503] = 26
                                                mem[_24503 + 32] = 'SafeMath: division by zero'
                                                _25198 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25198] = 26
                                                mem[_25198 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25198 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30119 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30119]
                                                mem[_30119 + 32] = stor8
                                                require 1 < mem[_30119]
                                                mem[_30119 + 64] = stor7
                                                mem[_30119 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30119 + 100] = ext_call.return_data[0]
                                                mem[_30119 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30119 + 196] = this.address
                                                mem[_30119 + 228] = block.timestamp + 120
                                                mem[_30119 + 164] = 160
                                                mem[_30119 + 260] = mem[_30119]
                                                s = 0
                                                while s < 32 * mem[_30119]:
                                                    mem[s + _30119 + 292] = mem[s + _30119 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30119 + 260 len (32 * mem[_30119]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30119]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24582 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24582] = 26
                                            mem[_24582 + 32] = 'SafeMath: division by zero'
                                            _25715 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25715] = 26
                                            mem[_25715 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25715 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30749 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30749]
                                            mem[_30749 + 32] = stor8
                                            require 1 < mem[_30749]
                                            mem[_30749 + 64] = stor7
                                            mem[_30749 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30749 + 100] = ext_call.return_data[0]
                                            mem[_30749 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30749 + 196] = this.address
                                            mem[_30749 + 228] = block.timestamp + 120
                                            mem[_30749 + 164] = 160
                                            mem[_30749 + 260] = mem[_30749]
                                            s = 0
                                            while s < 32 * mem[_30749]:
                                                mem[s + _30749 + 292] = mem[s + _30749 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30749 + 260 len (32 * mem[_30749]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17590 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17590] = 30
                                    mem[_17590 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17752 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17752 + 68] = mem[idx + _17590 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17752 + 68] = mem[_17752 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17752 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18629 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18629] = 26
                                        mem[_18629 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19527 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19527] = 26
                                        mem[_19527 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19527 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23943 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23943] = 26
                                            mem[_23943 + 32] = 'SafeMath: division by zero'
                                            _24629 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24629] = 26
                                            mem[_24629 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24629 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27188 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27188]
                                            mem[_27188 + 32] = stor8
                                            require 1 < mem[_27188]
                                            mem[_27188 + 64] = stor7
                                            mem[_27188 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27188 + 100] = ext_call.return_data[0]
                                            mem[_27188 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27188 + 196] = this.address
                                            mem[_27188 + 228] = block.timestamp + 120
                                            mem[_27188 + 164] = 160
                                            mem[_27188 + 260] = mem[_27188]
                                            s = 0
                                            while s < 32 * mem[_27188]:
                                                mem[s + _27188 + 292] = mem[s + _27188 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27188 + 260 len (32 * mem[_27188]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24104 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24104] = 26
                                                mem[_24104 + 32] = 'SafeMath: division by zero'
                                                _24694 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24694] = 26
                                                mem[_24694 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24694 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28132 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28132]
                                                mem[_28132 + 32] = stor8
                                                require 1 < mem[_28132]
                                                mem[_28132 + 64] = stor7
                                                mem[_28132 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28132 + 100] = ext_call.return_data[0]
                                                mem[_28132 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28132 + 196] = this.address
                                                mem[_28132 + 228] = block.timestamp + 120
                                                mem[_28132 + 164] = 160
                                                mem[_28132 + 260] = mem[_28132]
                                                s = 0
                                                while s < 32 * mem[_28132]:
                                                    mem[s + _28132 + 292] = mem[s + _28132 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28132 + 260 len (32 * mem[_28132]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24313 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24313] = 26
                                                mem[_24313 + 32] = 'SafeMath: division by zero'
                                                _24855 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24855] = 26
                                                mem[_24855 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24855 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29157 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29157]
                                                mem[_29157 + 32] = stor8
                                                require 1 < mem[_29157]
                                                mem[_29157 + 64] = stor7
                                                mem[_29157 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29157 + 100] = ext_call.return_data[0]
                                                mem[_29157 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29157 + 196] = this.address
                                                mem[_29157 + 228] = block.timestamp + 120
                                                mem[_29157 + 164] = 160
                                                mem[_29157 + 260] = mem[_29157]
                                                s = 0
                                                while s < 32 * mem[_29157]:
                                                    mem[s + _29157 + 292] = mem[s + _29157 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29157 + 260 len (32 * mem[_29157]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18677 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18677] = 26
                                        mem[_18677 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19637 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19637] = 26
                                            mem[_19637 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19637 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24103 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24103] = 26
                                                mem[_24103 + 32] = 'SafeMath: division by zero'
                                                _24693 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24693] = 26
                                                mem[_24693 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24693 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28126 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28126]
                                                mem[_28126 + 32] = stor8
                                                require 1 < mem[_28126]
                                                mem[_28126 + 64] = stor7
                                                mem[_28126 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28126 + 100] = ext_call.return_data[0]
                                                mem[_28126 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28126 + 196] = this.address
                                                mem[_28126 + 228] = block.timestamp + 120
                                                mem[_28126 + 164] = 160
                                                mem[_28126 + 260] = mem[_28126]
                                                s = 0
                                                while s < 32 * mem[_28126]:
                                                    mem[s + _28126 + 292] = mem[s + _28126 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28126 + 260 len (32 * mem[_28126]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24312 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24312] = 26
                                                mem[_24312 + 32] = 'SafeMath: division by zero'
                                                _24854 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24854] = 26
                                                mem[_24854 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24854 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29151 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29151]
                                                mem[_29151 + 32] = stor8
                                                require 1 < mem[_29151]
                                                mem[_29151 + 64] = stor7
                                                mem[_29151 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29151 + 100] = ext_call.return_data[0]
                                                mem[_29151 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29151 + 196] = this.address
                                                mem[_29151 + 228] = block.timestamp + 120
                                                mem[_29151 + 164] = 160
                                                mem[_29151 + 260] = mem[_29151]
                                                s = 0
                                                while s < 32 * mem[_29151]:
                                                    mem[s + _29151 + 292] = mem[s + _29151 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29151 + 260 len (32 * mem[_29151]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24502 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24502] = 26
                                            mem[_24502 + 32] = 'SafeMath: division by zero'
                                            _25190 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25190] = 26
                                            mem[_25190 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25190 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30109 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30109]
                                            mem[_30109 + 32] = stor8
                                            require 1 < mem[_30109]
                                            mem[_30109 + 64] = stor7
                                            mem[_30109 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30109 + 100] = ext_call.return_data[0]
                                            mem[_30109 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30109 + 196] = this.address
                                            mem[_30109 + 228] = block.timestamp + 120
                                            mem[_30109 + 164] = 160
                                            mem[_30109 + 260] = mem[_30109]
                                            s = 0
                                            while s < 32 * mem[_30109]:
                                                mem[s + _30109 + 292] = mem[s + _30109 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30109 + 260 len (32 * mem[_30109]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30109]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19733 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19733] = 26
                                        mem[_19733 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19733 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24311 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24311] = 26
                                            mem[_24311 + 32] = 'SafeMath: division by zero'
                                            _24853 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24853] = 26
                                            mem[_24853 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24853 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29145 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29145]
                                            mem[_29145 + 32] = stor8
                                            require 1 < mem[_29145]
                                            mem[_29145 + 64] = stor7
                                            mem[_29145 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29145 + 100] = ext_call.return_data[0]
                                            mem[_29145 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29145 + 196] = this.address
                                            mem[_29145 + 228] = block.timestamp + 120
                                            mem[_29145 + 164] = 160
                                            mem[_29145 + 260] = mem[_29145]
                                            s = 0
                                            while s < 32 * mem[_29145]:
                                                mem[s + _29145 + 292] = mem[s + _29145 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29145 + 260 len (32 * mem[_29145]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24501 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24501] = 26
                                                mem[_24501 + 32] = 'SafeMath: division by zero'
                                                _25189 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25189] = 26
                                                mem[_25189 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25189 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30103 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30103]
                                                mem[_30103 + 32] = stor8
                                                require 1 < mem[_30103]
                                                mem[_30103 + 64] = stor7
                                                mem[_30103 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30103 + 100] = ext_call.return_data[0]
                                                mem[_30103 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30103 + 196] = this.address
                                                mem[_30103 + 228] = block.timestamp + 120
                                                mem[_30103 + 164] = 160
                                                mem[_30103 + 260] = mem[_30103]
                                                s = 0
                                                while s < 32 * mem[_30103]:
                                                    mem[s + _30103 + 292] = mem[s + _30103 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30103 + 260 len (32 * mem[_30103]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30103]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24581 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24581] = 26
                                            mem[_24581 + 32] = 'SafeMath: division by zero'
                                            _25701 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25701] = 26
                                            mem[_25701 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25701 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30741 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30741]
                                            mem[_30741 + 32] = stor8
                                            require 1 < mem[_30741]
                                            mem[_30741 + 64] = stor7
                                            mem[_30741 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30741 + 100] = ext_call.return_data[0]
                                            mem[_30741 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30741 + 196] = this.address
                                            mem[_30741 + 228] = block.timestamp + 120
                                            mem[_30741 + 164] = 160
                                            mem[_30741 + 260] = mem[_30741]
                                            s = 0
                                            while s < 32 * mem[_30741]:
                                                mem[s + _30741 + 292] = mem[s + _30741 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30741 + 260 len (32 * mem[_30741]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
        else:
            require msg.sender == owner
            require ext_code.size(stor7)
            staticcall stor7.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor12)
            staticcall stor12.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
            staticcall 0xe45ac34e528907d0a0239ab5db507688070b20bf.exchangeRateStored() with:
                    gas gas_remaining wei
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                mem[96] = 26
                mem[128] = 'SafeMath: division by zero'
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    mem[160] = 26
                    mem[192] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17652 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17652] = 30
                                    mem[_17652 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17938 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17938 + 68] = mem[idx + _17652 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17938 + 68] = mem[_17938 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17938 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18660 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18660] = 26
                                        mem[_18660 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19620 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19620] = 26
                                        mem[_19620 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19620 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24036 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24036] = 26
                                            mem[_24036 + 32] = 'SafeMath: division by zero'
                                            _24660 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24660] = 26
                                            mem[_24660 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24660 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27777 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27777]
                                            mem[_27777 + 32] = stor8
                                            require 1 < mem[_27777]
                                            mem[_27777 + 64] = stor7
                                            mem[_27777 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27777 + 100] = ext_call.return_data[0]
                                            mem[_27777 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27777 + 196] = this.address
                                            mem[_27777 + 228] = block.timestamp + 120
                                            mem[_27777 + 164] = 160
                                            mem[_27777 + 260] = mem[_27777]
                                            s = 0
                                            while s < 32 * mem[_27777]:
                                                mem[s + _27777 + 292] = mem[s + _27777 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27777 + 260 len (32 * mem[_27777]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24228 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24228] = 26
                                                mem[_24228 + 32] = 'SafeMath: division by zero'
                                                _24756 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24756] = 26
                                                mem[_24756 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24756 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28783 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28783]
                                                mem[_28783 + 32] = stor8
                                                require 1 < mem[_28783]
                                                mem[_28783 + 64] = stor7
                                                mem[_28783 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28783 + 100] = ext_call.return_data[0]
                                                mem[_28783 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28783 + 196] = this.address
                                                mem[_28783 + 228] = block.timestamp + 120
                                                mem[_28783 + 164] = 160
                                                mem[_28783 + 260] = mem[_28783]
                                                s = 0
                                                while s < 32 * mem[_28783]:
                                                    mem[s + _28783 + 292] = mem[s + _28783 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28783 + 260 len (32 * mem[_28783]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24468 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24468] = 26
                                                mem[_24468 + 32] = 'SafeMath: division by zero'
                                                _25041 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25041] = 26
                                                mem[_25041 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25041 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29839 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29839]
                                                mem[_29839 + 32] = stor8
                                                require 1 < mem[_29839]
                                                mem[_29839 + 64] = stor7
                                                mem[_29839 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29839 + 100] = ext_call.return_data[0]
                                                mem[_29839 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29839 + 196] = this.address
                                                mem[_29839 + 228] = block.timestamp + 120
                                                mem[_29839 + 164] = 160
                                                mem[_29839 + 260] = mem[_29839]
                                                s = 0
                                                while s < 32 * mem[_29839]:
                                                    mem[s + _29839 + 292] = mem[s + _29839 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29839 + 260 len (32 * mem[_29839]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18708 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18708] = 26
                                        mem[_18708 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19668 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19668] = 26
                                            mem[_19668 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19668 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24227 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24227] = 26
                                                mem[_24227 + 32] = 'SafeMath: division by zero'
                                                _24755 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24755] = 26
                                                mem[_24755 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24755 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28777 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28777]
                                                mem[_28777 + 32] = stor8
                                                require 1 < mem[_28777]
                                                mem[_28777 + 64] = stor7
                                                mem[_28777 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28777 + 100] = ext_call.return_data[0]
                                                mem[_28777 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28777 + 196] = this.address
                                                mem[_28777 + 228] = block.timestamp + 120
                                                mem[_28777 + 164] = 160
                                                mem[_28777 + 260] = mem[_28777]
                                                s = 0
                                                while s < 32 * mem[_28777]:
                                                    mem[s + _28777 + 292] = mem[s + _28777 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28777 + 260 len (32 * mem[_28777]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24467 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24467] = 26
                                                mem[_24467 + 32] = 'SafeMath: division by zero'
                                                _25040 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25040] = 26
                                                mem[_25040 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25040 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29833 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29833]
                                                mem[_29833 + 32] = stor8
                                                require 1 < mem[_29833]
                                                mem[_29833 + 64] = stor7
                                                mem[_29833 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29833 + 100] = ext_call.return_data[0]
                                                mem[_29833 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29833 + 196] = this.address
                                                mem[_29833 + 228] = block.timestamp + 120
                                                mem[_29833 + 164] = 160
                                                mem[_29833 + 260] = mem[_29833]
                                                s = 0
                                                while s < 32 * mem[_29833]:
                                                    mem[s + _29833 + 292] = mem[s + _29833 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29833 + 260 len (32 * mem[_29833]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24564 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24564] = 26
                                            mem[_24564 + 32] = 'SafeMath: division by zero'
                                            _25469 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25469] = 26
                                            mem[_25469 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25469 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30605 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30605]
                                            mem[_30605 + 32] = stor8
                                            require 1 < mem[_30605]
                                            mem[_30605 + 64] = stor7
                                            mem[_30605 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30605 + 100] = ext_call.return_data[0]
                                            mem[_30605 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30605 + 196] = this.address
                                            mem[_30605 + 228] = block.timestamp + 120
                                            mem[_30605 + 164] = 160
                                            mem[_30605 + 260] = mem[_30605]
                                            s = 0
                                            while s < 32 * mem[_30605]:
                                                mem[s + _30605 + 292] = mem[s + _30605 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30605 + 260 len (32 * mem[_30605]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30605]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19857 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19857] = 26
                                        mem[_19857 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19857 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24466 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24466] = 26
                                            mem[_24466 + 32] = 'SafeMath: division by zero'
                                            _25039 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25039] = 26
                                            mem[_25039 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25039 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29827 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29827]
                                            mem[_29827 + 32] = stor8
                                            require 1 < mem[_29827]
                                            mem[_29827 + 64] = stor7
                                            mem[_29827 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29827 + 100] = ext_call.return_data[0]
                                            mem[_29827 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29827 + 196] = this.address
                                            mem[_29827 + 228] = block.timestamp + 120
                                            mem[_29827 + 164] = 160
                                            mem[_29827 + 260] = mem[_29827]
                                            s = 0
                                            while s < 32 * mem[_29827]:
                                                mem[s + _29827 + 292] = mem[s + _29827 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29827 + 260 len (32 * mem[_29827]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24563 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24563] = 26
                                                mem[_24563 + 32] = 'SafeMath: division by zero'
                                                _25468 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25468] = 26
                                                mem[_25468 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25468 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30599 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30599]
                                                mem[_30599 + 32] = stor8
                                                require 1 < mem[_30599]
                                                mem[_30599 + 64] = stor7
                                                mem[_30599 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30599 + 100] = ext_call.return_data[0]
                                                mem[_30599 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30599 + 196] = this.address
                                                mem[_30599 + 228] = block.timestamp + 120
                                                mem[_30599 + 164] = 160
                                                mem[_30599 + 260] = mem[_30599]
                                                s = 0
                                                while s < 32 * mem[_30599]:
                                                    mem[s + _30599 + 292] = mem[s + _30599 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30599 + 260 len (32 * mem[_30599]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30599]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24612 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24612] = 26
                                            mem[_24612 + 32] = 'SafeMath: division by zero'
                                            _26135 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26135] = 26
                                            mem[_26135 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26135 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30989 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30989]
                                            mem[_30989 + 32] = stor8
                                            require 1 < mem[_30989]
                                            mem[_30989 + 64] = stor7
                                            mem[_30989 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30989 + 100] = ext_call.return_data[0]
                                            mem[_30989 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30989 + 196] = this.address
                                            mem[_30989 + 228] = block.timestamp + 120
                                            mem[_30989 + 164] = 160
                                            mem[_30989 + 260] = mem[_30989]
                                            s = 0
                                            while s < 32 * mem[_30989]:
                                                mem[s + _30989 + 292] = mem[s + _30989 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30989 + 260 len (32 * mem[_30989]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17650 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17650] = 30
                                    mem[_17650 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17932 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17932 + 68] = mem[idx + _17650 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17932 + 68] = mem[_17932 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17932 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18659 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18659] = 26
                                        mem[_18659 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19617 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19617] = 26
                                        mem[_19617 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19617 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24033 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24033] = 26
                                            mem[_24033 + 32] = 'SafeMath: division by zero'
                                            _24659 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24659] = 26
                                            mem[_24659 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24659 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27758 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27758]
                                            mem[_27758 + 32] = stor8
                                            require 1 < mem[_27758]
                                            mem[_27758 + 64] = stor7
                                            mem[_27758 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27758 + 100] = ext_call.return_data[0]
                                            mem[_27758 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27758 + 196] = this.address
                                            mem[_27758 + 228] = block.timestamp + 120
                                            mem[_27758 + 164] = 160
                                            mem[_27758 + 260] = mem[_27758]
                                            s = 0
                                            while s < 32 * mem[_27758]:
                                                mem[s + _27758 + 292] = mem[s + _27758 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27758 + 260 len (32 * mem[_27758]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24224 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24224] = 26
                                                mem[_24224 + 32] = 'SafeMath: division by zero'
                                                _24754 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24754] = 26
                                                mem[_24754 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24754 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28762 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28762]
                                                mem[_28762 + 32] = stor8
                                                require 1 < mem[_28762]
                                                mem[_28762 + 64] = stor7
                                                mem[_28762 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28762 + 100] = ext_call.return_data[0]
                                                mem[_28762 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28762 + 196] = this.address
                                                mem[_28762 + 228] = block.timestamp + 120
                                                mem[_28762 + 164] = 160
                                                mem[_28762 + 260] = mem[_28762]
                                                s = 0
                                                while s < 32 * mem[_28762]:
                                                    mem[s + _28762 + 292] = mem[s + _28762 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28762 + 260 len (32 * mem[_28762]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24463 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24463] = 26
                                                mem[_24463 + 32] = 'SafeMath: division by zero'
                                                _25035 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25035] = 26
                                                mem[_25035 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25035 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29817 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29817]
                                                mem[_29817 + 32] = stor8
                                                require 1 < mem[_29817]
                                                mem[_29817 + 64] = stor7
                                                mem[_29817 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29817 + 100] = ext_call.return_data[0]
                                                mem[_29817 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29817 + 196] = this.address
                                                mem[_29817 + 228] = block.timestamp + 120
                                                mem[_29817 + 164] = 160
                                                mem[_29817 + 260] = mem[_29817]
                                                s = 0
                                                while s < 32 * mem[_29817]:
                                                    mem[s + _29817 + 292] = mem[s + _29817 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29817 + 260 len (32 * mem[_29817]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18707 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18707] = 26
                                        mem[_18707 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19667 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19667] = 26
                                            mem[_19667 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19667 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24223 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24223] = 26
                                                mem[_24223 + 32] = 'SafeMath: division by zero'
                                                _24753 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24753] = 26
                                                mem[_24753 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24753 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28756 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28756]
                                                mem[_28756 + 32] = stor8
                                                require 1 < mem[_28756]
                                                mem[_28756 + 64] = stor7
                                                mem[_28756 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28756 + 100] = ext_call.return_data[0]
                                                mem[_28756 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28756 + 196] = this.address
                                                mem[_28756 + 228] = block.timestamp + 120
                                                mem[_28756 + 164] = 160
                                                mem[_28756 + 260] = mem[_28756]
                                                s = 0
                                                while s < 32 * mem[_28756]:
                                                    mem[s + _28756 + 292] = mem[s + _28756 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28756 + 260 len (32 * mem[_28756]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24462 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24462] = 26
                                                mem[_24462 + 32] = 'SafeMath: division by zero'
                                                _25034 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25034] = 26
                                                mem[_25034 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25034 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29811 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29811]
                                                mem[_29811 + 32] = stor8
                                                require 1 < mem[_29811]
                                                mem[_29811 + 64] = stor7
                                                mem[_29811 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29811 + 100] = ext_call.return_data[0]
                                                mem[_29811 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29811 + 196] = this.address
                                                mem[_29811 + 228] = block.timestamp + 120
                                                mem[_29811 + 164] = 160
                                                mem[_29811 + 260] = mem[_29811]
                                                s = 0
                                                while s < 32 * mem[_29811]:
                                                    mem[s + _29811 + 292] = mem[s + _29811 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29811 + 260 len (32 * mem[_29811]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24562 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24562] = 26
                                            mem[_24562 + 32] = 'SafeMath: division by zero'
                                            _25460 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25460] = 26
                                            mem[_25460 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25460 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30589 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30589]
                                            mem[_30589 + 32] = stor8
                                            require 1 < mem[_30589]
                                            mem[_30589 + 64] = stor7
                                            mem[_30589 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30589 + 100] = ext_call.return_data[0]
                                            mem[_30589 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30589 + 196] = this.address
                                            mem[_30589 + 228] = block.timestamp + 120
                                            mem[_30589 + 164] = 160
                                            mem[_30589 + 260] = mem[_30589]
                                            s = 0
                                            while s < 32 * mem[_30589]:
                                                mem[s + _30589 + 292] = mem[s + _30589 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30589 + 260 len (32 * mem[_30589]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30589]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19853 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19853] = 26
                                        mem[_19853 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19853 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24461 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24461] = 26
                                            mem[_24461 + 32] = 'SafeMath: division by zero'
                                            _25033 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25033] = 26
                                            mem[_25033 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25033 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29805 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29805]
                                            mem[_29805 + 32] = stor8
                                            require 1 < mem[_29805]
                                            mem[_29805 + 64] = stor7
                                            mem[_29805 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29805 + 100] = ext_call.return_data[0]
                                            mem[_29805 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29805 + 196] = this.address
                                            mem[_29805 + 228] = block.timestamp + 120
                                            mem[_29805 + 164] = 160
                                            mem[_29805 + 260] = mem[_29805]
                                            s = 0
                                            while s < 32 * mem[_29805]:
                                                mem[s + _29805 + 292] = mem[s + _29805 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29805 + 260 len (32 * mem[_29805]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24561 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24561] = 26
                                                mem[_24561 + 32] = 'SafeMath: division by zero'
                                                _25459 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25459] = 26
                                                mem[_25459 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25459 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30583 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30583]
                                                mem[_30583 + 32] = stor8
                                                require 1 < mem[_30583]
                                                mem[_30583 + 64] = stor7
                                                mem[_30583 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30583 + 100] = ext_call.return_data[0]
                                                mem[_30583 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30583 + 196] = this.address
                                                mem[_30583 + 228] = block.timestamp + 120
                                                mem[_30583 + 164] = 160
                                                mem[_30583 + 260] = mem[_30583]
                                                s = 0
                                                while s < 32 * mem[_30583]:
                                                    mem[s + _30583 + 292] = mem[s + _30583 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30583 + 260 len (32 * mem[_30583]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30583]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24611 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24611] = 26
                                            mem[_24611 + 32] = 'SafeMath: division by zero'
                                            _26121 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26121] = 26
                                            mem[_26121 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26121 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30981 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30981]
                                            mem[_30981 + 32] = stor8
                                            require 1 < mem[_30981]
                                            mem[_30981 + 64] = stor7
                                            mem[_30981 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30981 + 100] = ext_call.return_data[0]
                                            mem[_30981 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30981 + 196] = this.address
                                            mem[_30981 + 228] = block.timestamp + 120
                                            mem[_30981 + 164] = 160
                                            mem[_30981 + 260] = mem[_30981]
                                            s = 0
                                            while s < 32 * mem[_30981]:
                                                mem[s + _30981 + 292] = mem[s + _30981 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30981 + 260 len (32 * mem[_30981]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17648 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17648] = 30
                                    mem[_17648 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17926 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17926 + 68] = mem[idx + _17648 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17926 + 68] = mem[_17926 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17926 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18658 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18658] = 26
                                        mem[_18658 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19614 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19614] = 26
                                        mem[_19614 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19614 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24030 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24030] = 26
                                            mem[_24030 + 32] = 'SafeMath: division by zero'
                                            _24658 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24658] = 26
                                            mem[_24658 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24658 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27739 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27739]
                                            mem[_27739 + 32] = stor8
                                            require 1 < mem[_27739]
                                            mem[_27739 + 64] = stor7
                                            mem[_27739 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27739 + 100] = ext_call.return_data[0]
                                            mem[_27739 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27739 + 196] = this.address
                                            mem[_27739 + 228] = block.timestamp + 120
                                            mem[_27739 + 164] = 160
                                            mem[_27739 + 260] = mem[_27739]
                                            s = 0
                                            while s < 32 * mem[_27739]:
                                                mem[s + _27739 + 292] = mem[s + _27739 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27739 + 260 len (32 * mem[_27739]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24220 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24220] = 26
                                                mem[_24220 + 32] = 'SafeMath: division by zero'
                                                _24752 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24752] = 26
                                                mem[_24752 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24752 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28741 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28741]
                                                mem[_28741 + 32] = stor8
                                                require 1 < mem[_28741]
                                                mem[_28741 + 64] = stor7
                                                mem[_28741 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28741 + 100] = ext_call.return_data[0]
                                                mem[_28741 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28741 + 196] = this.address
                                                mem[_28741 + 228] = block.timestamp + 120
                                                mem[_28741 + 164] = 160
                                                mem[_28741 + 260] = mem[_28741]
                                                s = 0
                                                while s < 32 * mem[_28741]:
                                                    mem[s + _28741 + 292] = mem[s + _28741 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28741 + 260 len (32 * mem[_28741]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24458 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24458] = 26
                                                mem[_24458 + 32] = 'SafeMath: division by zero'
                                                _25029 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25029] = 26
                                                mem[_25029 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25029 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29795 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29795]
                                                mem[_29795 + 32] = stor8
                                                require 1 < mem[_29795]
                                                mem[_29795 + 64] = stor7
                                                mem[_29795 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29795 + 100] = ext_call.return_data[0]
                                                mem[_29795 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29795 + 196] = this.address
                                                mem[_29795 + 228] = block.timestamp + 120
                                                mem[_29795 + 164] = 160
                                                mem[_29795 + 260] = mem[_29795]
                                                s = 0
                                                while s < 32 * mem[_29795]:
                                                    mem[s + _29795 + 292] = mem[s + _29795 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29795 + 260 len (32 * mem[_29795]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18706 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18706] = 26
                                        mem[_18706 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19666 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19666] = 26
                                            mem[_19666 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19666 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24219 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24219] = 26
                                                mem[_24219 + 32] = 'SafeMath: division by zero'
                                                _24751 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24751] = 26
                                                mem[_24751 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24751 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28735 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28735]
                                                mem[_28735 + 32] = stor8
                                                require 1 < mem[_28735]
                                                mem[_28735 + 64] = stor7
                                                mem[_28735 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28735 + 100] = ext_call.return_data[0]
                                                mem[_28735 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28735 + 196] = this.address
                                                mem[_28735 + 228] = block.timestamp + 120
                                                mem[_28735 + 164] = 160
                                                mem[_28735 + 260] = mem[_28735]
                                                s = 0
                                                while s < 32 * mem[_28735]:
                                                    mem[s + _28735 + 292] = mem[s + _28735 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28735 + 260 len (32 * mem[_28735]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24457 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24457] = 26
                                                mem[_24457 + 32] = 'SafeMath: division by zero'
                                                _25028 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25028] = 26
                                                mem[_25028 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25028 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29789 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29789]
                                                mem[_29789 + 32] = stor8
                                                require 1 < mem[_29789]
                                                mem[_29789 + 64] = stor7
                                                mem[_29789 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29789 + 100] = ext_call.return_data[0]
                                                mem[_29789 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29789 + 196] = this.address
                                                mem[_29789 + 228] = block.timestamp + 120
                                                mem[_29789 + 164] = 160
                                                mem[_29789 + 260] = mem[_29789]
                                                s = 0
                                                while s < 32 * mem[_29789]:
                                                    mem[s + _29789 + 292] = mem[s + _29789 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29789 + 260 len (32 * mem[_29789]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24560 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24560] = 26
                                            mem[_24560 + 32] = 'SafeMath: division by zero'
                                            _25451 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25451] = 26
                                            mem[_25451 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25451 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30573 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30573]
                                            mem[_30573 + 32] = stor8
                                            require 1 < mem[_30573]
                                            mem[_30573 + 64] = stor7
                                            mem[_30573 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30573 + 100] = ext_call.return_data[0]
                                            mem[_30573 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30573 + 196] = this.address
                                            mem[_30573 + 228] = block.timestamp + 120
                                            mem[_30573 + 164] = 160
                                            mem[_30573 + 260] = mem[_30573]
                                            s = 0
                                            while s < 32 * mem[_30573]:
                                                mem[s + _30573 + 292] = mem[s + _30573 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30573 + 260 len (32 * mem[_30573]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30573]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19849 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19849] = 26
                                        mem[_19849 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19849 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24456 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24456] = 26
                                            mem[_24456 + 32] = 'SafeMath: division by zero'
                                            _25027 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25027] = 26
                                            mem[_25027 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25027 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29783 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29783]
                                            mem[_29783 + 32] = stor8
                                            require 1 < mem[_29783]
                                            mem[_29783 + 64] = stor7
                                            mem[_29783 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29783 + 100] = ext_call.return_data[0]
                                            mem[_29783 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29783 + 196] = this.address
                                            mem[_29783 + 228] = block.timestamp + 120
                                            mem[_29783 + 164] = 160
                                            mem[_29783 + 260] = mem[_29783]
                                            s = 0
                                            while s < 32 * mem[_29783]:
                                                mem[s + _29783 + 292] = mem[s + _29783 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29783 + 260 len (32 * mem[_29783]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24559 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24559] = 26
                                                mem[_24559 + 32] = 'SafeMath: division by zero'
                                                _25450 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25450] = 26
                                                mem[_25450 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25450 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30567 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30567]
                                                mem[_30567 + 32] = stor8
                                                require 1 < mem[_30567]
                                                mem[_30567 + 64] = stor7
                                                mem[_30567 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30567 + 100] = ext_call.return_data[0]
                                                mem[_30567 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30567 + 196] = this.address
                                                mem[_30567 + 228] = block.timestamp + 120
                                                mem[_30567 + 164] = 160
                                                mem[_30567 + 260] = mem[_30567]
                                                s = 0
                                                while s < 32 * mem[_30567]:
                                                    mem[s + _30567 + 292] = mem[s + _30567 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30567 + 260 len (32 * mem[_30567]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30567]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24610 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24610] = 26
                                            mem[_24610 + 32] = 'SafeMath: division by zero'
                                            _26107 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26107] = 26
                                            mem[_26107 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26107 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30973 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30973]
                                            mem[_30973 + 32] = stor8
                                            require 1 < mem[_30973]
                                            mem[_30973 + 64] = stor7
                                            mem[_30973 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30973 + 100] = ext_call.return_data[0]
                                            mem[_30973 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30973 + 196] = this.address
                                            mem[_30973 + 228] = block.timestamp + 120
                                            mem[_30973 + 164] = 160
                                            mem[_30973 + 260] = mem[_30973]
                                            s = 0
                                            while s < 32 * mem[_30973]:
                                                mem[s + _30973 + 292] = mem[s + _30973 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30973 + 260 len (32 * mem[_30973]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17646 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17646] = 30
                                    mem[_17646 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17920 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17920 + 68] = mem[idx + _17646 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17920 + 68] = mem[_17920 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17920 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18657 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18657] = 26
                                        mem[_18657 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19611 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19611] = 26
                                        mem[_19611 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19611 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24027 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24027] = 26
                                            mem[_24027 + 32] = 'SafeMath: division by zero'
                                            _24657 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24657] = 26
                                            mem[_24657 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24657 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27720 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27720]
                                            mem[_27720 + 32] = stor8
                                            require 1 < mem[_27720]
                                            mem[_27720 + 64] = stor7
                                            mem[_27720 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27720 + 100] = ext_call.return_data[0]
                                            mem[_27720 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27720 + 196] = this.address
                                            mem[_27720 + 228] = block.timestamp + 120
                                            mem[_27720 + 164] = 160
                                            mem[_27720 + 260] = mem[_27720]
                                            s = 0
                                            while s < 32 * mem[_27720]:
                                                mem[s + _27720 + 292] = mem[s + _27720 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27720 + 260 len (32 * mem[_27720]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24216 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24216] = 26
                                                mem[_24216 + 32] = 'SafeMath: division by zero'
                                                _24750 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24750] = 26
                                                mem[_24750 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24750 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28720 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28720]
                                                mem[_28720 + 32] = stor8
                                                require 1 < mem[_28720]
                                                mem[_28720 + 64] = stor7
                                                mem[_28720 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28720 + 100] = ext_call.return_data[0]
                                                mem[_28720 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28720 + 196] = this.address
                                                mem[_28720 + 228] = block.timestamp + 120
                                                mem[_28720 + 164] = 160
                                                mem[_28720 + 260] = mem[_28720]
                                                s = 0
                                                while s < 32 * mem[_28720]:
                                                    mem[s + _28720 + 292] = mem[s + _28720 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28720 + 260 len (32 * mem[_28720]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24453 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24453] = 26
                                                mem[_24453 + 32] = 'SafeMath: division by zero'
                                                _25023 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25023] = 26
                                                mem[_25023 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25023 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29773 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29773]
                                                mem[_29773 + 32] = stor8
                                                require 1 < mem[_29773]
                                                mem[_29773 + 64] = stor7
                                                mem[_29773 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29773 + 100] = ext_call.return_data[0]
                                                mem[_29773 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29773 + 196] = this.address
                                                mem[_29773 + 228] = block.timestamp + 120
                                                mem[_29773 + 164] = 160
                                                mem[_29773 + 260] = mem[_29773]
                                                s = 0
                                                while s < 32 * mem[_29773]:
                                                    mem[s + _29773 + 292] = mem[s + _29773 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29773 + 260 len (32 * mem[_29773]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18705 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18705] = 26
                                        mem[_18705 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19665 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19665] = 26
                                            mem[_19665 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19665 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24215 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24215] = 26
                                                mem[_24215 + 32] = 'SafeMath: division by zero'
                                                _24749 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24749] = 26
                                                mem[_24749 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24749 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28714 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28714]
                                                mem[_28714 + 32] = stor8
                                                require 1 < mem[_28714]
                                                mem[_28714 + 64] = stor7
                                                mem[_28714 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28714 + 100] = ext_call.return_data[0]
                                                mem[_28714 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28714 + 196] = this.address
                                                mem[_28714 + 228] = block.timestamp + 120
                                                mem[_28714 + 164] = 160
                                                mem[_28714 + 260] = mem[_28714]
                                                s = 0
                                                while s < 32 * mem[_28714]:
                                                    mem[s + _28714 + 292] = mem[s + _28714 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28714 + 260 len (32 * mem[_28714]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24452 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24452] = 26
                                                mem[_24452 + 32] = 'SafeMath: division by zero'
                                                _25022 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25022] = 26
                                                mem[_25022 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25022 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29767 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29767]
                                                mem[_29767 + 32] = stor8
                                                require 1 < mem[_29767]
                                                mem[_29767 + 64] = stor7
                                                mem[_29767 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29767 + 100] = ext_call.return_data[0]
                                                mem[_29767 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29767 + 196] = this.address
                                                mem[_29767 + 228] = block.timestamp + 120
                                                mem[_29767 + 164] = 160
                                                mem[_29767 + 260] = mem[_29767]
                                                s = 0
                                                while s < 32 * mem[_29767]:
                                                    mem[s + _29767 + 292] = mem[s + _29767 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29767 + 260 len (32 * mem[_29767]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24558 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24558] = 26
                                            mem[_24558 + 32] = 'SafeMath: division by zero'
                                            _25442 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25442] = 26
                                            mem[_25442 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25442 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30557 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30557]
                                            mem[_30557 + 32] = stor8
                                            require 1 < mem[_30557]
                                            mem[_30557 + 64] = stor7
                                            mem[_30557 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30557 + 100] = ext_call.return_data[0]
                                            mem[_30557 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30557 + 196] = this.address
                                            mem[_30557 + 228] = block.timestamp + 120
                                            mem[_30557 + 164] = 160
                                            mem[_30557 + 260] = mem[_30557]
                                            s = 0
                                            while s < 32 * mem[_30557]:
                                                mem[s + _30557 + 292] = mem[s + _30557 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30557 + 260 len (32 * mem[_30557]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30557]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19845 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19845] = 26
                                        mem[_19845 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19845 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24451 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24451] = 26
                                            mem[_24451 + 32] = 'SafeMath: division by zero'
                                            _25021 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25021] = 26
                                            mem[_25021 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25021 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29761 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29761]
                                            mem[_29761 + 32] = stor8
                                            require 1 < mem[_29761]
                                            mem[_29761 + 64] = stor7
                                            mem[_29761 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29761 + 100] = ext_call.return_data[0]
                                            mem[_29761 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29761 + 196] = this.address
                                            mem[_29761 + 228] = block.timestamp + 120
                                            mem[_29761 + 164] = 160
                                            mem[_29761 + 260] = mem[_29761]
                                            s = 0
                                            while s < 32 * mem[_29761]:
                                                mem[s + _29761 + 292] = mem[s + _29761 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29761 + 260 len (32 * mem[_29761]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24557 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24557] = 26
                                                mem[_24557 + 32] = 'SafeMath: division by zero'
                                                _25441 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25441] = 26
                                                mem[_25441 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25441 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30551 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30551]
                                                mem[_30551 + 32] = stor8
                                                require 1 < mem[_30551]
                                                mem[_30551 + 64] = stor7
                                                mem[_30551 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30551 + 100] = ext_call.return_data[0]
                                                mem[_30551 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30551 + 196] = this.address
                                                mem[_30551 + 228] = block.timestamp + 120
                                                mem[_30551 + 164] = 160
                                                mem[_30551 + 260] = mem[_30551]
                                                s = 0
                                                while s < 32 * mem[_30551]:
                                                    mem[s + _30551 + 292] = mem[s + _30551 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30551 + 260 len (32 * mem[_30551]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30551]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24609 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24609] = 26
                                            mem[_24609 + 32] = 'SafeMath: division by zero'
                                            _26093 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26093] = 26
                                            mem[_26093 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26093 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30965 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30965]
                                            mem[_30965 + 32] = stor8
                                            require 1 < mem[_30965]
                                            mem[_30965 + 64] = stor7
                                            mem[_30965 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30965 + 100] = ext_call.return_data[0]
                                            mem[_30965 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30965 + 196] = this.address
                                            mem[_30965 + 228] = block.timestamp + 120
                                            mem[_30965 + 164] = 160
                                            mem[_30965 + 260] = mem[_30965]
                                            s = 0
                                            while s < 32 * mem[_30965]:
                                                mem[s + _30965 + 292] = mem[s + _30965 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30965 + 260 len (32 * mem[_30965]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                    mem[160] = 26
                    mem[192] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17644 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17644] = 30
                                    mem[_17644 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17914 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17914 + 68] = mem[idx + _17644 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17914 + 68] = mem[_17914 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17914 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18656 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18656] = 26
                                        mem[_18656 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19608 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19608] = 26
                                        mem[_19608 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19608 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24024 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24024] = 26
                                            mem[_24024 + 32] = 'SafeMath: division by zero'
                                            _24656 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24656] = 26
                                            mem[_24656 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24656 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27701 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27701]
                                            mem[_27701 + 32] = stor8
                                            require 1 < mem[_27701]
                                            mem[_27701 + 64] = stor7
                                            mem[_27701 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27701 + 100] = ext_call.return_data[0]
                                            mem[_27701 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27701 + 196] = this.address
                                            mem[_27701 + 228] = block.timestamp + 120
                                            mem[_27701 + 164] = 160
                                            mem[_27701 + 260] = mem[_27701]
                                            s = 0
                                            while s < 32 * mem[_27701]:
                                                mem[s + _27701 + 292] = mem[s + _27701 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27701 + 260 len (32 * mem[_27701]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24212 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24212] = 26
                                                mem[_24212 + 32] = 'SafeMath: division by zero'
                                                _24748 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24748] = 26
                                                mem[_24748 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24748 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28699 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28699]
                                                mem[_28699 + 32] = stor8
                                                require 1 < mem[_28699]
                                                mem[_28699 + 64] = stor7
                                                mem[_28699 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28699 + 100] = ext_call.return_data[0]
                                                mem[_28699 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28699 + 196] = this.address
                                                mem[_28699 + 228] = block.timestamp + 120
                                                mem[_28699 + 164] = 160
                                                mem[_28699 + 260] = mem[_28699]
                                                s = 0
                                                while s < 32 * mem[_28699]:
                                                    mem[s + _28699 + 292] = mem[s + _28699 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28699 + 260 len (32 * mem[_28699]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24448 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24448] = 26
                                                mem[_24448 + 32] = 'SafeMath: division by zero'
                                                _25017 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25017] = 26
                                                mem[_25017 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25017 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29751 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29751]
                                                mem[_29751 + 32] = stor8
                                                require 1 < mem[_29751]
                                                mem[_29751 + 64] = stor7
                                                mem[_29751 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29751 + 100] = ext_call.return_data[0]
                                                mem[_29751 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29751 + 196] = this.address
                                                mem[_29751 + 228] = block.timestamp + 120
                                                mem[_29751 + 164] = 160
                                                mem[_29751 + 260] = mem[_29751]
                                                s = 0
                                                while s < 32 * mem[_29751]:
                                                    mem[s + _29751 + 292] = mem[s + _29751 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29751 + 260 len (32 * mem[_29751]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18704 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18704] = 26
                                        mem[_18704 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19664 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19664] = 26
                                            mem[_19664 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19664 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24211 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24211] = 26
                                                mem[_24211 + 32] = 'SafeMath: division by zero'
                                                _24747 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24747] = 26
                                                mem[_24747 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24747 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28693 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28693]
                                                mem[_28693 + 32] = stor8
                                                require 1 < mem[_28693]
                                                mem[_28693 + 64] = stor7
                                                mem[_28693 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28693 + 100] = ext_call.return_data[0]
                                                mem[_28693 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28693 + 196] = this.address
                                                mem[_28693 + 228] = block.timestamp + 120
                                                mem[_28693 + 164] = 160
                                                mem[_28693 + 260] = mem[_28693]
                                                s = 0
                                                while s < 32 * mem[_28693]:
                                                    mem[s + _28693 + 292] = mem[s + _28693 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28693 + 260 len (32 * mem[_28693]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24447 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24447] = 26
                                                mem[_24447 + 32] = 'SafeMath: division by zero'
                                                _25016 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25016] = 26
                                                mem[_25016 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25016 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29745 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29745]
                                                mem[_29745 + 32] = stor8
                                                require 1 < mem[_29745]
                                                mem[_29745 + 64] = stor7
                                                mem[_29745 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29745 + 100] = ext_call.return_data[0]
                                                mem[_29745 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29745 + 196] = this.address
                                                mem[_29745 + 228] = block.timestamp + 120
                                                mem[_29745 + 164] = 160
                                                mem[_29745 + 260] = mem[_29745]
                                                s = 0
                                                while s < 32 * mem[_29745]:
                                                    mem[s + _29745 + 292] = mem[s + _29745 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29745 + 260 len (32 * mem[_29745]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24556 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24556] = 26
                                            mem[_24556 + 32] = 'SafeMath: division by zero'
                                            _25433 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25433] = 26
                                            mem[_25433 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25433 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30541 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30541]
                                            mem[_30541 + 32] = stor8
                                            require 1 < mem[_30541]
                                            mem[_30541 + 64] = stor7
                                            mem[_30541 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30541 + 100] = ext_call.return_data[0]
                                            mem[_30541 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30541 + 196] = this.address
                                            mem[_30541 + 228] = block.timestamp + 120
                                            mem[_30541 + 164] = 160
                                            mem[_30541 + 260] = mem[_30541]
                                            s = 0
                                            while s < 32 * mem[_30541]:
                                                mem[s + _30541 + 292] = mem[s + _30541 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30541 + 260 len (32 * mem[_30541]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30541]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19841 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19841] = 26
                                        mem[_19841 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19841 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24446 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24446] = 26
                                            mem[_24446 + 32] = 'SafeMath: division by zero'
                                            _25015 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25015] = 26
                                            mem[_25015 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25015 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29739 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29739]
                                            mem[_29739 + 32] = stor8
                                            require 1 < mem[_29739]
                                            mem[_29739 + 64] = stor7
                                            mem[_29739 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29739 + 100] = ext_call.return_data[0]
                                            mem[_29739 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29739 + 196] = this.address
                                            mem[_29739 + 228] = block.timestamp + 120
                                            mem[_29739 + 164] = 160
                                            mem[_29739 + 260] = mem[_29739]
                                            s = 0
                                            while s < 32 * mem[_29739]:
                                                mem[s + _29739 + 292] = mem[s + _29739 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29739 + 260 len (32 * mem[_29739]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24555 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24555] = 26
                                                mem[_24555 + 32] = 'SafeMath: division by zero'
                                                _25432 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25432] = 26
                                                mem[_25432 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25432 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30535 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30535]
                                                mem[_30535 + 32] = stor8
                                                require 1 < mem[_30535]
                                                mem[_30535 + 64] = stor7
                                                mem[_30535 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30535 + 100] = ext_call.return_data[0]
                                                mem[_30535 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30535 + 196] = this.address
                                                mem[_30535 + 228] = block.timestamp + 120
                                                mem[_30535 + 164] = 160
                                                mem[_30535 + 260] = mem[_30535]
                                                s = 0
                                                while s < 32 * mem[_30535]:
                                                    mem[s + _30535 + 292] = mem[s + _30535 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30535 + 260 len (32 * mem[_30535]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30535]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24608 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24608] = 26
                                            mem[_24608 + 32] = 'SafeMath: division by zero'
                                            _26079 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26079] = 26
                                            mem[_26079 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26079 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30957 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30957]
                                            mem[_30957 + 32] = stor8
                                            require 1 < mem[_30957]
                                            mem[_30957 + 64] = stor7
                                            mem[_30957 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30957 + 100] = ext_call.return_data[0]
                                            mem[_30957 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30957 + 196] = this.address
                                            mem[_30957 + 228] = block.timestamp + 120
                                            mem[_30957 + 164] = 160
                                            mem[_30957 + 260] = mem[_30957]
                                            s = 0
                                            while s < 32 * mem[_30957]:
                                                mem[s + _30957 + 292] = mem[s + _30957 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30957 + 260 len (32 * mem[_30957]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17642 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17642] = 30
                                    mem[_17642 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17908 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17908 + 68] = mem[idx + _17642 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17908 + 68] = mem[_17908 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17908 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18655 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18655] = 26
                                        mem[_18655 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19605 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19605] = 26
                                        mem[_19605 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19605 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24021 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24021] = 26
                                            mem[_24021 + 32] = 'SafeMath: division by zero'
                                            _24655 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24655] = 26
                                            mem[_24655 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24655 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27682 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27682]
                                            mem[_27682 + 32] = stor8
                                            require 1 < mem[_27682]
                                            mem[_27682 + 64] = stor7
                                            mem[_27682 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27682 + 100] = ext_call.return_data[0]
                                            mem[_27682 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27682 + 196] = this.address
                                            mem[_27682 + 228] = block.timestamp + 120
                                            mem[_27682 + 164] = 160
                                            mem[_27682 + 260] = mem[_27682]
                                            s = 0
                                            while s < 32 * mem[_27682]:
                                                mem[s + _27682 + 292] = mem[s + _27682 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27682 + 260 len (32 * mem[_27682]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24208 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24208] = 26
                                                mem[_24208 + 32] = 'SafeMath: division by zero'
                                                _24746 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24746] = 26
                                                mem[_24746 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24746 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28678 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28678]
                                                mem[_28678 + 32] = stor8
                                                require 1 < mem[_28678]
                                                mem[_28678 + 64] = stor7
                                                mem[_28678 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28678 + 100] = ext_call.return_data[0]
                                                mem[_28678 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28678 + 196] = this.address
                                                mem[_28678 + 228] = block.timestamp + 120
                                                mem[_28678 + 164] = 160
                                                mem[_28678 + 260] = mem[_28678]
                                                s = 0
                                                while s < 32 * mem[_28678]:
                                                    mem[s + _28678 + 292] = mem[s + _28678 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28678 + 260 len (32 * mem[_28678]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24443 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24443] = 26
                                                mem[_24443 + 32] = 'SafeMath: division by zero'
                                                _25011 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25011] = 26
                                                mem[_25011 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25011 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29729 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29729]
                                                mem[_29729 + 32] = stor8
                                                require 1 < mem[_29729]
                                                mem[_29729 + 64] = stor7
                                                mem[_29729 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29729 + 100] = ext_call.return_data[0]
                                                mem[_29729 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29729 + 196] = this.address
                                                mem[_29729 + 228] = block.timestamp + 120
                                                mem[_29729 + 164] = 160
                                                mem[_29729 + 260] = mem[_29729]
                                                s = 0
                                                while s < 32 * mem[_29729]:
                                                    mem[s + _29729 + 292] = mem[s + _29729 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29729 + 260 len (32 * mem[_29729]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18703 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18703] = 26
                                        mem[_18703 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19663 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19663] = 26
                                            mem[_19663 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19663 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24207 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24207] = 26
                                                mem[_24207 + 32] = 'SafeMath: division by zero'
                                                _24745 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24745] = 26
                                                mem[_24745 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24745 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28672 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28672]
                                                mem[_28672 + 32] = stor8
                                                require 1 < mem[_28672]
                                                mem[_28672 + 64] = stor7
                                                mem[_28672 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28672 + 100] = ext_call.return_data[0]
                                                mem[_28672 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28672 + 196] = this.address
                                                mem[_28672 + 228] = block.timestamp + 120
                                                mem[_28672 + 164] = 160
                                                mem[_28672 + 260] = mem[_28672]
                                                s = 0
                                                while s < 32 * mem[_28672]:
                                                    mem[s + _28672 + 292] = mem[s + _28672 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28672 + 260 len (32 * mem[_28672]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24442 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24442] = 26
                                                mem[_24442 + 32] = 'SafeMath: division by zero'
                                                _25010 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25010] = 26
                                                mem[_25010 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25010 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29723 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29723]
                                                mem[_29723 + 32] = stor8
                                                require 1 < mem[_29723]
                                                mem[_29723 + 64] = stor7
                                                mem[_29723 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29723 + 100] = ext_call.return_data[0]
                                                mem[_29723 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29723 + 196] = this.address
                                                mem[_29723 + 228] = block.timestamp + 120
                                                mem[_29723 + 164] = 160
                                                mem[_29723 + 260] = mem[_29723]
                                                s = 0
                                                while s < 32 * mem[_29723]:
                                                    mem[s + _29723 + 292] = mem[s + _29723 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29723 + 260 len (32 * mem[_29723]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24554 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24554] = 26
                                            mem[_24554 + 32] = 'SafeMath: division by zero'
                                            _25424 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25424] = 26
                                            mem[_25424 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25424 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30525 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30525]
                                            mem[_30525 + 32] = stor8
                                            require 1 < mem[_30525]
                                            mem[_30525 + 64] = stor7
                                            mem[_30525 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30525 + 100] = ext_call.return_data[0]
                                            mem[_30525 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30525 + 196] = this.address
                                            mem[_30525 + 228] = block.timestamp + 120
                                            mem[_30525 + 164] = 160
                                            mem[_30525 + 260] = mem[_30525]
                                            s = 0
                                            while s < 32 * mem[_30525]:
                                                mem[s + _30525 + 292] = mem[s + _30525 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30525 + 260 len (32 * mem[_30525]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30525]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19837 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19837] = 26
                                        mem[_19837 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19837 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24441 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24441] = 26
                                            mem[_24441 + 32] = 'SafeMath: division by zero'
                                            _25009 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25009] = 26
                                            mem[_25009 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25009 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29717 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29717]
                                            mem[_29717 + 32] = stor8
                                            require 1 < mem[_29717]
                                            mem[_29717 + 64] = stor7
                                            mem[_29717 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29717 + 100] = ext_call.return_data[0]
                                            mem[_29717 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29717 + 196] = this.address
                                            mem[_29717 + 228] = block.timestamp + 120
                                            mem[_29717 + 164] = 160
                                            mem[_29717 + 260] = mem[_29717]
                                            s = 0
                                            while s < 32 * mem[_29717]:
                                                mem[s + _29717 + 292] = mem[s + _29717 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29717 + 260 len (32 * mem[_29717]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24553 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24553] = 26
                                                mem[_24553 + 32] = 'SafeMath: division by zero'
                                                _25423 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25423] = 26
                                                mem[_25423 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25423 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30519 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30519]
                                                mem[_30519 + 32] = stor8
                                                require 1 < mem[_30519]
                                                mem[_30519 + 64] = stor7
                                                mem[_30519 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30519 + 100] = ext_call.return_data[0]
                                                mem[_30519 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30519 + 196] = this.address
                                                mem[_30519 + 228] = block.timestamp + 120
                                                mem[_30519 + 164] = 160
                                                mem[_30519 + 260] = mem[_30519]
                                                s = 0
                                                while s < 32 * mem[_30519]:
                                                    mem[s + _30519 + 292] = mem[s + _30519 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30519 + 260 len (32 * mem[_30519]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30519]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24607 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24607] = 26
                                            mem[_24607 + 32] = 'SafeMath: division by zero'
                                            _26065 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26065] = 26
                                            mem[_26065 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26065 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30949 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30949]
                                            mem[_30949 + 32] = stor8
                                            require 1 < mem[_30949]
                                            mem[_30949 + 64] = stor7
                                            mem[_30949 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30949 + 100] = ext_call.return_data[0]
                                            mem[_30949 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30949 + 196] = this.address
                                            mem[_30949 + 228] = block.timestamp + 120
                                            mem[_30949 + 164] = 160
                                            mem[_30949 + 260] = mem[_30949]
                                            s = 0
                                            while s < 32 * mem[_30949]:
                                                mem[s + _30949 + 292] = mem[s + _30949 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30949 + 260 len (32 * mem[_30949]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17640 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17640] = 30
                                    mem[_17640 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17902 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17902 + 68] = mem[idx + _17640 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17902 + 68] = mem[_17902 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17902 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18654 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18654] = 26
                                        mem[_18654 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19602 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19602] = 26
                                        mem[_19602 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19602 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24018 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24018] = 26
                                            mem[_24018 + 32] = 'SafeMath: division by zero'
                                            _24654 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24654] = 26
                                            mem[_24654 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24654 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27663 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27663]
                                            mem[_27663 + 32] = stor8
                                            require 1 < mem[_27663]
                                            mem[_27663 + 64] = stor7
                                            mem[_27663 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27663 + 100] = ext_call.return_data[0]
                                            mem[_27663 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27663 + 196] = this.address
                                            mem[_27663 + 228] = block.timestamp + 120
                                            mem[_27663 + 164] = 160
                                            mem[_27663 + 260] = mem[_27663]
                                            s = 0
                                            while s < 32 * mem[_27663]:
                                                mem[s + _27663 + 292] = mem[s + _27663 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27663 + 260 len (32 * mem[_27663]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24204 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24204] = 26
                                                mem[_24204 + 32] = 'SafeMath: division by zero'
                                                _24744 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24744] = 26
                                                mem[_24744 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24744 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28657 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28657]
                                                mem[_28657 + 32] = stor8
                                                require 1 < mem[_28657]
                                                mem[_28657 + 64] = stor7
                                                mem[_28657 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28657 + 100] = ext_call.return_data[0]
                                                mem[_28657 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28657 + 196] = this.address
                                                mem[_28657 + 228] = block.timestamp + 120
                                                mem[_28657 + 164] = 160
                                                mem[_28657 + 260] = mem[_28657]
                                                s = 0
                                                while s < 32 * mem[_28657]:
                                                    mem[s + _28657 + 292] = mem[s + _28657 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28657 + 260 len (32 * mem[_28657]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24438 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24438] = 26
                                                mem[_24438 + 32] = 'SafeMath: division by zero'
                                                _25005 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25005] = 26
                                                mem[_25005 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25005 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29707 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29707]
                                                mem[_29707 + 32] = stor8
                                                require 1 < mem[_29707]
                                                mem[_29707 + 64] = stor7
                                                mem[_29707 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29707 + 100] = ext_call.return_data[0]
                                                mem[_29707 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29707 + 196] = this.address
                                                mem[_29707 + 228] = block.timestamp + 120
                                                mem[_29707 + 164] = 160
                                                mem[_29707 + 260] = mem[_29707]
                                                s = 0
                                                while s < 32 * mem[_29707]:
                                                    mem[s + _29707 + 292] = mem[s + _29707 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29707 + 260 len (32 * mem[_29707]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18702 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18702] = 26
                                        mem[_18702 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19662 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19662] = 26
                                            mem[_19662 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19662 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24203 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24203] = 26
                                                mem[_24203 + 32] = 'SafeMath: division by zero'
                                                _24743 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24743] = 26
                                                mem[_24743 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24743 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28651 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28651]
                                                mem[_28651 + 32] = stor8
                                                require 1 < mem[_28651]
                                                mem[_28651 + 64] = stor7
                                                mem[_28651 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28651 + 100] = ext_call.return_data[0]
                                                mem[_28651 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28651 + 196] = this.address
                                                mem[_28651 + 228] = block.timestamp + 120
                                                mem[_28651 + 164] = 160
                                                mem[_28651 + 260] = mem[_28651]
                                                s = 0
                                                while s < 32 * mem[_28651]:
                                                    mem[s + _28651 + 292] = mem[s + _28651 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28651 + 260 len (32 * mem[_28651]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24437 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24437] = 26
                                                mem[_24437 + 32] = 'SafeMath: division by zero'
                                                _25004 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25004] = 26
                                                mem[_25004 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25004 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29701 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29701]
                                                mem[_29701 + 32] = stor8
                                                require 1 < mem[_29701]
                                                mem[_29701 + 64] = stor7
                                                mem[_29701 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29701 + 100] = ext_call.return_data[0]
                                                mem[_29701 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29701 + 196] = this.address
                                                mem[_29701 + 228] = block.timestamp + 120
                                                mem[_29701 + 164] = 160
                                                mem[_29701 + 260] = mem[_29701]
                                                s = 0
                                                while s < 32 * mem[_29701]:
                                                    mem[s + _29701 + 292] = mem[s + _29701 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29701 + 260 len (32 * mem[_29701]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24552 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24552] = 26
                                            mem[_24552 + 32] = 'SafeMath: division by zero'
                                            _25415 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25415] = 26
                                            mem[_25415 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25415 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30509 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30509]
                                            mem[_30509 + 32] = stor8
                                            require 1 < mem[_30509]
                                            mem[_30509 + 64] = stor7
                                            mem[_30509 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30509 + 100] = ext_call.return_data[0]
                                            mem[_30509 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30509 + 196] = this.address
                                            mem[_30509 + 228] = block.timestamp + 120
                                            mem[_30509 + 164] = 160
                                            mem[_30509 + 260] = mem[_30509]
                                            s = 0
                                            while s < 32 * mem[_30509]:
                                                mem[s + _30509 + 292] = mem[s + _30509 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30509 + 260 len (32 * mem[_30509]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30509]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19833 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19833] = 26
                                        mem[_19833 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19833 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24436 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24436] = 26
                                            mem[_24436 + 32] = 'SafeMath: division by zero'
                                            _25003 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25003] = 26
                                            mem[_25003 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25003 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29695 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29695]
                                            mem[_29695 + 32] = stor8
                                            require 1 < mem[_29695]
                                            mem[_29695 + 64] = stor7
                                            mem[_29695 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29695 + 100] = ext_call.return_data[0]
                                            mem[_29695 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29695 + 196] = this.address
                                            mem[_29695 + 228] = block.timestamp + 120
                                            mem[_29695 + 164] = 160
                                            mem[_29695 + 260] = mem[_29695]
                                            s = 0
                                            while s < 32 * mem[_29695]:
                                                mem[s + _29695 + 292] = mem[s + _29695 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29695 + 260 len (32 * mem[_29695]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24551 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24551] = 26
                                                mem[_24551 + 32] = 'SafeMath: division by zero'
                                                _25414 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25414] = 26
                                                mem[_25414 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25414 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30503 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30503]
                                                mem[_30503 + 32] = stor8
                                                require 1 < mem[_30503]
                                                mem[_30503 + 64] = stor7
                                                mem[_30503 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30503 + 100] = ext_call.return_data[0]
                                                mem[_30503 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30503 + 196] = this.address
                                                mem[_30503 + 228] = block.timestamp + 120
                                                mem[_30503 + 164] = 160
                                                mem[_30503 + 260] = mem[_30503]
                                                s = 0
                                                while s < 32 * mem[_30503]:
                                                    mem[s + _30503 + 292] = mem[s + _30503 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30503 + 260 len (32 * mem[_30503]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30503]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24606 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24606] = 26
                                            mem[_24606 + 32] = 'SafeMath: division by zero'
                                            _26051 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26051] = 26
                                            mem[_26051 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26051 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30941 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30941]
                                            mem[_30941 + 32] = stor8
                                            require 1 < mem[_30941]
                                            mem[_30941 + 64] = stor7
                                            mem[_30941 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30941 + 100] = ext_call.return_data[0]
                                            mem[_30941 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30941 + 196] = this.address
                                            mem[_30941 + 228] = block.timestamp + 120
                                            mem[_30941 + 164] = 160
                                            mem[_30941 + 260] = mem[_30941]
                                            s = 0
                                            while s < 32 * mem[_30941]:
                                                mem[s + _30941 + 292] = mem[s + _30941 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30941 + 260 len (32 * mem[_30941]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / ext_call.return_data[0] != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17638 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17638] = 30
                                    mem[_17638 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17896 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17896 + 68] = mem[idx + _17638 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17896 + 68] = mem[_17896 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17896 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18653 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18653] = 26
                                        mem[_18653 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19599 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19599] = 26
                                        mem[_19599 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19599 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24015 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24015] = 26
                                            mem[_24015 + 32] = 'SafeMath: division by zero'
                                            _24653 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24653] = 26
                                            mem[_24653 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24653 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27644 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27644]
                                            mem[_27644 + 32] = stor8
                                            require 1 < mem[_27644]
                                            mem[_27644 + 64] = stor7
                                            mem[_27644 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27644 + 100] = ext_call.return_data[0]
                                            mem[_27644 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27644 + 196] = this.address
                                            mem[_27644 + 228] = block.timestamp + 120
                                            mem[_27644 + 164] = 160
                                            mem[_27644 + 260] = mem[_27644]
                                            s = 0
                                            while s < 32 * mem[_27644]:
                                                mem[s + _27644 + 292] = mem[s + _27644 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27644 + 260 len (32 * mem[_27644]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24200 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24200] = 26
                                                mem[_24200 + 32] = 'SafeMath: division by zero'
                                                _24742 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24742] = 26
                                                mem[_24742 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24742 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28636 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28636]
                                                mem[_28636 + 32] = stor8
                                                require 1 < mem[_28636]
                                                mem[_28636 + 64] = stor7
                                                mem[_28636 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28636 + 100] = ext_call.return_data[0]
                                                mem[_28636 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28636 + 196] = this.address
                                                mem[_28636 + 228] = block.timestamp + 120
                                                mem[_28636 + 164] = 160
                                                mem[_28636 + 260] = mem[_28636]
                                                s = 0
                                                while s < 32 * mem[_28636]:
                                                    mem[s + _28636 + 292] = mem[s + _28636 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28636 + 260 len (32 * mem[_28636]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24433 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24433] = 26
                                                mem[_24433 + 32] = 'SafeMath: division by zero'
                                                _24999 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24999] = 26
                                                mem[_24999 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24999 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29685 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29685]
                                                mem[_29685 + 32] = stor8
                                                require 1 < mem[_29685]
                                                mem[_29685 + 64] = stor7
                                                mem[_29685 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29685 + 100] = ext_call.return_data[0]
                                                mem[_29685 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29685 + 196] = this.address
                                                mem[_29685 + 228] = block.timestamp + 120
                                                mem[_29685 + 164] = 160
                                                mem[_29685 + 260] = mem[_29685]
                                                s = 0
                                                while s < 32 * mem[_29685]:
                                                    mem[s + _29685 + 292] = mem[s + _29685 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29685 + 260 len (32 * mem[_29685]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18701 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18701] = 26
                                        mem[_18701 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19661 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19661] = 26
                                            mem[_19661 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19661 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24199 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24199] = 26
                                                mem[_24199 + 32] = 'SafeMath: division by zero'
                                                _24741 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24741] = 26
                                                mem[_24741 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24741 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28630 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28630]
                                                mem[_28630 + 32] = stor8
                                                require 1 < mem[_28630]
                                                mem[_28630 + 64] = stor7
                                                mem[_28630 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28630 + 100] = ext_call.return_data[0]
                                                mem[_28630 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28630 + 196] = this.address
                                                mem[_28630 + 228] = block.timestamp + 120
                                                mem[_28630 + 164] = 160
                                                mem[_28630 + 260] = mem[_28630]
                                                s = 0
                                                while s < 32 * mem[_28630]:
                                                    mem[s + _28630 + 292] = mem[s + _28630 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28630 + 260 len (32 * mem[_28630]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24432 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24432] = 26
                                                mem[_24432 + 32] = 'SafeMath: division by zero'
                                                _24998 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24998] = 26
                                                mem[_24998 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24998 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29679 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29679]
                                                mem[_29679 + 32] = stor8
                                                require 1 < mem[_29679]
                                                mem[_29679 + 64] = stor7
                                                mem[_29679 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29679 + 100] = ext_call.return_data[0]
                                                mem[_29679 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29679 + 196] = this.address
                                                mem[_29679 + 228] = block.timestamp + 120
                                                mem[_29679 + 164] = 160
                                                mem[_29679 + 260] = mem[_29679]
                                                s = 0
                                                while s < 32 * mem[_29679]:
                                                    mem[s + _29679 + 292] = mem[s + _29679 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29679 + 260 len (32 * mem[_29679]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24550 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24550] = 26
                                            mem[_24550 + 32] = 'SafeMath: division by zero'
                                            _25406 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25406] = 26
                                            mem[_25406 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25406 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30493 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30493]
                                            mem[_30493 + 32] = stor8
                                            require 1 < mem[_30493]
                                            mem[_30493 + 64] = stor7
                                            mem[_30493 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30493 + 100] = ext_call.return_data[0]
                                            mem[_30493 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30493 + 196] = this.address
                                            mem[_30493 + 228] = block.timestamp + 120
                                            mem[_30493 + 164] = 160
                                            mem[_30493 + 260] = mem[_30493]
                                            s = 0
                                            while s < 32 * mem[_30493]:
                                                mem[s + _30493 + 292] = mem[s + _30493 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30493 + 260 len (32 * mem[_30493]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30493]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19829 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19829] = 26
                                        mem[_19829 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19829 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24431 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24431] = 26
                                            mem[_24431 + 32] = 'SafeMath: division by zero'
                                            _24997 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24997] = 26
                                            mem[_24997 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24997 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29673 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29673]
                                            mem[_29673 + 32] = stor8
                                            require 1 < mem[_29673]
                                            mem[_29673 + 64] = stor7
                                            mem[_29673 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29673 + 100] = ext_call.return_data[0]
                                            mem[_29673 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29673 + 196] = this.address
                                            mem[_29673 + 228] = block.timestamp + 120
                                            mem[_29673 + 164] = 160
                                            mem[_29673 + 260] = mem[_29673]
                                            s = 0
                                            while s < 32 * mem[_29673]:
                                                mem[s + _29673 + 292] = mem[s + _29673 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29673 + 260 len (32 * mem[_29673]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24549 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24549] = 26
                                                mem[_24549 + 32] = 'SafeMath: division by zero'
                                                _25405 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25405] = 26
                                                mem[_25405 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25405 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30487 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30487]
                                                mem[_30487 + 32] = stor8
                                                require 1 < mem[_30487]
                                                mem[_30487 + 64] = stor7
                                                mem[_30487 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30487 + 100] = ext_call.return_data[0]
                                                mem[_30487 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30487 + 196] = this.address
                                                mem[_30487 + 228] = block.timestamp + 120
                                                mem[_30487 + 164] = 160
                                                mem[_30487 + 260] = mem[_30487]
                                                s = 0
                                                while s < 32 * mem[_30487]:
                                                    mem[s + _30487 + 292] = mem[s + _30487 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30487 + 260 len (32 * mem[_30487]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30487]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24605 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24605] = 26
                                            mem[_24605 + 32] = 'SafeMath: division by zero'
                                            _26037 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26037] = 26
                                            mem[_26037 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26037 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30933 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30933]
                                            mem[_30933 + 32] = stor8
                                            require 1 < mem[_30933]
                                            mem[_30933 + 64] = stor7
                                            mem[_30933 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30933 + 100] = ext_call.return_data[0]
                                            mem[_30933 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30933 + 196] = this.address
                                            mem[_30933 + 228] = block.timestamp + 120
                                            mem[_30933 + 164] = 160
                                            mem[_30933 + 260] = mem[_30933]
                                            s = 0
                                            while s < 32 * mem[_30933]:
                                                mem[s + _30933 + 292] = mem[s + _30933 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30933 + 260 len (32 * mem[_30933]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
            else:
                if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                32,
                                33,
                                0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                mem[197 len 31]
                mem[96] = 26
                mem[128] = 'SafeMath: division by zero'
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                staticcall 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrowBalanceStored(address arg1) with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor8)
                staticcall stor8.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(stor7)
                staticcall stor7.0x70a08231 with:
                        gas gas_remaining wei
                       args stor9
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    mem[160] = 26
                    mem[192] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17636 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17636] = 30
                                    mem[_17636 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17890 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17890 + 68] = mem[idx + _17636 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17890 + 68] = mem[_17890 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17890 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18652 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18652] = 26
                                        mem[_18652 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19596 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19596] = 26
                                        mem[_19596 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19596 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24012 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24012] = 26
                                            mem[_24012 + 32] = 'SafeMath: division by zero'
                                            _24652 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24652] = 26
                                            mem[_24652 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24652 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27625 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27625]
                                            mem[_27625 + 32] = stor8
                                            require 1 < mem[_27625]
                                            mem[_27625 + 64] = stor7
                                            mem[_27625 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27625 + 100] = ext_call.return_data[0]
                                            mem[_27625 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27625 + 196] = this.address
                                            mem[_27625 + 228] = block.timestamp + 120
                                            mem[_27625 + 164] = 160
                                            mem[_27625 + 260] = mem[_27625]
                                            s = 0
                                            while s < 32 * mem[_27625]:
                                                mem[s + _27625 + 292] = mem[s + _27625 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27625 + 260 len (32 * mem[_27625]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24196 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24196] = 26
                                                mem[_24196 + 32] = 'SafeMath: division by zero'
                                                _24740 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24740] = 26
                                                mem[_24740 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24740 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28615 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28615]
                                                mem[_28615 + 32] = stor8
                                                require 1 < mem[_28615]
                                                mem[_28615 + 64] = stor7
                                                mem[_28615 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28615 + 100] = ext_call.return_data[0]
                                                mem[_28615 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28615 + 196] = this.address
                                                mem[_28615 + 228] = block.timestamp + 120
                                                mem[_28615 + 164] = 160
                                                mem[_28615 + 260] = mem[_28615]
                                                s = 0
                                                while s < 32 * mem[_28615]:
                                                    mem[s + _28615 + 292] = mem[s + _28615 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28615 + 260 len (32 * mem[_28615]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24428 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24428] = 26
                                                mem[_24428 + 32] = 'SafeMath: division by zero'
                                                _24993 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24993] = 26
                                                mem[_24993 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24993 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29663 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29663]
                                                mem[_29663 + 32] = stor8
                                                require 1 < mem[_29663]
                                                mem[_29663 + 64] = stor7
                                                mem[_29663 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29663 + 100] = ext_call.return_data[0]
                                                mem[_29663 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29663 + 196] = this.address
                                                mem[_29663 + 228] = block.timestamp + 120
                                                mem[_29663 + 164] = 160
                                                mem[_29663 + 260] = mem[_29663]
                                                s = 0
                                                while s < 32 * mem[_29663]:
                                                    mem[s + _29663 + 292] = mem[s + _29663 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29663 + 260 len (32 * mem[_29663]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18700 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18700] = 26
                                        mem[_18700 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19660 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19660] = 26
                                            mem[_19660 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19660 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24195 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24195] = 26
                                                mem[_24195 + 32] = 'SafeMath: division by zero'
                                                _24739 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24739] = 26
                                                mem[_24739 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24739 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28609 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28609]
                                                mem[_28609 + 32] = stor8
                                                require 1 < mem[_28609]
                                                mem[_28609 + 64] = stor7
                                                mem[_28609 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28609 + 100] = ext_call.return_data[0]
                                                mem[_28609 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28609 + 196] = this.address
                                                mem[_28609 + 228] = block.timestamp + 120
                                                mem[_28609 + 164] = 160
                                                mem[_28609 + 260] = mem[_28609]
                                                s = 0
                                                while s < 32 * mem[_28609]:
                                                    mem[s + _28609 + 292] = mem[s + _28609 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28609 + 260 len (32 * mem[_28609]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24427 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24427] = 26
                                                mem[_24427 + 32] = 'SafeMath: division by zero'
                                                _24992 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24992] = 26
                                                mem[_24992 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24992 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29657 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29657]
                                                mem[_29657 + 32] = stor8
                                                require 1 < mem[_29657]
                                                mem[_29657 + 64] = stor7
                                                mem[_29657 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29657 + 100] = ext_call.return_data[0]
                                                mem[_29657 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29657 + 196] = this.address
                                                mem[_29657 + 228] = block.timestamp + 120
                                                mem[_29657 + 164] = 160
                                                mem[_29657 + 260] = mem[_29657]
                                                s = 0
                                                while s < 32 * mem[_29657]:
                                                    mem[s + _29657 + 292] = mem[s + _29657 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29657 + 260 len (32 * mem[_29657]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24548 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24548] = 26
                                            mem[_24548 + 32] = 'SafeMath: division by zero'
                                            _25397 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25397] = 26
                                            mem[_25397 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25397 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30477 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30477]
                                            mem[_30477 + 32] = stor8
                                            require 1 < mem[_30477]
                                            mem[_30477 + 64] = stor7
                                            mem[_30477 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30477 + 100] = ext_call.return_data[0]
                                            mem[_30477 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30477 + 196] = this.address
                                            mem[_30477 + 228] = block.timestamp + 120
                                            mem[_30477 + 164] = 160
                                            mem[_30477 + 260] = mem[_30477]
                                            s = 0
                                            while s < 32 * mem[_30477]:
                                                mem[s + _30477 + 292] = mem[s + _30477 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30477 + 260 len (32 * mem[_30477]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30477]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19825 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19825] = 26
                                        mem[_19825 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19825 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24426 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24426] = 26
                                            mem[_24426 + 32] = 'SafeMath: division by zero'
                                            _24991 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24991] = 26
                                            mem[_24991 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24991 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29651 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29651]
                                            mem[_29651 + 32] = stor8
                                            require 1 < mem[_29651]
                                            mem[_29651 + 64] = stor7
                                            mem[_29651 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29651 + 100] = ext_call.return_data[0]
                                            mem[_29651 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29651 + 196] = this.address
                                            mem[_29651 + 228] = block.timestamp + 120
                                            mem[_29651 + 164] = 160
                                            mem[_29651 + 260] = mem[_29651]
                                            s = 0
                                            while s < 32 * mem[_29651]:
                                                mem[s + _29651 + 292] = mem[s + _29651 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29651 + 260 len (32 * mem[_29651]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24547 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24547] = 26
                                                mem[_24547 + 32] = 'SafeMath: division by zero'
                                                _25396 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25396] = 26
                                                mem[_25396 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25396 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30471 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30471]
                                                mem[_30471 + 32] = stor8
                                                require 1 < mem[_30471]
                                                mem[_30471 + 64] = stor7
                                                mem[_30471 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30471 + 100] = ext_call.return_data[0]
                                                mem[_30471 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30471 + 196] = this.address
                                                mem[_30471 + 228] = block.timestamp + 120
                                                mem[_30471 + 164] = 160
                                                mem[_30471 + 260] = mem[_30471]
                                                s = 0
                                                while s < 32 * mem[_30471]:
                                                    mem[s + _30471 + 292] = mem[s + _30471 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30471 + 260 len (32 * mem[_30471]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30471]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24604 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24604] = 26
                                            mem[_24604 + 32] = 'SafeMath: division by zero'
                                            _26023 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26023] = 26
                                            mem[_26023 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26023 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30925 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30925]
                                            mem[_30925 + 32] = stor8
                                            require 1 < mem[_30925]
                                            mem[_30925 + 64] = stor7
                                            mem[_30925 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30925 + 100] = ext_call.return_data[0]
                                            mem[_30925 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30925 + 196] = this.address
                                            mem[_30925 + 228] = block.timestamp + 120
                                            mem[_30925 + 164] = 160
                                            mem[_30925 + 260] = mem[_30925]
                                            s = 0
                                            while s < 32 * mem[_30925]:
                                                mem[s + _30925 + 292] = mem[s + _30925 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30925 + 260 len (32 * mem[_30925]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17634 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17634] = 30
                                    mem[_17634 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17884 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17884 + 68] = mem[idx + _17634 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17884 + 68] = mem[_17884 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17884 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18651 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18651] = 26
                                        mem[_18651 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19593 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19593] = 26
                                        mem[_19593 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19593 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24009 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24009] = 26
                                            mem[_24009 + 32] = 'SafeMath: division by zero'
                                            _24651 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24651] = 26
                                            mem[_24651 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24651 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27606 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27606]
                                            mem[_27606 + 32] = stor8
                                            require 1 < mem[_27606]
                                            mem[_27606 + 64] = stor7
                                            mem[_27606 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27606 + 100] = ext_call.return_data[0]
                                            mem[_27606 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27606 + 196] = this.address
                                            mem[_27606 + 228] = block.timestamp + 120
                                            mem[_27606 + 164] = 160
                                            mem[_27606 + 260] = mem[_27606]
                                            s = 0
                                            while s < 32 * mem[_27606]:
                                                mem[s + _27606 + 292] = mem[s + _27606 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27606 + 260 len (32 * mem[_27606]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24192 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24192] = 26
                                                mem[_24192 + 32] = 'SafeMath: division by zero'
                                                _24738 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24738] = 26
                                                mem[_24738 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24738 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28594 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28594]
                                                mem[_28594 + 32] = stor8
                                                require 1 < mem[_28594]
                                                mem[_28594 + 64] = stor7
                                                mem[_28594 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28594 + 100] = ext_call.return_data[0]
                                                mem[_28594 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28594 + 196] = this.address
                                                mem[_28594 + 228] = block.timestamp + 120
                                                mem[_28594 + 164] = 160
                                                mem[_28594 + 260] = mem[_28594]
                                                s = 0
                                                while s < 32 * mem[_28594]:
                                                    mem[s + _28594 + 292] = mem[s + _28594 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28594 + 260 len (32 * mem[_28594]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24423 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24423] = 26
                                                mem[_24423 + 32] = 'SafeMath: division by zero'
                                                _24987 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24987] = 26
                                                mem[_24987 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24987 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29641 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29641]
                                                mem[_29641 + 32] = stor8
                                                require 1 < mem[_29641]
                                                mem[_29641 + 64] = stor7
                                                mem[_29641 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29641 + 100] = ext_call.return_data[0]
                                                mem[_29641 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29641 + 196] = this.address
                                                mem[_29641 + 228] = block.timestamp + 120
                                                mem[_29641 + 164] = 160
                                                mem[_29641 + 260] = mem[_29641]
                                                s = 0
                                                while s < 32 * mem[_29641]:
                                                    mem[s + _29641 + 292] = mem[s + _29641 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29641 + 260 len (32 * mem[_29641]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18699 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18699] = 26
                                        mem[_18699 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19659 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19659] = 26
                                            mem[_19659 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19659 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24191 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24191] = 26
                                                mem[_24191 + 32] = 'SafeMath: division by zero'
                                                _24737 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24737] = 26
                                                mem[_24737 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24737 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28588 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28588]
                                                mem[_28588 + 32] = stor8
                                                require 1 < mem[_28588]
                                                mem[_28588 + 64] = stor7
                                                mem[_28588 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28588 + 100] = ext_call.return_data[0]
                                                mem[_28588 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28588 + 196] = this.address
                                                mem[_28588 + 228] = block.timestamp + 120
                                                mem[_28588 + 164] = 160
                                                mem[_28588 + 260] = mem[_28588]
                                                s = 0
                                                while s < 32 * mem[_28588]:
                                                    mem[s + _28588 + 292] = mem[s + _28588 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28588 + 260 len (32 * mem[_28588]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24422 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24422] = 26
                                                mem[_24422 + 32] = 'SafeMath: division by zero'
                                                _24986 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24986] = 26
                                                mem[_24986 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24986 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29635 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29635]
                                                mem[_29635 + 32] = stor8
                                                require 1 < mem[_29635]
                                                mem[_29635 + 64] = stor7
                                                mem[_29635 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29635 + 100] = ext_call.return_data[0]
                                                mem[_29635 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29635 + 196] = this.address
                                                mem[_29635 + 228] = block.timestamp + 120
                                                mem[_29635 + 164] = 160
                                                mem[_29635 + 260] = mem[_29635]
                                                s = 0
                                                while s < 32 * mem[_29635]:
                                                    mem[s + _29635 + 292] = mem[s + _29635 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29635 + 260 len (32 * mem[_29635]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24546 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24546] = 26
                                            mem[_24546 + 32] = 'SafeMath: division by zero'
                                            _25388 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25388] = 26
                                            mem[_25388 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25388 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30461 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30461]
                                            mem[_30461 + 32] = stor8
                                            require 1 < mem[_30461]
                                            mem[_30461 + 64] = stor7
                                            mem[_30461 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30461 + 100] = ext_call.return_data[0]
                                            mem[_30461 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30461 + 196] = this.address
                                            mem[_30461 + 228] = block.timestamp + 120
                                            mem[_30461 + 164] = 160
                                            mem[_30461 + 260] = mem[_30461]
                                            s = 0
                                            while s < 32 * mem[_30461]:
                                                mem[s + _30461 + 292] = mem[s + _30461 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30461 + 260 len (32 * mem[_30461]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30461]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19821 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19821] = 26
                                        mem[_19821 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19821 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24421 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24421] = 26
                                            mem[_24421 + 32] = 'SafeMath: division by zero'
                                            _24985 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24985] = 26
                                            mem[_24985 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24985 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29629 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29629]
                                            mem[_29629 + 32] = stor8
                                            require 1 < mem[_29629]
                                            mem[_29629 + 64] = stor7
                                            mem[_29629 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29629 + 100] = ext_call.return_data[0]
                                            mem[_29629 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29629 + 196] = this.address
                                            mem[_29629 + 228] = block.timestamp + 120
                                            mem[_29629 + 164] = 160
                                            mem[_29629 + 260] = mem[_29629]
                                            s = 0
                                            while s < 32 * mem[_29629]:
                                                mem[s + _29629 + 292] = mem[s + _29629 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29629 + 260 len (32 * mem[_29629]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24545 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24545] = 26
                                                mem[_24545 + 32] = 'SafeMath: division by zero'
                                                _25387 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25387] = 26
                                                mem[_25387 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25387 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30455 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30455]
                                                mem[_30455 + 32] = stor8
                                                require 1 < mem[_30455]
                                                mem[_30455 + 64] = stor7
                                                mem[_30455 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30455 + 100] = ext_call.return_data[0]
                                                mem[_30455 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30455 + 196] = this.address
                                                mem[_30455 + 228] = block.timestamp + 120
                                                mem[_30455 + 164] = 160
                                                mem[_30455 + 260] = mem[_30455]
                                                s = 0
                                                while s < 32 * mem[_30455]:
                                                    mem[s + _30455 + 292] = mem[s + _30455 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30455 + 260 len (32 * mem[_30455]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30455]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24603 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24603] = 26
                                            mem[_24603 + 32] = 'SafeMath: division by zero'
                                            _26009 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_26009] = 26
                                            mem[_26009 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _26009 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30917 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30917]
                                            mem[_30917 + 32] = stor8
                                            require 1 < mem[_30917]
                                            mem[_30917 + 64] = stor7
                                            mem[_30917 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30917 + 100] = ext_call.return_data[0]
                                            mem[_30917 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30917 + 196] = this.address
                                            mem[_30917 + 228] = block.timestamp + 120
                                            mem[_30917 + 164] = 160
                                            mem[_30917 + 260] = mem[_30917]
                                            s = 0
                                            while s < 32 * mem[_30917]:
                                                mem[s + _30917 + 292] = mem[s + _30917 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30917 + 260 len (32 * mem[_30917]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]):
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17632 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17632] = 30
                                    mem[_17632 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17878 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17878 + 68] = mem[idx + _17632 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17878 + 68] = mem[_17878 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17878 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18650 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18650] = 26
                                        mem[_18650 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19590 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19590] = 26
                                        mem[_19590 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19590 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24006 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24006] = 26
                                            mem[_24006 + 32] = 'SafeMath: division by zero'
                                            _24650 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24650] = 26
                                            mem[_24650 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24650 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27587 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27587]
                                            mem[_27587 + 32] = stor8
                                            require 1 < mem[_27587]
                                            mem[_27587 + 64] = stor7
                                            mem[_27587 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27587 + 100] = ext_call.return_data[0]
                                            mem[_27587 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27587 + 196] = this.address
                                            mem[_27587 + 228] = block.timestamp + 120
                                            mem[_27587 + 164] = 160
                                            mem[_27587 + 260] = mem[_27587]
                                            s = 0
                                            while s < 32 * mem[_27587]:
                                                mem[s + _27587 + 292] = mem[s + _27587 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27587 + 260 len (32 * mem[_27587]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24188 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24188] = 26
                                                mem[_24188 + 32] = 'SafeMath: division by zero'
                                                _24736 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24736] = 26
                                                mem[_24736 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24736 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28573 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28573]
                                                mem[_28573 + 32] = stor8
                                                require 1 < mem[_28573]
                                                mem[_28573 + 64] = stor7
                                                mem[_28573 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28573 + 100] = ext_call.return_data[0]
                                                mem[_28573 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28573 + 196] = this.address
                                                mem[_28573 + 228] = block.timestamp + 120
                                                mem[_28573 + 164] = 160
                                                mem[_28573 + 260] = mem[_28573]
                                                s = 0
                                                while s < 32 * mem[_28573]:
                                                    mem[s + _28573 + 292] = mem[s + _28573 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28573 + 260 len (32 * mem[_28573]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24418 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24418] = 26
                                                mem[_24418 + 32] = 'SafeMath: division by zero'
                                                _24981 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24981] = 26
                                                mem[_24981 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24981 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29619 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29619]
                                                mem[_29619 + 32] = stor8
                                                require 1 < mem[_29619]
                                                mem[_29619 + 64] = stor7
                                                mem[_29619 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29619 + 100] = ext_call.return_data[0]
                                                mem[_29619 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29619 + 196] = this.address
                                                mem[_29619 + 228] = block.timestamp + 120
                                                mem[_29619 + 164] = 160
                                                mem[_29619 + 260] = mem[_29619]
                                                s = 0
                                                while s < 32 * mem[_29619]:
                                                    mem[s + _29619 + 292] = mem[s + _29619 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29619 + 260 len (32 * mem[_29619]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18698 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18698] = 26
                                        mem[_18698 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19658 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19658] = 26
                                            mem[_19658 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19658 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24187 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24187] = 26
                                                mem[_24187 + 32] = 'SafeMath: division by zero'
                                                _24735 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24735] = 26
                                                mem[_24735 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24735 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28567 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28567]
                                                mem[_28567 + 32] = stor8
                                                require 1 < mem[_28567]
                                                mem[_28567 + 64] = stor7
                                                mem[_28567 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28567 + 100] = ext_call.return_data[0]
                                                mem[_28567 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28567 + 196] = this.address
                                                mem[_28567 + 228] = block.timestamp + 120
                                                mem[_28567 + 164] = 160
                                                mem[_28567 + 260] = mem[_28567]
                                                s = 0
                                                while s < 32 * mem[_28567]:
                                                    mem[s + _28567 + 292] = mem[s + _28567 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28567 + 260 len (32 * mem[_28567]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24417 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24417] = 26
                                                mem[_24417 + 32] = 'SafeMath: division by zero'
                                                _24980 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24980] = 26
                                                mem[_24980 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24980 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29613 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29613]
                                                mem[_29613 + 32] = stor8
                                                require 1 < mem[_29613]
                                                mem[_29613 + 64] = stor7
                                                mem[_29613 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29613 + 100] = ext_call.return_data[0]
                                                mem[_29613 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29613 + 196] = this.address
                                                mem[_29613 + 228] = block.timestamp + 120
                                                mem[_29613 + 164] = 160
                                                mem[_29613 + 260] = mem[_29613]
                                                s = 0
                                                while s < 32 * mem[_29613]:
                                                    mem[s + _29613 + 292] = mem[s + _29613 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29613 + 260 len (32 * mem[_29613]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24544 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24544] = 26
                                            mem[_24544 + 32] = 'SafeMath: division by zero'
                                            _25379 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25379] = 26
                                            mem[_25379 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25379 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30445 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30445]
                                            mem[_30445 + 32] = stor8
                                            require 1 < mem[_30445]
                                            mem[_30445 + 64] = stor7
                                            mem[_30445 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30445 + 100] = ext_call.return_data[0]
                                            mem[_30445 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30445 + 196] = this.address
                                            mem[_30445 + 228] = block.timestamp + 120
                                            mem[_30445 + 164] = 160
                                            mem[_30445 + 260] = mem[_30445]
                                            s = 0
                                            while s < 32 * mem[_30445]:
                                                mem[s + _30445 + 292] = mem[s + _30445 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30445 + 260 len (32 * mem[_30445]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30445]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19817 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19817] = 26
                                        mem[_19817 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19817 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24416 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24416] = 26
                                            mem[_24416 + 32] = 'SafeMath: division by zero'
                                            _24979 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24979] = 26
                                            mem[_24979 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24979 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29607 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29607]
                                            mem[_29607 + 32] = stor8
                                            require 1 < mem[_29607]
                                            mem[_29607 + 64] = stor7
                                            mem[_29607 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29607 + 100] = ext_call.return_data[0]
                                            mem[_29607 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29607 + 196] = this.address
                                            mem[_29607 + 228] = block.timestamp + 120
                                            mem[_29607 + 164] = 160
                                            mem[_29607 + 260] = mem[_29607]
                                            s = 0
                                            while s < 32 * mem[_29607]:
                                                mem[s + _29607 + 292] = mem[s + _29607 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29607 + 260 len (32 * mem[_29607]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24543 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24543] = 26
                                                mem[_24543 + 32] = 'SafeMath: division by zero'
                                                _25378 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25378] = 26
                                                mem[_25378 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25378 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30439 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30439]
                                                mem[_30439 + 32] = stor8
                                                require 1 < mem[_30439]
                                                mem[_30439 + 64] = stor7
                                                mem[_30439 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30439 + 100] = ext_call.return_data[0]
                                                mem[_30439 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30439 + 196] = this.address
                                                mem[_30439 + 228] = block.timestamp + 120
                                                mem[_30439 + 164] = 160
                                                mem[_30439 + 260] = mem[_30439]
                                                s = 0
                                                while s < 32 * mem[_30439]:
                                                    mem[s + _30439 + 292] = mem[s + _30439 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30439 + 260 len (32 * mem[_30439]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30439]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24602 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24602] = 26
                                            mem[_24602 + 32] = 'SafeMath: division by zero'
                                            _25995 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25995] = 26
                                            mem[_25995 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25995 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30909 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30909]
                                            mem[_30909 + 32] = stor8
                                            require 1 < mem[_30909]
                                            mem[_30909 + 64] = stor7
                                            mem[_30909 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30909 + 100] = ext_call.return_data[0]
                                            mem[_30909 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30909 + 196] = this.address
                                            mem[_30909 + 228] = block.timestamp + 120
                                            mem[_30909 + 164] = 160
                                            mem[_30909 + 260] = mem[_30909]
                                            s = 0
                                            while s < 32 * mem[_30909]:
                                                mem[s + _30909 + 292] = mem[s + _30909 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30909 + 260 len (32 * mem[_30909]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (0 / ext_call.return_data[0]) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17630 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17630] = 30
                                    mem[_17630 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17872 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17872 + 68] = mem[idx + _17630 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17872 + 68] = mem[_17872 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17872 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18649 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18649] = 26
                                        mem[_18649 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19587 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19587] = 26
                                        mem[_19587 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19587 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24003 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24003] = 26
                                            mem[_24003 + 32] = 'SafeMath: division by zero'
                                            _24649 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24649] = 26
                                            mem[_24649 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24649 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27568 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27568]
                                            mem[_27568 + 32] = stor8
                                            require 1 < mem[_27568]
                                            mem[_27568 + 64] = stor7
                                            mem[_27568 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27568 + 100] = ext_call.return_data[0]
                                            mem[_27568 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27568 + 196] = this.address
                                            mem[_27568 + 228] = block.timestamp + 120
                                            mem[_27568 + 164] = 160
                                            mem[_27568 + 260] = mem[_27568]
                                            s = 0
                                            while s < 32 * mem[_27568]:
                                                mem[s + _27568 + 292] = mem[s + _27568 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27568 + 260 len (32 * mem[_27568]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24184 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24184] = 26
                                                mem[_24184 + 32] = 'SafeMath: division by zero'
                                                _24734 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24734] = 26
                                                mem[_24734 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24734 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28552 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28552]
                                                mem[_28552 + 32] = stor8
                                                require 1 < mem[_28552]
                                                mem[_28552 + 64] = stor7
                                                mem[_28552 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28552 + 100] = ext_call.return_data[0]
                                                mem[_28552 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28552 + 196] = this.address
                                                mem[_28552 + 228] = block.timestamp + 120
                                                mem[_28552 + 164] = 160
                                                mem[_28552 + 260] = mem[_28552]
                                                s = 0
                                                while s < 32 * mem[_28552]:
                                                    mem[s + _28552 + 292] = mem[s + _28552 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28552 + 260 len (32 * mem[_28552]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24413 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24413] = 26
                                                mem[_24413 + 32] = 'SafeMath: division by zero'
                                                _24975 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24975] = 26
                                                mem[_24975 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24975 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29597 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29597]
                                                mem[_29597 + 32] = stor8
                                                require 1 < mem[_29597]
                                                mem[_29597 + 64] = stor7
                                                mem[_29597 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29597 + 100] = ext_call.return_data[0]
                                                mem[_29597 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29597 + 196] = this.address
                                                mem[_29597 + 228] = block.timestamp + 120
                                                mem[_29597 + 164] = 160
                                                mem[_29597 + 260] = mem[_29597]
                                                s = 0
                                                while s < 32 * mem[_29597]:
                                                    mem[s + _29597 + 292] = mem[s + _29597 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29597 + 260 len (32 * mem[_29597]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18697 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18697] = 26
                                        mem[_18697 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19657 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19657] = 26
                                            mem[_19657 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19657 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24183 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24183] = 26
                                                mem[_24183 + 32] = 'SafeMath: division by zero'
                                                _24733 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24733] = 26
                                                mem[_24733 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24733 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28546 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28546]
                                                mem[_28546 + 32] = stor8
                                                require 1 < mem[_28546]
                                                mem[_28546 + 64] = stor7
                                                mem[_28546 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28546 + 100] = ext_call.return_data[0]
                                                mem[_28546 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28546 + 196] = this.address
                                                mem[_28546 + 228] = block.timestamp + 120
                                                mem[_28546 + 164] = 160
                                                mem[_28546 + 260] = mem[_28546]
                                                s = 0
                                                while s < 32 * mem[_28546]:
                                                    mem[s + _28546 + 292] = mem[s + _28546 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28546 + 260 len (32 * mem[_28546]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24412 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24412] = 26
                                                mem[_24412 + 32] = 'SafeMath: division by zero'
                                                _24974 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24974] = 26
                                                mem[_24974 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24974 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29591 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29591]
                                                mem[_29591 + 32] = stor8
                                                require 1 < mem[_29591]
                                                mem[_29591 + 64] = stor7
                                                mem[_29591 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29591 + 100] = ext_call.return_data[0]
                                                mem[_29591 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29591 + 196] = this.address
                                                mem[_29591 + 228] = block.timestamp + 120
                                                mem[_29591 + 164] = 160
                                                mem[_29591 + 260] = mem[_29591]
                                                s = 0
                                                while s < 32 * mem[_29591]:
                                                    mem[s + _29591 + 292] = mem[s + _29591 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29591 + 260 len (32 * mem[_29591]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24542 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24542] = 26
                                            mem[_24542 + 32] = 'SafeMath: division by zero'
                                            _25370 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25370] = 26
                                            mem[_25370 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25370 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30429 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30429]
                                            mem[_30429 + 32] = stor8
                                            require 1 < mem[_30429]
                                            mem[_30429 + 64] = stor7
                                            mem[_30429 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30429 + 100] = ext_call.return_data[0]
                                            mem[_30429 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30429 + 196] = this.address
                                            mem[_30429 + 228] = block.timestamp + 120
                                            mem[_30429 + 164] = 160
                                            mem[_30429 + 260] = mem[_30429]
                                            s = 0
                                            while s < 32 * mem[_30429]:
                                                mem[s + _30429 + 292] = mem[s + _30429 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30429 + 260 len (32 * mem[_30429]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30429]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19813 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19813] = 26
                                        mem[_19813 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19813 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24411 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24411] = 26
                                            mem[_24411 + 32] = 'SafeMath: division by zero'
                                            _24973 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24973] = 26
                                            mem[_24973 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24973 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29585 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29585]
                                            mem[_29585 + 32] = stor8
                                            require 1 < mem[_29585]
                                            mem[_29585 + 64] = stor7
                                            mem[_29585 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29585 + 100] = ext_call.return_data[0]
                                            mem[_29585 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29585 + 196] = this.address
                                            mem[_29585 + 228] = block.timestamp + 120
                                            mem[_29585 + 164] = 160
                                            mem[_29585 + 260] = mem[_29585]
                                            s = 0
                                            while s < 32 * mem[_29585]:
                                                mem[s + _29585 + 292] = mem[s + _29585 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29585 + 260 len (32 * mem[_29585]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24541 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24541] = 26
                                                mem[_24541 + 32] = 'SafeMath: division by zero'
                                                _25369 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25369] = 26
                                                mem[_25369 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25369 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30423 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30423]
                                                mem[_30423 + 32] = stor8
                                                require 1 < mem[_30423]
                                                mem[_30423 + 64] = stor7
                                                mem[_30423 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30423 + 100] = ext_call.return_data[0]
                                                mem[_30423 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30423 + 196] = this.address
                                                mem[_30423 + 228] = block.timestamp + 120
                                                mem[_30423 + 164] = 160
                                                mem[_30423 + 260] = mem[_30423]
                                                s = 0
                                                while s < 32 * mem[_30423]:
                                                    mem[s + _30423 + 292] = mem[s + _30423 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30423 + 260 len (32 * mem[_30423]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30423]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24601 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24601] = 26
                                            mem[_24601 + 32] = 'SafeMath: division by zero'
                                            _25981 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25981] = 26
                                            mem[_25981 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25981 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30901 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30901]
                                            mem[_30901 + 32] = stor8
                                            require 1 < mem[_30901]
                                            mem[_30901 + 64] = stor7
                                            mem[_30901 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30901 + 100] = ext_call.return_data[0]
                                            mem[_30901 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30901 + 196] = this.address
                                            mem[_30901 + 228] = block.timestamp + 120
                                            mem[_30901 + 164] = 160
                                            mem[_30901 + 260] = mem[_30901]
                                            s = 0
                                            while s < 32 * mem[_30901]:
                                                mem[s + _30901 + 292] = mem[s + _30901 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30901 + 260 len (32 * mem[_30901]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (0 / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                        revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[261 len 31]
                    mem[160] = 26
                    mem[192] = 'SafeMath: division by zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'SafeMath: division by zero'
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor8)
                    staticcall stor8.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_code.size(stor7)
                    staticcall stor7.0x70a08231 with:
                            gas gas_remaining wei
                           args stor9
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]):
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17628 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17628] = 30
                                    mem[_17628 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17866 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17866 + 68] = mem[idx + _17628 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17866 + 68] = mem[_17866 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17866 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18648 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18648] = 26
                                        mem[_18648 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19584 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19584] = 26
                                        mem[_19584 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19584 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24000 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24000] = 26
                                            mem[_24000 + 32] = 'SafeMath: division by zero'
                                            _24648 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24648] = 26
                                            mem[_24648 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24648 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27549 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27549]
                                            mem[_27549 + 32] = stor8
                                            require 1 < mem[_27549]
                                            mem[_27549 + 64] = stor7
                                            mem[_27549 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27549 + 100] = ext_call.return_data[0]
                                            mem[_27549 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27549 + 196] = this.address
                                            mem[_27549 + 228] = block.timestamp + 120
                                            mem[_27549 + 164] = 160
                                            mem[_27549 + 260] = mem[_27549]
                                            s = 0
                                            while s < 32 * mem[_27549]:
                                                mem[s + _27549 + 292] = mem[s + _27549 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27549 + 260 len (32 * mem[_27549]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24180 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24180] = 26
                                                mem[_24180 + 32] = 'SafeMath: division by zero'
                                                _24732 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24732] = 26
                                                mem[_24732 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24732 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28531 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28531]
                                                mem[_28531 + 32] = stor8
                                                require 1 < mem[_28531]
                                                mem[_28531 + 64] = stor7
                                                mem[_28531 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28531 + 100] = ext_call.return_data[0]
                                                mem[_28531 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28531 + 196] = this.address
                                                mem[_28531 + 228] = block.timestamp + 120
                                                mem[_28531 + 164] = 160
                                                mem[_28531 + 260] = mem[_28531]
                                                s = 0
                                                while s < 32 * mem[_28531]:
                                                    mem[s + _28531 + 292] = mem[s + _28531 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28531 + 260 len (32 * mem[_28531]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24408 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24408] = 26
                                                mem[_24408 + 32] = 'SafeMath: division by zero'
                                                _24969 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24969] = 26
                                                mem[_24969 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24969 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29575 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29575]
                                                mem[_29575 + 32] = stor8
                                                require 1 < mem[_29575]
                                                mem[_29575 + 64] = stor7
                                                mem[_29575 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29575 + 100] = ext_call.return_data[0]
                                                mem[_29575 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29575 + 196] = this.address
                                                mem[_29575 + 228] = block.timestamp + 120
                                                mem[_29575 + 164] = 160
                                                mem[_29575 + 260] = mem[_29575]
                                                s = 0
                                                while s < 32 * mem[_29575]:
                                                    mem[s + _29575 + 292] = mem[s + _29575 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29575 + 260 len (32 * mem[_29575]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18696 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18696] = 26
                                        mem[_18696 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19656 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19656] = 26
                                            mem[_19656 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19656 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24179 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24179] = 26
                                                mem[_24179 + 32] = 'SafeMath: division by zero'
                                                _24731 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24731] = 26
                                                mem[_24731 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24731 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28525 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28525]
                                                mem[_28525 + 32] = stor8
                                                require 1 < mem[_28525]
                                                mem[_28525 + 64] = stor7
                                                mem[_28525 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28525 + 100] = ext_call.return_data[0]
                                                mem[_28525 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28525 + 196] = this.address
                                                mem[_28525 + 228] = block.timestamp + 120
                                                mem[_28525 + 164] = 160
                                                mem[_28525 + 260] = mem[_28525]
                                                s = 0
                                                while s < 32 * mem[_28525]:
                                                    mem[s + _28525 + 292] = mem[s + _28525 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28525 + 260 len (32 * mem[_28525]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24407 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24407] = 26
                                                mem[_24407 + 32] = 'SafeMath: division by zero'
                                                _24968 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24968] = 26
                                                mem[_24968 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24968 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29569 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29569]
                                                mem[_29569 + 32] = stor8
                                                require 1 < mem[_29569]
                                                mem[_29569 + 64] = stor7
                                                mem[_29569 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29569 + 100] = ext_call.return_data[0]
                                                mem[_29569 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29569 + 196] = this.address
                                                mem[_29569 + 228] = block.timestamp + 120
                                                mem[_29569 + 164] = 160
                                                mem[_29569 + 260] = mem[_29569]
                                                s = 0
                                                while s < 32 * mem[_29569]:
                                                    mem[s + _29569 + 292] = mem[s + _29569 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29569 + 260 len (32 * mem[_29569]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24540 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24540] = 26
                                            mem[_24540 + 32] = 'SafeMath: division by zero'
                                            _25361 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25361] = 26
                                            mem[_25361 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25361 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30413 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30413]
                                            mem[_30413 + 32] = stor8
                                            require 1 < mem[_30413]
                                            mem[_30413 + 64] = stor7
                                            mem[_30413 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30413 + 100] = ext_call.return_data[0]
                                            mem[_30413 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30413 + 196] = this.address
                                            mem[_30413 + 228] = block.timestamp + 120
                                            mem[_30413 + 164] = 160
                                            mem[_30413 + 260] = mem[_30413]
                                            s = 0
                                            while s < 32 * mem[_30413]:
                                                mem[s + _30413 + 292] = mem[s + _30413 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30413 + 260 len (32 * mem[_30413]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30413]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19809 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19809] = 26
                                        mem[_19809 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19809 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24406 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24406] = 26
                                            mem[_24406 + 32] = 'SafeMath: division by zero'
                                            _24967 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24967] = 26
                                            mem[_24967 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24967 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29563 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29563]
                                            mem[_29563 + 32] = stor8
                                            require 1 < mem[_29563]
                                            mem[_29563 + 64] = stor7
                                            mem[_29563 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29563 + 100] = ext_call.return_data[0]
                                            mem[_29563 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29563 + 196] = this.address
                                            mem[_29563 + 228] = block.timestamp + 120
                                            mem[_29563 + 164] = 160
                                            mem[_29563 + 260] = mem[_29563]
                                            s = 0
                                            while s < 32 * mem[_29563]:
                                                mem[s + _29563 + 292] = mem[s + _29563 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29563 + 260 len (32 * mem[_29563]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24539 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24539] = 26
                                                mem[_24539 + 32] = 'SafeMath: division by zero'
                                                _25360 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25360] = 26
                                                mem[_25360 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25360 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30407 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30407]
                                                mem[_30407 + 32] = stor8
                                                require 1 < mem[_30407]
                                                mem[_30407 + 64] = stor7
                                                mem[_30407 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30407 + 100] = ext_call.return_data[0]
                                                mem[_30407 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30407 + 196] = this.address
                                                mem[_30407 + 228] = block.timestamp + 120
                                                mem[_30407 + 164] = 160
                                                mem[_30407 + 260] = mem[_30407]
                                                s = 0
                                                while s < 32 * mem[_30407]:
                                                    mem[s + _30407 + 292] = mem[s + _30407 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30407 + 260 len (32 * mem[_30407]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30407]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24600 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24600] = 26
                                            mem[_24600 + 32] = 'SafeMath: division by zero'
                                            _25967 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25967] = 26
                                            mem[_25967 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25967 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30893 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30893]
                                            mem[_30893 + 32] = stor8
                                            require 1 < mem[_30893]
                                            mem[_30893 + 64] = stor7
                                            mem[_30893 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30893 + 100] = ext_call.return_data[0]
                                            mem[_30893 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30893 + 196] = this.address
                                            mem[_30893 + 228] = block.timestamp + 120
                                            mem[_30893 + 164] = 160
                                            mem[_30893 + 260] = mem[_30893]
                                            s = 0
                                            while s < 32 * mem[_30893]:
                                                mem[s + _30893 + 292] = mem[s + _30893 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30893 + 260 len (32 * mem[_30893]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0]) + (0 / ext_call.return_data[0]) != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17626 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17626] = 30
                                    mem[_17626 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17860 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17860 + 68] = mem[idx + _17626 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17860 + 68] = mem[_17860 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17860 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18647 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18647] = 26
                                        mem[_18647 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19581 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19581] = 26
                                        mem[_19581 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19581 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23997 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23997] = 26
                                            mem[_23997 + 32] = 'SafeMath: division by zero'
                                            _24647 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24647] = 26
                                            mem[_24647 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24647 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27530 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27530]
                                            mem[_27530 + 32] = stor8
                                            require 1 < mem[_27530]
                                            mem[_27530 + 64] = stor7
                                            mem[_27530 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27530 + 100] = ext_call.return_data[0]
                                            mem[_27530 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27530 + 196] = this.address
                                            mem[_27530 + 228] = block.timestamp + 120
                                            mem[_27530 + 164] = 160
                                            mem[_27530 + 260] = mem[_27530]
                                            s = 0
                                            while s < 32 * mem[_27530]:
                                                mem[s + _27530 + 292] = mem[s + _27530 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27530 + 260 len (32 * mem[_27530]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24176 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24176] = 26
                                                mem[_24176 + 32] = 'SafeMath: division by zero'
                                                _24730 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24730] = 26
                                                mem[_24730 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24730 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28510 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28510]
                                                mem[_28510 + 32] = stor8
                                                require 1 < mem[_28510]
                                                mem[_28510 + 64] = stor7
                                                mem[_28510 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28510 + 100] = ext_call.return_data[0]
                                                mem[_28510 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28510 + 196] = this.address
                                                mem[_28510 + 228] = block.timestamp + 120
                                                mem[_28510 + 164] = 160
                                                mem[_28510 + 260] = mem[_28510]
                                                s = 0
                                                while s < 32 * mem[_28510]:
                                                    mem[s + _28510 + 292] = mem[s + _28510 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28510 + 260 len (32 * mem[_28510]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24403 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24403] = 26
                                                mem[_24403 + 32] = 'SafeMath: division by zero'
                                                _24963 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24963] = 26
                                                mem[_24963 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24963 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29553 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29553]
                                                mem[_29553 + 32] = stor8
                                                require 1 < mem[_29553]
                                                mem[_29553 + 64] = stor7
                                                mem[_29553 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29553 + 100] = ext_call.return_data[0]
                                                mem[_29553 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29553 + 196] = this.address
                                                mem[_29553 + 228] = block.timestamp + 120
                                                mem[_29553 + 164] = 160
                                                mem[_29553 + 260] = mem[_29553]
                                                s = 0
                                                while s < 32 * mem[_29553]:
                                                    mem[s + _29553 + 292] = mem[s + _29553 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29553 + 260 len (32 * mem[_29553]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18695 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18695] = 26
                                        mem[_18695 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19655 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19655] = 26
                                            mem[_19655 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19655 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24175 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24175] = 26
                                                mem[_24175 + 32] = 'SafeMath: division by zero'
                                                _24729 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24729] = 26
                                                mem[_24729 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24729 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28504 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28504]
                                                mem[_28504 + 32] = stor8
                                                require 1 < mem[_28504]
                                                mem[_28504 + 64] = stor7
                                                mem[_28504 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28504 + 100] = ext_call.return_data[0]
                                                mem[_28504 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28504 + 196] = this.address
                                                mem[_28504 + 228] = block.timestamp + 120
                                                mem[_28504 + 164] = 160
                                                mem[_28504 + 260] = mem[_28504]
                                                s = 0
                                                while s < 32 * mem[_28504]:
                                                    mem[s + _28504 + 292] = mem[s + _28504 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28504 + 260 len (32 * mem[_28504]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24402 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24402] = 26
                                                mem[_24402 + 32] = 'SafeMath: division by zero'
                                                _24962 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24962] = 26
                                                mem[_24962 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24962 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29547 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29547]
                                                mem[_29547 + 32] = stor8
                                                require 1 < mem[_29547]
                                                mem[_29547 + 64] = stor7
                                                mem[_29547 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29547 + 100] = ext_call.return_data[0]
                                                mem[_29547 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29547 + 196] = this.address
                                                mem[_29547 + 228] = block.timestamp + 120
                                                mem[_29547 + 164] = 160
                                                mem[_29547 + 260] = mem[_29547]
                                                s = 0
                                                while s < 32 * mem[_29547]:
                                                    mem[s + _29547 + 292] = mem[s + _29547 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29547 + 260 len (32 * mem[_29547]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24538 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24538] = 26
                                            mem[_24538 + 32] = 'SafeMath: division by zero'
                                            _25352 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25352] = 26
                                            mem[_25352 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25352 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30397 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30397]
                                            mem[_30397 + 32] = stor8
                                            require 1 < mem[_30397]
                                            mem[_30397 + 64] = stor7
                                            mem[_30397 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30397 + 100] = ext_call.return_data[0]
                                            mem[_30397 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30397 + 196] = this.address
                                            mem[_30397 + 228] = block.timestamp + 120
                                            mem[_30397 + 164] = 160
                                            mem[_30397 + 260] = mem[_30397]
                                            s = 0
                                            while s < 32 * mem[_30397]:
                                                mem[s + _30397 + 292] = mem[s + _30397 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30397 + 260 len (32 * mem[_30397]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30397]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19805 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19805] = 26
                                        mem[_19805 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19805 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24401 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24401] = 26
                                            mem[_24401 + 32] = 'SafeMath: division by zero'
                                            _24961 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24961] = 26
                                            mem[_24961 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24961 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29541 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29541]
                                            mem[_29541 + 32] = stor8
                                            require 1 < mem[_29541]
                                            mem[_29541 + 64] = stor7
                                            mem[_29541 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29541 + 100] = ext_call.return_data[0]
                                            mem[_29541 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29541 + 196] = this.address
                                            mem[_29541 + 228] = block.timestamp + 120
                                            mem[_29541 + 164] = 160
                                            mem[_29541 + 260] = mem[_29541]
                                            s = 0
                                            while s < 32 * mem[_29541]:
                                                mem[s + _29541 + 292] = mem[s + _29541 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29541 + 260 len (32 * mem[_29541]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24537 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24537] = 26
                                                mem[_24537 + 32] = 'SafeMath: division by zero'
                                                _25351 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25351] = 26
                                                mem[_25351 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25351 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30391 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30391]
                                                mem[_30391 + 32] = stor8
                                                require 1 < mem[_30391]
                                                mem[_30391 + 64] = stor7
                                                mem[_30391 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30391 + 100] = ext_call.return_data[0]
                                                mem[_30391 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30391 + 196] = this.address
                                                mem[_30391 + 228] = block.timestamp + 120
                                                mem[_30391 + 164] = 160
                                                mem[_30391 + 260] = mem[_30391]
                                                s = 0
                                                while s < 32 * mem[_30391]:
                                                    mem[s + _30391 + 292] = mem[s + _30391 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30391 + 260 len (32 * mem[_30391]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30391]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24599 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24599] = 26
                                            mem[_24599 + 32] = 'SafeMath: division by zero'
                                            _25953 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25953] = 26
                                            mem[_25953 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25953 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30885 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30885]
                                            mem[_30885 + 32] = stor8
                                            require 1 < mem[_30885]
                                            mem[_30885 + 64] = stor7
                                            mem[_30885 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30885 + 100] = ext_call.return_data[0]
                                            mem[_30885 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30885 + 196] = this.address
                                            mem[_30885 + 228] = block.timestamp + 120
                                            mem[_30885 + 164] = 160
                                            mem[_30885 + 260] = mem[_30885]
                                            s = 0
                                            while s < 32 * mem[_30885]:
                                                mem[s + _30885 + 292] = mem[s + _30885 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30885 + 260 len (32 * mem[_30885]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (0 / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[325 len 31]
                        mem[224] = 26
                        mem[256] = 'SafeMath: division by zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'SafeMath: division by zero'
                        if not (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0]:
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > 0:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17624 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17624] = 30
                                    mem[_17624 + 32] = 'SafeMath: subtraction overflow'
                                    if 0 > ext_call.return_data[0]:
                                        _17854 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17854 + 68] = mem[idx + _17624 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17854 + 68] = mem[_17854 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17854 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0]:
                                        _18646 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18646] = 26
                                        mem[_18646 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19578 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19578] = 26
                                        mem[_19578 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19578 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23994 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23994] = 26
                                            mem[_23994 + 32] = 'SafeMath: division by zero'
                                            _24646 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24646] = 26
                                            mem[_24646 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24646 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27511 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27511]
                                            mem[_27511 + 32] = stor8
                                            require 1 < mem[_27511]
                                            mem[_27511 + 64] = stor7
                                            mem[_27511 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27511 + 100] = ext_call.return_data[0]
                                            mem[_27511 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27511 + 196] = this.address
                                            mem[_27511 + 228] = block.timestamp + 120
                                            mem[_27511 + 164] = 160
                                            mem[_27511 + 260] = mem[_27511]
                                            s = 0
                                            while s < 32 * mem[_27511]:
                                                mem[s + _27511 + 292] = mem[s + _27511 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27511 + 260 len (32 * mem[_27511]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24172 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24172] = 26
                                                mem[_24172 + 32] = 'SafeMath: division by zero'
                                                _24728 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24728] = 26
                                                mem[_24728 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24728 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28489 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28489]
                                                mem[_28489 + 32] = stor8
                                                require 1 < mem[_28489]
                                                mem[_28489 + 64] = stor7
                                                mem[_28489 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28489 + 100] = ext_call.return_data[0]
                                                mem[_28489 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28489 + 196] = this.address
                                                mem[_28489 + 228] = block.timestamp + 120
                                                mem[_28489 + 164] = 160
                                                mem[_28489 + 260] = mem[_28489]
                                                s = 0
                                                while s < 32 * mem[_28489]:
                                                    mem[s + _28489 + 292] = mem[s + _28489 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28489 + 260 len (32 * mem[_28489]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24398 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24398] = 26
                                                mem[_24398 + 32] = 'SafeMath: division by zero'
                                                _24957 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24957] = 26
                                                mem[_24957 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24957 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29531 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29531]
                                                mem[_29531 + 32] = stor8
                                                require 1 < mem[_29531]
                                                mem[_29531 + 64] = stor7
                                                mem[_29531 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29531 + 100] = ext_call.return_data[0]
                                                mem[_29531 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29531 + 196] = this.address
                                                mem[_29531 + 228] = block.timestamp + 120
                                                mem[_29531 + 164] = 160
                                                mem[_29531 + 260] = mem[_29531]
                                                s = 0
                                                while s < 32 * mem[_29531]:
                                                    mem[s + _29531 + 292] = mem[s + _29531 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29531 + 260 len (32 * mem[_29531]) + 32]
                                    else:
                                        if 725000 * ext_call.return_data[0] / ext_call.return_data[0] != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18694 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18694] = 26
                                        mem[_18694 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not 725000 * ext_call.return_data[0] / 10^6:
                                            _19654 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19654] = 26
                                            mem[_19654 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19654 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24171 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24171] = 26
                                                mem[_24171 + 32] = 'SafeMath: division by zero'
                                                _24727 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24727] = 26
                                                mem[_24727 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24727 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28483 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28483]
                                                mem[_28483 + 32] = stor8
                                                require 1 < mem[_28483]
                                                mem[_28483 + 64] = stor7
                                                mem[_28483 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28483 + 100] = ext_call.return_data[0]
                                                mem[_28483 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28483 + 196] = this.address
                                                mem[_28483 + 228] = block.timestamp + 120
                                                mem[_28483 + 164] = 160
                                                mem[_28483 + 260] = mem[_28483]
                                                s = 0
                                                while s < 32 * mem[_28483]:
                                                    mem[s + _28483 + 292] = mem[s + _28483 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28483 + 260 len (32 * mem[_28483]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24397 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24397] = 26
                                                mem[_24397 + 32] = 'SafeMath: division by zero'
                                                _24956 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24956] = 26
                                                mem[_24956 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24956 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29525 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29525]
                                                mem[_29525 + 32] = stor8
                                                require 1 < mem[_29525]
                                                mem[_29525 + 64] = stor7
                                                mem[_29525 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29525 + 100] = ext_call.return_data[0]
                                                mem[_29525 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29525 + 196] = this.address
                                                mem[_29525 + 228] = block.timestamp + 120
                                                mem[_29525 + 164] = 160
                                                mem[_29525 + 260] = mem[_29525]
                                                s = 0
                                                while s < 32 * mem[_29525]:
                                                    mem[s + _29525 + 292] = mem[s + _29525 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29525 + 260 len (32 * mem[_29525]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24536 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24536] = 26
                                            mem[_24536 + 32] = 'SafeMath: division by zero'
                                            _25343 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25343] = 26
                                            mem[_25343 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25343 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30381 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30381]
                                            mem[_30381 + 32] = stor8
                                            require 1 < mem[_30381]
                                            mem[_30381 + 64] = stor7
                                            mem[_30381 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30381 + 100] = ext_call.return_data[0]
                                            mem[_30381 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30381 + 196] = this.address
                                            mem[_30381 + 228] = block.timestamp + 120
                                            mem[_30381 + 164] = 160
                                            mem[_30381 + 260] = mem[_30381]
                                            s = 0
                                            while s < 32 * mem[_30381]:
                                                mem[s + _30381 + 292] = mem[s + _30381 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30381 + 260 len (32 * mem[_30381]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30381]) + 1
                                            s = ext_call.return_data[0]
                                            continue 
                                        if ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / 725000 * ext_call.return_data[0] / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19801 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19801] = 26
                                        mem[_19801 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19801 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * 725000 * ext_call.return_data[0] / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24396 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24396] = 26
                                            mem[_24396 + 32] = 'SafeMath: division by zero'
                                            _24955 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24955] = 26
                                            mem[_24955 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24955 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29519 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29519]
                                            mem[_29519 + 32] = stor8
                                            require 1 < mem[_29519]
                                            mem[_29519 + 64] = stor7
                                            mem[_29519 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29519 + 100] = ext_call.return_data[0]
                                            mem[_29519 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29519 + 196] = this.address
                                            mem[_29519 + 228] = block.timestamp + 120
                                            mem[_29519 + 164] = 160
                                            mem[_29519 + 260] = mem[_29519]
                                            s = 0
                                            while s < 32 * mem[_29519]:
                                                mem[s + _29519 + 292] = mem[s + _29519 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29519 + 260 len (32 * mem[_29519]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24535 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24535] = 26
                                                mem[_24535 + 32] = 'SafeMath: division by zero'
                                                _25342 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25342] = 26
                                                mem[_25342 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25342 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30375 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30375]
                                                mem[_30375 + 32] = stor8
                                                require 1 < mem[_30375]
                                                mem[_30375 + 64] = stor7
                                                mem[_30375 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30375 + 100] = ext_call.return_data[0]
                                                mem[_30375 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30375 + 196] = this.address
                                                mem[_30375 + 228] = block.timestamp + 120
                                                mem[_30375 + 164] = 160
                                                mem[_30375 + 260] = mem[_30375]
                                                s = 0
                                                while s < 32 * mem[_30375]:
                                                    mem[s + _30375 + 292] = mem[s + _30375 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30375 + 260 len (32 * mem[_30375]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30375]) + 1
                                                s = ext_call.return_data[0]
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24598 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24598] = 26
                                            mem[_24598 + 32] = 'SafeMath: division by zero'
                                            _25939 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25939] = 26
                                            mem[_25939 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25939 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30877 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30877]
                                            mem[_30877 + 32] = stor8
                                            require 1 < mem[_30877]
                                            mem[_30877 + 64] = stor7
                                            mem[_30877 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30877 + 100] = ext_call.return_data[0]
                                            mem[_30877 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30877 + 196] = this.address
                                            mem[_30877 + 228] = block.timestamp + 120
                                            mem[_30877 + 164] = 160
                                            mem[_30877 + 260] = mem[_30877]
                                            s = 0
                                            while s < 32 * mem[_30877]:
                                                mem[s + _30877 + 292] = mem[s + _30877 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30877 + 260 len (32 * mem[_30877]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0]
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if 0 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / (ext_call.return_data[0] * ext_call.return_data[0] / 10^18) + ext_call.return_data[0] != reserveAllocation:
                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[389 len 31]
                            mem[64] = 352
                            mem[288] = 26
                            mem[320] = 'SafeMath: division by zero'
                            if ext_call.return_data[0] > (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6:
                                idx = 0
                                s = 0
                                while idx < 5:
                                    require ext_code.size(stor7)
                                    staticcall stor7.0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    _17622 = mem[64]
                                    mem[64] = mem[64] + 64
                                    mem[_17622] = 30
                                    mem[_17622 + 32] = 'SafeMath: subtraction overflow'
                                    if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                        _17848 = mem[64]
                                        mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                        mem[mem[64] + 4] = 32
                                        mem[mem[64] + 36] = 30
                                        idx = 0
                                        while idx < 30:
                                            mem[idx + _17848 + 68] = mem[idx + _17622 + 32]
                                            idx = idx + 32
                                            continue 
                                        mem[_17848 + 68] = mem[_17848 + 70 len 30]
                                        revert with memory
                                          from mem[64]
                                           len _17848 + -mem[64] + 100
                                    require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                    call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                         gas gas_remaining wei
                                        args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    if not ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6):
                                        _18645 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18645] = 26
                                        mem[_18645 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        _19575 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19575] = 26
                                        mem[_19575 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19575 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (0 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _23991 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_23991] = 26
                                            mem[_23991 + 32] = 'SafeMath: division by zero'
                                            _24645 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24645] = 26
                                            mem[_24645 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24645 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _27492 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_27492]
                                            mem[_27492 + 32] = stor8
                                            require 1 < mem[_27492]
                                            mem[_27492 + 64] = stor7
                                            mem[_27492 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_27492 + 100] = ext_call.return_data[0]
                                            mem[_27492 + 132] = 0 / ext_call.return_data[0]
                                            mem[_27492 + 196] = this.address
                                            mem[_27492 + 228] = block.timestamp + 120
                                            mem[_27492 + 164] = 160
                                            mem[_27492 + 260] = mem[_27492]
                                            s = 0
                                            while s < 32 * mem[_27492]:
                                                mem[s + _27492 + 292] = mem[s + _27492 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_27492 + 260 len (32 * mem[_27492]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24168 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24168] = 26
                                                mem[_24168 + 32] = 'SafeMath: division by zero'
                                                _24726 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24726] = 26
                                                mem[_24726 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24726 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28468 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28468]
                                                mem[_28468 + 32] = stor8
                                                require 1 < mem[_28468]
                                                mem[_28468 + 64] = stor7
                                                mem[_28468 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28468 + 100] = ext_call.return_data[0]
                                                mem[_28468 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28468 + 196] = this.address
                                                mem[_28468 + 228] = block.timestamp + 120
                                                mem[_28468 + 164] = 160
                                                mem[_28468 + 260] = mem[_28468]
                                                s = 0
                                                while s < 32 * mem[_28468]:
                                                    mem[s + _28468 + 292] = mem[s + _28468 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28468 + 260 len (32 * mem[_28468]) + 32]
                                            else:
                                                if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                    revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                                _24393 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24393] = 26
                                                mem[_24393 + 32] = 'SafeMath: division by zero'
                                                _24951 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24951] = 26
                                                mem[_24951 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24951 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29509 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29509]
                                                mem[_29509 + 32] = stor8
                                                require 1 < mem[_29509]
                                                mem[_29509 + 64] = stor7
                                                mem[_29509 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29509 + 100] = ext_call.return_data[0]
                                                mem[_29509 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                                mem[_29509 + 196] = this.address
                                                mem[_29509 + 228] = block.timestamp + 120
                                                mem[_29509 + 164] = 160
                                                mem[_29509 + 260] = mem[_29509]
                                                s = 0
                                                while s < 32 * mem[_29509]:
                                                    mem[s + _29509 + 292] = mem[s + _29509 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29509 + 260 len (32 * mem[_29509]) + 32]
                                    else:
                                        if (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) != 725000:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _18693 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_18693] = 26
                                        mem[_18693 + 32] = 'SafeMath: division by zero'
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6:
                                            _19653 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_19653] = 26
                                            mem[_19653 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _19653 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                            call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                                 gas gas_remaining wei
                                                args (0 / ext_call.return_data[0])
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_code.size(stor8)
                                            staticcall stor8.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            mem[mem[64] + 4] = stor9
                                            require ext_code.size(stor7)
                                            staticcall stor7.0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args stor9
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            if not ext_call.return_data[0]:
                                                _24167 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24167] = 26
                                                mem[_24167 + 32] = 'SafeMath: division by zero'
                                                _24725 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24725] = 26
                                                mem[_24725 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24725 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _28462 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_28462]
                                                mem[_28462 + 32] = stor8
                                                require 1 < mem[_28462]
                                                mem[_28462 + 64] = stor7
                                                mem[_28462 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_28462 + 100] = ext_call.return_data[0]
                                                mem[_28462 + 132] = 0 / ext_call.return_data[0]
                                                mem[_28462 + 196] = this.address
                                                mem[_28462 + 228] = block.timestamp + 120
                                                mem[_28462 + 164] = 160
                                                mem[_28462 + 260] = mem[_28462]
                                                s = 0
                                                while s < 32 * mem[_28462]:
                                                    mem[s + _28462 + 292] = mem[s + _28462 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_28462 + 260 len (32 * mem[_28462]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24392 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24392] = 26
                                                mem[_24392 + 32] = 'SafeMath: division by zero'
                                                _24950 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24950] = 26
                                                mem[_24950 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _24950 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _29503 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_29503]
                                                mem[_29503 + 32] = stor8
                                                require 1 < mem[_29503]
                                                mem[_29503 + 64] = stor7
                                                mem[_29503 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_29503 + 100] = ext_call.return_data[0]
                                                mem[_29503 + 132] = 0 / ext_call.return_data[0]
                                                mem[_29503 + 196] = this.address
                                                mem[_29503 + 228] = block.timestamp + 120
                                                mem[_29503 + 164] = 160
                                                mem[_29503 + 260] = mem[_29503]
                                                s = 0
                                                while s < 32 * mem[_29503]:
                                                    mem[s + _29503 + 292] = mem[s + _29503 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29503 + 260 len (32 * mem[_29503]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                idx = idx + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24534 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24534] = 26
                                            mem[_24534 + 32] = 'SafeMath: division by zero'
                                            _25334 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25334] = 26
                                            mem[_25334 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25334 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30365 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30365]
                                            mem[_30365 + 32] = stor8
                                            require 1 < mem[_30365]
                                            mem[_30365 + 64] = stor7
                                            mem[_30365 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30365 + 100] = ext_call.return_data[0]
                                            mem[_30365 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30365 + 196] = this.address
                                            mem[_30365 + 228] = block.timestamp + 120
                                            mem[_30365 + 164] = 160
                                            mem[_30365 + 260] = mem[_30365]
                                            s = 0
                                            while s < 32 * mem[_30365]:
                                                mem[s + _30365 + 292] = mem[s + _30365 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30365 + 260 len (32 * mem[_30365]) + 32]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            s = floor32(mem[_30365]) + 1
                                            s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                            continue 
                                        if ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 != ext_call.return_data[0]:
                                            revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                        _19797 = mem[64]
                                        mem[64] = mem[64] + 64
                                        mem[_19797] = 26
                                        mem[_19797 + 32] = 'SafeMath: division by zero'
                                        if not ext_call.return_data[0]:
                                            mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                            mem[mem[64] + 4] = 32
                                            mem[mem[64] + 36] = 26
                                            mem[mem[64] + 68] = 'SafeMath: division by zero'
                                            idx = 32
                                            while idx < 26:
                                                mem[idx + mem[64] + 68] = mem[idx + _19797 + 32]
                                                idx = idx + 32
                                                continue 
                                            revert with 0, 'SafeMath: division by zero'
                                        require ext_code.size(0x5aa53f03197e08c4851cad8c92c7922da5857e5d)
                                        call 0x5aa53f03197e08c4851cad8c92c7922da5857e5d.borrow(uint256 arg1) with:
                                             gas gas_remaining wei
                                            args (ext_call.return_data[0] * (725000 * ext_call.return_data[0]) - (725000 * (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6) / 10^6 / ext_call.return_data[0])
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_code.size(stor8)
                                        staticcall stor8.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        mem[mem[64] + 4] = stor9
                                        require ext_code.size(stor7)
                                        staticcall stor7.0x70a08231 with:
                                                gas gas_remaining wei
                                               args stor9
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if not ext_call.return_data[0]:
                                            _24391 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24391] = 26
                                            mem[_24391 + 32] = 'SafeMath: division by zero'
                                            _24949 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24949] = 26
                                            mem[_24949 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _24949 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _29497 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_29497]
                                            mem[_29497 + 32] = stor8
                                            require 1 < mem[_29497]
                                            mem[_29497 + 64] = stor7
                                            mem[_29497 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_29497 + 100] = ext_call.return_data[0]
                                            mem[_29497 + 132] = 0 / ext_call.return_data[0]
                                            mem[_29497 + 196] = this.address
                                            mem[_29497 + 228] = block.timestamp + 120
                                            mem[_29497 + 164] = 160
                                            mem[_29497 + 260] = mem[_29497]
                                            s = 0
                                            while s < 32 * mem[_29497]:
                                                mem[s + _29497 + 292] = mem[s + _29497 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_29497 + 260 len (32 * mem[_29497]) + 32]
                                        else:
                                            if ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] != ext_call.return_data[0]:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            if not ext_call.return_data[0] * ext_call.return_data[0]:
                                                _24533 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_24533] = 26
                                                mem[_24533 + 32] = 'SafeMath: division by zero'
                                                _25333 = mem[64]
                                                mem[64] = mem[64] + 64
                                                mem[_25333] = 26
                                                mem[_25333 + 32] = 'SafeMath: division by zero'
                                                if not ext_call.return_data[0]:
                                                    mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                    mem[mem[64] + 4] = 32
                                                    mem[mem[64] + 36] = 26
                                                    mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                    idx = 32
                                                    while idx < 26:
                                                        mem[idx + mem[64] + 68] = mem[idx + _25333 + 32]
                                                        idx = idx + 32
                                                        continue 
                                                    revert with 0, 'SafeMath: division by zero'
                                                _30359 = mem[64]
                                                mem[mem[64]] = 2
                                                mem[64] = mem[64] + 96
                                                require mem[_30359]
                                                mem[_30359 + 32] = stor8
                                                require 1 < mem[_30359]
                                                mem[_30359 + 64] = stor7
                                                mem[_30359 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                                mem[_30359 + 100] = ext_call.return_data[0]
                                                mem[_30359 + 132] = 0 / ext_call.return_data[0]
                                                mem[_30359 + 196] = this.address
                                                mem[_30359 + 228] = block.timestamp + 120
                                                mem[_30359 + 164] = 160
                                                mem[_30359 + 260] = mem[_30359]
                                                s = 0
                                                while s < 32 * mem[_30359]:
                                                    mem[s + _30359 + 292] = mem[s + _30359 + 32]
                                                    s = s + 32
                                                    continue 
                                                require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                                call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                     gas gas_remaining wei
                                                    args ext_call.return_data[0], 0 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30359 + 260 len (32 * mem[_30359]) + 32]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                s = floor32(mem[_30359]) + 1
                                                s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                                continue 
                                            if 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] != 275 * 3600:
                                                revert with 0, 32, 33, 0x65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                                            _24597 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_24597] = 26
                                            mem[_24597 + 32] = 'SafeMath: division by zero'
                                            _25925 = mem[64]
                                            mem[64] = mem[64] + 64
                                            mem[_25925] = 26
                                            mem[_25925 + 32] = 'SafeMath: division by zero'
                                            if not ext_call.return_data[0]:
                                                mem[mem[64]] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                mem[mem[64] + 4] = 32
                                                mem[mem[64] + 36] = 26
                                                mem[mem[64] + 68] = 'SafeMath: division by zero'
                                                idx = 32
                                                while idx < 26:
                                                    mem[idx + mem[64] + 68] = mem[idx + _25925 + 32]
                                                    idx = idx + 32
                                                    continue 
                                                revert with 0, 'SafeMath: division by zero'
                                            _30869 = mem[64]
                                            mem[mem[64]] = 2
                                            mem[64] = mem[64] + 96
                                            require mem[_30869]
                                            mem[_30869 + 32] = stor8
                                            require 1 < mem[_30869]
                                            mem[_30869 + 64] = stor7
                                            mem[_30869 + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                            mem[_30869 + 100] = ext_call.return_data[0]
                                            mem[_30869 + 132] = 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0]
                                            mem[_30869 + 196] = this.address
                                            mem[_30869 + 228] = block.timestamp + 120
                                            mem[_30869 + 164] = 160
                                            mem[_30869 + 260] = mem[_30869]
                                            s = 0
                                            while s < 32 * mem[_30869]:
                                                mem[s + _30869 + 292] = mem[s + _30869 + 32]
                                                s = s + 32
                                                continue 
                                            require ext_code.size(0xf491e7b69e4244ad4002bc14e878a34207e38c29)
                                            call 0xf491e7b69e4244ad4002bc14e878a34207e38c29.swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                 gas gas_remaining wei
                                                args ext_call.return_data[0], 275 * 3600 * ext_call.return_data[0] * ext_call.return_data[0] / 10^6 / ext_call.return_data[0], 160, address(this.address), block.timestamp + 120, mem[_30869 + 260 len (32 * mem[_30869]) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    idx = idx + 1
                                    s = ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6)
                                    continue 
                                require ext_code.size(stor7)
                                staticcall stor7.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                if (ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6 > ext_call.return_data[0]:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                require ext_code.size(0xe45ac34e528907d0a0239ab5db507688070b20bf)
                                call 0xe45ac34e528907d0a0239ab5db507688070b20bf.mint(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args (ext_call.return_data[0] - ((ext_call.return_data[0] * ext_call.return_data[0] / 10^18 * reserveAllocation) + (ext_call.return_data[0] * reserveAllocation) - (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) + (ext_call.return_data[0] * ext_call.return_data[0] / ext_call.return_data[0] * reserveAllocation) / 10^6))
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
}



}
