contract main {




// =====================  Runtime code  =====================


#
#  - withdraw(uint256 arg1)
#  - sub_8dc5b6fb(?)
#  - _fallback()
#
const decimals = 18

const sub_d2802be5(?) = 5

const withdrawFee = 15


mapping of uint256 balanceOf;
uint256 totalSupply;
array of struct stor3;
array of struct stor4;
address owner;
mapping of struct strategyInfo;
mapping of uint8 stor8;
array of struct stor9;
uint256 sub_5e8f09aa;
uint256 sub_66f2b1a7;
address governmentAddress;
address sub_97091078Address;
address sub_d7959960Address;
address USDTAddress;
uint256 stor16;
address stor18;
address stor19;
address stor20;
address stor21;
address stor22;
address stor23;

function totalSupply() {
    return totalSupply
}

function government() {
    return governmentAddress
}

function sub_5e8f09aa(?) {
    return sub_5e8f09aa
}

function sub_66f2b1a7(?) {
    return sub_66f2b1a7
}

function balanceOf(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return balanceOf[address(arg1)]
}

function owner() {
    return owner
}

function sub_97091078(?) {
    return sub_97091078Address
}

function USDT() {
    return USDTAddress
}

function sub_d7959960(?) {
    return sub_d7959960Address
}

function getStrategyInfo(uint256 arg1) {
    require calldata.size - 4 >= 32
    return strategyInfo[arg1].field_0, 
           strategyInfo[arg1].field_256,
           strategyInfo[arg1].field_1792,
           strategyInfo[arg1].field_1536,
           strategyInfo[arg1].field_1280,
           strategyInfo[arg1].field_512
}

function getCurrentStrategy() {
    return stor22, stor23, stor20, stor19, stor18, stor16
}

function renounceOwnership() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function approve(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Approve is not supporting for share tokens.'
}

function transfer(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Transfer is not supporting for share tokens.'
}

function allowance(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Allowance is not supporting for share tokens.'
}

function increaseAllowance(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                'IncreaseAllowance is not supporting for share tokens.'
}

function decreaseAllowance(address arg1, uint256 arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                'DecreaseAllowance is not supporting for share tokens.'
}

function transferFrom(address arg1, address arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'TransferFrom is not supporting for share tokens.'
}

function sub_463b4b70(?) {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    call msg.sender with:
       value eth.balance(this.address) wei
         gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function setGovernment(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'The address of government can not be a zero address'
    governmentAddress = arg1
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function sub_f5da03e8(?) {
    if stor9.length:
        mem[128] = uint256(stor9.field_0)
        idx = 128
        s = 0
        while (32 * stor9.length) + 96 > idx:
            mem[idx + 32] = stor9[s].field_256
            idx = idx + 32
            s = s + 1
            continue 
        return Array(len=stor9.length, data=mem[128 len 32 * stor9.length])
    mem[(32 * stor9.length) + 128] = 32
    mem[(32 * stor9.length) + 160] = stor9.length
    mem[(32 * stor9.length) + 192 len 32 * stor9.length] = mem[128 len 32 * stor9.length]
    return memory
      from (32 * stor9.length) + 128
       len (96 * stor9.length) + 64
}

function earn() {
    require ext_code.size(stor23)
    staticcall stor23.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(stor18)
    if stor16 >= 999999:
        call stor18.deposit(uint256 arg1) with:
             gas gas_remaining wei
            args ext_call.return_data[0]
    else:
        call stor18.deposit(uint256 arg1, uint256 arg2) with:
             gas gas_remaining wei
            args stor16, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    emit Earn(ext_call.return_data[0]);
}

function sub_00d791b5(?) {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(USDTAddress)
    staticcall USDTAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] <= 0:
        revert with 0, 'GrowthVault: USDT balance should be more then 0'
    require ext_code.size(USDTAddress)
    call USDTAddress.0xa9059cbb with:
         gas gas_remaining wei
        args msg.sender, sub_5e8f09aa
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    sub_5e8f09aa = 0
}

function sub_bd7a107b(?) {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(address(arg1))
    staticcall address(arg1).userInfo(uint256 arg1, address arg2) with:
            gas gas_remaining wei
           args arg3, this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_code.size(address(arg1))
    call address(arg1).withdraw(uint256 arg1, uint256 arg2) with:
         gas gas_remaining wei
        args arg3, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require ext_code.size(address(arg2))
    call address(arg2).0xa9059cbb with:
         gas gas_remaining wei
        args msg.sender, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_030bcab3(?) {
    require calldata.size - 4 >= 160
    require arg1 == address(arg1)
    require arg3 == address(arg3)
    require arg4 == address(arg4)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'newStrategy can not be a zero address'
    if not address(arg3):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'lpToken can not be a zero address'
    if not address(arg4):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'liquidityRouter can not be a zero address'
    require ext_code.size(address(arg3))
    staticcall address(arg3).token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(arg3))
    staticcall address(arg3).token1() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    strategyInfo[arg5].field_0 = address(arg4)
    strategyInfo[arg5].field_256 = address(arg3)
    strategyInfo[arg5].field_512 = arg2
    strategyInfo[arg5].field_1280 = address(arg1)
    strategyInfo[arg5].field_1536 = address(ext_call.return_data[0])
    strategyInfo[arg5].field_1792 = ext_call.return_data[12 len 20]
    if not stor8[arg5]:
        stor9.length++
        stor9[stor9.length].field_0 = arg5
        stor8[arg5] = 1
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg4), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg4), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_7f5ed9f9(?) {
    require calldata.size - 4 >= 128
    require arg1 == address(arg1)
    require arg2 == address(arg2)
    require arg3 == address(arg3)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not address(arg1):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'newStrategy can not be a zero address'
    if not address(arg2):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'lpToken can not be a zero address'
    if not address(arg3):
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'liquidityRouter can not be a zero address'
    require ext_code.size(address(arg2))
    staticcall address(arg2).token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(arg2))
    staticcall address(arg2).token1() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    strategyInfo[arg4].field_0 = address(arg3)
    strategyInfo[arg4].field_256 = address(arg2)
    strategyInfo[arg4].field_512 = 999999
    strategyInfo[arg4].field_1280 = address(arg1)
    strategyInfo[arg4].field_1536 = address(ext_call.return_data[0])
    strategyInfo[arg4].field_1792 = ext_call.return_data[12 len 20]
    if not stor8[arg4]:
        stor9.length++
        stor9[stor9.length].field_0 = arg4
        stor8[arg4] = 1
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg3), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    require ext_code.size(address(ext_call.return_data[0]))
    call address(ext_call.return_data[0]).approve(address arg1, uint256 arg2) with:
         gas gas_remaining wei
        args address(arg3), -1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function name() {
    if bool(stor3.length):
        if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor3.length):
            if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor3.length):
                if 31 < uint255(stor3.length) * 0.5:
                    mem[128] = uint256(stor3.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor3.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor3[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)])
                mem[128] = 256 * stor3.length.field_8
        else:
            if bool(stor3.length) == stor3.length.field_1 < 32:
                revert with 0, 34
            if stor3.length.field_1:
                if 31 < stor3.length.field_1:
                    mem[128] = uint256(stor3.field_0)
                    idx = 128
                    s = 0
                    while stor3.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor3[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)])
                mem[128] = 256 * stor3.length.field_8
        mem[ceil32(uint255(stor3.length) * 0.5) + 192 len ceil32(uint255(stor3.length) * 0.5)] = mem[128 len ceil32(uint255(stor3.length) * 0.5)]
        if ceil32(uint255(stor3.length) * 0.5) > uint255(stor3.length) * 0.5:
            mem[(uint255(stor3.length) * 0.5) + ceil32(uint255(stor3.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor3.length), data=mem[128 len ceil32(uint255(stor3.length) * 0.5)], mem[(2 * ceil32(uint255(stor3.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor3.length) * 0.5)]), 
    if bool(stor3.length) == stor3.length.field_1 < 32:
        revert with 0, 34
    if bool(stor3.length):
        if bool(stor3.length) == uint255(stor3.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor3.length):
            if 31 < uint255(stor3.length) * 0.5:
                mem[128] = uint256(stor3.field_0)
                idx = 128
                s = 0
                while (uint255(stor3.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor3[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1)])
            mem[128] = 256 * stor3.length.field_8
    else:
        if bool(stor3.length) == stor3.length.field_1 < 32:
            revert with 0, 34
        if stor3.length.field_1:
            if 31 < stor3.length.field_1:
                mem[128] = uint256(stor3.field_0)
                idx = 128
                s = 0
                while stor3.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor3[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1)])
            mem[128] = 256 * stor3.length.field_8
    mem[ceil32(stor3.length.field_1) + 192 len ceil32(stor3.length.field_1)] = mem[128 len ceil32(stor3.length.field_1)]
    if ceil32(stor3.length.field_1) > stor3.length.field_1:
        mem[stor3.length.field_1 + ceil32(stor3.length.field_1) + 192] = 0
    return Array(len=stor3.length % 128, data=mem[128 len ceil32(stor3.length.field_1)], mem[(2 * ceil32(stor3.length.field_1)) + 192 len 2 * ceil32(stor3.length.field_1)]), 
}

function symbol() {
    if bool(stor4.length):
        if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
            revert with 0, 34
        if bool(stor4.length):
            if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor4.length):
                if 31 < uint255(stor4.length) * 0.5:
                    mem[128] = uint256(stor4.field_0)
                    idx = 128
                    s = 0
                    while (uint255(stor4.length) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor4[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)])
                mem[128] = 256 * stor4.length.field_8
        else:
            if bool(stor4.length) == stor4.length.field_1 < 32:
                revert with 0, 34
            if stor4.length.field_1:
                if 31 < stor4.length.field_1:
                    mem[128] = uint256(stor4.field_0)
                    idx = 128
                    s = 0
                    while stor4.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor4[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)])
                mem[128] = 256 * stor4.length.field_8
        mem[ceil32(uint255(stor4.length) * 0.5) + 192 len ceil32(uint255(stor4.length) * 0.5)] = mem[128 len ceil32(uint255(stor4.length) * 0.5)]
        if ceil32(uint255(stor4.length) * 0.5) > uint255(stor4.length) * 0.5:
            mem[(uint255(stor4.length) * 0.5) + ceil32(uint255(stor4.length) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor4.length), data=mem[128 len ceil32(uint255(stor4.length) * 0.5)], mem[(2 * ceil32(uint255(stor4.length) * 0.5)) + 192 len 2 * ceil32(uint255(stor4.length) * 0.5)]), 
    if bool(stor4.length) == stor4.length.field_1 < 32:
        revert with 0, 34
    if bool(stor4.length):
        if bool(stor4.length) == uint255(stor4.length) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor4.length):
            if 31 < uint255(stor4.length) * 0.5:
                mem[128] = uint256(stor4.field_0)
                idx = 128
                s = 0
                while (uint255(stor4.length) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor4[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)])
            mem[128] = 256 * stor4.length.field_8
    else:
        if bool(stor4.length) == stor4.length.field_1 < 32:
            revert with 0, 34
        if stor4.length.field_1:
            if 31 < stor4.length.field_1:
                mem[128] = uint256(stor4.field_0)
                idx = 128
                s = 0
                while stor4.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor4[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)])
            mem[128] = 256 * stor4.length.field_8
    mem[ceil32(stor4.length.field_1) + 192 len ceil32(stor4.length.field_1)] = mem[128 len ceil32(stor4.length.field_1)]
    if ceil32(stor4.length.field_1) > stor4.length.field_1:
        mem[stor4.length.field_1 + ceil32(stor4.length.field_1) + 192] = 0
    return Array(len=stor4.length % 128, data=mem[128 len ceil32(stor4.length.field_1)], mem[(2 * ceil32(stor4.length.field_1)) + 192 len 2 * ceil32(stor4.length.field_1)]), 
}

function getTotalCapital() {
    mem[96] = 0
    mem[128] = 0
    mem[160] = 0
    mem[192] = 0
    mem[224] = 0
    mem[256] = 0
    mem[288] = 0
    mem[320] = 0
    mem[352] = 2
    mem[64] = 448
    mem[384 len 64] = call.data[calldata.size len 64]
    idx = 0
    s = 96
    t = 0
    u = 0
    v = 0
    v = 96
    v = 0
    v = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _232 = mem[64]
        mem[64] = mem[64] + 256
        mem[_232] = strategyInfo[stor9[idx].field_0].field_0
        mem[_232 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_232 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_232 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_232 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_232 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_232 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_232 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _242 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _244 = mem[_242]
            if not mem[_242]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_242]
                v = _232
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _261 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _263 = mem[_261]
            require mem[_261] == mem[_261 + 18 len 14]
            _265 = mem[_261 + 32]
            require mem[_261 + 32] == mem[_261 + 50 len 14]
            require mem[_261 + 64] == mem[_261 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _273 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _275 = mem[_273]
            if _244 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_273]:
                revert with 0, 18
            if 10^12 * _244 / mem[_273] and Mask(112, 0, _263) > -1 / 10^12 * _244 / mem[_273]:
                revert with 0, 17
            if 10^12 * _244 / mem[_273] and Mask(112, 0, _265) > -1 / 10^12 * _244 / mem[_273]:
                revert with 0, 17
            if 1 >= mem[352]:
                revert with 0, 50
            mem[416] = stor21
            if 0 >= mem[352]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[384] = strategyInfo[stor9[idx].field_0].field_1792
                _291 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12
                mem[mem[64] + 36] = 64
                _298 = mem[352]
                mem[mem[64] + 68] = mem[352]
                s = 0
                t = 384
                u = mem[64] + 100
                while s < _298:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _291 + (32 * _298) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _472 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _478 = mem[_472]
                require mem[_472] <= test266151307()
                require _472 + mem[_472] + 31 < _472 + return_data.size
                _484 = mem[_472 + mem[_472]]
                if mem[_472 + mem[_472]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_472 + mem[_472]]) + 1 < 0 or _472 + ceil32(return_data.size) + ceil32(32 * mem[_472 + mem[_472]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _472 + ceil32(return_data.size) + ceil32(32 * mem[_472 + mem[_472]]) + 1
                mem[_472 + ceil32(return_data.size)] = _484
                require _478 + (32 * _484) + 32 <= return_data.size
                t = _472 + ceil32(return_data.size) + 32
                s = _472 + _478 + 32
                while s < _472 + _478 + (32 * _484) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _484:
                    revert with 0, 50
                _584 = mem[_472 + ceil32(return_data.size) + 64]
                if 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12 > !mem[_472 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_232 + 128] = (10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12) + mem[_472 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12) + _584):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _472 + ceil32(return_data.size)
                t = 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12
                u = 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12
                v = _244
                v = _232
                v = stor9[idx].field_0
                v = v + (10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12) + _584
                continue 
            mem[384] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12
                mem[mem[64] + 36] = 64
                _299 = mem[352]
                mem[mem[64] + 68] = mem[352]
                s = 0
                t = 384
                u = mem[64] + 100
                while s < _299:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12, 64, mem[mem[64] + 68 len (32 * _299) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _471 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _477 = mem[_471]
                require mem[_471] <= test266151307()
                require _471 + mem[_471] + 31 < _471 + return_data.size
                _483 = mem[_471 + mem[_471]]
                if mem[_471 + mem[_471]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_471 + mem[_471]]) + 1 < 0 or _471 + ceil32(return_data.size) + ceil32(32 * mem[_471 + mem[_471]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _471 + ceil32(return_data.size) + ceil32(32 * mem[_471 + mem[_471]]) + 1
                mem[_471 + ceil32(return_data.size)] = _483
                require _477 + (32 * _483) + 32 <= return_data.size
                t = _471 + ceil32(return_data.size) + 32
                s = _471 + _477 + 32
                while s < _471 + _477 + (32 * _483) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _483:
                    revert with 0, 50
                _583 = mem[_471 + ceil32(return_data.size) + 64]
                if 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12 > !mem[_471 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_232 + 128] = (10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12) + mem[_471 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12) + _583):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _471 + ceil32(return_data.size)
                t = 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12
                u = 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12
                v = _244
                v = _232
                v = stor9[idx].field_0
                v = v + (10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12) + _583
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _300 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _304 = mem[_300]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _324 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _331 = mem[_324]
            if mem[_324] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _304:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _357 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _363 = mem[_357]
            if 10^12 * _331 / _304 and mem[_357] > -1 / 10^12 * _331 / _304:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _331 / _304 * _363 / 10^12
            mem[mem[64] + 36] = 64
            _376 = mem[352]
            mem[mem[64] + 68] = mem[352]
            t = 0
            u = 384
            w = mem[64] + 100
            while t < _376:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _331 / _304 * _363 / 10^12, 64, mem[mem[64] + 68 len (32 * _376) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _470 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _476 = mem[_470]
            require mem[_470] <= test266151307()
            require _470 + mem[_470] + 31 < _470 + return_data.size
            _482 = mem[_470 + mem[_470]]
            if mem[_470 + mem[_470]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_470 + mem[_470]]) + 1 < 0 or _470 + ceil32(return_data.size) + ceil32(32 * mem[_470 + mem[_470]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _470 + ceil32(return_data.size) + ceil32(32 * mem[_470 + mem[_470]]) + 1
            mem[_470 + ceil32(return_data.size)] = _482
            require _476 + (32 * _482) + 32 <= return_data.size
            u = _470 + ceil32(return_data.size) + 32
            t = _470 + _476 + 32
            while t < _470 + _476 + (32 * _482) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _482:
                revert with 0, 50
            _582 = mem[_470 + ceil32(return_data.size) + 64]
            mem[_232 + 128] = mem[_470 + ceil32(return_data.size) + 64]
            if v > !_582:
                revert with 0, 17
            if 0 >= mem[352]:
                revert with 0, 50
            mem[384] = mem[_232 + 236 len 20]
            _591 = mem[_232 + 224]
            _592 = mem[_232]
            require ext_code.size(mem[_232 + 236 len 20])
            staticcall mem[_232 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _598 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _600 = mem[_598]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_591))
            staticcall address(_591).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _606 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _608 = mem[_606]
            if mem[_606] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _600:
                revert with 0, 18
            mem[mem[64] + 4] = address(_592)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_592)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _614 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _616 = mem[_614]
            if 10^12 * _608 / _600 and mem[_614] > -1 / 10^12 * _608 / _600:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _608 / _600 * _616 / 10^12
            mem[mem[64] + 36] = 64
            _620 = mem[352]
            mem[mem[64] + 68] = mem[352]
            t = 0
            u = 384
            w = mem[64] + 100
            while t < _620:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_592))
            staticcall address(_592).getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _608 / _600 * _616 / 10^12, 64, mem[mem[64] + 68 len (32 * _620) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _648 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _650 = mem[_648]
            require mem[_648] <= test266151307()
            require _648 + mem[_648] + 31 < _648 + return_data.size
            _652 = mem[_648 + mem[_648]]
            if mem[_648 + mem[_648]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_648 + mem[_648]]) + 1 < 0 or _648 + ceil32(return_data.size) + ceil32(32 * mem[_648 + mem[_648]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _648 + ceil32(return_data.size) + ceil32(32 * mem[_648 + mem[_648]]) + 1
            mem[_648 + ceil32(return_data.size)] = _652
            require _650 + (32 * _652) + 32 <= return_data.size
            u = _648 + ceil32(return_data.size) + 32
            t = _648 + _650 + 32
            while t < _648 + _650 + (32 * _652) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _652:
                revert with 0, 50
            if mem[_232 + 128] > !mem[_648 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_232 + 128] = mem[_232 + 128] + mem[_648 + ceil32(return_data.size) + 64]
            if v + _582 > !mem[_232 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _244 / _275 * Mask(112, 0, _265) / 10^12
            u = 10^12 * _244 / _275 * Mask(112, 0, _263) / 10^12
            v = _244
            v = _232
            v = stor9[idx].field_0
            v = v + _582 + mem[_232 + 128]
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _241 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _243 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_243] = mem[_241]
        mem[_243 + 32] = mem[_241 + 32]
        mem[_243 + 64] = mem[_241 + 64]
        require return_data.size - 96 >= 96
        _249 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_249] = mem[_241 + 96]
        mem[_249 + 32] = mem[_241 + 128]
        mem[_249 + 64] = mem[_241 + 160]
        mem[_243 + 96] = _249
        mem[_243 + 128] = mem[_241 + 192]
        require return_data.size - 224 >= 96
        _257 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_257] = mem[_241 + 224]
        mem[_257 + 32] = mem[_241 + 256]
        mem[_257 + 64] = mem[_241 + 288]
        mem[_243 + 160] = _257
        _262 = mem[_243 + 64]
        if not mem[_243 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            u = u
            v = mem[_243 + 64]
            v = _232
            v = stor9[idx].field_0
            v = v
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _269 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _270 = mem[_269]
        require mem[_269] == mem[_269 + 18 len 14]
        _274 = mem[_269 + 32]
        require mem[_269 + 32] == mem[_269 + 50 len 14]
        require mem[_269 + 64] == mem[_269 + 92 len 4]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _279 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _280 = mem[_279]
        if _262 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not mem[_279]:
            revert with 0, 18
        if 10^12 * _262 / mem[_279] and Mask(112, 0, _270) > -1 / 10^12 * _262 / mem[_279]:
            revert with 0, 17
        if 10^12 * _262 / mem[_279] and Mask(112, 0, _274) > -1 / 10^12 * _262 / mem[_279]:
            revert with 0, 17
        if 1 >= mem[352]:
            revert with 0, 50
        mem[416] = stor21
        if 0 >= mem[352]:
            revert with 0, 50
        if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
            mem[384] = strategyInfo[stor9[idx].field_0].field_1792
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12
            mem[mem[64] + 36] = 64
            _328 = mem[352]
            mem[mem[64] + 68] = mem[352]
            s = 0
            t = 384
            u = mem[64] + 100
            while s < _328:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12, 64, mem[mem[64] + 68 len (32 * _328) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _469 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _475 = mem[_469]
            require mem[_469] <= test266151307()
            require _469 + mem[_469] + 31 < _469 + return_data.size
            _481 = mem[_469 + mem[_469]]
            if mem[_469 + mem[_469]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_469 + mem[_469]]) + 1 < 0 or _469 + ceil32(return_data.size) + ceil32(32 * mem[_469 + mem[_469]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _469 + ceil32(return_data.size) + ceil32(32 * mem[_469 + mem[_469]]) + 1
            mem[_469 + ceil32(return_data.size)] = _481
            require _475 + (32 * _481) + 32 <= return_data.size
            t = _469 + ceil32(return_data.size) + 32
            s = _469 + _475 + 32
            while s < _469 + _475 + (32 * _481) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _481:
                revert with 0, 50
            _581 = mem[_469 + ceil32(return_data.size) + 64]
            if 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12 > !mem[_469 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_232 + 128] = (10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12) + mem[_469 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12) + _581):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _469 + ceil32(return_data.size)
            t = 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12
            u = 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12
            v = _262
            v = _232
            v = stor9[idx].field_0
            v = v + (10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12) + _581
            continue 
        mem[384] = strategyInfo[stor9[idx].field_0].field_1536
        if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12
            mem[mem[64] + 36] = 64
            _330 = mem[352]
            mem[mem[64] + 68] = mem[352]
            s = 0
            t = 384
            w = mem[64] + 100
            while s < _330:
                mem[w] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12, 64, mem[mem[64] + 68 len (32 * _330) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _468 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _474 = mem[_468]
            require mem[_468] <= test266151307()
            require _468 + mem[_468] + 31 < _468 + return_data.size
            _480 = mem[_468 + mem[_468]]
            if mem[_468 + mem[_468]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_468 + mem[_468]]) + 1 < 0 or _468 + ceil32(return_data.size) + ceil32(32 * mem[_468 + mem[_468]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _468 + ceil32(return_data.size) + ceil32(32 * mem[_468 + mem[_468]]) + 1
            mem[_468 + ceil32(return_data.size)] = _480
            require _474 + (32 * _480) + 32 <= return_data.size
            t = _468 + ceil32(return_data.size) + 32
            s = _468 + _474 + 32
            while s < _468 + _474 + (32 * _480) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _480:
                revert with 0, 50
            _580 = mem[_468 + ceil32(return_data.size) + 64]
            if 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12 > !mem[_468 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_232 + 128] = (10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12) + mem[_468 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12) + _580):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _468 + ceil32(return_data.size)
            t = 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12
            s = 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12
            v = _262
            v = _232
            v = stor9[idx].field_0
            v = v + (10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12) + _580
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _333 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _338 = mem[_333]
        mem[mem[64] + 4] = this.address
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _346 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _352 = mem[_346]
        if mem[_346] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _338:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _370 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _375 = mem[_370]
        if 10^12 * _352 / _338 and mem[_370] > -1 / 10^12 * _352 / _338:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _352 / _338 * _375 / 10^12
        mem[mem[64] + 36] = 64
        _381 = mem[352]
        mem[mem[64] + 68] = mem[352]
        t = 0
        u = 384
        w = mem[64] + 100
        while t < _381:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _352 / _338 * _375 / 10^12, 64, mem[mem[64] + 68 len (32 * _381) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _467 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _473 = mem[_467]
        require mem[_467] <= test266151307()
        require _467 + mem[_467] + 31 < _467 + return_data.size
        _479 = mem[_467 + mem[_467]]
        if mem[_467 + mem[_467]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_467 + mem[_467]]) + 1 < 0 or _467 + ceil32(return_data.size) + ceil32(32 * mem[_467 + mem[_467]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _467 + ceil32(return_data.size) + ceil32(32 * mem[_467 + mem[_467]]) + 1
        mem[_467 + ceil32(return_data.size)] = _479
        require _473 + (32 * _479) + 32 <= return_data.size
        u = _467 + ceil32(return_data.size) + 32
        t = _467 + _473 + 32
        while t < _467 + _473 + (32 * _479) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _479:
            revert with 0, 50
        _579 = mem[_467 + ceil32(return_data.size) + 64]
        mem[_232 + 128] = mem[_467 + ceil32(return_data.size) + 64]
        if v > !_579:
            revert with 0, 17
        if 0 >= mem[352]:
            revert with 0, 50
        mem[384] = mem[_232 + 236 len 20]
        _589 = mem[_232 + 224]
        _590 = mem[_232]
        require ext_code.size(mem[_232 + 236 len 20])
        staticcall mem[_232 + 236 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _597 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _599 = mem[_597]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_589))
        staticcall address(_589).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _605 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _607 = mem[_605]
        if mem[_605] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _599:
            revert with 0, 18
        mem[mem[64] + 4] = address(_590)
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args address(_590)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _613 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _615 = mem[_613]
        if 10^12 * _607 / _599 and mem[_613] > -1 / 10^12 * _607 / _599:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _607 / _599 * _615 / 10^12
        mem[mem[64] + 36] = 64
        _619 = mem[352]
        mem[mem[64] + 68] = mem[352]
        t = 0
        u = 384
        w = mem[64] + 100
        while t < _619:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(address(_590))
        staticcall address(_590).getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _607 / _599 * _615 / 10^12, 64, mem[mem[64] + 68 len (32 * _619) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _647 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _649 = mem[_647]
        require mem[_647] <= test266151307()
        require _647 + mem[_647] + 31 < _647 + return_data.size
        _651 = mem[_647 + mem[_647]]
        if mem[_647 + mem[_647]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_647 + mem[_647]]) + 1 < 0 or _647 + ceil32(return_data.size) + ceil32(32 * mem[_647 + mem[_647]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _647 + ceil32(return_data.size) + ceil32(32 * mem[_647 + mem[_647]]) + 1
        mem[_647 + ceil32(return_data.size)] = _651
        require _649 + (32 * _651) + 32 <= return_data.size
        u = _647 + ceil32(return_data.size) + 32
        t = _647 + _649 + 32
        while t < _647 + _649 + (32 * _651) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _651:
            revert with 0, 50
        if mem[_232 + 128] > !mem[_647 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        mem[_232 + 128] = mem[_232 + 128] + mem[_647 + ceil32(return_data.size) + 64]
        if v + _579 > !mem[_232 + 128]:
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s
        t = 10^12 * _262 / _280 * Mask(112, 0, _274) / 10^12
        u = 10^12 * _262 / _280 * Mask(112, 0, _270) / 10^12
        v = _262
        v = _232
        v = stor9[idx].field_0
        v = v + _579 + mem[_232 + 128]
        continue 
    return v
}

function autoCompound() {
    mem[96] = 2
    mem[128 len 64] = call.data[calldata.size len 64]
    mem[64] = 448
    mem[192] = 0
    mem[224] = 0
    mem[256] = 0
    mem[288] = 0
    mem[320] = 0
    mem[352] = 0
    mem[384] = 0
    mem[416] = 0
    idx = 0
    s = 192
    s = 0
    s = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _608 = mem[64]
        mem[64] = mem[64] + 256
        mem[_608] = strategyInfo[stor9[idx].field_0].field_0
        mem[_608 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_608 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_608 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_608 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_608 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_608 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_608 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _619 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _628 = mem[_619]
            if not mem[_619]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _608
                s = mem[_619]
                s = stor9[idx].field_0
                continue 
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _648 = mem[64]
            mem[64] = mem[64] + 256
            mem[_648] = strategyInfo[stor9[idx].field_0].field_0
            mem[_648 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_648 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_648 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_648 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_648 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_648 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_648 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 4] = _628
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _628
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _683 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _693 = mem[_683]
                require mem[_683] == mem[_683 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_683 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_693))
                staticcall address(_693).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _727 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _731 = mem[_727]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_693))
                staticcall address(_693).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _745 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _753 = mem[_745]
                if mem[_745] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _731:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _773 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _775 = mem[_773]
                if 10^12 * _753 / _731 and mem[_773] > -1 / 10^12 * _753 / _731:
                    revert with 0, 17
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _753 / _731 * _775 / 10^12
                mem[mem[64] + 36] = 64
                _805 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len (32 * _805) + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1496 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1503 = mem[_1496]
                require mem[_1496] <= test266151307()
                require _1496 + mem[_1496] + 31 < _1496 + return_data.size
                _1510 = mem[_1496 + mem[_1496]]
                if mem[_1496 + mem[_1496]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_1496 + mem[_1496]]) + 1 < 0 or _1496 + ceil32(return_data.size) + ceil32(32 * mem[_1496 + mem[_1496]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _1496 + ceil32(return_data.size) + ceil32(32 * mem[_1496 + mem[_1496]]) + 1
                mem[_1496 + ceil32(return_data.size)] = _1510
                require _1503 + (32 * _1510) + 32 <= return_data.size
                t = _1496 + ceil32(return_data.size) + 32
                s = _1496 + _1503 + 32
                while s < _1496 + _1503 + (32 * _1510) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _1510:
                    revert with 0, 50
                _3010 = mem[_1496 + ceil32(return_data.size) + 64]
                if mem[_1496 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_1496 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if 5 * mem[_1496 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if mem[_1496 + ceil32(return_data.size) + 64] < 5000 * mem[_1496 + ceil32(return_data.size) + 64] / 10^6:
                    revert with 0, 17
                _3050 = mem[_608]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_693))
                staticcall address(_693).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3074 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3082 = mem[_3074]
                if 60 > !block.timestamp:
                    revert with 0, 17
                _3096 = mem[64]
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _3082
                mem[mem[64] + 36] = _3010 - (5000 * _3010 / 10^6)
                mem[mem[64] + 68] = 160
                _3102 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < _3102:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_3096 + 100] = this.address
                mem[_3096 + 132] = block.timestamp + 60
                require ext_code.size(address(_3050))
                call address(_3050).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _3096 + (32 * _3102) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4606 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4614 = mem[_4606]
                require mem[_4606] <= test266151307()
                require _4606 + mem[_4606] + 31 < _4606 + return_data.size
                _4626 = mem[_4606 + mem[_4606]]
                if mem[_4606 + mem[_4606]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_4606 + mem[_4606]]) + 1 < 0 or _4606 + ceil32(return_data.size) + ceil32(32 * mem[_4606 + mem[_4606]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _4606 + ceil32(return_data.size) + ceil32(32 * mem[_4606 + mem[_4606]]) + 1
                mem[_4606 + ceil32(return_data.size)] = _4626
                require _4614 + (32 * _4626) + 32 <= return_data.size
                t = _4606 + ceil32(return_data.size) + 32
                s = _4606 + _4614 + 32
                while s < _4606 + _4614 + (32 * _4626) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _6274 = mem[_608]
                _6275 = mem[_608 + 192]
                _6276 = mem[_608 + 224]
                _6286 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_6286 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_6286]:
                    revert with 0, 50
                mem[_6286 + 32] = stor21
                if stor21 == address(_6275):
                    if stor21 == address(_6276):
                        mem[_6286 + 100] = this.address
                        require ext_code.size(address(_6275))
                        staticcall address(_6275).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6286 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_6286 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_6276))
                        staticcall address(_6276).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6286 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            revert with 0, 'Desired value is zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'Desired value is zero'
                        mem[_6286 + (2 * ceil32(return_data.size)) + 100] = address(_6274)
                        mem[_6286 + (2 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_6275))
                        call address(_6275).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_6274), -1
                        mem[_6286 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[_6286 + (4 * ceil32(return_data.size)) + 100] = address(_6274)
                        mem[_6286 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_6276))
                        call address(_6276).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_6274), -1
                        mem[_6286 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_6286 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                        mem[_6286 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                        mem[_6286 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                        mem[_6286 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                        mem[_6286 + (6 * ceil32(return_data.size)) + 292] = this.address
                        mem[_6286 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                        require ext_code.size(address(_6274))
                        call address(_6274).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_6275), address(_6276), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                        mem[_6286 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6286 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 96
                        _6714 = mem[_608 + 160]
                        _6715 = mem[_608 + 64]
                        _6716 = mem[_608 + 32]
                        mem[_6286 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_6716))
                        staticcall address(_6716).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6286 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6286 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if _6715 >= 999999:
                            mem[_6286 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_6714))
                            call address(_6714).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6286 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _6812 = mem[_608 + 32]
                            mem[_6286 + (8 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_6812))
                            staticcall address(_6812).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_6286 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_608 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_6286 + (10 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_6286 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _6286 + (11 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _6984 = mem[_608]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_6286 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_6286 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_6286 + (11 * ceil32(return_data.size)) + 132] = 128
                            mem[_6286 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _6286 + (11 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_6286 + (11 * ceil32(return_data.size)) + 164] = this.address
                            mem[_6286 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_6984))
                            call address(_6984).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                               value ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6286 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6286 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _6286 + (12 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _7950 = mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _6286 + (11 * ceil32(return_data.size)) + mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6286 + (11 * ceil32(return_data.size)) + return_data.size + 96
                            _7966 = mem[_6286 + (11 * ceil32(return_data.size)) + mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_6286 + (11 * ceil32(return_data.size)) + mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_6286 + (11 * ceil32(return_data.size)) + mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6286 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6286 + (11 * ceil32(return_data.size)) + mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _6286 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6286 + (11 * ceil32(return_data.size)) + mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_6286 + (12 * ceil32(return_data.size)) + 96] = mem[_6286 + (11 * ceil32(return_data.size)) + mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _7950 + (32 * _7966) + 32 <= return_data.size
                            t = _6286 + (12 * ceil32(return_data.size)) + 128
                            s = _6286 + (11 * ceil32(return_data.size)) + _7950 + 128
                            while s < _6286 + (11 * ceil32(return_data.size)) + _7950 + (32 * _7966) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9228 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_9228]
                        else:
                            mem[_6286 + (8 * ceil32(return_data.size)) + 100] = _6715
                            mem[_6286 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_6714))
                            call address(_6714).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _6715, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6286 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _6813 = mem[_608 + 32]
                            mem[_6286 + (8 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_6813))
                            staticcall address(_6813).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_6286 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_608 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_6286 + (10 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_6286 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _6286 + (11 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _6985 = mem[_608]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_6286 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_6286 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_6286 + (11 * ceil32(return_data.size)) + 132] = 128
                            mem[_6286 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _6286 + (11 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_6286 + (11 * ceil32(return_data.size)) + 164] = this.address
                            mem[_6286 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_6985))
                            call address(_6985).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                               value ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6286 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_6286 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _6286 + (12 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _7951 = mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _6286 + (11 * ceil32(return_data.size)) + mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6286 + (11 * ceil32(return_data.size)) + return_data.size + 96
                            _7967 = mem[_6286 + (11 * ceil32(return_data.size)) + mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_6286 + (11 * ceil32(return_data.size)) + mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_6286 + (11 * ceil32(return_data.size)) + mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6286 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6286 + (11 * ceil32(return_data.size)) + mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _6286 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6286 + (11 * ceil32(return_data.size)) + mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_6286 + (12 * ceil32(return_data.size)) + 96] = mem[_6286 + (11 * ceil32(return_data.size)) + mem[_6286 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _7951 + (32 * _7967) + 32 <= return_data.size
                            t = _6286 + (12 * ceil32(return_data.size)) + 128
                            s = _6286 + (11 * ceil32(return_data.size)) + _7951 + 128
                            while s < _6286 + (11 * ceil32(return_data.size)) + _7951 + (32 * _7967) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9229 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_9229]
                    else:
                        if 1 >= mem[_6286]:
                            revert with 0, 50
                        mem[_6286 + 64] = address(_6276)
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_6286 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_6286 + 100] = eth.balance(this.address) / 2
                        mem[_6286 + 132] = 128
                        mem[_6286 + 228] = mem[_6286]
                        s = 0
                        t = _6286 + 32
                        u = _6286 + 260
                        while s < mem[_6286]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_6286 + 164] = this.address
                        mem[_6286 + 196] = block.timestamp + 60
                        require ext_code.size(address(_6274))
                        call address(_6274).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _6286 + (32 * mem[_6286]) + -mem[64] + 256]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _7934 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _7952 = mem[_7934]
                        require mem[_7934] <= test266151307()
                        require _7934 + mem[_7934] + 31 < _7934 + return_data.size
                        _7968 = mem[_7934 + mem[_7934]]
                        if mem[_7934 + mem[_7934]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_7934 + mem[_7934]]) + 1 < 0 or _7934 + ceil32(return_data.size) + ceil32(32 * mem[_7934 + mem[_7934]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _7934 + ceil32(return_data.size) + ceil32(32 * mem[_7934 + mem[_7934]]) + 1
                        mem[_7934 + ceil32(return_data.size)] = _7968
                        require _7952 + (32 * _7968) + 32 <= return_data.size
                        t = _7934 + ceil32(return_data.size) + 32
                        s = _7934 + _7952 + 32
                        while s < _7934 + _7952 + (32 * _7968) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_6275))
                        staticcall address(_6275).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9230 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9246 = mem[_9230]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_6276))
                        staticcall address(_6276).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9276 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9288 = mem[_9276]
                        if not _9246:
                            revert with 0, 'Desired value is zero'
                        if not mem[_9276]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_6274)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_6275))
                        call address(_6275).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_6274), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9360 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_9360] == bool(mem[_9360])
                        mem[mem[64] + 4] = address(_6274)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_6276))
                        call address(_6276).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_6274), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9400 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_9400] == bool(mem[_9400])
                        if _9246 and 5 > -1 / _9246:
                            revert with 0, 17
                        if 5 * _9246 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _9246 < 5000 * _9246 / 10^6:
                            revert with 0, 17
                        if _9288 and 5 > -1 / _9288:
                            revert with 0, 17
                        if 5 * _9288 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _9288 < 5000 * _9288 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _9246
                        mem[mem[64] + 100] = _9288
                        mem[mem[64] + 132] = _9246 - (5000 * _9246 / 10^6)
                        mem[mem[64] + 164] = _9288 - (5000 * _9288 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_6274))
                        call address(_6274).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_6275), address(_6276), _9246, _9288, _9246 - (5000 * _9246 / 10^6), _9288 - (5000 * _9288 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _9552 = mem[_608 + 160]
                        _9553 = mem[_608 + 64]
                        _9554 = mem[_608 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9554))
                        staticcall address(_9554).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9588 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9596 = mem[_9588]
                        if _9553 >= 999999:
                            mem[mem[64] + 4] = mem[_9588]
                            require ext_code.size(address(_9552))
                            call address(_9552).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _9596
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _9596
                            emit Earn(_9596);
                            _9662 = mem[_608 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_9662))
                            staticcall address(_9662).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9718 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_608 + 96] = mem[_9718]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9822 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9842 = mem[_9822]
                            _9870 = mem[_608]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _9908 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _9842
                            mem[mem[64] + 36] = 128
                            _9928 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_9908 + 100] = block.timestamp + 60
                            require ext_code.size(address(_9870))
                            call address(_9870).mem[mem[64] len 4] with:
                               value _9842 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _9908 + (32 * _9928) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10400 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10420 = mem[_10400]
                            require mem[_10400] <= test266151307()
                            require _10400 + mem[_10400] + 31 < _10400 + return_data.size
                            _10440 = mem[_10400 + mem[_10400]]
                            if mem[_10400 + mem[_10400]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_10400 + mem[_10400]]) + 1 < 0 or _10400 + ceil32(return_data.size) + ceil32(32 * mem[_10400 + mem[_10400]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _10400 + ceil32(return_data.size) + ceil32(32 * mem[_10400 + mem[_10400]]) + 1
                            mem[_10400 + ceil32(return_data.size)] = _10440
                            require _10420 + (32 * _10440) + 32 <= return_data.size
                            t = _10400 + ceil32(return_data.size) + 32
                            s = _10400 + _10420 + 32
                            while s < _10400 + _10420 + (32 * _10440) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10988 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_10988]
                        else:
                            mem[mem[64] + 4] = _9553
                            mem[mem[64] + 36] = _9596
                            require ext_code.size(address(_9552))
                            call address(_9552).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _9553, _9596
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _9596
                            emit Earn(_9596);
                            _9663 = mem[_608 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_9663))
                            staticcall address(_9663).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9719 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_608 + 96] = mem[_9719]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9823 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9843 = mem[_9823]
                            _9871 = mem[_608]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _9909 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _9843
                            mem[mem[64] + 36] = 128
                            _9929 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_9909 + 100] = block.timestamp + 60
                            require ext_code.size(address(_9871))
                            call address(_9871).mem[mem[64] len 4] with:
                               value _9843 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _9909 + (32 * _9929) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10401 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10421 = mem[_10401]
                            require mem[_10401] <= test266151307()
                            require _10401 + mem[_10401] + 31 < _10401 + return_data.size
                            _10441 = mem[_10401 + mem[_10401]]
                            if mem[_10401 + mem[_10401]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_10401 + mem[_10401]]) + 1 < 0 or _10401 + ceil32(return_data.size) + ceil32(32 * mem[_10401 + mem[_10401]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _10401 + ceil32(return_data.size) + ceil32(32 * mem[_10401 + mem[_10401]]) + 1
                            mem[_10401 + ceil32(return_data.size)] = _10441
                            require _10421 + (32 * _10441) + 32 <= return_data.size
                            t = _10401 + ceil32(return_data.size) + 32
                            s = _10401 + _10421 + 32
                            while s < _10401 + _10421 + (32 * _10441) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10989 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_10989]
                else:
                    if 1 >= mem[_6286]:
                        revert with 0, 50
                    mem[_6286 + 64] = address(_6275)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_6286 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_6286 + 100] = eth.balance(this.address) / 2
                    mem[_6286 + 132] = 128
                    mem[_6286 + 228] = mem[_6286]
                    s = 0
                    t = _6286 + 32
                    u = _6286 + 260
                    while s < mem[_6286]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_6286 + 164] = this.address
                    mem[_6286 + 196] = block.timestamp + 60
                    require ext_code.size(address(_6274))
                    call address(_6274).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _6286 + (32 * mem[_6286]) + -mem[64] + 256]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7935 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7953 = mem[_7935]
                    require mem[_7935] <= test266151307()
                    require _7935 + mem[_7935] + 31 < _7935 + return_data.size
                    _7969 = mem[_7935 + mem[_7935]]
                    if mem[_7935 + mem[_7935]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7935 + mem[_7935]]) + 1 < 0 or _7935 + ceil32(return_data.size) + ceil32(32 * mem[_7935 + mem[_7935]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _7935 + ceil32(return_data.size) + ceil32(32 * mem[_7935 + mem[_7935]]) + 1
                    mem[_7935 + ceil32(return_data.size)] = _7969
                    require _7953 + (32 * _7969) + 32 <= return_data.size
                    t = _7935 + ceil32(return_data.size) + 32
                    s = _7935 + _7953 + 32
                    while s < _7935 + _7953 + (32 * _7969) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_6276):
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_6275))
                        staticcall address(_6275).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9236 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9252 = mem[_9236]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_6276))
                        staticcall address(_6276).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9282 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9294 = mem[_9282]
                        if not _9252:
                            revert with 0, 'Desired value is zero'
                        if not mem[_9282]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_6274)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_6275))
                        call address(_6275).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_6274), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9366 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_9366] == bool(mem[_9366])
                        mem[mem[64] + 4] = address(_6274)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_6276))
                        call address(_6276).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_6274), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9404 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_9404] == bool(mem[_9404])
                        if _9252 and 5 > -1 / _9252:
                            revert with 0, 17
                        if 5 * _9252 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _9252 < 5000 * _9252 / 10^6:
                            revert with 0, 17
                        if _9294 and 5 > -1 / _9294:
                            revert with 0, 17
                        if 5 * _9294 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _9294 < 5000 * _9294 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _9252
                        mem[mem[64] + 100] = _9294
                        mem[mem[64] + 132] = _9252 - (5000 * _9252 / 10^6)
                        mem[mem[64] + 164] = _9294 - (5000 * _9294 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_6274))
                        call address(_6274).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_6275), address(_6276), _9252, _9294, _9252 - (5000 * _9252 / 10^6), _9294 - (5000 * _9294 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _9570 = mem[_608 + 160]
                        _9571 = mem[_608 + 64]
                        _9572 = mem[_608 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9572))
                        staticcall address(_9572).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9592 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9600 = mem[_9592]
                        if _9571 >= 999999:
                            mem[mem[64] + 4] = mem[_9592]
                            require ext_code.size(address(_9570))
                            call address(_9570).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _9600
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _9600
                            emit Earn(_9600);
                            _9690 = mem[_608 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_9690))
                            staticcall address(_9690).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9726 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_608 + 96] = mem[_9726]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9832 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9856 = mem[_9832]
                            _9884 = mem[_608]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _9918 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _9856
                            mem[mem[64] + 36] = 128
                            _9938 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _9938:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_9918 + 68] = this.address
                            mem[_9918 + 100] = block.timestamp + 60
                            require ext_code.size(address(_9884))
                            call address(_9884).mem[mem[64] len 4] with:
                               value _9856 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _9918 + (32 * _9938) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10402 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10422 = mem[_10402]
                            require mem[_10402] <= test266151307()
                            require _10402 + mem[_10402] + 31 < _10402 + return_data.size
                            _10442 = mem[_10402 + mem[_10402]]
                            if mem[_10402 + mem[_10402]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_10402 + mem[_10402]]) + 1 < 0 or _10402 + ceil32(return_data.size) + ceil32(32 * mem[_10402 + mem[_10402]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _10402 + ceil32(return_data.size) + ceil32(32 * mem[_10402 + mem[_10402]]) + 1
                            mem[_10402 + ceil32(return_data.size)] = _10442
                            require _10422 + (32 * _10442) + 32 <= return_data.size
                            t = _10402 + ceil32(return_data.size) + 32
                            s = _10402 + _10422 + 32
                            while s < _10402 + _10422 + (32 * _10442) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10990 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_10990]
                        else:
                            mem[mem[64] + 4] = _9571
                            mem[mem[64] + 36] = _9600
                            require ext_code.size(address(_9570))
                            call address(_9570).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _9571, _9600
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _9600
                            emit Earn(_9600);
                            _9691 = mem[_608 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_9691))
                            staticcall address(_9691).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9727 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_608 + 96] = mem[_9727]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _9833 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _9857 = mem[_9833]
                            _9885 = mem[_608]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _9919 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _9857
                            mem[mem[64] + 36] = 128
                            _9939 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_9919 + 100] = block.timestamp + 60
                            require ext_code.size(address(_9885))
                            call address(_9885).mem[mem[64] len 4] with:
                               value _9857 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _9919 + (32 * _9939) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10403 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10423 = mem[_10403]
                            require mem[_10403] <= test266151307()
                            require _10403 + mem[_10403] + 31 < _10403 + return_data.size
                            _10443 = mem[_10403 + mem[_10403]]
                            if mem[_10403 + mem[_10403]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_10403 + mem[_10403]]) + 1 < 0 or _10403 + ceil32(return_data.size) + ceil32(32 * mem[_10403 + mem[_10403]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _10403 + ceil32(return_data.size) + ceil32(32 * mem[_10403 + mem[_10403]]) + 1
                            mem[_10403 + ceil32(return_data.size)] = _10443
                            require _10423 + (32 * _10443) + 32 <= return_data.size
                            t = _10403 + ceil32(return_data.size) + 32
                            s = _10403 + _10423 + 32
                            while s < _10403 + _10423 + (32 * _10443) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10991 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_10991]
                    else:
                        if 1 >= mem[_6286]:
                            revert with 0, 50
                        mem[_6286 + 64] = address(_6276)
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 128
                        _9283 = mem[_6286]
                        mem[mem[64] + 132] = mem[_6286]
                        s = 0
                        t = _6286 + 32
                        u = mem[64] + 164
                        while s < _9283:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[mem[64] + 100] = block.timestamp + 60
                        require ext_code.size(address(_6274))
                        call address(_6274).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args Mask(255, 1, eth.balance(this.address)), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _9283) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10404 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10424 = mem[_10404]
                        require mem[_10404] <= test266151307()
                        require _10404 + mem[_10404] + 31 < _10404 + return_data.size
                        _10444 = mem[_10404 + mem[_10404]]
                        if mem[_10404 + mem[_10404]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_10404 + mem[_10404]]) + 1 < 0 or _10404 + ceil32(return_data.size) + ceil32(32 * mem[_10404 + mem[_10404]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _10404 + ceil32(return_data.size) + ceil32(32 * mem[_10404 + mem[_10404]]) + 1
                        mem[_10404 + ceil32(return_data.size)] = _10444
                        require _10424 + (32 * _10444) + 32 <= return_data.size
                        t = _10404 + ceil32(return_data.size) + 32
                        s = _10404 + _10424 + 32
                        while s < _10404 + _10424 + (32 * _10444) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_6275))
                        staticcall address(_6275).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10992 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11012 = mem[_10992]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_6276))
                        staticcall address(_6276).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11028 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11032 = mem[_11028]
                        if not _11012:
                            revert with 0, 'Desired value is zero'
                        if not mem[_11028]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_6274)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_6275))
                        call address(_6275).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_6274), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11060 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_11060] == bool(mem[_11060])
                        mem[mem[64] + 4] = address(_6274)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_6276))
                        call address(_6276).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_6274), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11076 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_11076] == bool(mem[_11076])
                        if _11012 and 5 > -1 / _11012:
                            revert with 0, 17
                        if 5 * _11012 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _11012 < 5000 * _11012 / 10^6:
                            revert with 0, 17
                        if _11032 and 5 > -1 / _11032:
                            revert with 0, 17
                        if 5 * _11032 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _11032 < 5000 * _11032 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _11012
                        mem[mem[64] + 100] = _11032
                        mem[mem[64] + 132] = _11012 - (5000 * _11012 / 10^6)
                        mem[mem[64] + 164] = _11032 - (5000 * _11032 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_6274))
                        call address(_6274).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_6275), address(_6276), _11012, _11032, _11012 - (5000 * _11012 / 10^6), _11032 - (5000 * _11032 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _11112 = mem[_608 + 160]
                        _11113 = mem[_608 + 64]
                        _11114 = mem[_608 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11114))
                        staticcall address(_11114).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11128 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11132 = mem[_11128]
                        if _11113 >= 999999:
                            mem[mem[64] + 4] = mem[_11128]
                            require ext_code.size(address(_11112))
                            call address(_11112).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _11132
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _11132
                            emit Earn(_11132);
                            _11170 = mem[_608 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11170))
                            staticcall address(_11170).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11194 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_608 + 96] = mem[_11194]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11242 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11250 = mem[_11242]
                            _11258 = mem[_608]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _11266 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _11250
                            mem[mem[64] + 36] = 128
                            _11274 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_11266 + 100] = block.timestamp + 60
                            require ext_code.size(address(_11258))
                            call address(_11258).mem[mem[64] len 4] with:
                               value _11250 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _11266 + (32 * _11274) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11386 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11394 = mem[_11386]
                            require mem[_11386] <= test266151307()
                            require _11386 + mem[_11386] + 31 < _11386 + return_data.size
                            _11402 = mem[_11386 + mem[_11386]]
                            if mem[_11386 + mem[_11386]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11386 + mem[_11386]]) + 1 < 0 or _11386 + ceil32(return_data.size) + ceil32(32 * mem[_11386 + mem[_11386]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11386 + ceil32(return_data.size) + ceil32(32 * mem[_11386 + mem[_11386]]) + 1
                            mem[_11386 + ceil32(return_data.size)] = _11402
                            require _11394 + (32 * _11402) + 32 <= return_data.size
                            t = _11386 + ceil32(return_data.size) + 32
                            s = _11386 + _11394 + 32
                            while s < _11386 + _11394 + (32 * _11402) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11482 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_11482]
                        else:
                            mem[mem[64] + 4] = _11113
                            mem[mem[64] + 36] = _11132
                            require ext_code.size(address(_11112))
                            call address(_11112).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _11113, _11132
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _11132
                            emit Earn(_11132);
                            _11171 = mem[_608 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11171))
                            staticcall address(_11171).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11195 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_608 + 96] = mem[_11195]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11243 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11251 = mem[_11243]
                            _11259 = mem[_608]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _11267 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _11251
                            mem[mem[64] + 36] = 128
                            _11275 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_11267 + 100] = block.timestamp + 60
                            require ext_code.size(address(_11259))
                            call address(_11259).mem[mem[64] len 4] with:
                               value _11251 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _11267 + (32 * _11275) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11387 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11395 = mem[_11387]
                            require mem[_11387] <= test266151307()
                            require _11387 + mem[_11387] + 31 < _11387 + return_data.size
                            _11403 = mem[_11387 + mem[_11387]]
                            if mem[_11387 + mem[_11387]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11387 + mem[_11387]]) + 1 < 0 or _11387 + ceil32(return_data.size) + ceil32(32 * mem[_11387 + mem[_11387]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11387 + ceil32(return_data.size) + ceil32(32 * mem[_11387 + mem[_11387]]) + 1
                            mem[_11387 + ceil32(return_data.size)] = _11403
                            require _11395 + (32 * _11403) + 32 <= return_data.size
                            t = _11387 + ceil32(return_data.size) + 32
                            s = _11387 + _11395 + 32
                            while s < _11387 + _11395 + (32 * _11403) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11483 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_11483]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _608
                s = _3010 - (5000 * _3010 / 10^6)
                s = stor9[idx].field_0
                continue 
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
            mem[mem[64] + 36] = _628
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args strategyInfo[stor9[idx].field_0].field_512, _628
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _684 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _694 = mem[_684]
            require mem[_684] == mem[_684 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_684 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_694))
            staticcall address(_694).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _728 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _732 = mem[_728]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_694))
            staticcall address(_694).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _746 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _754 = mem[_746]
            if mem[_746] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _732:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _774 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _776 = mem[_774]
            if 10^12 * _754 / _732 and mem[_774] > -1 / 10^12 * _754 / _732:
                revert with 0, 17
            _795 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _754 / _732 * _776 / 10^12
            mem[mem[64] + 36] = 64
            _806 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < _806:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _795 + (32 * _806) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1497 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1504 = mem[_1497]
            require mem[_1497] <= test266151307()
            require _1497 + mem[_1497] + 31 < _1497 + return_data.size
            _1511 = mem[_1497 + mem[_1497]]
            if mem[_1497 + mem[_1497]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_1497 + mem[_1497]]) + 1 < 0 or _1497 + ceil32(return_data.size) + ceil32(32 * mem[_1497 + mem[_1497]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _1497 + ceil32(return_data.size) + ceil32(32 * mem[_1497 + mem[_1497]]) + 1
            mem[_1497 + ceil32(return_data.size)] = _1511
            require _1504 + (32 * _1511) + 32 <= return_data.size
            t = _1497 + ceil32(return_data.size) + 32
            s = _1497 + _1504 + 32
            while s < _1497 + _1504 + (32 * _1511) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _1511:
                revert with 0, 50
            _3011 = mem[_1497 + ceil32(return_data.size) + 64]
            if mem[_1497 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_1497 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if 5 * mem[_1497 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 0, 17
            if mem[_1497 + ceil32(return_data.size) + 64] < 5000 * mem[_1497 + ceil32(return_data.size) + 64] / 10^6:
                revert with 0, 17
            _3051 = mem[_608]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_694))
            staticcall address(_694).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3075 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3083 = mem[_3075]
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _3083
            mem[mem[64] + 36] = _3011 - (5000 * _3011 / 10^6)
            mem[mem[64] + 68] = 160
            _3103 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[mem[64] + 100] = this.address
            mem[mem[64] + 132] = block.timestamp + 60
            require ext_code.size(address(_3051))
            call address(_3051).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _3103) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4607 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4615 = mem[_4607]
            require mem[_4607] <= test266151307()
            require _4607 + mem[_4607] + 31 < _4607 + return_data.size
            _4627 = mem[_4607 + mem[_4607]]
            if mem[_4607 + mem[_4607]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_4607 + mem[_4607]]) + 1 < 0 or _4607 + ceil32(return_data.size) + ceil32(32 * mem[_4607 + mem[_4607]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _4607 + ceil32(return_data.size) + ceil32(32 * mem[_4607 + mem[_4607]]) + 1
            mem[_4607 + ceil32(return_data.size)] = _4627
            require _4615 + (32 * _4627) + 32 <= return_data.size
            t = _4607 + ceil32(return_data.size) + 32
            s = _4607 + _4615 + 32
            while s < _4607 + _4615 + (32 * _4627) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _6277 = mem[_608]
            _6278 = mem[_608 + 192]
            _6279 = mem[_608 + 224]
            _6288 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_6288 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_6288]:
                revert with 0, 50
            mem[_6288 + 32] = stor21
            if stor21 == address(_6278):
                if stor21 == address(_6279):
                    mem[_6288 + 100] = this.address
                    require ext_code.size(address(_6278))
                    staticcall address(_6278).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6288 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_6288 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(address(_6279))
                    staticcall address(_6279).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6288 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    mem[_6288 + (2 * ceil32(return_data.size)) + 100] = address(_6277)
                    mem[_6288 + (2 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_6278))
                    call address(_6278).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6277), -1
                    mem[_6288 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[_6288 + (4 * ceil32(return_data.size)) + 100] = address(_6277)
                    mem[_6288 + (4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_6279))
                    call address(_6279).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6277), -1
                    mem[_6288 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                        revert with 0, 17
                    if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_6288 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                    mem[_6288 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                    mem[_6288 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                    mem[_6288 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                    mem[_6288 + (6 * ceil32(return_data.size)) + 292] = this.address
                    mem[_6288 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                    require ext_code.size(address(_6277))
                    call address(_6277).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_6278), address(_6279), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                    mem[_6288 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _6288 + (7 * ceil32(return_data.size)) + 96
                    require return_data.size >= 96
                    _6717 = mem[_608 + 160]
                    _6718 = mem[_608 + 64]
                    _6719 = mem[_608 + 32]
                    mem[_6288 + (7 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_6719))
                    staticcall address(_6719).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6288 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _6288 + (8 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if _6718 >= 999999:
                        mem[_6288 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_6717))
                        call address(_6717).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6288 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _6814 = mem[_608 + 32]
                        mem[_6288 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_6814))
                        staticcall address(_6814).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6288 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_608 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_6288 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6288 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6288 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _6992 = mem[_608]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_6288 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_6288 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_6288 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_6288 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _6288 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_6288 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_6288 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_6992))
                        call address(_6992).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6288 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6288 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6288 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7954 = mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _6288 + (11 * ceil32(return_data.size)) + mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6288 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _7970 = mem[_6288 + (11 * ceil32(return_data.size)) + mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_6288 + (11 * ceil32(return_data.size)) + mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_6288 + (11 * ceil32(return_data.size)) + mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6288 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6288 + (11 * ceil32(return_data.size)) + mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _6288 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6288 + (11 * ceil32(return_data.size)) + mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_6288 + (12 * ceil32(return_data.size)) + 96] = mem[_6288 + (11 * ceil32(return_data.size)) + mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _7954 + (32 * _7970) + 32 <= return_data.size
                        t = _6288 + (12 * ceil32(return_data.size)) + 128
                        s = _6288 + (11 * ceil32(return_data.size)) + _7954 + 128
                        while s < _6288 + (11 * ceil32(return_data.size)) + _7954 + (32 * _7970) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9231 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_9231]
                    else:
                        mem[_6288 + (8 * ceil32(return_data.size)) + 100] = _6718
                        mem[_6288 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_6717))
                        call address(_6717).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _6718, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6288 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _6815 = mem[_608 + 32]
                        mem[_6288 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_6815))
                        staticcall address(_6815).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6288 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_608 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_6288 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6288 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6288 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _6993 = mem[_608]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_6288 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_6288 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_6288 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_6288 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _6288 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_6288 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_6288 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_6993))
                        call address(_6993).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6288 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6288 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6288 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7955 = mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _6288 + (11 * ceil32(return_data.size)) + mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6288 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _7971 = mem[_6288 + (11 * ceil32(return_data.size)) + mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_6288 + (11 * ceil32(return_data.size)) + mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_6288 + (11 * ceil32(return_data.size)) + mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6288 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6288 + (11 * ceil32(return_data.size)) + mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _6288 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6288 + (11 * ceil32(return_data.size)) + mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_6288 + (12 * ceil32(return_data.size)) + 96] = mem[_6288 + (11 * ceil32(return_data.size)) + mem[_6288 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _7955 + (32 * _7971) + 32 <= return_data.size
                        t = _6288 + (12 * ceil32(return_data.size)) + 128
                        s = _6288 + (11 * ceil32(return_data.size)) + _7955 + 128
                        while s < _6288 + (11 * ceil32(return_data.size)) + _7955 + (32 * _7971) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9232 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_9232]
                else:
                    if 1 >= mem[_6288]:
                        revert with 0, 50
                    mem[_6288 + 64] = address(_6279)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_6288 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_6288 + 100] = eth.balance(this.address) / 2
                    mem[_6288 + 132] = 128
                    mem[_6288 + 228] = mem[_6288]
                    s = 0
                    t = _6288 + 32
                    u = _6288 + 260
                    while s < mem[_6288]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_6288 + 164] = this.address
                    mem[_6288 + 196] = block.timestamp + 60
                    require ext_code.size(address(_6277))
                    call address(_6277).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _6288 + (32 * mem[_6288]) + -mem[64] + 256]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7938 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7956 = mem[_7938]
                    require mem[_7938] <= test266151307()
                    require _7938 + mem[_7938] + 31 < _7938 + return_data.size
                    _7972 = mem[_7938 + mem[_7938]]
                    if mem[_7938 + mem[_7938]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7938 + mem[_7938]]) + 1 < 0 or _7938 + ceil32(return_data.size) + ceil32(32 * mem[_7938 + mem[_7938]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _7938 + ceil32(return_data.size) + ceil32(32 * mem[_7938 + mem[_7938]]) + 1
                    mem[_7938 + ceil32(return_data.size)] = _7972
                    require _7956 + (32 * _7972) + 32 <= return_data.size
                    t = _7938 + ceil32(return_data.size) + 32
                    s = _7938 + _7956 + 32
                    while s < _7938 + _7956 + (32 * _7972) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6278))
                    staticcall address(_6278).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9233 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9249 = mem[_9233]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6279))
                    staticcall address(_6279).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9277 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9289 = mem[_9277]
                    if not _9249:
                        revert with 0, 'Desired value is zero'
                    if not mem[_9277]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_6277)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6278))
                    call address(_6278).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6277), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9361 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9361] == bool(mem[_9361])
                    mem[mem[64] + 4] = address(_6277)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6279))
                    call address(_6279).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6277), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9401 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9401] == bool(mem[_9401])
                    if _9249 and 5 > -1 / _9249:
                        revert with 0, 17
                    if 5 * _9249 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _9249 < 5000 * _9249 / 10^6:
                        revert with 0, 17
                    if _9289 and 5 > -1 / _9289:
                        revert with 0, 17
                    if 5 * _9289 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _9289 < 5000 * _9289 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _9249
                    mem[mem[64] + 100] = _9289
                    mem[mem[64] + 132] = _9249 - (5000 * _9249 / 10^6)
                    mem[mem[64] + 164] = _9289 - (5000 * _9289 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_6277))
                    call address(_6277).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_6278), address(_6279), _9249, _9289, _9249 - (5000 * _9249 / 10^6), _9289 - (5000 * _9289 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _9555 = mem[_608 + 160]
                    _9556 = mem[_608 + 64]
                    _9557 = mem[_608 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_9557))
                    staticcall address(_9557).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9589 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9597 = mem[_9589]
                    if _9556 >= 999999:
                        mem[mem[64] + 4] = mem[_9589]
                        require ext_code.size(address(_9555))
                        call address(_9555).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _9597
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _9597
                        emit Earn(_9597);
                        _9668 = mem[_608 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9668))
                        staticcall address(_9668).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9720 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_608 + 96] = mem[_9720]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9824 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9844 = mem[_9824]
                        _9872 = mem[_608]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _9911 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _9844
                        mem[mem[64] + 36] = 128
                        _9931 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_9911 + 100] = block.timestamp + 60
                        require ext_code.size(address(_9872))
                        call address(_9872).mem[mem[64] len 4] with:
                           value _9844 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9911 + (32 * _9931) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10405 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10425 = mem[_10405]
                        require mem[_10405] <= test266151307()
                        require _10405 + mem[_10405] + 31 < _10405 + return_data.size
                        _10445 = mem[_10405 + mem[_10405]]
                        if mem[_10405 + mem[_10405]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_10405 + mem[_10405]]) + 1 < 0 or _10405 + ceil32(return_data.size) + ceil32(32 * mem[_10405 + mem[_10405]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _10405 + ceil32(return_data.size) + ceil32(32 * mem[_10405 + mem[_10405]]) + 1
                        mem[_10405 + ceil32(return_data.size)] = _10445
                        require _10425 + (32 * _10445) + 32 <= return_data.size
                        t = _10405 + ceil32(return_data.size) + 32
                        s = _10405 + _10425 + 32
                        while s < _10405 + _10425 + (32 * _10445) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10993 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10993]
                    else:
                        mem[mem[64] + 4] = _9556
                        mem[mem[64] + 36] = _9597
                        require ext_code.size(address(_9555))
                        call address(_9555).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _9556, _9597
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _9597
                        emit Earn(_9597);
                        _9669 = mem[_608 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9669))
                        staticcall address(_9669).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9721 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_608 + 96] = mem[_9721]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9825 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9845 = mem[_9825]
                        _9873 = mem[_608]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _9912 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _9845
                        mem[mem[64] + 36] = 128
                        _9932 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _9932:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_9912 + 68] = this.address
                        mem[_9912 + 100] = block.timestamp + 60
                        require ext_code.size(address(_9873))
                        call address(_9873).mem[mem[64] len 4] with:
                           value _9845 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9912 + (32 * _9932) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10406 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10426 = mem[_10406]
                        require mem[_10406] <= test266151307()
                        require _10406 + mem[_10406] + 31 < _10406 + return_data.size
                        _10446 = mem[_10406 + mem[_10406]]
                        if mem[_10406 + mem[_10406]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_10406 + mem[_10406]]) + 1 < 0 or _10406 + ceil32(return_data.size) + ceil32(32 * mem[_10406 + mem[_10406]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _10406 + ceil32(return_data.size) + ceil32(32 * mem[_10406 + mem[_10406]]) + 1
                        mem[_10406 + ceil32(return_data.size)] = _10446
                        require _10426 + (32 * _10446) + 32 <= return_data.size
                        t = _10406 + ceil32(return_data.size) + 32
                        s = _10406 + _10426 + 32
                        while s < _10406 + _10426 + (32 * _10446) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10994 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10994]
            else:
                if 1 >= mem[_6288]:
                    revert with 0, 50
                mem[_6288 + 64] = address(_6278)
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[_6288 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[_6288 + 100] = eth.balance(this.address) / 2
                mem[_6288 + 132] = 128
                mem[_6288 + 228] = mem[_6288]
                s = 0
                t = _6288 + 32
                u = _6288 + 260
                while s < mem[_6288]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_6288 + 164] = this.address
                mem[_6288 + 196] = block.timestamp + 60
                require ext_code.size(address(_6277))
                call address(_6277).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _6288 + (32 * mem[_6288]) + -mem[64] + 256]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7939 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7957 = mem[_7939]
                require mem[_7939] <= test266151307()
                require _7939 + mem[_7939] + 31 < _7939 + return_data.size
                _7973 = mem[_7939 + mem[_7939]]
                if mem[_7939 + mem[_7939]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_7939 + mem[_7939]]) + 1 < 0 or _7939 + ceil32(return_data.size) + ceil32(32 * mem[_7939 + mem[_7939]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _7939 + ceil32(return_data.size) + ceil32(32 * mem[_7939 + mem[_7939]]) + 1
                mem[_7939 + ceil32(return_data.size)] = _7973
                require _7957 + (32 * _7973) + 32 <= return_data.size
                t = _7939 + ceil32(return_data.size) + 32
                s = _7939 + _7957 + 32
                while s < _7939 + _7957 + (32 * _7973) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_6279):
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6278))
                    staticcall address(_6278).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9237 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9253 = mem[_9237]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6279))
                    staticcall address(_6279).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9284 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9296 = mem[_9284]
                    if not _9253:
                        revert with 0, 'Desired value is zero'
                    if not mem[_9284]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_6277)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6278))
                    call address(_6278).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6277), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9368 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9368] == bool(mem[_9368])
                    mem[mem[64] + 4] = address(_6277)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6279))
                    call address(_6279).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6277), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9405 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9405] == bool(mem[_9405])
                    if _9253 and 5 > -1 / _9253:
                        revert with 0, 17
                    if 5 * _9253 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _9253 < 5000 * _9253 / 10^6:
                        revert with 0, 17
                    if _9296 and 5 > -1 / _9296:
                        revert with 0, 17
                    if 5 * _9296 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _9296 < 5000 * _9296 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _9253
                    mem[mem[64] + 100] = _9296
                    mem[mem[64] + 132] = _9253 - (5000 * _9253 / 10^6)
                    mem[mem[64] + 164] = _9296 - (5000 * _9296 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_6277))
                    call address(_6277).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_6278), address(_6279), _9253, _9296, _9253 - (5000 * _9253 / 10^6), _9296 - (5000 * _9296 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _9575 = mem[_608 + 160]
                    _9576 = mem[_608 + 64]
                    _9577 = mem[_608 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_9577))
                    staticcall address(_9577).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9593 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9601 = mem[_9593]
                    if _9576 >= 999999:
                        mem[mem[64] + 4] = mem[_9593]
                        require ext_code.size(address(_9575))
                        call address(_9575).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _9601
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _9601
                        emit Earn(_9601);
                        _9696 = mem[_608 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9696))
                        staticcall address(_9696).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9728 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_608 + 96] = mem[_9728]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9835 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9861 = mem[_9835]
                        _9889 = mem[_608]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _9920 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _9861
                        mem[mem[64] + 36] = 128
                        _9940 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _9940:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_9920 + 68] = this.address
                        mem[_9920 + 100] = block.timestamp + 60
                        require ext_code.size(address(_9889))
                        call address(_9889).mem[mem[64] len 4] with:
                           value _9861 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9920 + (32 * _9940) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10407 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10427 = mem[_10407]
                        require mem[_10407] <= test266151307()
                        require _10407 + mem[_10407] + 31 < _10407 + return_data.size
                        _10447 = mem[_10407 + mem[_10407]]
                        if mem[_10407 + mem[_10407]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_10407 + mem[_10407]]) + 1 < 0 or _10407 + ceil32(return_data.size) + ceil32(32 * mem[_10407 + mem[_10407]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _10407 + ceil32(return_data.size) + ceil32(32 * mem[_10407 + mem[_10407]]) + 1
                        mem[_10407 + ceil32(return_data.size)] = _10447
                        require _10427 + (32 * _10447) + 32 <= return_data.size
                        t = _10407 + ceil32(return_data.size) + 32
                        s = _10407 + _10427 + 32
                        while s < _10407 + _10427 + (32 * _10447) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10995 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10995]
                    else:
                        mem[mem[64] + 4] = _9576
                        mem[mem[64] + 36] = _9601
                        require ext_code.size(address(_9575))
                        call address(_9575).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _9576, _9601
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _9601
                        emit Earn(_9601);
                        _9697 = mem[_608 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9697))
                        staticcall address(_9697).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9729 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_608 + 96] = mem[_9729]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9836 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9862 = mem[_9836]
                        _9890 = mem[_608]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _9921 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _9862
                        mem[mem[64] + 36] = 128
                        _9941 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_9921 + 100] = block.timestamp + 60
                        require ext_code.size(address(_9890))
                        call address(_9890).mem[mem[64] len 4] with:
                           value _9862 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9921 + (32 * _9941) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10408 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10428 = mem[_10408]
                        require mem[_10408] <= test266151307()
                        require _10408 + mem[_10408] + 31 < _10408 + return_data.size
                        _10448 = mem[_10408 + mem[_10408]]
                        if mem[_10408 + mem[_10408]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_10408 + mem[_10408]]) + 1 < 0 or _10408 + ceil32(return_data.size) + ceil32(32 * mem[_10408 + mem[_10408]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _10408 + ceil32(return_data.size) + ceil32(32 * mem[_10408 + mem[_10408]]) + 1
                        mem[_10408 + ceil32(return_data.size)] = _10448
                        require _10428 + (32 * _10448) + 32 <= return_data.size
                        t = _10408 + ceil32(return_data.size) + 32
                        s = _10408 + _10428 + 32
                        while s < _10408 + _10428 + (32 * _10448) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10996 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10996]
                else:
                    if 1 >= mem[_6288]:
                        revert with 0, 50
                    mem[_6288 + 64] = address(_6279)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _9273 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 128
                    _9285 = mem[_6288]
                    mem[mem[64] + 132] = mem[_6288]
                    s = 0
                    t = _6288 + 32
                    u = mem[64] + 164
                    while s < _9285:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_9273 + 68] = this.address
                    mem[_9273 + 100] = block.timestamp + 60
                    require ext_code.size(address(_6277))
                    call address(_6277).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _9273 + (32 * _9285) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10409 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10429 = mem[_10409]
                    require mem[_10409] <= test266151307()
                    require _10409 + mem[_10409] + 31 < _10409 + return_data.size
                    _10449 = mem[_10409 + mem[_10409]]
                    if mem[_10409 + mem[_10409]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_10409 + mem[_10409]]) + 1 < 0 or _10409 + ceil32(return_data.size) + ceil32(32 * mem[_10409 + mem[_10409]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _10409 + ceil32(return_data.size) + ceil32(32 * mem[_10409 + mem[_10409]]) + 1
                    mem[_10409 + ceil32(return_data.size)] = _10449
                    require _10429 + (32 * _10449) + 32 <= return_data.size
                    t = _10409 + ceil32(return_data.size) + 32
                    s = _10409 + _10429 + 32
                    while s < _10409 + _10429 + (32 * _10449) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6278))
                    staticcall address(_6278).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10997 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11017 = mem[_10997]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6279))
                    staticcall address(_6279).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11029 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11033 = mem[_11029]
                    if not _11017:
                        revert with 0, 'Desired value is zero'
                    if not mem[_11029]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_6277)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6278))
                    call address(_6278).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6277), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11061 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_11061] == bool(mem[_11061])
                    mem[mem[64] + 4] = address(_6277)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6279))
                    call address(_6279).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6277), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11077 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_11077] == bool(mem[_11077])
                    if _11017 and 5 > -1 / _11017:
                        revert with 0, 17
                    if 5 * _11017 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _11017 < 5000 * _11017 / 10^6:
                        revert with 0, 17
                    if _11033 and 5 > -1 / _11033:
                        revert with 0, 17
                    if 5 * _11033 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _11033 < 5000 * _11033 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _11017
                    mem[mem[64] + 100] = _11033
                    mem[mem[64] + 132] = _11017 - (5000 * _11017 / 10^6)
                    mem[mem[64] + 164] = _11033 - (5000 * _11033 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_6277))
                    call address(_6277).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_6278), address(_6279), _11017, _11033, _11017 - (5000 * _11017 / 10^6), _11033 - (5000 * _11033 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11115 = mem[_608 + 160]
                    _11116 = mem[_608 + 64]
                    _11117 = mem[_608 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11117))
                    staticcall address(_11117).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11129 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11133 = mem[_11129]
                    if _11116 >= 999999:
                        mem[mem[64] + 4] = mem[_11129]
                        require ext_code.size(address(_11115))
                        call address(_11115).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _11133
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11133
                        emit Earn(_11133);
                        _11172 = mem[_608 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11172))
                        staticcall address(_11172).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11196 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_608 + 96] = mem[_11196]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11244 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11252 = mem[_11244]
                        _11260 = mem[_608]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11268 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11252
                        mem[mem[64] + 36] = 128
                        _11276 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_11268 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11260))
                        call address(_11260).mem[mem[64] len 4] with:
                           value _11252 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11268 + (32 * _11276) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11388 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11396 = mem[_11388]
                        require mem[_11388] <= test266151307()
                        require _11388 + mem[_11388] + 31 < _11388 + return_data.size
                        _11404 = mem[_11388 + mem[_11388]]
                        if mem[_11388 + mem[_11388]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11388 + mem[_11388]]) + 1 < 0 or _11388 + ceil32(return_data.size) + ceil32(32 * mem[_11388 + mem[_11388]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11388 + ceil32(return_data.size) + ceil32(32 * mem[_11388 + mem[_11388]]) + 1
                        mem[_11388 + ceil32(return_data.size)] = _11404
                        require _11396 + (32 * _11404) + 32 <= return_data.size
                        t = _11388 + ceil32(return_data.size) + 32
                        s = _11388 + _11396 + 32
                        while s < _11388 + _11396 + (32 * _11404) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11484 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_11484]
                    else:
                        mem[mem[64] + 4] = _11116
                        mem[mem[64] + 36] = _11133
                        require ext_code.size(address(_11115))
                        call address(_11115).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _11116, _11133
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11133
                        emit Earn(_11133);
                        _11173 = mem[_608 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11173))
                        staticcall address(_11173).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11197 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_608 + 96] = mem[_11197]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11245 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11253 = mem[_11245]
                        _11261 = mem[_608]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11269 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11253
                        mem[mem[64] + 36] = 128
                        _11277 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_11269 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11261))
                        call address(_11261).mem[mem[64] len 4] with:
                           value _11253 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11269 + (32 * _11277) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11389 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11397 = mem[_11389]
                        require mem[_11389] <= test266151307()
                        require _11389 + mem[_11389] + 31 < _11389 + return_data.size
                        _11405 = mem[_11389 + mem[_11389]]
                        if mem[_11389 + mem[_11389]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11389 + mem[_11389]]) + 1 < 0 or _11389 + ceil32(return_data.size) + ceil32(32 * mem[_11389 + mem[_11389]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11389 + ceil32(return_data.size) + ceil32(32 * mem[_11389 + mem[_11389]]) + 1
                        mem[_11389 + ceil32(return_data.size)] = _11405
                        require _11397 + (32 * _11405) + 32 <= return_data.size
                        t = _11389 + ceil32(return_data.size) + 32
                        s = _11389 + _11397 + 32
                        while s < _11389 + _11397 + (32 * _11405) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11485 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_11485]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _608
            s = _3011 - (5000 * _3011 / 10^6)
            s = stor9[idx].field_0
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _618 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _627 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_627] = mem[_618]
        mem[_627 + 32] = mem[_618 + 32]
        mem[_627 + 64] = mem[_618 + 64]
        require return_data.size - 96 >= 96
        _639 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_639] = mem[_618 + 96]
        mem[_639 + 32] = mem[_618 + 128]
        mem[_639 + 64] = mem[_618 + 160]
        mem[_627 + 96] = _639
        mem[_627 + 128] = mem[_618 + 192]
        require return_data.size - 224 >= 96
        _657 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_657] = mem[_618 + 224]
        mem[_657 + 32] = mem[_618 + 256]
        mem[_657 + 64] = mem[_618 + 288]
        mem[_627 + 160] = _657
        _669 = mem[_627 + 64]
        if not mem[_627 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _608
            s = mem[_627 + 64]
            s = stor9[idx].field_0
            continue 
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _686 = mem[64]
        mem[64] = mem[64] + 256
        mem[_686] = strategyInfo[stor9[idx].field_0].field_0
        mem[_686 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_686 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_686 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_686 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_686 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_686 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_686 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 4] = _669
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                 gas gas_remaining wei
                args _669
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _714 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _718 = mem[_714]
            require mem[_714] == mem[_714 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_714 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_718))
            staticcall address(_718).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _755 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _758 = mem[_755]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_718))
            staticcall address(_718).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _765 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _771 = mem[_765]
            if mem[_765] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _758:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _792 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _803 = mem[_792]
            if 10^12 * _771 / _758 and mem[_792] > -1 / 10^12 * _771 / _758:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _771 / _758 * _803 / 10^12
            mem[mem[64] + 36] = 64
            _846 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len (32 * _846) + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1494 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1501 = mem[_1494]
            require mem[_1494] <= test266151307()
            require _1494 + mem[_1494] + 31 < _1494 + return_data.size
            _1508 = mem[_1494 + mem[_1494]]
            if mem[_1494 + mem[_1494]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_1494 + mem[_1494]]) + 1 < 0 or _1494 + ceil32(return_data.size) + ceil32(32 * mem[_1494 + mem[_1494]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _1494 + ceil32(return_data.size) + ceil32(32 * mem[_1494 + mem[_1494]]) + 1
            mem[_1494 + ceil32(return_data.size)] = _1508
            require _1501 + (32 * _1508) + 32 <= return_data.size
            t = _1494 + ceil32(return_data.size) + 32
            s = _1494 + _1501 + 32
            while s < _1494 + _1501 + (32 * _1508) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _1508:
                revert with 0, 50
            _3008 = mem[_1494 + ceil32(return_data.size) + 64]
            if mem[_1494 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_1494 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if 5 * mem[_1494 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 0, 17
            if mem[_1494 + ceil32(return_data.size) + 64] < 5000 * mem[_1494 + ceil32(return_data.size) + 64] / 10^6:
                revert with 0, 17
            _3048 = mem[_608]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_718))
            staticcall address(_718).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3072 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3080 = mem[_3072]
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _3080
            mem[mem[64] + 36] = _3008 - (5000 * _3008 / 10^6)
            mem[mem[64] + 68] = 160
            _3100 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[mem[64] + 100] = this.address
            mem[mem[64] + 132] = block.timestamp + 60
            require ext_code.size(address(_3048))
            call address(_3048).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _3100) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4604 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4612 = mem[_4604]
            require mem[_4604] <= test266151307()
            require _4604 + mem[_4604] + 31 < _4604 + return_data.size
            _4624 = mem[_4604 + mem[_4604]]
            if mem[_4604 + mem[_4604]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_4604 + mem[_4604]]) + 1 < 0 or _4604 + ceil32(return_data.size) + ceil32(32 * mem[_4604 + mem[_4604]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _4604 + ceil32(return_data.size) + ceil32(32 * mem[_4604 + mem[_4604]]) + 1
            mem[_4604 + ceil32(return_data.size)] = _4624
            require _4612 + (32 * _4624) + 32 <= return_data.size
            t = _4604 + ceil32(return_data.size) + 32
            s = _4604 + _4612 + 32
            while s < _4604 + _4612 + (32 * _4624) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _6268 = mem[_608]
            _6269 = mem[_608 + 192]
            _6270 = mem[_608 + 224]
            _6282 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_6282 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_6282]:
                revert with 0, 50
            mem[_6282 + 32] = stor21
            if stor21 == address(_6269):
                if stor21 == address(_6270):
                    mem[_6282 + 100] = this.address
                    require ext_code.size(address(_6269))
                    staticcall address(_6269).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6282 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_6282 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(address(_6270))
                    staticcall address(_6270).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6282 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    mem[_6282 + (2 * ceil32(return_data.size)) + 100] = address(_6268)
                    mem[_6282 + (2 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_6269))
                    call address(_6269).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6268), -1
                    mem[_6282 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[_6282 + (4 * ceil32(return_data.size)) + 100] = address(_6268)
                    mem[_6282 + (4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_6270))
                    call address(_6270).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6268), -1
                    mem[_6282 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                        revert with 0, 17
                    if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_6282 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                    mem[_6282 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                    mem[_6282 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                    mem[_6282 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                    mem[_6282 + (6 * ceil32(return_data.size)) + 292] = this.address
                    mem[_6282 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                    require ext_code.size(address(_6268))
                    call address(_6268).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_6269), address(_6270), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                    mem[_6282 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _6282 + (7 * ceil32(return_data.size)) + 96
                    require return_data.size >= 96
                    _6708 = mem[_608 + 160]
                    _6709 = mem[_608 + 64]
                    _6710 = mem[_608 + 32]
                    mem[_6282 + (7 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_6710))
                    staticcall address(_6710).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6282 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _6282 + (8 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if _6709 >= 999999:
                        mem[_6282 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_6708))
                        call address(_6708).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6282 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _6808 = mem[_608 + 32]
                        mem[_6282 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_6808))
                        staticcall address(_6808).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6282 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_608 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_6282 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6282 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6282 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _6968 = mem[_608]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_6282 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_6282 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_6282 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_6282 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _6282 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_6282 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_6282 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_6968))
                        call address(_6968).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6282 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6282 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6282 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7942 = mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _6282 + (11 * ceil32(return_data.size)) + mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6282 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _7958 = mem[_6282 + (11 * ceil32(return_data.size)) + mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_6282 + (11 * ceil32(return_data.size)) + mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_6282 + (11 * ceil32(return_data.size)) + mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6282 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6282 + (11 * ceil32(return_data.size)) + mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _6282 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6282 + (11 * ceil32(return_data.size)) + mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_6282 + (12 * ceil32(return_data.size)) + 96] = mem[_6282 + (11 * ceil32(return_data.size)) + mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _7942 + (32 * _7958) + 32 <= return_data.size
                        t = _6282 + (12 * ceil32(return_data.size)) + 128
                        s = _6282 + (11 * ceil32(return_data.size)) + _7942 + 128
                        while s < _6282 + (11 * ceil32(return_data.size)) + _7942 + (32 * _7958) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9222 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_9222]
                    else:
                        mem[_6282 + (8 * ceil32(return_data.size)) + 100] = _6709
                        mem[_6282 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_6708))
                        call address(_6708).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _6709, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6282 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _6809 = mem[_608 + 32]
                        mem[_6282 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_6809))
                        staticcall address(_6809).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6282 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_608 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_6282 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_6282 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _6282 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _6969 = mem[_608]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_6282 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_6282 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_6282 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_6282 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _6282 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_6282 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_6282 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_6969))
                        call address(_6969).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6282 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_6282 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _6282 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _7943 = mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _6282 + (11 * ceil32(return_data.size)) + mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6282 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _7959 = mem[_6282 + (11 * ceil32(return_data.size)) + mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_6282 + (11 * ceil32(return_data.size)) + mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_6282 + (11 * ceil32(return_data.size)) + mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6282 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6282 + (11 * ceil32(return_data.size)) + mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _6282 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6282 + (11 * ceil32(return_data.size)) + mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_6282 + (12 * ceil32(return_data.size)) + 96] = mem[_6282 + (11 * ceil32(return_data.size)) + mem[_6282 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _7943 + (32 * _7959) + 32 <= return_data.size
                        t = _6282 + (12 * ceil32(return_data.size)) + 128
                        s = _6282 + (11 * ceil32(return_data.size)) + _7943 + 128
                        while s < _6282 + (11 * ceil32(return_data.size)) + _7943 + (32 * _7959) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9223 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_9223]
                else:
                    if 1 >= mem[_6282]:
                        revert with 0, 50
                    mem[_6282 + 64] = address(_6270)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_6282 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_6282 + 100] = eth.balance(this.address) / 2
                    mem[_6282 + 132] = 128
                    mem[_6282 + 228] = mem[_6282]
                    s = 0
                    t = _6282 + 32
                    u = _6282 + 260
                    while s < mem[_6282]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_6282 + 164] = this.address
                    mem[_6282 + 196] = block.timestamp + 60
                    require ext_code.size(address(_6268))
                    call address(_6268).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _6282 + (32 * mem[_6282]) + -mem[64] + 256]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7926 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7944 = mem[_7926]
                    require mem[_7926] <= test266151307()
                    require _7926 + mem[_7926] + 31 < _7926 + return_data.size
                    _7960 = mem[_7926 + mem[_7926]]
                    if mem[_7926 + mem[_7926]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7926 + mem[_7926]]) + 1 < 0 or _7926 + ceil32(return_data.size) + ceil32(32 * mem[_7926 + mem[_7926]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _7926 + ceil32(return_data.size) + ceil32(32 * mem[_7926 + mem[_7926]]) + 1
                    mem[_7926 + ceil32(return_data.size)] = _7960
                    require _7944 + (32 * _7960) + 32 <= return_data.size
                    t = _7926 + ceil32(return_data.size) + 32
                    s = _7926 + _7944 + 32
                    while s < _7926 + _7944 + (32 * _7960) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6269))
                    staticcall address(_6269).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9224 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9240 = mem[_9224]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6270))
                    staticcall address(_6270).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9274 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9286 = mem[_9274]
                    if not _9240:
                        revert with 0, 'Desired value is zero'
                    if not mem[_9274]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_6268)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6269))
                    call address(_6269).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6268), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9358 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9358] == bool(mem[_9358])
                    mem[mem[64] + 4] = address(_6268)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6270))
                    call address(_6270).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6268), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9398 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9398] == bool(mem[_9398])
                    if _9240 and 5 > -1 / _9240:
                        revert with 0, 17
                    if 5 * _9240 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _9240 < 5000 * _9240 / 10^6:
                        revert with 0, 17
                    if _9286 and 5 > -1 / _9286:
                        revert with 0, 17
                    if 5 * _9286 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _9286 < 5000 * _9286 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _9240
                    mem[mem[64] + 100] = _9286
                    mem[mem[64] + 132] = _9240 - (5000 * _9240 / 10^6)
                    mem[mem[64] + 164] = _9286 - (5000 * _9286 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_6268))
                    call address(_6268).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_6269), address(_6270), _9240, _9286, _9240 - (5000 * _9240 / 10^6), _9286 - (5000 * _9286 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _9546 = mem[_608 + 160]
                    _9547 = mem[_608 + 64]
                    _9548 = mem[_608 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_9548))
                    staticcall address(_9548).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9586 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9594 = mem[_9586]
                    if _9547 >= 999999:
                        mem[mem[64] + 4] = mem[_9586]
                        require ext_code.size(address(_9546))
                        call address(_9546).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _9594
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _9594
                        emit Earn(_9594);
                        _9650 = mem[_608 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9650))
                        staticcall address(_9650).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9714 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_608 + 96] = mem[_9714]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9818 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9838 = mem[_9818]
                        _9866 = mem[_608]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _9902 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _9838
                        mem[mem[64] + 36] = 128
                        _9922 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_9902 + 100] = block.timestamp + 60
                        require ext_code.size(address(_9866))
                        call address(_9866).mem[mem[64] len 4] with:
                           value _9838 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9902 + (32 * _9922) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10390 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10410 = mem[_10390]
                        require mem[_10390] <= test266151307()
                        require _10390 + mem[_10390] + 31 < _10390 + return_data.size
                        _10430 = mem[_10390 + mem[_10390]]
                        if mem[_10390 + mem[_10390]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_10390 + mem[_10390]]) + 1 < 0 or _10390 + ceil32(return_data.size) + ceil32(32 * mem[_10390 + mem[_10390]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _10390 + ceil32(return_data.size) + ceil32(32 * mem[_10390 + mem[_10390]]) + 1
                        mem[_10390 + ceil32(return_data.size)] = _10430
                        require _10410 + (32 * _10430) + 32 <= return_data.size
                        t = _10390 + ceil32(return_data.size) + 32
                        s = _10390 + _10410 + 32
                        while s < _10390 + _10410 + (32 * _10430) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10978 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10978]
                    else:
                        mem[mem[64] + 4] = _9547
                        mem[mem[64] + 36] = _9594
                        require ext_code.size(address(_9546))
                        call address(_9546).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _9547, _9594
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _9594
                        emit Earn(_9594);
                        _9651 = mem[_608 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9651))
                        staticcall address(_9651).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9715 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_608 + 96] = mem[_9715]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9819 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9839 = mem[_9819]
                        _9867 = mem[_608]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _9903 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _9839
                        mem[mem[64] + 36] = 128
                        _9923 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_9903 + 100] = block.timestamp + 60
                        require ext_code.size(address(_9867))
                        call address(_9867).mem[mem[64] len 4] with:
                           value _9839 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9903 + (32 * _9923) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10391 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10411 = mem[_10391]
                        require mem[_10391] <= test266151307()
                        require _10391 + mem[_10391] + 31 < _10391 + return_data.size
                        _10431 = mem[_10391 + mem[_10391]]
                        if mem[_10391 + mem[_10391]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_10391 + mem[_10391]]) + 1 < 0 or _10391 + ceil32(return_data.size) + ceil32(32 * mem[_10391 + mem[_10391]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _10391 + ceil32(return_data.size) + ceil32(32 * mem[_10391 + mem[_10391]]) + 1
                        mem[_10391 + ceil32(return_data.size)] = _10431
                        require _10411 + (32 * _10431) + 32 <= return_data.size
                        t = _10391 + ceil32(return_data.size) + 32
                        s = _10391 + _10411 + 32
                        while s < _10391 + _10411 + (32 * _10431) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10979 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10979]
            else:
                if 1 >= mem[_6282]:
                    revert with 0, 50
                mem[_6282 + 64] = address(_6269)
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[_6282 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[_6282 + 100] = eth.balance(this.address) / 2
                mem[_6282 + 132] = 128
                mem[_6282 + 228] = mem[_6282]
                s = 0
                t = _6282 + 32
                u = _6282 + 260
                while s < mem[_6282]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_6282 + 164] = this.address
                mem[_6282 + 196] = block.timestamp + 60
                require ext_code.size(address(_6268))
                call address(_6268).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _6282 + (32 * mem[_6282]) + -mem[64] + 256]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7927 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7945 = mem[_7927]
                require mem[_7927] <= test266151307()
                require _7927 + mem[_7927] + 31 < _7927 + return_data.size
                _7961 = mem[_7927 + mem[_7927]]
                if mem[_7927 + mem[_7927]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_7927 + mem[_7927]]) + 1 < 0 or _7927 + ceil32(return_data.size) + ceil32(32 * mem[_7927 + mem[_7927]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _7927 + ceil32(return_data.size) + ceil32(32 * mem[_7927 + mem[_7927]]) + 1
                mem[_7927 + ceil32(return_data.size)] = _7961
                require _7945 + (32 * _7961) + 32 <= return_data.size
                t = _7927 + ceil32(return_data.size) + 32
                s = _7927 + _7945 + 32
                while s < _7927 + _7945 + (32 * _7961) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_6270):
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6269))
                    staticcall address(_6269).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9234 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9250 = mem[_9234]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6270))
                    staticcall address(_6270).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9278 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9290 = mem[_9278]
                    if not _9250:
                        revert with 0, 'Desired value is zero'
                    if not mem[_9278]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_6268)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6269))
                    call address(_6269).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6268), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9362 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9362] == bool(mem[_9362])
                    mem[mem[64] + 4] = address(_6268)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6270))
                    call address(_6270).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6268), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9402 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9402] == bool(mem[_9402])
                    if _9250 and 5 > -1 / _9250:
                        revert with 0, 17
                    if 5 * _9250 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _9250 < 5000 * _9250 / 10^6:
                        revert with 0, 17
                    if _9290 and 5 > -1 / _9290:
                        revert with 0, 17
                    if 5 * _9290 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _9290 < 5000 * _9290 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _9250
                    mem[mem[64] + 100] = _9290
                    mem[mem[64] + 132] = _9250 - (5000 * _9250 / 10^6)
                    mem[mem[64] + 164] = _9290 - (5000 * _9290 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_6268))
                    call address(_6268).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_6269), address(_6270), _9250, _9290, _9250 - (5000 * _9250 / 10^6), _9290 - (5000 * _9290 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _9560 = mem[_608 + 160]
                    _9561 = mem[_608 + 64]
                    _9562 = mem[_608 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_9562))
                    staticcall address(_9562).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9590 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9598 = mem[_9590]
                    if _9561 >= 999999:
                        mem[mem[64] + 4] = mem[_9590]
                        require ext_code.size(address(_9560))
                        call address(_9560).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _9598
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _9598
                        emit Earn(_9598);
                        _9678 = mem[_608 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9678))
                        staticcall address(_9678).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9722 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_608 + 96] = mem[_9722]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9826 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9846 = mem[_9826]
                        _9874 = mem[_608]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _9914 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _9846
                        mem[mem[64] + 36] = 128
                        _9934 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_9914 + 100] = block.timestamp + 60
                        require ext_code.size(address(_9874))
                        call address(_9874).mem[mem[64] len 4] with:
                           value _9846 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9914 + (32 * _9934) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10392 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10412 = mem[_10392]
                        require mem[_10392] <= test266151307()
                        require _10392 + mem[_10392] + 31 < _10392 + return_data.size
                        _10432 = mem[_10392 + mem[_10392]]
                        if mem[_10392 + mem[_10392]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_10392 + mem[_10392]]) + 1 < 0 or _10392 + ceil32(return_data.size) + ceil32(32 * mem[_10392 + mem[_10392]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _10392 + ceil32(return_data.size) + ceil32(32 * mem[_10392 + mem[_10392]]) + 1
                        mem[_10392 + ceil32(return_data.size)] = _10432
                        require _10412 + (32 * _10432) + 32 <= return_data.size
                        t = _10392 + ceil32(return_data.size) + 32
                        s = _10392 + _10412 + 32
                        while s < _10392 + _10412 + (32 * _10432) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10980 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10980]
                    else:
                        mem[mem[64] + 4] = _9561
                        mem[mem[64] + 36] = _9598
                        require ext_code.size(address(_9560))
                        call address(_9560).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _9561, _9598
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _9598
                        emit Earn(_9598);
                        _9679 = mem[_608 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9679))
                        staticcall address(_9679).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9723 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_608 + 96] = mem[_9723]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9827 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9847 = mem[_9827]
                        _9875 = mem[_608]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _9915 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _9847
                        mem[mem[64] + 36] = 128
                        _9935 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_9915 + 100] = block.timestamp + 60
                        require ext_code.size(address(_9875))
                        call address(_9875).mem[mem[64] len 4] with:
                           value _9847 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9915 + (32 * _9935) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10393 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10413 = mem[_10393]
                        require mem[_10393] <= test266151307()
                        require _10393 + mem[_10393] + 31 < _10393 + return_data.size
                        _10433 = mem[_10393 + mem[_10393]]
                        if mem[_10393 + mem[_10393]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_10393 + mem[_10393]]) + 1 < 0 or _10393 + ceil32(return_data.size) + ceil32(32 * mem[_10393 + mem[_10393]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _10393 + ceil32(return_data.size) + ceil32(32 * mem[_10393 + mem[_10393]]) + 1
                        mem[_10393 + ceil32(return_data.size)] = _10433
                        require _10413 + (32 * _10433) + 32 <= return_data.size
                        t = _10393 + ceil32(return_data.size) + 32
                        s = _10393 + _10413 + 32
                        while s < _10393 + _10413 + (32 * _10433) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10981 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10981]
                else:
                    if 1 >= mem[_6282]:
                        revert with 0, 50
                    mem[_6282 + 64] = address(_6270)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 128
                    _9279 = mem[_6282]
                    mem[mem[64] + 132] = mem[_6282]
                    s = 0
                    t = _6282 + 32
                    u = mem[64] + 164
                    while s < _9279:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_6268))
                    call address(_6268).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args Mask(255, 1, eth.balance(this.address)), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _9279) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10394 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10414 = mem[_10394]
                    require mem[_10394] <= test266151307()
                    require _10394 + mem[_10394] + 31 < _10394 + return_data.size
                    _10434 = mem[_10394 + mem[_10394]]
                    if mem[_10394 + mem[_10394]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_10394 + mem[_10394]]) + 1 < 0 or _10394 + ceil32(return_data.size) + ceil32(32 * mem[_10394 + mem[_10394]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _10394 + ceil32(return_data.size) + ceil32(32 * mem[_10394 + mem[_10394]]) + 1
                    mem[_10394 + ceil32(return_data.size)] = _10434
                    require _10414 + (32 * _10434) + 32 <= return_data.size
                    t = _10394 + ceil32(return_data.size) + 32
                    s = _10394 + _10414 + 32
                    while s < _10394 + _10414 + (32 * _10434) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6269))
                    staticcall address(_6269).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10982 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11002 = mem[_10982]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_6270))
                    staticcall address(_6270).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11026 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11030 = mem[_11026]
                    if not _11002:
                        revert with 0, 'Desired value is zero'
                    if not mem[_11026]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_6268)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6269))
                    call address(_6269).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6268), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11058 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_11058] == bool(mem[_11058])
                    mem[mem[64] + 4] = address(_6268)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_6270))
                    call address(_6270).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_6268), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11074 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_11074] == bool(mem[_11074])
                    if _11002 and 5 > -1 / _11002:
                        revert with 0, 17
                    if 5 * _11002 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _11002 < 5000 * _11002 / 10^6:
                        revert with 0, 17
                    if _11030 and 5 > -1 / _11030:
                        revert with 0, 17
                    if 5 * _11030 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _11030 < 5000 * _11030 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _11002
                    mem[mem[64] + 100] = _11030
                    mem[mem[64] + 132] = _11002 - (5000 * _11002 / 10^6)
                    mem[mem[64] + 164] = _11030 - (5000 * _11030 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_6268))
                    call address(_6268).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_6269), address(_6270), _11002, _11030, _11002 - (5000 * _11002 / 10^6), _11030 - (5000 * _11030 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11106 = mem[_608 + 160]
                    _11107 = mem[_608 + 64]
                    _11108 = mem[_608 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11108))
                    staticcall address(_11108).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11126 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11130 = mem[_11126]
                    if _11107 >= 999999:
                        mem[mem[64] + 4] = mem[_11126]
                        require ext_code.size(address(_11106))
                        call address(_11106).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _11130
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11130
                        emit Earn(_11130);
                        _11166 = mem[_608 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11166))
                        staticcall address(_11166).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11190 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_608 + 96] = mem[_11190]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11238 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11246 = mem[_11238]
                        _11254 = mem[_608]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11262 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11246
                        mem[mem[64] + 36] = 128
                        _11270 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _11270:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11262 + 68] = this.address
                        mem[_11262 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11254))
                        call address(_11254).mem[mem[64] len 4] with:
                           value _11246 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11262 + (32 * _11270) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11382 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11390 = mem[_11382]
                        require mem[_11382] <= test266151307()
                        require _11382 + mem[_11382] + 31 < _11382 + return_data.size
                        _11398 = mem[_11382 + mem[_11382]]
                        if mem[_11382 + mem[_11382]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11382 + mem[_11382]]) + 1 < 0 or _11382 + ceil32(return_data.size) + ceil32(32 * mem[_11382 + mem[_11382]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11382 + ceil32(return_data.size) + ceil32(32 * mem[_11382 + mem[_11382]]) + 1
                        mem[_11382 + ceil32(return_data.size)] = _11398
                        require _11390 + (32 * _11398) + 32 <= return_data.size
                        t = _11382 + ceil32(return_data.size) + 32
                        s = _11382 + _11390 + 32
                        while s < _11382 + _11390 + (32 * _11398) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11478 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_11478]
                    else:
                        mem[mem[64] + 4] = _11107
                        mem[mem[64] + 36] = _11130
                        require ext_code.size(address(_11106))
                        call address(_11106).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _11107, _11130
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11130
                        emit Earn(_11130);
                        _11167 = mem[_608 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11167))
                        staticcall address(_11167).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11191 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_608 + 96] = mem[_11191]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11239 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11247 = mem[_11239]
                        _11255 = mem[_608]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11263 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11247
                        mem[mem[64] + 36] = 128
                        _11271 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_11263 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11255))
                        call address(_11255).mem[mem[64] len 4] with:
                           value _11247 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11263 + (32 * _11271) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11383 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11391 = mem[_11383]
                        require mem[_11383] <= test266151307()
                        require _11383 + mem[_11383] + 31 < _11383 + return_data.size
                        _11399 = mem[_11383 + mem[_11383]]
                        if mem[_11383 + mem[_11383]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11383 + mem[_11383]]) + 1 < 0 or _11383 + ceil32(return_data.size) + ceil32(32 * mem[_11383 + mem[_11383]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11383 + ceil32(return_data.size) + ceil32(32 * mem[_11383 + mem[_11383]]) + 1
                        mem[_11383 + ceil32(return_data.size)] = _11399
                        require _11391 + (32 * _11399) + 32 <= return_data.size
                        t = _11383 + ceil32(return_data.size) + 32
                        s = _11383 + _11391 + 32
                        while s < _11383 + _11391 + (32 * _11399) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11479 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_11479]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _608
            s = _3008 - (5000 * _3008 / 10^6)
            s = stor9[idx].field_0
            continue 
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
        mem[mem[64] + 36] = _669
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
             gas gas_remaining wei
            args strategyInfo[stor9[idx].field_0].field_512, _669
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _715 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _719 = mem[_715]
        require mem[_715] == mem[_715 + 12 len 20]
        if 0 >= mem[96]:
            revert with 0, 50
        mem[128] = mem[_715 + 12 len 20]
        if 1 >= mem[96]:
            revert with 0, 50
        mem[160] = stor21
        require ext_code.size(address(_719))
        staticcall address(_719).0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _756 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _759 = mem[_756]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_719))
        staticcall address(_719).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _766 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _772 = mem[_766]
        if mem[_766] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _759:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _793 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _804 = mem[_793]
        if 10^12 * _772 / _759 and mem[_793] > -1 / 10^12 * _772 / _759:
            revert with 0, 17
        _833 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _772 / _759 * _804 / 10^12
        mem[mem[64] + 36] = 64
        _847 = mem[96]
        mem[mem[64] + 68] = mem[96]
        s = 0
        t = 128
        u = mem[64] + 100
        while s < _847:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _833 + (32 * _847) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1495 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1502 = mem[_1495]
        require mem[_1495] <= test266151307()
        require _1495 + mem[_1495] + 31 < _1495 + return_data.size
        _1509 = mem[_1495 + mem[_1495]]
        if mem[_1495 + mem[_1495]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_1495 + mem[_1495]]) + 1 < 0 or _1495 + ceil32(return_data.size) + ceil32(32 * mem[_1495 + mem[_1495]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _1495 + ceil32(return_data.size) + ceil32(32 * mem[_1495 + mem[_1495]]) + 1
        mem[_1495 + ceil32(return_data.size)] = _1509
        require _1502 + (32 * _1509) + 32 <= return_data.size
        t = _1495 + ceil32(return_data.size) + 32
        s = _1495 + _1502 + 32
        while s < _1495 + _1502 + (32 * _1509) + 32:
            mem[t] = mem[s]
            t = t + 32
            s = s + 32
            continue 
        if 1 >= _1509:
            revert with 0, 50
        _3009 = mem[_1495 + ceil32(return_data.size) + 64]
        if mem[_1495 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_1495 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        if 5 * mem[_1495 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 0, 17
        if mem[_1495 + ceil32(return_data.size) + 64] < 5000 * mem[_1495 + ceil32(return_data.size) + 64] / 10^6:
            revert with 0, 17
        _3049 = mem[_608]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_719))
        staticcall address(_719).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3073 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3081 = mem[_3073]
        if 60 > !block.timestamp:
            revert with 0, 17
        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _3081
        mem[mem[64] + 36] = _3009 - (5000 * _3009 / 10^6)
        mem[mem[64] + 68] = 160
        _3101 = mem[96]
        mem[mem[64] + 164] = mem[96]
        s = 0
        t = 128
        u = mem[64] + 196
        while s < mem[96]:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        mem[mem[64] + 100] = this.address
        mem[mem[64] + 132] = block.timestamp + 60
        require ext_code.size(address(_3049))
        call address(_3049).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _3101) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4605 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4613 = mem[_4605]
        require mem[_4605] <= test266151307()
        require _4605 + mem[_4605] + 31 < _4605 + return_data.size
        _4625 = mem[_4605 + mem[_4605]]
        if mem[_4605 + mem[_4605]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_4605 + mem[_4605]]) + 1 < 0 or _4605 + ceil32(return_data.size) + ceil32(32 * mem[_4605 + mem[_4605]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _4605 + ceil32(return_data.size) + ceil32(32 * mem[_4605 + mem[_4605]]) + 1
        mem[_4605 + ceil32(return_data.size)] = _4625
        require _4613 + (32 * _4625) + 32 <= return_data.size
        t = _4605 + ceil32(return_data.size) + 32
        s = _4605 + _4613 + 32
        while s < _4605 + _4613 + (32 * _4625) + 32:
            mem[t] = mem[s]
            t = t + 32
            s = s + 32
            continue 
        _6271 = mem[_608]
        _6272 = mem[_608 + 192]
        _6273 = mem[_608 + 224]
        _6284 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_6284 + 32 len 64] = call.data[calldata.size len 64]
        if not mem[_6284]:
            revert with 0, 50
        mem[_6284 + 32] = stor21
        if stor21 == address(_6272):
            if stor21 == address(_6273):
                mem[_6284 + 100] = this.address
                require ext_code.size(address(_6272))
                staticcall address(_6272).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_6284 + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                mem[_6284 + ceil32(return_data.size) + 100] = this.address
                require ext_code.size(address(_6273))
                staticcall address(_6273).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_6284 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    revert with 0, 'Desired value is zero'
                if not ext_call.return_data[0]:
                    revert with 0, 'Desired value is zero'
                mem[_6284 + (2 * ceil32(return_data.size)) + 100] = address(_6271)
                mem[_6284 + (2 * ceil32(return_data.size)) + 132] = -1
                require ext_code.size(address(_6272))
                call address(_6272).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_6271), -1
                mem[_6284 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                mem[_6284 + (4 * ceil32(return_data.size)) + 100] = address(_6271)
                mem[_6284 + (4 * ceil32(return_data.size)) + 132] = -1
                require ext_code.size(address(_6273))
                call address(_6273).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_6271), -1
                mem[_6284 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                    revert with 0, 17
                if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[_6284 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                mem[_6284 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                mem[_6284 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                mem[_6284 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                mem[_6284 + (6 * ceil32(return_data.size)) + 292] = this.address
                mem[_6284 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                require ext_code.size(address(_6271))
                call address(_6271).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_6272), address(_6273), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                mem[_6284 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _6284 + (7 * ceil32(return_data.size)) + 96
                require return_data.size >= 96
                _6711 = mem[_608 + 160]
                _6712 = mem[_608 + 64]
                _6713 = mem[_608 + 32]
                mem[_6284 + (7 * ceil32(return_data.size)) + 100] = this.address
                require ext_code.size(address(_6713))
                staticcall address(_6713).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_6284 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _6284 + (8 * ceil32(return_data.size)) + 96
                require return_data.size >= 32
                if _6712 >= 999999:
                    mem[_6284 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    require ext_code.size(address(_6711))
                    call address(_6711).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_6284 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    emit Earn(ext_call.return_data[0]);
                    _6810 = mem[_608 + 32]
                    mem[_6284 + (8 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_6810))
                    staticcall address(_6810).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6284 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_608 + 96] = ext_call.return_data[0]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[_6284 + (10 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6284 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _6284 + (11 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _6976 = mem[_608]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_6284 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_6284 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    mem[_6284 + (11 * ceil32(return_data.size)) + 132] = 128
                    mem[_6284 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                    s = 0
                    t = 128
                    u = _6284 + (11 * ceil32(return_data.size)) + 260
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_6284 + (11 * ceil32(return_data.size)) + 164] = this.address
                    mem[_6284 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                    require ext_code.size(address(_6976))
                    call address(_6976).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value ext_call.return_data[0] wei
                         gas gas_remaining wei
                        args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6284 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_6284 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _6284 + (12 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _7946 = mem[_6284 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                    require mem[_6284 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require _6284 + (11 * ceil32(return_data.size)) + mem[_6284 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6284 + (11 * ceil32(return_data.size)) + return_data.size + 96
                    _7962 = mem[_6284 + (11 * ceil32(return_data.size)) + mem[_6284 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                    if mem[_6284 + (11 * ceil32(return_data.size)) + mem[_6284 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6284 + (11 * ceil32(return_data.size)) + mem[_6284 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6284 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6284 + (11 * ceil32(return_data.size)) + mem[_6284 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _6284 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6284 + (11 * ceil32(return_data.size)) + mem[_6284 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                    mem[_6284 + (12 * ceil32(return_data.size)) + 96] = _7962
                    require _7946 + (32 * _7962) + 32 <= return_data.size
                    t = _6284 + (12 * ceil32(return_data.size)) + 128
                    s = _6284 + (11 * ceil32(return_data.size)) + _7946 + 128
                    while s < _6284 + (11 * ceil32(return_data.size)) + _7946 + (32 * _7962) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9225 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_9225]
                else:
                    mem[_6284 + (8 * ceil32(return_data.size)) + 100] = _6712
                    mem[_6284 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                    require ext_code.size(address(_6711))
                    call address(_6711).deposit(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args _6712, ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_6284 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    emit Earn(ext_call.return_data[0]);
                    _6811 = mem[_608 + 32]
                    mem[_6284 + (8 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_6811))
                    staticcall address(_6811).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6284 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_608 + 96] = ext_call.return_data[0]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[_6284 + (10 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_6284 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _6284 + (11 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _6977 = mem[_608]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_6284 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_6284 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    mem[_6284 + (11 * ceil32(return_data.size)) + 132] = 128
                    mem[_6284 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                    s = 0
                    t = 128
                    u = _6284 + (11 * ceil32(return_data.size)) + 260
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_6284 + (11 * ceil32(return_data.size)) + 164] = this.address
                    mem[_6284 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                    require ext_code.size(address(_6977))
                    call address(_6977).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value ext_call.return_data[0] wei
                         gas gas_remaining wei
                        args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_6284 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_6284 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _6284 + (12 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _7947 = mem[_6284 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                    require mem[_6284 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require _6284 + (11 * ceil32(return_data.size)) + mem[_6284 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _6284 + (11 * ceil32(return_data.size)) + return_data.size + 96
                    _7963 = mem[_6284 + (11 * ceil32(return_data.size)) + mem[_6284 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                    if mem[_6284 + (11 * ceil32(return_data.size)) + mem[_6284 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_6284 + (11 * ceil32(return_data.size)) + mem[_6284 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _6284 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6284 + (11 * ceil32(return_data.size)) + mem[_6284 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _6284 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_6284 + (11 * ceil32(return_data.size)) + mem[_6284 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                    mem[_6284 + (12 * ceil32(return_data.size)) + 96] = _7963
                    require _7947 + (32 * _7963) + 32 <= return_data.size
                    t = _6284 + (12 * ceil32(return_data.size)) + 128
                    s = _6284 + (11 * ceil32(return_data.size)) + _7947 + 128
                    while s < _6284 + (11 * ceil32(return_data.size)) + _7947 + (32 * _7963) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9226 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_9226]
            else:
                if 1 >= mem[_6284]:
                    revert with 0, 50
                mem[_6284 + 64] = address(_6273)
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[_6284 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[_6284 + 100] = eth.balance(this.address) / 2
                mem[_6284 + 132] = 128
                mem[_6284 + 228] = mem[_6284]
                s = 0
                t = _6284 + 32
                u = _6284 + 260
                while s < mem[_6284]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_6284 + 164] = this.address
                mem[_6284 + 196] = block.timestamp + 60
                require ext_code.size(address(_6271))
                call address(_6271).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _6284 + (32 * mem[_6284]) + -mem[64] + 256]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7930 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7948 = mem[_7930]
                require mem[_7930] <= test266151307()
                require _7930 + mem[_7930] + 31 < _7930 + return_data.size
                _7964 = mem[_7930 + mem[_7930]]
                if mem[_7930 + mem[_7930]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_7930 + mem[_7930]]) + 1 < 0 or _7930 + ceil32(return_data.size) + ceil32(32 * mem[_7930 + mem[_7930]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _7930 + ceil32(return_data.size) + ceil32(32 * mem[_7930 + mem[_7930]]) + 1
                mem[_7930 + ceil32(return_data.size)] = _7964
                require _7948 + (32 * _7964) + 32 <= return_data.size
                t = _7930 + ceil32(return_data.size) + 32
                s = _7930 + _7948 + 32
                while s < _7930 + _7948 + (32 * _7964) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_6272))
                staticcall address(_6272).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9227 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9243 = mem[_9227]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_6273))
                staticcall address(_6273).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9275 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9287 = mem[_9275]
                if not _9243:
                    revert with 0, 'Desired value is zero'
                if not mem[_9275]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_6271)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_6272))
                call address(_6272).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_6271), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9359 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_9359] == bool(mem[_9359])
                mem[mem[64] + 4] = address(_6271)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_6273))
                call address(_6273).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_6271), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9399 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_9399] == bool(mem[_9399])
                if _9243 and 5 > -1 / _9243:
                    revert with 0, 17
                if 5 * _9243 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _9243 < 5000 * _9243 / 10^6:
                    revert with 0, 17
                if _9287 and 5 > -1 / _9287:
                    revert with 0, 17
                if 5 * _9287 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _9287 < 5000 * _9287 / 10^6:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _9243
                mem[mem[64] + 100] = _9287
                mem[mem[64] + 132] = _9243 - (5000 * _9243 / 10^6)
                mem[mem[64] + 164] = _9287 - (5000 * _9287 / 10^6)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_6271))
                call address(_6271).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_6272), address(_6273), _9243, _9287, _9243 - (5000 * _9243 / 10^6), _9287 - (5000 * _9287 / 10^6), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _9549 = mem[_608 + 160]
                _9550 = mem[_608 + 64]
                _9551 = mem[_608 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_9551))
                staticcall address(_9551).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9587 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9595 = mem[_9587]
                if _9550 >= 999999:
                    mem[mem[64] + 4] = mem[_9587]
                    require ext_code.size(address(_9549))
                    call address(_9549).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _9595
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _9595
                    emit Earn(_9595);
                    _9656 = mem[_608 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_9656))
                    staticcall address(_9656).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9716 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_608 + 96] = mem[_9716]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9820 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9840 = mem[_9820]
                    _9868 = mem[_608]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _9905 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _9840
                    mem[mem[64] + 36] = 128
                    _9925 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _9925:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_9905 + 68] = this.address
                    mem[_9905 + 100] = block.timestamp + 60
                    require ext_code.size(address(_9868))
                    call address(_9868).mem[mem[64] len 4] with:
                       value _9840 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _9905 + (32 * _9925) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10395 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10415 = mem[_10395]
                    require mem[_10395] <= test266151307()
                    require _10395 + mem[_10395] + 31 < _10395 + return_data.size
                    _10435 = mem[_10395 + mem[_10395]]
                    if mem[_10395 + mem[_10395]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_10395 + mem[_10395]]) + 1 < 0 or _10395 + ceil32(return_data.size) + ceil32(32 * mem[_10395 + mem[_10395]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _10395 + ceil32(return_data.size) + ceil32(32 * mem[_10395 + mem[_10395]]) + 1
                    mem[_10395 + ceil32(return_data.size)] = _10435
                    require _10415 + (32 * _10435) + 32 <= return_data.size
                    t = _10395 + ceil32(return_data.size) + 32
                    s = _10395 + _10415 + 32
                    while s < _10395 + _10415 + (32 * _10435) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10983 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_10983]
                else:
                    mem[mem[64] + 4] = _9550
                    mem[mem[64] + 36] = _9595
                    require ext_code.size(address(_9549))
                    call address(_9549).deposit(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args _9550, _9595
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _9595
                    emit Earn(_9595);
                    _9657 = mem[_608 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_9657))
                    staticcall address(_9657).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9717 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_608 + 96] = mem[_9717]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9821 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9841 = mem[_9821]
                    _9869 = mem[_608]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _9906 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _9841
                    mem[mem[64] + 36] = 128
                    _9926 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_9906 + 100] = block.timestamp + 60
                    require ext_code.size(address(_9869))
                    call address(_9869).mem[mem[64] len 4] with:
                       value _9841 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _9906 + (32 * _9926) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10396 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10416 = mem[_10396]
                    require mem[_10396] <= test266151307()
                    require _10396 + mem[_10396] + 31 < _10396 + return_data.size
                    _10436 = mem[_10396 + mem[_10396]]
                    if mem[_10396 + mem[_10396]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_10396 + mem[_10396]]) + 1 < 0 or _10396 + ceil32(return_data.size) + ceil32(32 * mem[_10396 + mem[_10396]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _10396 + ceil32(return_data.size) + ceil32(32 * mem[_10396 + mem[_10396]]) + 1
                    mem[_10396 + ceil32(return_data.size)] = _10436
                    require _10416 + (32 * _10436) + 32 <= return_data.size
                    t = _10396 + ceil32(return_data.size) + 32
                    s = _10396 + _10416 + 32
                    while s < _10396 + _10416 + (32 * _10436) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10984 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_10984]
        else:
            if 1 >= mem[_6284]:
                revert with 0, 50
            mem[_6284 + 64] = address(_6272)
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[_6284 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[_6284 + 100] = eth.balance(this.address) / 2
            mem[_6284 + 132] = 128
            mem[_6284 + 228] = mem[_6284]
            s = 0
            t = _6284 + 32
            u = _6284 + 260
            while s < mem[_6284]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_6284 + 164] = this.address
            mem[_6284 + 196] = block.timestamp + 60
            require ext_code.size(address(_6271))
            call address(_6271).mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _6284 + (32 * mem[_6284]) + -mem[64] + 256]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7931 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7949 = mem[_7931]
            require mem[_7931] <= test266151307()
            require _7931 + mem[_7931] + 31 < _7931 + return_data.size
            _7965 = mem[_7931 + mem[_7931]]
            if mem[_7931 + mem[_7931]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_7931 + mem[_7931]]) + 1 < 0 or _7931 + ceil32(return_data.size) + ceil32(32 * mem[_7931 + mem[_7931]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _7931 + ceil32(return_data.size) + ceil32(32 * mem[_7931 + mem[_7931]]) + 1
            mem[_7931 + ceil32(return_data.size)] = _7965
            require _7949 + (32 * _7965) + 32 <= return_data.size
            t = _7931 + ceil32(return_data.size) + 32
            s = _7931 + _7949 + 32
            while s < _7931 + _7949 + (32 * _7965) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if stor21 == address(_6273):
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_6272))
                staticcall address(_6272).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9235 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9251 = mem[_9235]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_6273))
                staticcall address(_6273).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9280 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9292 = mem[_9280]
                if not _9251:
                    revert with 0, 'Desired value is zero'
                if not mem[_9280]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_6271)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_6272))
                call address(_6272).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_6271), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9364 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_9364] == bool(mem[_9364])
                mem[mem[64] + 4] = address(_6271)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_6273))
                call address(_6273).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_6271), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9403 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_9403] == bool(mem[_9403])
                if _9251 and 5 > -1 / _9251:
                    revert with 0, 17
                if 5 * _9251 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _9251 < 5000 * _9251 / 10^6:
                    revert with 0, 17
                if _9292 and 5 > -1 / _9292:
                    revert with 0, 17
                if 5 * _9292 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _9292 < 5000 * _9292 / 10^6:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _9251
                mem[mem[64] + 100] = _9292
                mem[mem[64] + 132] = _9251 - (5000 * _9251 / 10^6)
                mem[mem[64] + 164] = _9292 - (5000 * _9292 / 10^6)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_6271))
                call address(_6271).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_6272), address(_6273), _9251, _9292, _9251 - (5000 * _9251 / 10^6), _9292 - (5000 * _9292 / 10^6), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _9565 = mem[_608 + 160]
                _9566 = mem[_608 + 64]
                _9567 = mem[_608 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_9567))
                staticcall address(_9567).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9591 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9599 = mem[_9591]
                if _9566 >= 999999:
                    mem[mem[64] + 4] = mem[_9591]
                    require ext_code.size(address(_9565))
                    call address(_9565).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _9599
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _9599
                    emit Earn(_9599);
                    _9684 = mem[_608 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_9684))
                    staticcall address(_9684).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9724 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_608 + 96] = mem[_9724]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9829 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9851 = mem[_9829]
                    _9879 = mem[_608]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _9916 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _9851
                    mem[mem[64] + 36] = 128
                    _9936 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_9916 + 100] = block.timestamp + 60
                    require ext_code.size(address(_9879))
                    call address(_9879).mem[mem[64] len 4] with:
                       value _9851 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _9916 + (32 * _9936) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10397 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10417 = mem[_10397]
                    require mem[_10397] <= test266151307()
                    require _10397 + mem[_10397] + 31 < _10397 + return_data.size
                    _10437 = mem[_10397 + mem[_10397]]
                    if mem[_10397 + mem[_10397]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_10397 + mem[_10397]]) + 1 < 0 or _10397 + ceil32(return_data.size) + ceil32(32 * mem[_10397 + mem[_10397]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _10397 + ceil32(return_data.size) + ceil32(32 * mem[_10397 + mem[_10397]]) + 1
                    mem[_10397 + ceil32(return_data.size)] = _10437
                    require _10417 + (32 * _10437) + 32 <= return_data.size
                    t = _10397 + ceil32(return_data.size) + 32
                    s = _10397 + _10417 + 32
                    while s < _10397 + _10417 + (32 * _10437) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10985 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_10985]
                else:
                    mem[mem[64] + 4] = _9566
                    mem[mem[64] + 36] = _9599
                    require ext_code.size(address(_9565))
                    call address(_9565).deposit(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args _9566, _9599
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _9599
                    emit Earn(_9599);
                    _9685 = mem[_608 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_9685))
                    staticcall address(_9685).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9725 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_608 + 96] = mem[_9725]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9830 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9852 = mem[_9830]
                    _9880 = mem[_608]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _9917 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _9852
                    mem[mem[64] + 36] = 128
                    _9937 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _9937:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_9917 + 68] = this.address
                    mem[_9917 + 100] = block.timestamp + 60
                    require ext_code.size(address(_9880))
                    call address(_9880).mem[mem[64] len 4] with:
                       value _9852 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _9917 + (32 * _9937) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10398 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10418 = mem[_10398]
                    require mem[_10398] <= test266151307()
                    require _10398 + mem[_10398] + 31 < _10398 + return_data.size
                    _10438 = mem[_10398 + mem[_10398]]
                    if mem[_10398 + mem[_10398]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_10398 + mem[_10398]]) + 1 < 0 or _10398 + ceil32(return_data.size) + ceil32(32 * mem[_10398 + mem[_10398]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _10398 + ceil32(return_data.size) + ceil32(32 * mem[_10398 + mem[_10398]]) + 1
                    mem[_10398 + ceil32(return_data.size)] = _10438
                    require _10418 + (32 * _10438) + 32 <= return_data.size
                    t = _10398 + ceil32(return_data.size) + 32
                    s = _10398 + _10418 + 32
                    while s < _10398 + _10418 + (32 * _10438) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10986 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_10986]
            else:
                if 1 >= mem[_6284]:
                    revert with 0, 50
                mem[_6284 + 64] = address(_6273)
                if 60 > !block.timestamp:
                    revert with 0, 17
                _9267 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = eth.balance(this.address) / 2
                mem[mem[64] + 36] = 128
                _9281 = mem[_6284]
                mem[mem[64] + 132] = mem[_6284]
                s = 0
                t = _6284 + 32
                u = mem[64] + 164
                while s < _9281:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_9267 + 68] = this.address
                mem[_9267 + 100] = block.timestamp + 60
                require ext_code.size(address(_6271))
                call address(_6271).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _9267 + (32 * _9281) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10399 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10419 = mem[_10399]
                require mem[_10399] <= test266151307()
                require _10399 + mem[_10399] + 31 < _10399 + return_data.size
                _10439 = mem[_10399 + mem[_10399]]
                if mem[_10399 + mem[_10399]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_10399 + mem[_10399]]) + 1 < 0 or _10399 + ceil32(return_data.size) + ceil32(32 * mem[_10399 + mem[_10399]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _10399 + ceil32(return_data.size) + ceil32(32 * mem[_10399 + mem[_10399]]) + 1
                mem[_10399 + ceil32(return_data.size)] = _10439
                require _10419 + (32 * _10439) + 32 <= return_data.size
                t = _10399 + ceil32(return_data.size) + 32
                s = _10399 + _10419 + 32
                while s < _10399 + _10419 + (32 * _10439) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_6272))
                staticcall address(_6272).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10987 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11007 = mem[_10987]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_6273))
                staticcall address(_6273).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11027 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11031 = mem[_11027]
                if not _11007:
                    revert with 0, 'Desired value is zero'
                if not mem[_11027]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_6271)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_6272))
                call address(_6272).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_6271), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11059 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_11059] == bool(mem[_11059])
                mem[mem[64] + 4] = address(_6271)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_6273))
                call address(_6273).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_6271), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11075 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_11075] == bool(mem[_11075])
                if _11007 and 5 > -1 / _11007:
                    revert with 0, 17
                if 5 * _11007 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _11007 < 5000 * _11007 / 10^6:
                    revert with 0, 17
                if _11031 and 5 > -1 / _11031:
                    revert with 0, 17
                if 5 * _11031 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _11031 < 5000 * _11031 / 10^6:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _11007
                mem[mem[64] + 100] = _11031
                mem[mem[64] + 132] = _11007 - (5000 * _11007 / 10^6)
                mem[mem[64] + 164] = _11031 - (5000 * _11031 / 10^6)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_6271))
                call address(_6271).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_6272), address(_6273), _11007, _11031, _11007 - (5000 * _11007 / 10^6), _11031 - (5000 * _11031 / 10^6), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _11109 = mem[_608 + 160]
                _11110 = mem[_608 + 64]
                _11111 = mem[_608 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11111))
                staticcall address(_11111).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11127 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11131 = mem[_11127]
                if _11110 >= 999999:
                    mem[mem[64] + 4] = mem[_11127]
                    require ext_code.size(address(_11109))
                    call address(_11109).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _11131
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _11131
                    emit Earn(_11131);
                    _11168 = mem[_608 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11168))
                    staticcall address(_11168).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11192 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_608 + 96] = mem[_11192]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11240 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11248 = mem[_11240]
                    _11256 = mem[_608]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _11264 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _11248
                    mem[mem[64] + 36] = 128
                    _11272 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_11264 + 100] = block.timestamp + 60
                    require ext_code.size(address(_11256))
                    call address(_11256).mem[mem[64] len 4] with:
                       value _11248 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _11264 + (32 * _11272) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11384 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11392 = mem[_11384]
                    require mem[_11384] <= test266151307()
                    require _11384 + mem[_11384] + 31 < _11384 + return_data.size
                    _11400 = mem[_11384 + mem[_11384]]
                    if mem[_11384 + mem[_11384]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11384 + mem[_11384]]) + 1 < 0 or _11384 + ceil32(return_data.size) + ceil32(32 * mem[_11384 + mem[_11384]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11384 + ceil32(return_data.size) + ceil32(32 * mem[_11384 + mem[_11384]]) + 1
                    mem[_11384 + ceil32(return_data.size)] = _11400
                    require _11392 + (32 * _11400) + 32 <= return_data.size
                    t = _11384 + ceil32(return_data.size) + 32
                    s = _11384 + _11392 + 32
                    while s < _11384 + _11392 + (32 * _11400) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11480 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_11480]
                else:
                    mem[mem[64] + 4] = _11110
                    mem[mem[64] + 36] = _11131
                    require ext_code.size(address(_11109))
                    call address(_11109).deposit(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args _11110, _11131
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _11131
                    emit Earn(_11131);
                    _11169 = mem[_608 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11169))
                    staticcall address(_11169).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11193 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_608 + 96] = mem[_11193]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11241 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11249 = mem[_11241]
                    _11257 = mem[_608]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _11265 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _11249
                    mem[mem[64] + 36] = 128
                    _11273 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _11273:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_11265 + 68] = this.address
                    mem[_11265 + 100] = block.timestamp + 60
                    require ext_code.size(address(_11257))
                    call address(_11257).mem[mem[64] len 4] with:
                       value _11249 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _11265 + (32 * _11273) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11385 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11393 = mem[_11385]
                    require mem[_11385] <= test266151307()
                    require _11385 + mem[_11385] + 31 < _11385 + return_data.size
                    _11401 = mem[_11385 + mem[_11385]]
                    if mem[_11385 + mem[_11385]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11385 + mem[_11385]]) + 1 < 0 or _11385 + ceil32(return_data.size) + ceil32(32 * mem[_11385 + mem[_11385]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11385 + ceil32(return_data.size) + ceil32(32 * mem[_11385 + mem[_11385]]) + 1
                    mem[_11385 + ceil32(return_data.size)] = _11401
                    require _11393 + (32 * _11401) + 32 <= return_data.size
                    t = _11385 + ceil32(return_data.size) + 32
                    s = _11385 + _11393 + 32
                    while s < _11385 + _11393 + (32 * _11401) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11481 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_11481]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = _608
        s = _3009 - (5000 * _3009 / 10^6)
        s = stor9[idx].field_0
        continue 
    _609 = mem[64]
    mem[64] = mem[64] + 256
    mem[_609] = 0
    mem[_609 + 32] = 0
    mem[_609 + 64] = 0
    mem[_609 + 96] = 0
    mem[_609 + 128] = 0
    mem[_609 + 160] = 0
    mem[_609 + 192] = 0
    mem[_609 + 224] = 0
    _613 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    mem[_613 + 32 len 64] = call.data[calldata.size len 64]
    idx = 0
    s = 96
    t = 0
    u = 0
    v = 0
    v = _609
    v = 0
    v = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _1480 = mem[64]
        mem[64] = mem[64] + 256
        mem[_1480] = strategyInfo[stor9[idx].field_0].field_0
        mem[_1480 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_1480 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_1480 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_1480 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_1480 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_1480 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_1480 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1493 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1499 = mem[_1493]
            if not mem[_1493]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_1493]
                v = _1480
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1528 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1538 = mem[_1528]
            require mem[_1528] == mem[_1528 + 18 len 14]
            _1544 = mem[_1528 + 32]
            require mem[_1528 + 32] == mem[_1528 + 50 len 14]
            require mem[_1528 + 64] == mem[_1528 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1552 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1554 = mem[_1552]
            if _1499 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_1552]:
                revert with 0, 18
            if 10^12 * _1499 / mem[_1552] and Mask(112, 0, _1538) > -1 / 10^12 * _1499 / mem[_1552]:
                revert with 0, 17
            if 10^12 * _1499 / mem[_1552] and Mask(112, 0, _1544) > -1 / 10^12 * _1499 / mem[_1552]:
                revert with 0, 17
            if 1 >= mem[_613]:
                revert with 0, 50
            mem[_613 + 64] = stor21
            if 0 >= mem[_613]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[_613 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1499 / _1554 * Mask(112, 0, _1544) / 10^12
                mem[mem[64] + 36] = 64
                _1625 = mem[_613]
                mem[mem[64] + 68] = mem[_613]
                s = 0
                t = _613 + 32
                u = mem[64] + 100
                while s < _1625:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _1499 / _1554 * Mask(112, 0, _1544) / 10^12, 64, mem[mem[64] + 68 len (32 * _1625) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3023 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3029 = mem[_3023]
                require mem[_3023] <= test266151307()
                require _3023 + mem[_3023] + 31 < _3023 + return_data.size
                _3035 = mem[_3023 + mem[_3023]]
                if mem[_3023 + mem[_3023]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3023 + mem[_3023]]) + 1 < 0 or _3023 + ceil32(return_data.size) + ceil32(32 * mem[_3023 + mem[_3023]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3023 + ceil32(return_data.size) + ceil32(32 * mem[_3023 + mem[_3023]]) + 1
                mem[_3023 + ceil32(return_data.size)] = _3035
                require _3029 + (32 * _3035) + 32 <= return_data.size
                t = _3023 + ceil32(return_data.size) + 32
                s = _3023 + _3029 + 32
                while s < _3023 + _3029 + (32 * _3035) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3035:
                    revert with 0, 50
                _4599 = mem[_3023 + ceil32(return_data.size) + 64]
                if 10^12 * _1499 / _1554 * Mask(112, 0, _1538) / 10^12 > !mem[_3023 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_1480 + 128] = (10^12 * _1499 / _1554 * Mask(112, 0, _1538) / 10^12) + mem[_3023 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _1499 / _1554 * Mask(112, 0, _1538) / 10^12) + _4599):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _3023 + ceil32(return_data.size)
                t = 10^12 * _1499 / _1554 * Mask(112, 0, _1544) / 10^12
                u = 10^12 * _1499 / _1554 * Mask(112, 0, _1538) / 10^12
                v = _1499
                v = _1480
                v = stor9[idx].field_0
                v = v + (10^12 * _1499 / _1554 * Mask(112, 0, _1538) / 10^12) + _4599
                continue 
            mem[_613 + 32] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                _1622 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1499 / _1554 * Mask(112, 0, _1538) / 10^12
                mem[mem[64] + 36] = 64
                _1630 = mem[_613]
                mem[mem[64] + 68] = mem[_613]
                s = 0
                t = _613 + 32
                u = mem[64] + 100
                while s < _1630:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _1622 + (32 * _1630) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3022 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3028 = mem[_3022]
                require mem[_3022] <= test266151307()
                require _3022 + mem[_3022] + 31 < _3022 + return_data.size
                _3034 = mem[_3022 + mem[_3022]]
                if mem[_3022 + mem[_3022]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3022 + mem[_3022]]) + 1 < 0 or _3022 + ceil32(return_data.size) + ceil32(32 * mem[_3022 + mem[_3022]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3022 + ceil32(return_data.size) + ceil32(32 * mem[_3022 + mem[_3022]]) + 1
                mem[_3022 + ceil32(return_data.size)] = _3034
                require _3028 + (32 * _3034) + 32 <= return_data.size
                t = _3022 + ceil32(return_data.size) + 32
                s = _3022 + _3028 + 32
                while s < _3022 + _3028 + (32 * _3034) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3034:
                    revert with 0, 50
                _4598 = mem[_3022 + ceil32(return_data.size) + 64]
                if 10^12 * _1499 / _1554 * Mask(112, 0, _1544) / 10^12 > !mem[_3022 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_1480 + 128] = (10^12 * _1499 / _1554 * Mask(112, 0, _1544) / 10^12) + mem[_3022 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _1499 / _1554 * Mask(112, 0, _1544) / 10^12) + _4598):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _3022 + ceil32(return_data.size)
                t = 10^12 * _1499 / _1554 * Mask(112, 0, _1544) / 10^12
                u = 10^12 * _1499 / _1554 * Mask(112, 0, _1538) / 10^12
                v = _1499
                v = _1480
                v = stor9[idx].field_0
                v = v + (10^12 * _1499 / _1554 * Mask(112, 0, _1544) / 10^12) + _4598
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1631 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1635 = mem[_1631]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1671 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1686 = mem[_1671]
            if mem[_1671] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _1635:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1752 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1770 = mem[_1752]
            if 10^12 * _1686 / _1635 and mem[_1752] > -1 / 10^12 * _1686 / _1635:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1686 / _1635 * _1770 / 10^12
            mem[mem[64] + 36] = 64
            _1847 = mem[_613]
            mem[mem[64] + 68] = mem[_613]
            t = 0
            u = _613 + 32
            w = mem[64] + 100
            while t < _1847:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _1686 / _1635 * _1770 / 10^12, 64, mem[mem[64] + 68 len (32 * _1847) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3021 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3027 = mem[_3021]
            require mem[_3021] <= test266151307()
            require _3021 + mem[_3021] + 31 < _3021 + return_data.size
            _3033 = mem[_3021 + mem[_3021]]
            if mem[_3021 + mem[_3021]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3021 + mem[_3021]]) + 1 < 0 or _3021 + ceil32(return_data.size) + ceil32(32 * mem[_3021 + mem[_3021]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3021 + ceil32(return_data.size) + ceil32(32 * mem[_3021 + mem[_3021]]) + 1
            mem[_3021 + ceil32(return_data.size)] = _3033
            require _3027 + (32 * _3033) + 32 <= return_data.size
            u = _3021 + ceil32(return_data.size) + 32
            t = _3021 + _3027 + 32
            while t < _3021 + _3027 + (32 * _3033) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _3033:
                revert with 0, 50
            _4597 = mem[_3021 + ceil32(return_data.size) + 64]
            mem[_1480 + 128] = mem[_3021 + ceil32(return_data.size) + 64]
            if v > !_4597:
                revert with 0, 17
            if 0 >= mem[_613]:
                revert with 0, 50
            mem[_613 + 32] = mem[_1480 + 236 len 20]
            _4618 = mem[_1480 + 224]
            _4619 = mem[_1480]
            require ext_code.size(mem[_1480 + 236 len 20])
            staticcall mem[_1480 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4629 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4635 = mem[_4629]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_4618))
            staticcall address(_4618).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4645 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4659 = mem[_4645]
            if mem[_4645] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _4635:
                revert with 0, 18
            mem[mem[64] + 4] = address(_4619)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_4619)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4697 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4715 = mem[_4697]
            if 10^12 * _4659 / _4635 and mem[_4697] > -1 / 10^12 * _4659 / _4635:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _4659 / _4635 * _4715 / 10^12
            mem[mem[64] + 36] = 64
            _4775 = mem[_613]
            mem[mem[64] + 68] = mem[_613]
            t = 0
            u = _613 + 32
            w = mem[64] + 100
            while t < _4775:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_4619))
            staticcall address(_4619).getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _4659 / _4635 * _4715 / 10^12, 64, mem[mem[64] + 68 len (32 * _4775) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _6291 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _6301 = mem[_6291]
            require mem[_6291] <= test266151307()
            require _6291 + mem[_6291] + 31 < _6291 + return_data.size
            _6311 = mem[_6291 + mem[_6291]]
            if mem[_6291 + mem[_6291]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_6291 + mem[_6291]]) + 1 < 0 or _6291 + ceil32(return_data.size) + ceil32(32 * mem[_6291 + mem[_6291]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _6291 + ceil32(return_data.size) + ceil32(32 * mem[_6291 + mem[_6291]]) + 1
            mem[_6291 + ceil32(return_data.size)] = _6311
            require _6301 + (32 * _6311) + 32 <= return_data.size
            u = _6291 + ceil32(return_data.size) + 32
            t = _6291 + _6301 + 32
            while t < _6291 + _6301 + (32 * _6311) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _6311:
                revert with 0, 50
            if mem[_1480 + 128] > !mem[_6291 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1480 + 128] = mem[_1480 + 128] + mem[_6291 + ceil32(return_data.size) + 64]
            if v + _4597 > !mem[_1480 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _1499 / _1554 * Mask(112, 0, _1544) / 10^12
            u = 10^12 * _1499 / _1554 * Mask(112, 0, _1538) / 10^12
            v = _1499
            v = _1480
            v = stor9[idx].field_0
            v = v + _4597 + mem[_1480 + 128]
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1492 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _1498 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_1498] = mem[_1492]
        mem[_1498 + 32] = mem[_1492 + 32]
        mem[_1498 + 64] = mem[_1492 + 64]
        require return_data.size - 96 >= 96
        _1512 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_1512] = mem[_1492 + 96]
        mem[_1512 + 32] = mem[_1492 + 128]
        mem[_1512 + 64] = mem[_1492 + 160]
        mem[_1498 + 96] = _1512
        mem[_1498 + 128] = mem[_1492 + 192]
        require return_data.size - 224 >= 96
        _1524 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_1524] = mem[_1492 + 224]
        mem[_1524 + 32] = mem[_1492 + 256]
        mem[_1524 + 64] = mem[_1492 + 288]
        mem[_1498 + 160] = _1524
        _1533 = mem[_1498 + 64]
        if not mem[_1498 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            u = u
            v = mem[_1498 + 64]
            v = _1480
            v = stor9[idx].field_0
            v = v
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1548 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _1549 = mem[_1548]
        require mem[_1548] == mem[_1548 + 18 len 14]
        _1553 = mem[_1548 + 32]
        require mem[_1548 + 32] == mem[_1548 + 50 len 14]
        require mem[_1548 + 64] == mem[_1548 + 92 len 4]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1574 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1579 = mem[_1574]
        if _1533 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not mem[_1574]:
            revert with 0, 18
        if 10^12 * _1533 / mem[_1574] and Mask(112, 0, _1549) > -1 / 10^12 * _1533 / mem[_1574]:
            revert with 0, 17
        if 10^12 * _1533 / mem[_1574] and Mask(112, 0, _1553) > -1 / 10^12 * _1533 / mem[_1574]:
            revert with 0, 17
        if 1 >= mem[_613]:
            revert with 0, 50
        mem[_613 + 64] = stor21
        if 0 >= mem[_613]:
            revert with 0, 50
        if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
            mem[_613 + 32] = strategyInfo[stor9[idx].field_0].field_1792
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1533 / _1579 * Mask(112, 0, _1553) / 10^12
            mem[mem[64] + 36] = 64
            _1683 = mem[_613]
            mem[mem[64] + 68] = mem[_613]
            s = 0
            t = _613 + 32
            u = mem[64] + 100
            while s < _1683:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _1533 / _1579 * Mask(112, 0, _1553) / 10^12, 64, mem[mem[64] + 68 len (32 * _1683) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3020 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3026 = mem[_3020]
            require mem[_3020] <= test266151307()
            require _3020 + mem[_3020] + 31 < _3020 + return_data.size
            _3032 = mem[_3020 + mem[_3020]]
            if mem[_3020 + mem[_3020]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3020 + mem[_3020]]) + 1 < 0 or _3020 + ceil32(return_data.size) + ceil32(32 * mem[_3020 + mem[_3020]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3020 + ceil32(return_data.size) + ceil32(32 * mem[_3020 + mem[_3020]]) + 1
            mem[_3020 + ceil32(return_data.size)] = _3032
            require _3026 + (32 * _3032) + 32 <= return_data.size
            t = _3020 + ceil32(return_data.size) + 32
            s = _3020 + _3026 + 32
            while s < _3020 + _3026 + (32 * _3032) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3032:
                revert with 0, 50
            _4596 = mem[_3020 + ceil32(return_data.size) + 64]
            if 10^12 * _1533 / _1579 * Mask(112, 0, _1549) / 10^12 > !mem[_3020 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1480 + 128] = (10^12 * _1533 / _1579 * Mask(112, 0, _1549) / 10^12) + mem[_3020 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _1533 / _1579 * Mask(112, 0, _1549) / 10^12) + _4596):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _3020 + ceil32(return_data.size)
            t = 10^12 * _1533 / _1579 * Mask(112, 0, _1553) / 10^12
            u = 10^12 * _1533 / _1579 * Mask(112, 0, _1549) / 10^12
            v = _1533
            v = _1480
            v = stor9[idx].field_0
            v = v + (10^12 * _1533 / _1579 * Mask(112, 0, _1549) / 10^12) + _4596
            continue 
        mem[_613 + 32] = strategyInfo[stor9[idx].field_0].field_1536
        if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1533 / _1579 * Mask(112, 0, _1549) / 10^12
            mem[mem[64] + 36] = 64
            _1685 = mem[_613]
            mem[mem[64] + 68] = mem[_613]
            s = 0
            t = _613 + 32
            w = mem[64] + 100
            while s < _1685:
                mem[w] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _1533 / _1579 * Mask(112, 0, _1549) / 10^12, 64, mem[mem[64] + 68 len (32 * _1685) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3019 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3025 = mem[_3019]
            require mem[_3019] <= test266151307()
            require _3019 + mem[_3019] + 31 < _3019 + return_data.size
            _3031 = mem[_3019 + mem[_3019]]
            if mem[_3019 + mem[_3019]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3019 + mem[_3019]]) + 1 < 0 or _3019 + ceil32(return_data.size) + ceil32(32 * mem[_3019 + mem[_3019]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3019 + ceil32(return_data.size) + ceil32(32 * mem[_3019 + mem[_3019]]) + 1
            mem[_3019 + ceil32(return_data.size)] = _3031
            require _3025 + (32 * _3031) + 32 <= return_data.size
            t = _3019 + ceil32(return_data.size) + 32
            s = _3019 + _3025 + 32
            while s < _3019 + _3025 + (32 * _3031) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3031:
                revert with 0, 50
            _4595 = mem[_3019 + ceil32(return_data.size) + 64]
            if 10^12 * _1533 / _1579 * Mask(112, 0, _1553) / 10^12 > !mem[_3019 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1480 + 128] = (10^12 * _1533 / _1579 * Mask(112, 0, _1553) / 10^12) + mem[_3019 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _1533 / _1579 * Mask(112, 0, _1553) / 10^12) + _4595):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _3019 + ceil32(return_data.size)
            t = 10^12 * _1533 / _1579 * Mask(112, 0, _1553) / 10^12
            s = 10^12 * _1533 / _1579 * Mask(112, 0, _1549) / 10^12
            v = _1533
            v = _1480
            v = stor9[idx].field_0
            v = v + (10^12 * _1533 / _1579 * Mask(112, 0, _1553) / 10^12) + _4595
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1692 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1709 = mem[_1692]
        mem[mem[64] + 4] = this.address
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1725 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1735 = mem[_1725]
        if mem[_1725] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _1709:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1821 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1846 = mem[_1821]
        if 10^12 * _1735 / _1709 and mem[_1821] > -1 / 10^12 * _1735 / _1709:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _1735 / _1709 * _1846 / 10^12
        mem[mem[64] + 36] = 64
        _1896 = mem[_613]
        mem[mem[64] + 68] = mem[_613]
        t = 0
        u = _613 + 32
        w = mem[64] + 100
        while t < _1896:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _1735 / _1709 * _1846 / 10^12, 64, mem[mem[64] + 68 len (32 * _1896) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3018 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3024 = mem[_3018]
        require mem[_3018] <= test266151307()
        require _3018 + mem[_3018] + 31 < _3018 + return_data.size
        _3030 = mem[_3018 + mem[_3018]]
        if mem[_3018 + mem[_3018]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_3018 + mem[_3018]]) + 1 < 0 or _3018 + ceil32(return_data.size) + ceil32(32 * mem[_3018 + mem[_3018]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _3018 + ceil32(return_data.size) + ceil32(32 * mem[_3018 + mem[_3018]]) + 1
        mem[_3018 + ceil32(return_data.size)] = _3030
        require _3024 + (32 * _3030) + 32 <= return_data.size
        u = _3018 + ceil32(return_data.size) + 32
        t = _3018 + _3024 + 32
        while t < _3018 + _3024 + (32 * _3030) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _3030:
            revert with 0, 50
        _4594 = mem[_3018 + ceil32(return_data.size) + 64]
        mem[_1480 + 128] = mem[_3018 + ceil32(return_data.size) + 64]
        if v > !_4594:
            revert with 0, 17
        if 0 >= mem[_613]:
            revert with 0, 50
        mem[_613 + 32] = mem[_1480 + 236 len 20]
        _4616 = mem[_1480 + 224]
        _4617 = mem[_1480]
        require ext_code.size(mem[_1480 + 236 len 20])
        staticcall mem[_1480 + 236 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4628 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4634 = mem[_4628]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_4616))
        staticcall address(_4616).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4644 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4658 = mem[_4644]
        if mem[_4644] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _4634:
            revert with 0, 18
        mem[mem[64] + 4] = address(_4617)
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args address(_4617)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4696 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4714 = mem[_4696]
        if 10^12 * _4658 / _4634 and mem[_4696] > -1 / 10^12 * _4658 / _4634:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _4658 / _4634 * _4714 / 10^12
        mem[mem[64] + 36] = 64
        _4774 = mem[_613]
        mem[mem[64] + 68] = mem[_613]
        t = 0
        u = _613 + 32
        w = mem[64] + 100
        while t < _4774:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(address(_4617))
        staticcall address(_4617).getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _4658 / _4634 * _4714 / 10^12, 64, mem[mem[64] + 68 len (32 * _4774) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _6290 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _6300 = mem[_6290]
        require mem[_6290] <= test266151307()
        require _6290 + mem[_6290] + 31 < _6290 + return_data.size
        _6310 = mem[_6290 + mem[_6290]]
        if mem[_6290 + mem[_6290]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_6290 + mem[_6290]]) + 1 < 0 or _6290 + ceil32(return_data.size) + ceil32(32 * mem[_6290 + mem[_6290]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _6290 + ceil32(return_data.size) + ceil32(32 * mem[_6290 + mem[_6290]]) + 1
        mem[_6290 + ceil32(return_data.size)] = _6310
        require _6300 + (32 * _6310) + 32 <= return_data.size
        u = _6290 + ceil32(return_data.size) + 32
        t = _6290 + _6300 + 32
        while t < _6290 + _6300 + (32 * _6310) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _6310:
            revert with 0, 50
        if mem[_1480 + 128] > !mem[_6290 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        mem[_1480 + 128] = mem[_1480 + 128] + mem[_6290 + ceil32(return_data.size) + 64]
        if v + _4594 > !mem[_1480 + 128]:
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s
        t = 10^12 * _1533 / _1579 * Mask(112, 0, _1553) / 10^12
        u = 10^12 * _1533 / _1579 * Mask(112, 0, _1549) / 10^12
        v = _1533
        v = _1480
        v = stor9[idx].field_0
        v = v + _4594 + mem[_1480 + 128]
        continue 
    emit 0xf9ede3d1 
}

function deposit() payable {
    mem[96] = 2
    mem[128 len 64] = call.data[calldata.size len 64]
    mem[64] = 448
    mem[192] = 0
    mem[224] = 0
    mem[256] = 0
    mem[288] = 0
    mem[320] = 0
    mem[352] = 0
    mem[384] = 0
    mem[416] = 0
    idx = 0
    s = 192
    s = 0
    s = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _746 = mem[64]
        mem[64] = mem[64] + 256
        mem[_746] = strategyInfo[stor9[idx].field_0].field_0
        mem[_746 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_746 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_746 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_746 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_746 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_746 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_746 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _757 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _766 = mem[_757]
            if not mem[_757]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _746
                s = mem[_757]
                s = stor9[idx].field_0
                continue 
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _788 = mem[64]
            mem[64] = mem[64] + 256
            mem[_788] = strategyInfo[stor9[idx].field_0].field_0
            mem[_788 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_788 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_788 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_788 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_788 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_788 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_788 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 4] = _766
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _766
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _830 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _841 = mem[_830]
                require mem[_830] == mem[_830 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_830 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_841))
                staticcall address(_841).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _890 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _901 = mem[_890]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_841))
                staticcall address(_841).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _921 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _931 = mem[_921]
                if mem[_921] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _901:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _964 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _966 = mem[_964]
                if 10^12 * _931 / _901 and mem[_964] > -1 / 10^12 * _931 / _901:
                    revert with 0, 17
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _931 / _901 * _966 / 10^12
                mem[mem[64] + 36] = 64
                _1011 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len (32 * _1011) + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1774 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1781 = mem[_1774]
                require mem[_1774] <= test266151307()
                require _1774 + mem[_1774] + 31 < _1774 + return_data.size
                _1796 = mem[_1774 + mem[_1774]]
                if mem[_1774 + mem[_1774]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_1774 + mem[_1774]]) + 1 < 0 or _1774 + ceil32(return_data.size) + ceil32(32 * mem[_1774 + mem[_1774]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _1774 + ceil32(return_data.size) + ceil32(32 * mem[_1774 + mem[_1774]]) + 1
                mem[_1774 + ceil32(return_data.size)] = _1796
                require _1781 + (32 * _1796) + 32 <= return_data.size
                t = _1774 + ceil32(return_data.size) + 32
                s = _1774 + _1781 + 32
                while s < _1774 + _1781 + (32 * _1796) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _1796:
                    revert with 0, 50
                _3656 = mem[_1774 + ceil32(return_data.size) + 64]
                if mem[_1774 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_1774 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if 5 * mem[_1774 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if mem[_1774 + ceil32(return_data.size) + 64] < 5000 * mem[_1774 + ceil32(return_data.size) + 64] / 10^6:
                    revert with 0, 17
                _3735 = mem[_746]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_841))
                staticcall address(_841).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3767 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3783 = mem[_3767]
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _3783
                mem[mem[64] + 36] = _3656 - (5000 * _3656 / 10^6)
                mem[mem[64] + 68] = 160
                _3821 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 100] = this.address
                mem[mem[64] + 132] = block.timestamp + 60
                require ext_code.size(address(_3735))
                call address(_3735).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _3821) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5622 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5638 = mem[_5622]
                require mem[_5622] <= test266151307()
                require _5622 + mem[_5622] + 31 < _5622 + return_data.size
                _5658 = mem[_5622 + mem[_5622]]
                if mem[_5622 + mem[_5622]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_5622 + mem[_5622]]) + 1 < 0 or _5622 + ceil32(return_data.size) + ceil32(32 * mem[_5622 + mem[_5622]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _5622 + ceil32(return_data.size) + ceil32(32 * mem[_5622 + mem[_5622]]) + 1
                mem[_5622 + ceil32(return_data.size)] = _5658
                require _5638 + (32 * _5658) + 32 <= return_data.size
                t = _5622 + ceil32(return_data.size) + 32
                s = _5622 + _5638 + 32
                while s < _5622 + _5638 + (32 * _5658) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _7506 = mem[_746]
                _7507 = mem[_746 + 192]
                _7508 = mem[_746 + 224]
                _7521 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_7521 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_7521]:
                    revert with 0, 50
                mem[_7521 + 32] = stor21
                if stor21 == address(_7507):
                    if stor21 == address(_7508):
                        mem[_7521 + 100] = this.address
                        require ext_code.size(address(_7507))
                        staticcall address(_7507).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7521 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_7521 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_7508))
                        staticcall address(_7508).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7521 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            revert with 0, 'Desired value is zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'Desired value is zero'
                        mem[_7521 + (2 * ceil32(return_data.size)) + 100] = address(_7506)
                        mem[_7521 + (2 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_7507))
                        call address(_7507).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_7506), -1
                        mem[_7521 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[_7521 + (4 * ceil32(return_data.size)) + 100] = address(_7506)
                        mem[_7521 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_7508))
                        call address(_7508).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_7506), -1
                        mem[_7521 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_7521 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                        mem[_7521 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                        mem[_7521 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                        mem[_7521 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                        mem[_7521 + (6 * ceil32(return_data.size)) + 292] = this.address
                        mem[_7521 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                        require ext_code.size(address(_7506))
                        call address(_7506).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_7507), address(_7508), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                        mem[_7521 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _7521 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 96
                        _8086 = mem[_746 + 160]
                        _8087 = mem[_746 + 64]
                        _8088 = mem[_746 + 32]
                        mem[_7521 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_8088))
                        staticcall address(_8088).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7521 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _7521 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if _8087 >= 999999:
                            mem[_7521 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_8086))
                            call address(_8086).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_7521 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _8184 = mem[_746 + 32]
                            mem[_7521 + (8 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_8184))
                            staticcall address(_8184).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_7521 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_746 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_7521 + (10 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_7521 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _7521 + (11 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _8362 = mem[_746]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_7521 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_7521 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_7521 + (11 * ceil32(return_data.size)) + 132] = 128
                            mem[_7521 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _7521 + (11 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_7521 + (11 * ceil32(return_data.size)) + 164] = this.address
                            mem[_7521 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_8362))
                            call address(_8362).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                               value ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_7521 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_7521 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _7521 + (12 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _9338 = mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _7521 + (11 * ceil32(return_data.size)) + mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _7521 + (11 * ceil32(return_data.size)) + return_data.size + 96
                            _9357 = mem[_7521 + (11 * ceil32(return_data.size)) + mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_7521 + (11 * ceil32(return_data.size)) + mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_7521 + (11 * ceil32(return_data.size)) + mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _7521 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_7521 + (11 * ceil32(return_data.size)) + mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _7521 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_7521 + (11 * ceil32(return_data.size)) + mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_7521 + (12 * ceil32(return_data.size)) + 96] = mem[_7521 + (11 * ceil32(return_data.size)) + mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _9338 + (32 * _9357) + 32 <= return_data.size
                            t = _7521 + (12 * ceil32(return_data.size)) + 128
                            s = _7521 + (11 * ceil32(return_data.size)) + _9338 + 128
                            while s < _7521 + (11 * ceil32(return_data.size)) + _9338 + (32 * _9357) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10673 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_10673]
                        else:
                            mem[_7521 + (8 * ceil32(return_data.size)) + 100] = _8087
                            mem[_7521 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_8086))
                            call address(_8086).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _8087, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_7521 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _8185 = mem[_746 + 32]
                            mem[_7521 + (8 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_8185))
                            staticcall address(_8185).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_7521 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_746 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_7521 + (10 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_7521 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _7521 + (11 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _8363 = mem[_746]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_7521 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_7521 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_7521 + (11 * ceil32(return_data.size)) + 132] = 128
                            mem[_7521 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _7521 + (11 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_7521 + (11 * ceil32(return_data.size)) + 164] = this.address
                            mem[_7521 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_8363))
                            call address(_8363).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                               value ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_7521 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_7521 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _7521 + (12 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _9339 = mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _7521 + (11 * ceil32(return_data.size)) + mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _7521 + (11 * ceil32(return_data.size)) + return_data.size + 96
                            _9358 = mem[_7521 + (11 * ceil32(return_data.size)) + mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_7521 + (11 * ceil32(return_data.size)) + mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_7521 + (11 * ceil32(return_data.size)) + mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _7521 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_7521 + (11 * ceil32(return_data.size)) + mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _7521 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_7521 + (11 * ceil32(return_data.size)) + mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_7521 + (12 * ceil32(return_data.size)) + 96] = mem[_7521 + (11 * ceil32(return_data.size)) + mem[_7521 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _9339 + (32 * _9358) + 32 <= return_data.size
                            t = _7521 + (12 * ceil32(return_data.size)) + 128
                            s = _7521 + (11 * ceil32(return_data.size)) + _9339 + 128
                            while s < _7521 + (11 * ceil32(return_data.size)) + _9339 + (32 * _9358) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10674 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_10674]
                    else:
                        if 1 >= mem[_7521]:
                            revert with 0, 50
                        mem[_7521 + 64] = address(_7508)
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_7521 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_7521 + 100] = eth.balance(this.address) / 2
                        mem[_7521 + 132] = 128
                        mem[_7521 + 228] = mem[_7521]
                        s = 0
                        t = _7521 + 32
                        u = _7521 + 260
                        while s < mem[_7521]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_7521 + 164] = this.address
                        mem[_7521 + 196] = block.timestamp + 60
                        require ext_code.size(address(_7506))
                        call address(_7506).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _7521 + (32 * mem[_7521]) + -mem[64] + 256]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9319 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9340 = mem[_9319]
                        require mem[_9319] <= test266151307()
                        require _9319 + mem[_9319] + 31 < _9319 + return_data.size
                        _9359 = mem[_9319 + mem[_9319]]
                        if mem[_9319 + mem[_9319]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_9319 + mem[_9319]]) + 1 < 0 or _9319 + ceil32(return_data.size) + ceil32(32 * mem[_9319 + mem[_9319]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _9319 + ceil32(return_data.size) + ceil32(32 * mem[_9319 + mem[_9319]]) + 1
                        mem[_9319 + ceil32(return_data.size)] = _9359
                        require _9340 + (32 * _9359) + 32 <= return_data.size
                        t = _9319 + ceil32(return_data.size) + 32
                        s = _9319 + _9340 + 32
                        while s < _9319 + _9340 + (32 * _9359) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_7507))
                        staticcall address(_7507).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10675 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10694 = mem[_10675]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_7508))
                        staticcall address(_7508).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10727 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10740 = mem[_10727]
                        if not _10694:
                            revert with 0, 'Desired value is zero'
                        if not mem[_10727]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_7506)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_7507))
                        call address(_7507).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_7506), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10819 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10819] == bool(mem[_10819])
                        mem[mem[64] + 4] = address(_7506)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_7508))
                        call address(_7508).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_7506), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10863 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10863] == bool(mem[_10863])
                        if _10694 and 5 > -1 / _10694:
                            revert with 0, 17
                        if 5 * _10694 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _10694 < 5000 * _10694 / 10^6:
                            revert with 0, 17
                        if _10740 and 5 > -1 / _10740:
                            revert with 0, 17
                        if 5 * _10740 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _10740 < 5000 * _10740 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _10694
                        mem[mem[64] + 100] = _10740
                        mem[mem[64] + 132] = _10694 - (5000 * _10694 / 10^6)
                        mem[mem[64] + 164] = _10740 - (5000 * _10740 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_7506))
                        call address(_7506).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_7507), address(_7508), _10694, _10740, _10694 - (5000 * _10694 / 10^6), _10740 - (5000 * _10740 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _11022 = mem[_746 + 160]
                        _11023 = mem[_746 + 64]
                        _11024 = mem[_746 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11024))
                        staticcall address(_11024).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11058 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11066 = mem[_11058]
                        if _11023 >= 999999:
                            mem[mem[64] + 4] = mem[_11058]
                            require ext_code.size(address(_11022))
                            call address(_11022).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _11066
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _11066
                            emit Earn(_11066);
                            _11132 = mem[_746 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11132))
                            staticcall address(_11132).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11188 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_746 + 96] = mem[_11188]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11292 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11312 = mem[_11292]
                            _11340 = mem[_746]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _11378 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _11312
                            mem[mem[64] + 36] = 128
                            _11398 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _11398:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_11378 + 68] = this.address
                            mem[_11378 + 100] = block.timestamp + 60
                            require ext_code.size(address(_11340))
                            call address(_11340).mem[mem[64] len 4] with:
                               value _11312 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _11378 + (32 * _11398) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11870 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11890 = mem[_11870]
                            require mem[_11870] <= test266151307()
                            require _11870 + mem[_11870] + 31 < _11870 + return_data.size
                            _11910 = mem[_11870 + mem[_11870]]
                            if mem[_11870 + mem[_11870]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11870 + mem[_11870]]) + 1 < 0 or _11870 + ceil32(return_data.size) + ceil32(32 * mem[_11870 + mem[_11870]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11870 + ceil32(return_data.size) + ceil32(32 * mem[_11870 + mem[_11870]]) + 1
                            mem[_11870 + ceil32(return_data.size)] = _11910
                            require _11890 + (32 * _11910) + 32 <= return_data.size
                            t = _11870 + ceil32(return_data.size) + 32
                            s = _11870 + _11890 + 32
                            while s < _11870 + _11890 + (32 * _11910) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12458 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12458]
                        else:
                            mem[mem[64] + 4] = _11023
                            mem[mem[64] + 36] = _11066
                            require ext_code.size(address(_11022))
                            call address(_11022).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _11023, _11066
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _11066
                            emit Earn(_11066);
                            _11133 = mem[_746 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11133))
                            staticcall address(_11133).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11189 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_746 + 96] = mem[_11189]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11293 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11313 = mem[_11293]
                            _11341 = mem[_746]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _11379 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _11313
                            mem[mem[64] + 36] = 128
                            _11399 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_11379 + 100] = block.timestamp + 60
                            require ext_code.size(address(_11341))
                            call address(_11341).mem[mem[64] len 4] with:
                               value _11313 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _11379 + (32 * _11399) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11871 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11891 = mem[_11871]
                            require mem[_11871] <= test266151307()
                            require _11871 + mem[_11871] + 31 < _11871 + return_data.size
                            _11911 = mem[_11871 + mem[_11871]]
                            if mem[_11871 + mem[_11871]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11871 + mem[_11871]]) + 1 < 0 or _11871 + ceil32(return_data.size) + ceil32(32 * mem[_11871 + mem[_11871]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11871 + ceil32(return_data.size) + ceil32(32 * mem[_11871 + mem[_11871]]) + 1
                            mem[_11871 + ceil32(return_data.size)] = _11911
                            require _11891 + (32 * _11911) + 32 <= return_data.size
                            t = _11871 + ceil32(return_data.size) + 32
                            s = _11871 + _11891 + 32
                            while s < _11871 + _11891 + (32 * _11911) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12459 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12459]
                else:
                    if 1 >= mem[_7521]:
                        revert with 0, 50
                    mem[_7521 + 64] = address(_7507)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_7521 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_7521 + 100] = eth.balance(this.address) / 2
                    mem[_7521 + 132] = 128
                    mem[_7521 + 228] = mem[_7521]
                    s = 0
                    t = _7521 + 32
                    u = _7521 + 260
                    while s < mem[_7521]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_7521 + 164] = this.address
                    mem[_7521 + 196] = block.timestamp + 60
                    require ext_code.size(address(_7506))
                    call address(_7506).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _7521 + (32 * mem[_7521]) + -mem[64] + 256]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9320 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9341 = mem[_9320]
                    require mem[_9320] <= test266151307()
                    require _9320 + mem[_9320] + 31 < _9320 + return_data.size
                    _9360 = mem[_9320 + mem[_9320]]
                    if mem[_9320 + mem[_9320]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_9320 + mem[_9320]]) + 1 < 0 or _9320 + ceil32(return_data.size) + ceil32(32 * mem[_9320 + mem[_9320]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _9320 + ceil32(return_data.size) + ceil32(32 * mem[_9320 + mem[_9320]]) + 1
                    mem[_9320 + ceil32(return_data.size)] = _9360
                    require _9341 + (32 * _9360) + 32 <= return_data.size
                    t = _9320 + ceil32(return_data.size) + 32
                    s = _9320 + _9341 + 32
                    while s < _9320 + _9341 + (32 * _9360) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_7508):
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_7507))
                        staticcall address(_7507).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10683 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10700 = mem[_10683]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_7508))
                        staticcall address(_7508).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10733 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10746 = mem[_10733]
                        if not _10700:
                            revert with 0, 'Desired value is zero'
                        if not mem[_10733]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_7506)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_7507))
                        call address(_7507).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_7506), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10825 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10825] == bool(mem[_10825])
                        mem[mem[64] + 4] = address(_7506)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_7508))
                        call address(_7508).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_7506), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10867 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_10867] == bool(mem[_10867])
                        if _10700 and 5 > -1 / _10700:
                            revert with 0, 17
                        if 5 * _10700 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _10700 < 5000 * _10700 / 10^6:
                            revert with 0, 17
                        if _10746 and 5 > -1 / _10746:
                            revert with 0, 17
                        if 5 * _10746 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _10746 < 5000 * _10746 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _10700
                        mem[mem[64] + 100] = _10746
                        mem[mem[64] + 132] = _10700 - (5000 * _10700 / 10^6)
                        mem[mem[64] + 164] = _10746 - (5000 * _10746 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_7506))
                        call address(_7506).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_7507), address(_7508), _10700, _10746, _10700 - (5000 * _10700 / 10^6), _10746 - (5000 * _10746 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _11040 = mem[_746 + 160]
                        _11041 = mem[_746 + 64]
                        _11042 = mem[_746 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11042))
                        staticcall address(_11042).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11062 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11070 = mem[_11062]
                        if _11041 >= 999999:
                            mem[mem[64] + 4] = mem[_11062]
                            require ext_code.size(address(_11040))
                            call address(_11040).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _11070
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _11070
                            emit Earn(_11070);
                            _11160 = mem[_746 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11160))
                            staticcall address(_11160).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11196 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_746 + 96] = mem[_11196]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11302 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11326 = mem[_11302]
                            _11354 = mem[_746]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _11388 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _11326
                            mem[mem[64] + 36] = 128
                            _11408 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_11388 + 100] = block.timestamp + 60
                            require ext_code.size(address(_11354))
                            call address(_11354).mem[mem[64] len 4] with:
                               value _11326 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _11388 + (32 * _11408) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11872 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11892 = mem[_11872]
                            require mem[_11872] <= test266151307()
                            require _11872 + mem[_11872] + 31 < _11872 + return_data.size
                            _11912 = mem[_11872 + mem[_11872]]
                            if mem[_11872 + mem[_11872]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11872 + mem[_11872]]) + 1 < 0 or _11872 + ceil32(return_data.size) + ceil32(32 * mem[_11872 + mem[_11872]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11872 + ceil32(return_data.size) + ceil32(32 * mem[_11872 + mem[_11872]]) + 1
                            mem[_11872 + ceil32(return_data.size)] = _11912
                            require _11892 + (32 * _11912) + 32 <= return_data.size
                            t = _11872 + ceil32(return_data.size) + 32
                            s = _11872 + _11892 + 32
                            while s < _11872 + _11892 + (32 * _11912) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12460 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12460]
                        else:
                            mem[mem[64] + 4] = _11041
                            mem[mem[64] + 36] = _11070
                            require ext_code.size(address(_11040))
                            call address(_11040).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _11041, _11070
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _11070
                            emit Earn(_11070);
                            _11161 = mem[_746 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11161))
                            staticcall address(_11161).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11197 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_746 + 96] = mem[_11197]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11303 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11327 = mem[_11303]
                            _11355 = mem[_746]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _11389 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _11327
                            mem[mem[64] + 36] = 128
                            _11409 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_11389 + 100] = block.timestamp + 60
                            require ext_code.size(address(_11355))
                            call address(_11355).mem[mem[64] len 4] with:
                               value _11327 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _11389 + (32 * _11409) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _11873 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _11893 = mem[_11873]
                            require mem[_11873] <= test266151307()
                            require _11873 + mem[_11873] + 31 < _11873 + return_data.size
                            _11913 = mem[_11873 + mem[_11873]]
                            if mem[_11873 + mem[_11873]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_11873 + mem[_11873]]) + 1 < 0 or _11873 + ceil32(return_data.size) + ceil32(32 * mem[_11873 + mem[_11873]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _11873 + ceil32(return_data.size) + ceil32(32 * mem[_11873 + mem[_11873]]) + 1
                            mem[_11873 + ceil32(return_data.size)] = _11913
                            require _11893 + (32 * _11913) + 32 <= return_data.size
                            t = _11873 + ceil32(return_data.size) + 32
                            s = _11873 + _11893 + 32
                            while s < _11873 + _11893 + (32 * _11913) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12461 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12461]
                    else:
                        if 1 >= mem[_7521]:
                            revert with 0, 50
                        mem[_7521 + 64] = address(_7508)
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _10720 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 128
                        _10734 = mem[_7521]
                        mem[mem[64] + 132] = mem[_7521]
                        s = 0
                        t = _7521 + 32
                        u = mem[64] + 164
                        while s < _10734:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_10720 + 68] = this.address
                        mem[_10720 + 100] = block.timestamp + 60
                        require ext_code.size(address(_7506))
                        call address(_7506).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10720 + (32 * _10734) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11874 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11894 = mem[_11874]
                        require mem[_11874] <= test266151307()
                        require _11874 + mem[_11874] + 31 < _11874 + return_data.size
                        _11914 = mem[_11874 + mem[_11874]]
                        if mem[_11874 + mem[_11874]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11874 + mem[_11874]]) + 1 < 0 or _11874 + ceil32(return_data.size) + ceil32(32 * mem[_11874 + mem[_11874]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11874 + ceil32(return_data.size) + ceil32(32 * mem[_11874 + mem[_11874]]) + 1
                        mem[_11874 + ceil32(return_data.size)] = _11914
                        require _11894 + (32 * _11914) + 32 <= return_data.size
                        t = _11874 + ceil32(return_data.size) + 32
                        s = _11874 + _11894 + 32
                        while s < _11874 + _11894 + (32 * _11914) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_7507))
                        staticcall address(_7507).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12462 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12482 = mem[_12462]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_7508))
                        staticcall address(_7508).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12498 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12502 = mem[_12498]
                        if not _12482:
                            revert with 0, 'Desired value is zero'
                        if not mem[_12498]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_7506)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_7507))
                        call address(_7507).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_7506), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12530 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12530] == bool(mem[_12530])
                        mem[mem[64] + 4] = address(_7506)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_7508))
                        call address(_7508).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_7506), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12546 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_12546] == bool(mem[_12546])
                        if _12482 and 5 > -1 / _12482:
                            revert with 0, 17
                        if 5 * _12482 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _12482 < 5000 * _12482 / 10^6:
                            revert with 0, 17
                        if _12502 and 5 > -1 / _12502:
                            revert with 0, 17
                        if 5 * _12502 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _12502 < 5000 * _12502 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _12482
                        mem[mem[64] + 100] = _12502
                        mem[mem[64] + 132] = _12482 - (5000 * _12482 / 10^6)
                        mem[mem[64] + 164] = _12502 - (5000 * _12502 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_7506))
                        call address(_7506).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_7507), address(_7508), _12482, _12502, _12482 - (5000 * _12482 / 10^6), _12502 - (5000 * _12502 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _12582 = mem[_746 + 160]
                        _12583 = mem[_746 + 64]
                        _12584 = mem[_746 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12584))
                        staticcall address(_12584).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12598 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12602 = mem[_12598]
                        if _12583 >= 999999:
                            mem[mem[64] + 4] = mem[_12598]
                            require ext_code.size(address(_12582))
                            call address(_12582).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _12602
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _12602
                            emit Earn(_12602);
                            _12640 = mem[_746 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12640))
                            staticcall address(_12640).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12664 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_746 + 96] = mem[_12664]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12712 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12720 = mem[_12712]
                            _12728 = mem[_746]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _12736 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _12720
                            mem[mem[64] + 36] = 128
                            _12744 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_12736 + 100] = block.timestamp + 60
                            require ext_code.size(address(_12728))
                            call address(_12728).mem[mem[64] len 4] with:
                               value _12720 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _12736 + (32 * _12744) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12856 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12864 = mem[_12856]
                            require mem[_12856] <= test266151307()
                            require _12856 + mem[_12856] + 31 < _12856 + return_data.size
                            _12872 = mem[_12856 + mem[_12856]]
                            if mem[_12856 + mem[_12856]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_12856 + mem[_12856]]) + 1 < 0 or _12856 + ceil32(return_data.size) + ceil32(32 * mem[_12856 + mem[_12856]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _12856 + ceil32(return_data.size) + ceil32(32 * mem[_12856 + mem[_12856]]) + 1
                            mem[_12856 + ceil32(return_data.size)] = _12872
                            require _12864 + (32 * _12872) + 32 <= return_data.size
                            t = _12856 + ceil32(return_data.size) + 32
                            s = _12856 + _12864 + 32
                            while s < _12856 + _12864 + (32 * _12872) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12952 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12952]
                        else:
                            mem[mem[64] + 4] = _12583
                            mem[mem[64] + 36] = _12602
                            require ext_code.size(address(_12582))
                            call address(_12582).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _12583, _12602
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _12602
                            emit Earn(_12602);
                            _12641 = mem[_746 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12641))
                            staticcall address(_12641).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12665 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_746 + 96] = mem[_12665]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12713 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12721 = mem[_12713]
                            _12729 = mem[_746]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _12737 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _12721
                            mem[mem[64] + 36] = 128
                            _12745 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_12737 + 100] = block.timestamp + 60
                            require ext_code.size(address(_12729))
                            call address(_12729).mem[mem[64] len 4] with:
                               value _12721 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _12737 + (32 * _12745) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12857 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _12865 = mem[_12857]
                            require mem[_12857] <= test266151307()
                            require _12857 + mem[_12857] + 31 < _12857 + return_data.size
                            _12873 = mem[_12857 + mem[_12857]]
                            if mem[_12857 + mem[_12857]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_12857 + mem[_12857]]) + 1 < 0 or _12857 + ceil32(return_data.size) + ceil32(32 * mem[_12857 + mem[_12857]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _12857 + ceil32(return_data.size) + ceil32(32 * mem[_12857 + mem[_12857]]) + 1
                            mem[_12857 + ceil32(return_data.size)] = _12873
                            require _12865 + (32 * _12873) + 32 <= return_data.size
                            t = _12857 + ceil32(return_data.size) + 32
                            s = _12857 + _12865 + 32
                            while s < _12857 + _12865 + (32 * _12873) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12953 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_12953]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _746
                s = _3656 - (5000 * _3656 / 10^6)
                s = stor9[idx].field_0
                continue 
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
            mem[mem[64] + 36] = _766
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args strategyInfo[stor9[idx].field_0].field_512, _766
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _831 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _842 = mem[_831]
            require mem[_831] == mem[_831 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_831 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_842))
            staticcall address(_842).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _891 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _902 = mem[_891]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_842))
            staticcall address(_842).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _922 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _932 = mem[_922]
            if mem[_922] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _902:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _965 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _967 = mem[_965]
            if 10^12 * _932 / _902 and mem[_965] > -1 / 10^12 * _932 / _902:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _932 / _902 * _967 / 10^12
            mem[mem[64] + 36] = 64
            _1012 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len (32 * _1012) + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1775 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1782 = mem[_1775]
            require mem[_1775] <= test266151307()
            require _1775 + mem[_1775] + 31 < _1775 + return_data.size
            _1797 = mem[_1775 + mem[_1775]]
            if mem[_1775 + mem[_1775]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_1775 + mem[_1775]]) + 1 < 0 or _1775 + ceil32(return_data.size) + ceil32(32 * mem[_1775 + mem[_1775]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _1775 + ceil32(return_data.size) + ceil32(32 * mem[_1775 + mem[_1775]]) + 1
            mem[_1775 + ceil32(return_data.size)] = _1797
            require _1782 + (32 * _1797) + 32 <= return_data.size
            t = _1775 + ceil32(return_data.size) + 32
            s = _1775 + _1782 + 32
            while s < _1775 + _1782 + (32 * _1797) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _1797:
                revert with 0, 50
            _3657 = mem[_1775 + ceil32(return_data.size) + 64]
            if mem[_1775 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_1775 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if 5 * mem[_1775 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 0, 17
            if mem[_1775 + ceil32(return_data.size) + 64] < 5000 * mem[_1775 + ceil32(return_data.size) + 64] / 10^6:
                revert with 0, 17
            _3736 = mem[_746]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_842))
            staticcall address(_842).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3768 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3784 = mem[_3768]
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _3784
            mem[mem[64] + 36] = _3657 - (5000 * _3657 / 10^6)
            mem[mem[64] + 68] = 160
            _3822 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[mem[64] + 100] = this.address
            mem[mem[64] + 132] = block.timestamp + 60
            require ext_code.size(address(_3736))
            call address(_3736).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _3822) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5623 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5639 = mem[_5623]
            require mem[_5623] <= test266151307()
            require _5623 + mem[_5623] + 31 < _5623 + return_data.size
            _5659 = mem[_5623 + mem[_5623]]
            if mem[_5623 + mem[_5623]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5623 + mem[_5623]]) + 1 < 0 or _5623 + ceil32(return_data.size) + ceil32(32 * mem[_5623 + mem[_5623]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5623 + ceil32(return_data.size) + ceil32(32 * mem[_5623 + mem[_5623]]) + 1
            mem[_5623 + ceil32(return_data.size)] = _5659
            require _5639 + (32 * _5659) + 32 <= return_data.size
            t = _5623 + ceil32(return_data.size) + 32
            s = _5623 + _5639 + 32
            while s < _5623 + _5639 + (32 * _5659) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _7509 = mem[_746]
            _7510 = mem[_746 + 192]
            _7511 = mem[_746 + 224]
            _7523 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_7523 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_7523]:
                revert with 0, 50
            mem[_7523 + 32] = stor21
            if stor21 == address(_7510):
                if stor21 == address(_7511):
                    mem[_7523 + 100] = this.address
                    require ext_code.size(address(_7510))
                    staticcall address(_7510).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_7523 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_7523 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(address(_7511))
                    staticcall address(_7511).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_7523 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    mem[_7523 + (2 * ceil32(return_data.size)) + 100] = address(_7509)
                    mem[_7523 + (2 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_7510))
                    call address(_7510).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7509), -1
                    mem[_7523 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[_7523 + (4 * ceil32(return_data.size)) + 100] = address(_7509)
                    mem[_7523 + (4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_7511))
                    call address(_7511).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7509), -1
                    mem[_7523 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                        revert with 0, 17
                    if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_7523 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                    mem[_7523 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                    mem[_7523 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                    mem[_7523 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                    mem[_7523 + (6 * ceil32(return_data.size)) + 292] = this.address
                    mem[_7523 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                    require ext_code.size(address(_7509))
                    call address(_7509).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_7510), address(_7511), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                    mem[_7523 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _7523 + (7 * ceil32(return_data.size)) + 96
                    require return_data.size >= 96
                    _8089 = mem[_746 + 160]
                    _8090 = mem[_746 + 64]
                    _8091 = mem[_746 + 32]
                    mem[_7523 + (7 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_8091))
                    staticcall address(_8091).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_7523 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _7523 + (8 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if _8090 >= 999999:
                        mem[_7523 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_8089))
                        call address(_8089).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7523 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _8186 = mem[_746 + 32]
                        mem[_7523 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_8186))
                        staticcall address(_8186).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7523 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_746 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_7523 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7523 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _7523 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _8370 = mem[_746]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_7523 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_7523 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_7523 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_7523 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _7523 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_7523 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_7523 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_8370))
                        call address(_8370).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_7523 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7523 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _7523 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _9342 = mem[_7523 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_7523 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _7523 + (11 * ceil32(return_data.size)) + mem[_7523 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _7523 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _9361 = mem[_7523 + (11 * ceil32(return_data.size)) + mem[_7523 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_7523 + (11 * ceil32(return_data.size)) + mem[_7523 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_7523 + (11 * ceil32(return_data.size)) + mem[_7523 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _7523 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_7523 + (11 * ceil32(return_data.size)) + mem[_7523 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _7523 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_7523 + (11 * ceil32(return_data.size)) + mem[_7523 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_7523 + (12 * ceil32(return_data.size)) + 96] = _9361
                        require _9342 + (32 * _9361) + 32 <= return_data.size
                        t = _7523 + (12 * ceil32(return_data.size)) + 128
                        s = _7523 + (11 * ceil32(return_data.size)) + _9342 + 128
                        while s < _7523 + (11 * ceil32(return_data.size)) + _9342 + (32 * _9361) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10676 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10676]
                    else:
                        mem[_7523 + (8 * ceil32(return_data.size)) + 100] = _8090
                        mem[_7523 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_8089))
                        call address(_8089).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _8090, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7523 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _8187 = mem[_746 + 32]
                        mem[_7523 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_8187))
                        staticcall address(_8187).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7523 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_746 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_7523 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7523 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _7523 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _8371 = mem[_746]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_7523 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_7523 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_7523 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_7523 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _7523 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_7523 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_7523 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_8371))
                        call address(_8371).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_7523 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7523 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _7523 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _9343 = mem[_7523 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_7523 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _7523 + (11 * ceil32(return_data.size)) + mem[_7523 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _7523 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _9362 = mem[_7523 + (11 * ceil32(return_data.size)) + mem[_7523 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_7523 + (11 * ceil32(return_data.size)) + mem[_7523 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_7523 + (11 * ceil32(return_data.size)) + mem[_7523 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _7523 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_7523 + (11 * ceil32(return_data.size)) + mem[_7523 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _7523 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_7523 + (11 * ceil32(return_data.size)) + mem[_7523 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_7523 + (12 * ceil32(return_data.size)) + 96] = _9362
                        require _9343 + (32 * _9362) + 32 <= return_data.size
                        t = _7523 + (12 * ceil32(return_data.size)) + 128
                        s = _7523 + (11 * ceil32(return_data.size)) + _9343 + 128
                        while s < _7523 + (11 * ceil32(return_data.size)) + _9343 + (32 * _9362) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10677 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10677]
                else:
                    if 1 >= mem[_7523]:
                        revert with 0, 50
                    mem[_7523 + 64] = address(_7511)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_7523 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_7523 + 100] = eth.balance(this.address) / 2
                    mem[_7523 + 132] = 128
                    mem[_7523 + 228] = mem[_7523]
                    s = 0
                    t = _7523 + 32
                    u = _7523 + 260
                    while s < mem[_7523]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_7523 + 164] = this.address
                    mem[_7523 + 196] = block.timestamp + 60
                    require ext_code.size(address(_7509))
                    call address(_7509).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _7523 + (32 * mem[_7523]) + -mem[64] + 256]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9323 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9344 = mem[_9323]
                    require mem[_9323] <= test266151307()
                    require _9323 + mem[_9323] + 31 < _9323 + return_data.size
                    _9363 = mem[_9323 + mem[_9323]]
                    if mem[_9323 + mem[_9323]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_9323 + mem[_9323]]) + 1 < 0 or _9323 + ceil32(return_data.size) + ceil32(32 * mem[_9323 + mem[_9323]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _9323 + ceil32(return_data.size) + ceil32(32 * mem[_9323 + mem[_9323]]) + 1
                    mem[_9323 + ceil32(return_data.size)] = _9363
                    require _9344 + (32 * _9363) + 32 <= return_data.size
                    t = _9323 + ceil32(return_data.size) + 32
                    s = _9323 + _9344 + 32
                    while s < _9323 + _9344 + (32 * _9363) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_7510))
                    staticcall address(_7510).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10678 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10697 = mem[_10678]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_7511))
                    staticcall address(_7511).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10728 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10741 = mem[_10728]
                    if not _10697:
                        revert with 0, 'Desired value is zero'
                    if not mem[_10728]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_7509)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7510))
                    call address(_7510).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7509), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10820 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10820] == bool(mem[_10820])
                    mem[mem[64] + 4] = address(_7509)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7511))
                    call address(_7511).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7509), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10864 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10864] == bool(mem[_10864])
                    if _10697 and 5 > -1 / _10697:
                        revert with 0, 17
                    if 5 * _10697 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _10697 < 5000 * _10697 / 10^6:
                        revert with 0, 17
                    if _10741 and 5 > -1 / _10741:
                        revert with 0, 17
                    if 5 * _10741 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _10741 < 5000 * _10741 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _10697
                    mem[mem[64] + 100] = _10741
                    mem[mem[64] + 132] = _10697 - (5000 * _10697 / 10^6)
                    mem[mem[64] + 164] = _10741 - (5000 * _10741 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_7509))
                    call address(_7509).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_7510), address(_7511), _10697, _10741, _10697 - (5000 * _10697 / 10^6), _10741 - (5000 * _10741 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11025 = mem[_746 + 160]
                    _11026 = mem[_746 + 64]
                    _11027 = mem[_746 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11027))
                    staticcall address(_11027).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11059 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11067 = mem[_11059]
                    if _11026 >= 999999:
                        mem[mem[64] + 4] = mem[_11059]
                        require ext_code.size(address(_11025))
                        call address(_11025).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _11067
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11067
                        emit Earn(_11067);
                        _11138 = mem[_746 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11138))
                        staticcall address(_11138).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11190 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_746 + 96] = mem[_11190]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11294 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11314 = mem[_11294]
                        _11342 = mem[_746]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11381 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11314
                        mem[mem[64] + 36] = 128
                        _11401 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _11401:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_11381 + 68] = this.address
                        mem[_11381 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11342))
                        call address(_11342).mem[mem[64] len 4] with:
                           value _11314 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11381 + (32 * _11401) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11875 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11895 = mem[_11875]
                        require mem[_11875] <= test266151307()
                        require _11875 + mem[_11875] + 31 < _11875 + return_data.size
                        _11915 = mem[_11875 + mem[_11875]]
                        if mem[_11875 + mem[_11875]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11875 + mem[_11875]]) + 1 < 0 or _11875 + ceil32(return_data.size) + ceil32(32 * mem[_11875 + mem[_11875]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11875 + ceil32(return_data.size) + ceil32(32 * mem[_11875 + mem[_11875]]) + 1
                        mem[_11875 + ceil32(return_data.size)] = _11915
                        require _11895 + (32 * _11915) + 32 <= return_data.size
                        t = _11875 + ceil32(return_data.size) + 32
                        s = _11875 + _11895 + 32
                        while s < _11875 + _11895 + (32 * _11915) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12463 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12463]
                    else:
                        mem[mem[64] + 4] = _11026
                        mem[mem[64] + 36] = _11067
                        require ext_code.size(address(_11025))
                        call address(_11025).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _11026, _11067
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11067
                        emit Earn(_11067);
                        _11139 = mem[_746 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11139))
                        staticcall address(_11139).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11191 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_746 + 96] = mem[_11191]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11295 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11315 = mem[_11295]
                        _11343 = mem[_746]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11382 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11315
                        mem[mem[64] + 36] = 128
                        _11402 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_11382 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11343))
                        call address(_11343).mem[mem[64] len 4] with:
                           value _11315 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11382 + (32 * _11402) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11876 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11896 = mem[_11876]
                        require mem[_11876] <= test266151307()
                        require _11876 + mem[_11876] + 31 < _11876 + return_data.size
                        _11916 = mem[_11876 + mem[_11876]]
                        if mem[_11876 + mem[_11876]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11876 + mem[_11876]]) + 1 < 0 or _11876 + ceil32(return_data.size) + ceil32(32 * mem[_11876 + mem[_11876]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11876 + ceil32(return_data.size) + ceil32(32 * mem[_11876 + mem[_11876]]) + 1
                        mem[_11876 + ceil32(return_data.size)] = _11916
                        require _11896 + (32 * _11916) + 32 <= return_data.size
                        t = _11876 + ceil32(return_data.size) + 32
                        s = _11876 + _11896 + 32
                        while s < _11876 + _11896 + (32 * _11916) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12464 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12464]
            else:
                if 1 >= mem[_7523]:
                    revert with 0, 50
                mem[_7523 + 64] = address(_7510)
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[_7523 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[_7523 + 100] = eth.balance(this.address) / 2
                mem[_7523 + 132] = 128
                mem[_7523 + 228] = mem[_7523]
                s = 0
                t = _7523 + 32
                u = _7523 + 260
                while s < mem[_7523]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_7523 + 164] = this.address
                mem[_7523 + 196] = block.timestamp + 60
                require ext_code.size(address(_7509))
                call address(_7509).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _7523 + (32 * mem[_7523]) + -mem[64] + 256]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9324 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9345 = mem[_9324]
                require mem[_9324] <= test266151307()
                require _9324 + mem[_9324] + 31 < _9324 + return_data.size
                _9364 = mem[_9324 + mem[_9324]]
                if mem[_9324 + mem[_9324]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_9324 + mem[_9324]]) + 1 < 0 or _9324 + ceil32(return_data.size) + ceil32(32 * mem[_9324 + mem[_9324]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _9324 + ceil32(return_data.size) + ceil32(32 * mem[_9324 + mem[_9324]]) + 1
                mem[_9324 + ceil32(return_data.size)] = _9364
                require _9345 + (32 * _9364) + 32 <= return_data.size
                t = _9324 + ceil32(return_data.size) + 32
                s = _9324 + _9345 + 32
                while s < _9324 + _9345 + (32 * _9364) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_7511):
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_7510))
                    staticcall address(_7510).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10684 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10701 = mem[_10684]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_7511))
                    staticcall address(_7511).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10735 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10748 = mem[_10735]
                    if not _10701:
                        revert with 0, 'Desired value is zero'
                    if not mem[_10735]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_7509)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7510))
                    call address(_7510).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7509), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10827 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10827] == bool(mem[_10827])
                    mem[mem[64] + 4] = address(_7509)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7511))
                    call address(_7511).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7509), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10868 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10868] == bool(mem[_10868])
                    if _10701 and 5 > -1 / _10701:
                        revert with 0, 17
                    if 5 * _10701 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _10701 < 5000 * _10701 / 10^6:
                        revert with 0, 17
                    if _10748 and 5 > -1 / _10748:
                        revert with 0, 17
                    if 5 * _10748 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _10748 < 5000 * _10748 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _10701
                    mem[mem[64] + 100] = _10748
                    mem[mem[64] + 132] = _10701 - (5000 * _10701 / 10^6)
                    mem[mem[64] + 164] = _10748 - (5000 * _10748 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_7509))
                    call address(_7509).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_7510), address(_7511), _10701, _10748, _10701 - (5000 * _10701 / 10^6), _10748 - (5000 * _10748 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11045 = mem[_746 + 160]
                    _11046 = mem[_746 + 64]
                    _11047 = mem[_746 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11047))
                    staticcall address(_11047).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11063 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11071 = mem[_11063]
                    if _11046 >= 999999:
                        mem[mem[64] + 4] = mem[_11063]
                        require ext_code.size(address(_11045))
                        call address(_11045).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _11071
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11071
                        emit Earn(_11071);
                        _11166 = mem[_746 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11166))
                        staticcall address(_11166).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11198 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_746 + 96] = mem[_11198]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11305 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11331 = mem[_11305]
                        _11359 = mem[_746]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11390 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11331
                        mem[mem[64] + 36] = 128
                        _11410 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_11390 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11359))
                        call address(_11359).mem[mem[64] len 4] with:
                           value _11331 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11390 + (32 * _11410) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11877 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11897 = mem[_11877]
                        require mem[_11877] <= test266151307()
                        require _11877 + mem[_11877] + 31 < _11877 + return_data.size
                        _11917 = mem[_11877 + mem[_11877]]
                        if mem[_11877 + mem[_11877]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11877 + mem[_11877]]) + 1 < 0 or _11877 + ceil32(return_data.size) + ceil32(32 * mem[_11877 + mem[_11877]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11877 + ceil32(return_data.size) + ceil32(32 * mem[_11877 + mem[_11877]]) + 1
                        mem[_11877 + ceil32(return_data.size)] = _11917
                        require _11897 + (32 * _11917) + 32 <= return_data.size
                        t = _11877 + ceil32(return_data.size) + 32
                        s = _11877 + _11897 + 32
                        while s < _11877 + _11897 + (32 * _11917) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12465 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12465]
                    else:
                        mem[mem[64] + 4] = _11046
                        mem[mem[64] + 36] = _11071
                        require ext_code.size(address(_11045))
                        call address(_11045).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _11046, _11071
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11071
                        emit Earn(_11071);
                        _11167 = mem[_746 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11167))
                        staticcall address(_11167).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11199 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_746 + 96] = mem[_11199]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11306 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11332 = mem[_11306]
                        _11360 = mem[_746]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11391 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11332
                        mem[mem[64] + 36] = 128
                        _11411 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_11391 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11360))
                        call address(_11360).mem[mem[64] len 4] with:
                           value _11332 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11391 + (32 * _11411) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11878 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11898 = mem[_11878]
                        require mem[_11878] <= test266151307()
                        require _11878 + mem[_11878] + 31 < _11878 + return_data.size
                        _11918 = mem[_11878 + mem[_11878]]
                        if mem[_11878 + mem[_11878]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11878 + mem[_11878]]) + 1 < 0 or _11878 + ceil32(return_data.size) + ceil32(32 * mem[_11878 + mem[_11878]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11878 + ceil32(return_data.size) + ceil32(32 * mem[_11878 + mem[_11878]]) + 1
                        mem[_11878 + ceil32(return_data.size)] = _11918
                        require _11898 + (32 * _11918) + 32 <= return_data.size
                        t = _11878 + ceil32(return_data.size) + 32
                        s = _11878 + _11898 + 32
                        while s < _11878 + _11898 + (32 * _11918) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12466 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12466]
                else:
                    if 1 >= mem[_7523]:
                        revert with 0, 50
                    mem[_7523 + 64] = address(_7511)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 128
                    _10736 = mem[_7523]
                    mem[mem[64] + 132] = mem[_7523]
                    s = 0
                    t = _7523 + 32
                    u = mem[64] + 164
                    while s < _10736:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_7509))
                    call address(_7509).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args Mask(255, 1, eth.balance(this.address)), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _10736) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11879 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11899 = mem[_11879]
                    require mem[_11879] <= test266151307()
                    require _11879 + mem[_11879] + 31 < _11879 + return_data.size
                    _11919 = mem[_11879 + mem[_11879]]
                    if mem[_11879 + mem[_11879]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11879 + mem[_11879]]) + 1 < 0 or _11879 + ceil32(return_data.size) + ceil32(32 * mem[_11879 + mem[_11879]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11879 + ceil32(return_data.size) + ceil32(32 * mem[_11879 + mem[_11879]]) + 1
                    mem[_11879 + ceil32(return_data.size)] = _11919
                    require _11899 + (32 * _11919) + 32 <= return_data.size
                    t = _11879 + ceil32(return_data.size) + 32
                    s = _11879 + _11899 + 32
                    while s < _11879 + _11899 + (32 * _11919) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_7510))
                    staticcall address(_7510).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12467 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12487 = mem[_12467]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_7511))
                    staticcall address(_7511).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12499 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12503 = mem[_12499]
                    if not _12487:
                        revert with 0, 'Desired value is zero'
                    if not mem[_12499]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_7509)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7510))
                    call address(_7510).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7509), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12531 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12531] == bool(mem[_12531])
                    mem[mem[64] + 4] = address(_7509)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7511))
                    call address(_7511).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7509), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12547 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12547] == bool(mem[_12547])
                    if _12487 and 5 > -1 / _12487:
                        revert with 0, 17
                    if 5 * _12487 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _12487 < 5000 * _12487 / 10^6:
                        revert with 0, 17
                    if _12503 and 5 > -1 / _12503:
                        revert with 0, 17
                    if 5 * _12503 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _12503 < 5000 * _12503 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _12487
                    mem[mem[64] + 100] = _12503
                    mem[mem[64] + 132] = _12487 - (5000 * _12487 / 10^6)
                    mem[mem[64] + 164] = _12503 - (5000 * _12503 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_7509))
                    call address(_7509).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_7510), address(_7511), _12487, _12503, _12487 - (5000 * _12487 / 10^6), _12503 - (5000 * _12503 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _12585 = mem[_746 + 160]
                    _12586 = mem[_746 + 64]
                    _12587 = mem[_746 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12587))
                    staticcall address(_12587).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12599 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12603 = mem[_12599]
                    if _12586 >= 999999:
                        mem[mem[64] + 4] = mem[_12599]
                        require ext_code.size(address(_12585))
                        call address(_12585).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _12603
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _12603
                        emit Earn(_12603);
                        _12642 = mem[_746 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12642))
                        staticcall address(_12642).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12666 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_746 + 96] = mem[_12666]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12714 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12722 = mem[_12714]
                        _12730 = mem[_746]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _12738 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12722
                        mem[mem[64] + 36] = 128
                        _12746 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_12738 + 100] = block.timestamp + 60
                        require ext_code.size(address(_12730))
                        call address(_12730).mem[mem[64] len 4] with:
                           value _12722 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _12738 + (32 * _12746) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12858 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12866 = mem[_12858]
                        require mem[_12858] <= test266151307()
                        require _12858 + mem[_12858] + 31 < _12858 + return_data.size
                        _12874 = mem[_12858 + mem[_12858]]
                        if mem[_12858 + mem[_12858]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12858 + mem[_12858]]) + 1 < 0 or _12858 + ceil32(return_data.size) + ceil32(32 * mem[_12858 + mem[_12858]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12858 + ceil32(return_data.size) + ceil32(32 * mem[_12858 + mem[_12858]]) + 1
                        mem[_12858 + ceil32(return_data.size)] = _12874
                        require _12866 + (32 * _12874) + 32 <= return_data.size
                        t = _12858 + ceil32(return_data.size) + 32
                        s = _12858 + _12866 + 32
                        while s < _12858 + _12866 + (32 * _12874) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12954 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12954]
                    else:
                        mem[mem[64] + 4] = _12586
                        mem[mem[64] + 36] = _12603
                        require ext_code.size(address(_12585))
                        call address(_12585).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _12586, _12603
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _12603
                        emit Earn(_12603);
                        _12643 = mem[_746 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12643))
                        staticcall address(_12643).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12667 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_746 + 96] = mem[_12667]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12715 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12723 = mem[_12715]
                        _12731 = mem[_746]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _12739 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12723
                        mem[mem[64] + 36] = 128
                        _12747 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_12739 + 100] = block.timestamp + 60
                        require ext_code.size(address(_12731))
                        call address(_12731).mem[mem[64] len 4] with:
                           value _12723 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _12739 + (32 * _12747) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12859 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12867 = mem[_12859]
                        require mem[_12859] <= test266151307()
                        require _12859 + mem[_12859] + 31 < _12859 + return_data.size
                        _12875 = mem[_12859 + mem[_12859]]
                        if mem[_12859 + mem[_12859]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12859 + mem[_12859]]) + 1 < 0 or _12859 + ceil32(return_data.size) + ceil32(32 * mem[_12859 + mem[_12859]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12859 + ceil32(return_data.size) + ceil32(32 * mem[_12859 + mem[_12859]]) + 1
                        mem[_12859 + ceil32(return_data.size)] = _12875
                        require _12867 + (32 * _12875) + 32 <= return_data.size
                        t = _12859 + ceil32(return_data.size) + 32
                        s = _12859 + _12867 + 32
                        while s < _12859 + _12867 + (32 * _12875) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12955 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12955]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _746
            s = _3657 - (5000 * _3657 / 10^6)
            s = stor9[idx].field_0
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _756 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _765 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_765] = mem[_756]
        mem[_765 + 32] = mem[_756 + 32]
        mem[_765 + 64] = mem[_756 + 64]
        require return_data.size - 96 >= 96
        _779 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_779] = mem[_756 + 96]
        mem[_779 + 32] = mem[_756 + 128]
        mem[_779 + 64] = mem[_756 + 160]
        mem[_765 + 96] = _779
        mem[_765 + 128] = mem[_756 + 192]
        require return_data.size - 224 >= 96
        _799 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_799] = mem[_756 + 224]
        mem[_799 + 32] = mem[_756 + 256]
        mem[_799 + 64] = mem[_756 + 288]
        mem[_765 + 160] = _799
        _813 = mem[_765 + 64]
        if not mem[_765 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _746
            s = mem[_765 + 64]
            s = stor9[idx].field_0
            continue 
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _833 = mem[64]
        mem[64] = mem[64] + 256
        mem[_833] = strategyInfo[stor9[idx].field_0].field_0
        mem[_833 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_833 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_833 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_833 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_833 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_833 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_833 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 4] = _813
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                 gas gas_remaining wei
                args _813
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _872 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _878 = mem[_872]
            require mem[_872] == mem[_872 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_872 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_878))
            staticcall address(_878).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _933 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _939 = mem[_933]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_878))
            staticcall address(_878).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _952 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _960 = mem[_952]
            if mem[_952] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _939:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _995 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1009 = mem[_995]
            if 10^12 * _960 / _939 and mem[_995] > -1 / 10^12 * _960 / _939:
                revert with 0, 17
            _1055 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _960 / _939 * _1009 / 10^12
            mem[mem[64] + 36] = 64
            _1073 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < _1073:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _1055 + (32 * _1073) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1772 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1779 = mem[_1772]
            require mem[_1772] <= test266151307()
            require _1772 + mem[_1772] + 31 < _1772 + return_data.size
            _1794 = mem[_1772 + mem[_1772]]
            if mem[_1772 + mem[_1772]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_1772 + mem[_1772]]) + 1 < 0 or _1772 + ceil32(return_data.size) + ceil32(32 * mem[_1772 + mem[_1772]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _1772 + ceil32(return_data.size) + ceil32(32 * mem[_1772 + mem[_1772]]) + 1
            mem[_1772 + ceil32(return_data.size)] = _1794
            require _1779 + (32 * _1794) + 32 <= return_data.size
            t = _1772 + ceil32(return_data.size) + 32
            s = _1772 + _1779 + 32
            while s < _1772 + _1779 + (32 * _1794) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _1794:
                revert with 0, 50
            _3654 = mem[_1772 + ceil32(return_data.size) + 64]
            if mem[_1772 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_1772 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if 5 * mem[_1772 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 0, 17
            if mem[_1772 + ceil32(return_data.size) + 64] < 5000 * mem[_1772 + ceil32(return_data.size) + 64] / 10^6:
                revert with 0, 17
            _3733 = mem[_746]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_878))
            staticcall address(_878).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3765 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3781 = mem[_3765]
            if 60 > !block.timestamp:
                revert with 0, 17
            _3810 = mem[64]
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _3781
            mem[mem[64] + 36] = _3654 - (5000 * _3654 / 10^6)
            mem[mem[64] + 68] = 160
            _3819 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < _3819:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_3810 + 100] = this.address
            mem[_3810 + 132] = block.timestamp + 60
            require ext_code.size(address(_3733))
            call address(_3733).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _3810 + (32 * _3819) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5620 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5636 = mem[_5620]
            require mem[_5620] <= test266151307()
            require _5620 + mem[_5620] + 31 < _5620 + return_data.size
            _5656 = mem[_5620 + mem[_5620]]
            if mem[_5620 + mem[_5620]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5620 + mem[_5620]]) + 1 < 0 or _5620 + ceil32(return_data.size) + ceil32(32 * mem[_5620 + mem[_5620]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5620 + ceil32(return_data.size) + ceil32(32 * mem[_5620 + mem[_5620]]) + 1
            mem[_5620 + ceil32(return_data.size)] = _5656
            require _5636 + (32 * _5656) + 32 <= return_data.size
            t = _5620 + ceil32(return_data.size) + 32
            s = _5620 + _5636 + 32
            while s < _5620 + _5636 + (32 * _5656) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _7500 = mem[_746]
            _7501 = mem[_746 + 192]
            _7502 = mem[_746 + 224]
            _7517 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_7517 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_7517]:
                revert with 0, 50
            mem[_7517 + 32] = stor21
            if stor21 == address(_7501):
                if stor21 == address(_7502):
                    mem[_7517 + 100] = this.address
                    require ext_code.size(address(_7501))
                    staticcall address(_7501).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_7517 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_7517 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(address(_7502))
                    staticcall address(_7502).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_7517 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    mem[_7517 + (2 * ceil32(return_data.size)) + 100] = address(_7500)
                    mem[_7517 + (2 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_7501))
                    call address(_7501).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7500), -1
                    mem[_7517 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[_7517 + (4 * ceil32(return_data.size)) + 100] = address(_7500)
                    mem[_7517 + (4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_7502))
                    call address(_7502).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7500), -1
                    mem[_7517 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                        revert with 0, 17
                    if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_7517 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                    mem[_7517 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                    mem[_7517 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                    mem[_7517 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                    mem[_7517 + (6 * ceil32(return_data.size)) + 292] = this.address
                    mem[_7517 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                    require ext_code.size(address(_7500))
                    call address(_7500).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_7501), address(_7502), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                    mem[_7517 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _7517 + (7 * ceil32(return_data.size)) + 96
                    require return_data.size >= 96
                    _8080 = mem[_746 + 160]
                    _8081 = mem[_746 + 64]
                    _8082 = mem[_746 + 32]
                    mem[_7517 + (7 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_8082))
                    staticcall address(_8082).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_7517 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _7517 + (8 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if _8081 >= 999999:
                        mem[_7517 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_8080))
                        call address(_8080).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7517 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _8180 = mem[_746 + 32]
                        mem[_7517 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_8180))
                        staticcall address(_8180).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7517 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_746 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_7517 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7517 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _7517 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _8346 = mem[_746]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_7517 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_7517 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_7517 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_7517 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _7517 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_7517 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_7517 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_8346))
                        call address(_8346).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_7517 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7517 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _7517 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _9330 = mem[_7517 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_7517 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _7517 + (11 * ceil32(return_data.size)) + mem[_7517 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _7517 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _9349 = mem[_7517 + (11 * ceil32(return_data.size)) + mem[_7517 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_7517 + (11 * ceil32(return_data.size)) + mem[_7517 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_7517 + (11 * ceil32(return_data.size)) + mem[_7517 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _7517 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_7517 + (11 * ceil32(return_data.size)) + mem[_7517 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _7517 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_7517 + (11 * ceil32(return_data.size)) + mem[_7517 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_7517 + (12 * ceil32(return_data.size)) + 96] = _9349
                        require _9330 + (32 * _9349) + 32 <= return_data.size
                        t = _7517 + (12 * ceil32(return_data.size)) + 128
                        s = _7517 + (11 * ceil32(return_data.size)) + _9330 + 128
                        while s < _7517 + (11 * ceil32(return_data.size)) + _9330 + (32 * _9349) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10667 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10667]
                    else:
                        mem[_7517 + (8 * ceil32(return_data.size)) + 100] = _8081
                        mem[_7517 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_8080))
                        call address(_8080).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _8081, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7517 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _8181 = mem[_746 + 32]
                        mem[_7517 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_8181))
                        staticcall address(_8181).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7517 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_746 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_7517 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_7517 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _7517 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _8347 = mem[_746]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_7517 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_7517 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_7517 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_7517 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _7517 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_7517 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_7517 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_8347))
                        call address(_8347).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_7517 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_7517 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _7517 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _9331 = mem[_7517 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_7517 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _7517 + (11 * ceil32(return_data.size)) + mem[_7517 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _7517 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _9350 = mem[_7517 + (11 * ceil32(return_data.size)) + mem[_7517 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_7517 + (11 * ceil32(return_data.size)) + mem[_7517 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_7517 + (11 * ceil32(return_data.size)) + mem[_7517 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _7517 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_7517 + (11 * ceil32(return_data.size)) + mem[_7517 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _7517 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_7517 + (11 * ceil32(return_data.size)) + mem[_7517 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_7517 + (12 * ceil32(return_data.size)) + 96] = _9350
                        require _9331 + (32 * _9350) + 32 <= return_data.size
                        t = _7517 + (12 * ceil32(return_data.size)) + 128
                        s = _7517 + (11 * ceil32(return_data.size)) + _9331 + 128
                        while s < _7517 + (11 * ceil32(return_data.size)) + _9331 + (32 * _9350) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10668 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_10668]
                else:
                    if 1 >= mem[_7517]:
                        revert with 0, 50
                    mem[_7517 + 64] = address(_7502)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_7517 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_7517 + 100] = eth.balance(this.address) / 2
                    mem[_7517 + 132] = 128
                    mem[_7517 + 228] = mem[_7517]
                    s = 0
                    t = _7517 + 32
                    u = _7517 + 260
                    while s < mem[_7517]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_7517 + 164] = this.address
                    mem[_7517 + 196] = block.timestamp + 60
                    require ext_code.size(address(_7500))
                    call address(_7500).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _7517 + (32 * mem[_7517]) + -mem[64] + 256]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9311 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _9332 = mem[_9311]
                    require mem[_9311] <= test266151307()
                    require _9311 + mem[_9311] + 31 < _9311 + return_data.size
                    _9351 = mem[_9311 + mem[_9311]]
                    if mem[_9311 + mem[_9311]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_9311 + mem[_9311]]) + 1 < 0 or _9311 + ceil32(return_data.size) + ceil32(32 * mem[_9311 + mem[_9311]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _9311 + ceil32(return_data.size) + ceil32(32 * mem[_9311 + mem[_9311]]) + 1
                    mem[_9311 + ceil32(return_data.size)] = _9351
                    require _9332 + (32 * _9351) + 32 <= return_data.size
                    t = _9311 + ceil32(return_data.size) + 32
                    s = _9311 + _9332 + 32
                    while s < _9311 + _9332 + (32 * _9351) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_7501))
                    staticcall address(_7501).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10669 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10688 = mem[_10669]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_7502))
                    staticcall address(_7502).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10725 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10738 = mem[_10725]
                    if not _10688:
                        revert with 0, 'Desired value is zero'
                    if not mem[_10725]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_7500)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7501))
                    call address(_7501).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7500), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10817 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10817] == bool(mem[_10817])
                    mem[mem[64] + 4] = address(_7500)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7502))
                    call address(_7502).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7500), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10861 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10861] == bool(mem[_10861])
                    if _10688 and 5 > -1 / _10688:
                        revert with 0, 17
                    if 5 * _10688 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _10688 < 5000 * _10688 / 10^6:
                        revert with 0, 17
                    if _10738 and 5 > -1 / _10738:
                        revert with 0, 17
                    if 5 * _10738 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _10738 < 5000 * _10738 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _10688
                    mem[mem[64] + 100] = _10738
                    mem[mem[64] + 132] = _10688 - (5000 * _10688 / 10^6)
                    mem[mem[64] + 164] = _10738 - (5000 * _10738 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_7500))
                    call address(_7500).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_7501), address(_7502), _10688, _10738, _10688 - (5000 * _10688 / 10^6), _10738 - (5000 * _10738 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11016 = mem[_746 + 160]
                    _11017 = mem[_746 + 64]
                    _11018 = mem[_746 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11018))
                    staticcall address(_11018).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11056 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11064 = mem[_11056]
                    if _11017 >= 999999:
                        mem[mem[64] + 4] = mem[_11056]
                        require ext_code.size(address(_11016))
                        call address(_11016).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _11064
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11064
                        emit Earn(_11064);
                        _11120 = mem[_746 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11120))
                        staticcall address(_11120).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11184 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_746 + 96] = mem[_11184]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11288 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11308 = mem[_11288]
                        _11336 = mem[_746]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11372 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11308
                        mem[mem[64] + 36] = 128
                        _11392 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_11372 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11336))
                        call address(_11336).mem[mem[64] len 4] with:
                           value _11308 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11372 + (32 * _11392) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11860 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11880 = mem[_11860]
                        require mem[_11860] <= test266151307()
                        require _11860 + mem[_11860] + 31 < _11860 + return_data.size
                        _11900 = mem[_11860 + mem[_11860]]
                        if mem[_11860 + mem[_11860]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11860 + mem[_11860]]) + 1 < 0 or _11860 + ceil32(return_data.size) + ceil32(32 * mem[_11860 + mem[_11860]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11860 + ceil32(return_data.size) + ceil32(32 * mem[_11860 + mem[_11860]]) + 1
                        mem[_11860 + ceil32(return_data.size)] = _11900
                        require _11880 + (32 * _11900) + 32 <= return_data.size
                        t = _11860 + ceil32(return_data.size) + 32
                        s = _11860 + _11880 + 32
                        while s < _11860 + _11880 + (32 * _11900) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12448 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12448]
                    else:
                        mem[mem[64] + 4] = _11017
                        mem[mem[64] + 36] = _11064
                        require ext_code.size(address(_11016))
                        call address(_11016).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _11017, _11064
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11064
                        emit Earn(_11064);
                        _11121 = mem[_746 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11121))
                        staticcall address(_11121).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11185 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_746 + 96] = mem[_11185]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11289 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11309 = mem[_11289]
                        _11337 = mem[_746]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11373 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11309
                        mem[mem[64] + 36] = 128
                        _11393 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_11373 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11337))
                        call address(_11337).mem[mem[64] len 4] with:
                           value _11309 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11373 + (32 * _11393) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11861 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11881 = mem[_11861]
                        require mem[_11861] <= test266151307()
                        require _11861 + mem[_11861] + 31 < _11861 + return_data.size
                        _11901 = mem[_11861 + mem[_11861]]
                        if mem[_11861 + mem[_11861]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11861 + mem[_11861]]) + 1 < 0 or _11861 + ceil32(return_data.size) + ceil32(32 * mem[_11861 + mem[_11861]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11861 + ceil32(return_data.size) + ceil32(32 * mem[_11861 + mem[_11861]]) + 1
                        mem[_11861 + ceil32(return_data.size)] = _11901
                        require _11881 + (32 * _11901) + 32 <= return_data.size
                        t = _11861 + ceil32(return_data.size) + 32
                        s = _11861 + _11881 + 32
                        while s < _11861 + _11881 + (32 * _11901) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12449 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12449]
            else:
                if 1 >= mem[_7517]:
                    revert with 0, 50
                mem[_7517 + 64] = address(_7501)
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[_7517 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[_7517 + 100] = eth.balance(this.address) / 2
                mem[_7517 + 132] = 128
                mem[_7517 + 228] = mem[_7517]
                s = 0
                t = _7517 + 32
                u = _7517 + 260
                while s < mem[_7517]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_7517 + 164] = this.address
                mem[_7517 + 196] = block.timestamp + 60
                require ext_code.size(address(_7500))
                call address(_7500).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _7517 + (32 * mem[_7517]) + -mem[64] + 256]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9312 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9333 = mem[_9312]
                require mem[_9312] <= test266151307()
                require _9312 + mem[_9312] + 31 < _9312 + return_data.size
                _9352 = mem[_9312 + mem[_9312]]
                if mem[_9312 + mem[_9312]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_9312 + mem[_9312]]) + 1 < 0 or _9312 + ceil32(return_data.size) + ceil32(32 * mem[_9312 + mem[_9312]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _9312 + ceil32(return_data.size) + ceil32(32 * mem[_9312 + mem[_9312]]) + 1
                mem[_9312 + ceil32(return_data.size)] = _9352
                require _9333 + (32 * _9352) + 32 <= return_data.size
                t = _9312 + ceil32(return_data.size) + 32
                s = _9312 + _9333 + 32
                while s < _9312 + _9333 + (32 * _9352) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_7502):
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_7501))
                    staticcall address(_7501).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10681 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10698 = mem[_10681]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_7502))
                    staticcall address(_7502).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10729 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10742 = mem[_10729]
                    if not _10698:
                        revert with 0, 'Desired value is zero'
                    if not mem[_10729]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_7500)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7501))
                    call address(_7501).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7500), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10821 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10821] == bool(mem[_10821])
                    mem[mem[64] + 4] = address(_7500)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7502))
                    call address(_7502).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7500), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10865 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_10865] == bool(mem[_10865])
                    if _10698 and 5 > -1 / _10698:
                        revert with 0, 17
                    if 5 * _10698 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _10698 < 5000 * _10698 / 10^6:
                        revert with 0, 17
                    if _10742 and 5 > -1 / _10742:
                        revert with 0, 17
                    if 5 * _10742 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _10742 < 5000 * _10742 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _10698
                    mem[mem[64] + 100] = _10742
                    mem[mem[64] + 132] = _10698 - (5000 * _10698 / 10^6)
                    mem[mem[64] + 164] = _10742 - (5000 * _10742 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_7500))
                    call address(_7500).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_7501), address(_7502), _10698, _10742, _10698 - (5000 * _10698 / 10^6), _10742 - (5000 * _10742 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _11030 = mem[_746 + 160]
                    _11031 = mem[_746 + 64]
                    _11032 = mem[_746 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11032))
                    staticcall address(_11032).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11060 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11068 = mem[_11060]
                    if _11031 >= 999999:
                        mem[mem[64] + 4] = mem[_11060]
                        require ext_code.size(address(_11030))
                        call address(_11030).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _11068
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11068
                        emit Earn(_11068);
                        _11148 = mem[_746 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11148))
                        staticcall address(_11148).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11192 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_746 + 96] = mem[_11192]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11296 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11316 = mem[_11296]
                        _11344 = mem[_746]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11384 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11316
                        mem[mem[64] + 36] = 128
                        _11404 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_11384 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11344))
                        call address(_11344).mem[mem[64] len 4] with:
                           value _11316 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11384 + (32 * _11404) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11862 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11882 = mem[_11862]
                        require mem[_11862] <= test266151307()
                        require _11862 + mem[_11862] + 31 < _11862 + return_data.size
                        _11902 = mem[_11862 + mem[_11862]]
                        if mem[_11862 + mem[_11862]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11862 + mem[_11862]]) + 1 < 0 or _11862 + ceil32(return_data.size) + ceil32(32 * mem[_11862 + mem[_11862]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11862 + ceil32(return_data.size) + ceil32(32 * mem[_11862 + mem[_11862]]) + 1
                        mem[_11862 + ceil32(return_data.size)] = _11902
                        require _11882 + (32 * _11902) + 32 <= return_data.size
                        t = _11862 + ceil32(return_data.size) + 32
                        s = _11862 + _11882 + 32
                        while s < _11862 + _11882 + (32 * _11902) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12450 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12450]
                    else:
                        mem[mem[64] + 4] = _11031
                        mem[mem[64] + 36] = _11068
                        require ext_code.size(address(_11030))
                        call address(_11030).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _11031, _11068
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _11068
                        emit Earn(_11068);
                        _11149 = mem[_746 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11149))
                        staticcall address(_11149).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11193 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_746 + 96] = mem[_11193]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11297 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11317 = mem[_11297]
                        _11345 = mem[_746]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _11385 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _11317
                        mem[mem[64] + 36] = 128
                        _11405 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_11385 + 100] = block.timestamp + 60
                        require ext_code.size(address(_11345))
                        call address(_11345).mem[mem[64] len 4] with:
                           value _11317 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _11385 + (32 * _11405) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _11863 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _11883 = mem[_11863]
                        require mem[_11863] <= test266151307()
                        require _11863 + mem[_11863] + 31 < _11863 + return_data.size
                        _11903 = mem[_11863 + mem[_11863]]
                        if mem[_11863 + mem[_11863]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11863 + mem[_11863]]) + 1 < 0 or _11863 + ceil32(return_data.size) + ceil32(32 * mem[_11863 + mem[_11863]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _11863 + ceil32(return_data.size) + ceil32(32 * mem[_11863 + mem[_11863]]) + 1
                        mem[_11863 + ceil32(return_data.size)] = _11903
                        require _11883 + (32 * _11903) + 32 <= return_data.size
                        t = _11863 + ceil32(return_data.size) + 32
                        s = _11863 + _11883 + 32
                        while s < _11863 + _11883 + (32 * _11903) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12451 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12451]
                else:
                    if 1 >= mem[_7517]:
                        revert with 0, 50
                    mem[_7517 + 64] = address(_7502)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 128
                    _10730 = mem[_7517]
                    mem[mem[64] + 132] = mem[_7517]
                    s = 0
                    t = _7517 + 32
                    u = mem[64] + 164
                    while s < _10730:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_7500))
                    call address(_7500).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args Mask(255, 1, eth.balance(this.address)), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _10730) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11864 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11884 = mem[_11864]
                    require mem[_11864] <= test266151307()
                    require _11864 + mem[_11864] + 31 < _11864 + return_data.size
                    _11904 = mem[_11864 + mem[_11864]]
                    if mem[_11864 + mem[_11864]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11864 + mem[_11864]]) + 1 < 0 or _11864 + ceil32(return_data.size) + ceil32(32 * mem[_11864 + mem[_11864]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11864 + ceil32(return_data.size) + ceil32(32 * mem[_11864 + mem[_11864]]) + 1
                    mem[_11864 + ceil32(return_data.size)] = _11904
                    require _11884 + (32 * _11904) + 32 <= return_data.size
                    t = _11864 + ceil32(return_data.size) + 32
                    s = _11864 + _11884 + 32
                    while s < _11864 + _11884 + (32 * _11904) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_7501))
                    staticcall address(_7501).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12452 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12472 = mem[_12452]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_7502))
                    staticcall address(_7502).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12496 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12500 = mem[_12496]
                    if not _12472:
                        revert with 0, 'Desired value is zero'
                    if not mem[_12496]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_7500)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7501))
                    call address(_7501).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7500), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12528 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12528] == bool(mem[_12528])
                    mem[mem[64] + 4] = address(_7500)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_7502))
                    call address(_7502).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_7500), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12544 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_12544] == bool(mem[_12544])
                    if _12472 and 5 > -1 / _12472:
                        revert with 0, 17
                    if 5 * _12472 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _12472 < 5000 * _12472 / 10^6:
                        revert with 0, 17
                    if _12500 and 5 > -1 / _12500:
                        revert with 0, 17
                    if 5 * _12500 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _12500 < 5000 * _12500 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _12472
                    mem[mem[64] + 100] = _12500
                    mem[mem[64] + 132] = _12472 - (5000 * _12472 / 10^6)
                    mem[mem[64] + 164] = _12500 - (5000 * _12500 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_7500))
                    call address(_7500).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_7501), address(_7502), _12472, _12500, _12472 - (5000 * _12472 / 10^6), _12500 - (5000 * _12500 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _12576 = mem[_746 + 160]
                    _12577 = mem[_746 + 64]
                    _12578 = mem[_746 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12578))
                    staticcall address(_12578).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12596 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12600 = mem[_12596]
                    if _12577 >= 999999:
                        mem[mem[64] + 4] = mem[_12596]
                        require ext_code.size(address(_12576))
                        call address(_12576).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _12600
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _12600
                        emit Earn(_12600);
                        _12636 = mem[_746 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12636))
                        staticcall address(_12636).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12660 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_746 + 96] = mem[_12660]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12708 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12716 = mem[_12708]
                        _12724 = mem[_746]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _12732 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12716
                        mem[mem[64] + 36] = 128
                        _12740 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_12732 + 100] = block.timestamp + 60
                        require ext_code.size(address(_12724))
                        call address(_12724).mem[mem[64] len 4] with:
                           value _12716 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _12732 + (32 * _12740) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12852 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12860 = mem[_12852]
                        require mem[_12852] <= test266151307()
                        require _12852 + mem[_12852] + 31 < _12852 + return_data.size
                        _12868 = mem[_12852 + mem[_12852]]
                        if mem[_12852 + mem[_12852]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12852 + mem[_12852]]) + 1 < 0 or _12852 + ceil32(return_data.size) + ceil32(32 * mem[_12852 + mem[_12852]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12852 + ceil32(return_data.size) + ceil32(32 * mem[_12852 + mem[_12852]]) + 1
                        mem[_12852 + ceil32(return_data.size)] = _12868
                        require _12860 + (32 * _12868) + 32 <= return_data.size
                        t = _12852 + ceil32(return_data.size) + 32
                        s = _12852 + _12860 + 32
                        while s < _12852 + _12860 + (32 * _12868) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12948 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12948]
                    else:
                        mem[mem[64] + 4] = _12577
                        mem[mem[64] + 36] = _12600
                        require ext_code.size(address(_12576))
                        call address(_12576).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _12577, _12600
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _12600
                        emit Earn(_12600);
                        _12637 = mem[_746 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12637))
                        staticcall address(_12637).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12661 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_746 + 96] = mem[_12661]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12709 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12717 = mem[_12709]
                        _12725 = mem[_746]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _12733 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _12717
                        mem[mem[64] + 36] = 128
                        _12741 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_12733 + 100] = block.timestamp + 60
                        require ext_code.size(address(_12725))
                        call address(_12725).mem[mem[64] len 4] with:
                           value _12717 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _12733 + (32 * _12741) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12853 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _12861 = mem[_12853]
                        require mem[_12853] <= test266151307()
                        require _12853 + mem[_12853] + 31 < _12853 + return_data.size
                        _12869 = mem[_12853 + mem[_12853]]
                        if mem[_12853 + mem[_12853]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_12853 + mem[_12853]]) + 1 < 0 or _12853 + ceil32(return_data.size) + ceil32(32 * mem[_12853 + mem[_12853]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _12853 + ceil32(return_data.size) + ceil32(32 * mem[_12853 + mem[_12853]]) + 1
                        mem[_12853 + ceil32(return_data.size)] = _12869
                        require _12861 + (32 * _12869) + 32 <= return_data.size
                        t = _12853 + ceil32(return_data.size) + 32
                        s = _12853 + _12861 + 32
                        while s < _12853 + _12861 + (32 * _12869) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12949 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_12949]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _746
            s = _3654 - (5000 * _3654 / 10^6)
            s = stor9[idx].field_0
            continue 
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
        mem[mem[64] + 36] = _813
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
             gas gas_remaining wei
            args strategyInfo[stor9[idx].field_0].field_512, _813
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _873 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _879 = mem[_873]
        require mem[_873] == mem[_873 + 12 len 20]
        if 0 >= mem[96]:
            revert with 0, 50
        mem[128] = mem[_873 + 12 len 20]
        if 1 >= mem[96]:
            revert with 0, 50
        mem[160] = stor21
        require ext_code.size(address(_879))
        staticcall address(_879).0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _934 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _940 = mem[_934]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_879))
        staticcall address(_879).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _953 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _961 = mem[_953]
        if mem[_953] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _940:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _996 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1010 = mem[_996]
        if 10^12 * _961 / _940 and mem[_996] > -1 / 10^12 * _961 / _940:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _961 / _940 * _1010 / 10^12
        mem[mem[64] + 36] = 64
        _1074 = mem[96]
        mem[mem[64] + 68] = mem[96]
        s = 0
        t = 128
        u = mem[64] + 100
        while s < mem[96]:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len (32 * _1074) + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1773 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1780 = mem[_1773]
        require mem[_1773] <= test266151307()
        require _1773 + mem[_1773] + 31 < _1773 + return_data.size
        _1795 = mem[_1773 + mem[_1773]]
        if mem[_1773 + mem[_1773]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_1773 + mem[_1773]]) + 1 < 0 or _1773 + ceil32(return_data.size) + ceil32(32 * mem[_1773 + mem[_1773]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _1773 + ceil32(return_data.size) + ceil32(32 * mem[_1773 + mem[_1773]]) + 1
        mem[_1773 + ceil32(return_data.size)] = _1795
        require _1780 + (32 * _1795) + 32 <= return_data.size
        t = _1773 + ceil32(return_data.size) + 32
        s = _1773 + _1780 + 32
        while s < _1773 + _1780 + (32 * _1795) + 32:
            mem[t] = mem[s]
            t = t + 32
            s = s + 32
            continue 
        if 1 >= _1795:
            revert with 0, 50
        _3655 = mem[_1773 + ceil32(return_data.size) + 64]
        if mem[_1773 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_1773 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        if 5 * mem[_1773 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
            revert with 0, 17
        if mem[_1773 + ceil32(return_data.size) + 64] < 5000 * mem[_1773 + ceil32(return_data.size) + 64] / 10^6:
            revert with 0, 17
        _3734 = mem[_746]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_879))
        staticcall address(_879).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3766 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3782 = mem[_3766]
        if 60 > !block.timestamp:
            revert with 0, 17
        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = _3782
        mem[mem[64] + 36] = _3655 - (5000 * _3655 / 10^6)
        mem[mem[64] + 68] = 160
        _3820 = mem[96]
        mem[mem[64] + 164] = mem[96]
        s = 0
        t = 128
        u = mem[64] + 196
        while s < mem[96]:
            mem[u] = mem[t + 12 len 20]
            s = s + 1
            t = t + 32
            u = u + 32
            continue 
        mem[mem[64] + 100] = this.address
        mem[mem[64] + 132] = block.timestamp + 60
        require ext_code.size(address(_3734))
        call address(_3734).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _3820) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5621 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5637 = mem[_5621]
        require mem[_5621] <= test266151307()
        require _5621 + mem[_5621] + 31 < _5621 + return_data.size
        _5657 = mem[_5621 + mem[_5621]]
        if mem[_5621 + mem[_5621]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_5621 + mem[_5621]]) + 1 < 0 or _5621 + ceil32(return_data.size) + ceil32(32 * mem[_5621 + mem[_5621]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _5621 + ceil32(return_data.size) + ceil32(32 * mem[_5621 + mem[_5621]]) + 1
        mem[_5621 + ceil32(return_data.size)] = _5657
        require _5637 + (32 * _5657) + 32 <= return_data.size
        t = _5621 + ceil32(return_data.size) + 32
        s = _5621 + _5637 + 32
        while s < _5621 + _5637 + (32 * _5657) + 32:
            mem[t] = mem[s]
            t = t + 32
            s = s + 32
            continue 
        _7503 = mem[_746]
        _7504 = mem[_746 + 192]
        _7505 = mem[_746 + 224]
        _7519 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_7519 + 32 len 64] = call.data[calldata.size len 64]
        if not mem[_7519]:
            revert with 0, 50
        mem[_7519 + 32] = stor21
        if stor21 == address(_7504):
            if stor21 == address(_7505):
                mem[_7519 + 100] = this.address
                require ext_code.size(address(_7504))
                staticcall address(_7504).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_7519 + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                mem[_7519 + ceil32(return_data.size) + 100] = this.address
                require ext_code.size(address(_7505))
                staticcall address(_7505).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_7519 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    revert with 0, 'Desired value is zero'
                if not ext_call.return_data[0]:
                    revert with 0, 'Desired value is zero'
                mem[_7519 + (2 * ceil32(return_data.size)) + 100] = address(_7503)
                mem[_7519 + (2 * ceil32(return_data.size)) + 132] = -1
                require ext_code.size(address(_7504))
                call address(_7504).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_7503), -1
                mem[_7519 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                mem[_7519 + (4 * ceil32(return_data.size)) + 100] = address(_7503)
                mem[_7519 + (4 * ceil32(return_data.size)) + 132] = -1
                require ext_code.size(address(_7505))
                call address(_7505).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_7503), -1
                mem[_7519 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                    revert with 0, 17
                if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[_7519 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                mem[_7519 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                mem[_7519 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                mem[_7519 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                mem[_7519 + (6 * ceil32(return_data.size)) + 292] = this.address
                mem[_7519 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                require ext_code.size(address(_7503))
                call address(_7503).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_7504), address(_7505), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                mem[_7519 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _7519 + (7 * ceil32(return_data.size)) + 96
                require return_data.size >= 96
                _8083 = mem[_746 + 160]
                _8084 = mem[_746 + 64]
                _8085 = mem[_746 + 32]
                mem[_7519 + (7 * ceil32(return_data.size)) + 100] = this.address
                require ext_code.size(address(_8085))
                staticcall address(_8085).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_7519 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _7519 + (8 * ceil32(return_data.size)) + 96
                require return_data.size >= 32
                if _8084 >= 999999:
                    mem[_7519 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    require ext_code.size(address(_8083))
                    call address(_8083).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_7519 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    emit Earn(ext_call.return_data[0]);
                    _8182 = mem[_746 + 32]
                    mem[_7519 + (8 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_8182))
                    staticcall address(_8182).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_7519 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_746 + 96] = ext_call.return_data[0]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[_7519 + (10 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_7519 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _7519 + (11 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _8354 = mem[_746]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_7519 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_7519 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    mem[_7519 + (11 * ceil32(return_data.size)) + 132] = 128
                    mem[_7519 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                    s = 0
                    t = 128
                    u = _7519 + (11 * ceil32(return_data.size)) + 260
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_7519 + (11 * ceil32(return_data.size)) + 164] = this.address
                    mem[_7519 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                    require ext_code.size(address(_8354))
                    call address(_8354).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value ext_call.return_data[0] wei
                         gas gas_remaining wei
                        args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_7519 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_7519 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _7519 + (12 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _9334 = mem[_7519 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                    require mem[_7519 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require _7519 + (11 * ceil32(return_data.size)) + mem[_7519 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _7519 + (11 * ceil32(return_data.size)) + return_data.size + 96
                    _9353 = mem[_7519 + (11 * ceil32(return_data.size)) + mem[_7519 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                    if mem[_7519 + (11 * ceil32(return_data.size)) + mem[_7519 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7519 + (11 * ceil32(return_data.size)) + mem[_7519 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _7519 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_7519 + (11 * ceil32(return_data.size)) + mem[_7519 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _7519 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_7519 + (11 * ceil32(return_data.size)) + mem[_7519 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                    mem[_7519 + (12 * ceil32(return_data.size)) + 96] = _9353
                    require _9334 + (32 * _9353) + 32 <= return_data.size
                    t = _7519 + (12 * ceil32(return_data.size)) + 128
                    s = _7519 + (11 * ceil32(return_data.size)) + _9334 + 128
                    while s < _7519 + (11 * ceil32(return_data.size)) + _9334 + (32 * _9353) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10670 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_10670]
                else:
                    mem[_7519 + (8 * ceil32(return_data.size)) + 100] = _8084
                    mem[_7519 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                    require ext_code.size(address(_8083))
                    call address(_8083).deposit(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args _8084, ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_7519 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    emit Earn(ext_call.return_data[0]);
                    _8183 = mem[_746 + 32]
                    mem[_7519 + (8 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_8183))
                    staticcall address(_8183).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_7519 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_746 + 96] = ext_call.return_data[0]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[_7519 + (10 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_7519 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _7519 + (11 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _8355 = mem[_746]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_7519 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_7519 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                    mem[_7519 + (11 * ceil32(return_data.size)) + 132] = 128
                    mem[_7519 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                    s = 0
                    t = 128
                    u = _7519 + (11 * ceil32(return_data.size)) + 260
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_7519 + (11 * ceil32(return_data.size)) + 164] = this.address
                    mem[_7519 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                    require ext_code.size(address(_8355))
                    call address(_8355).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value ext_call.return_data[0] wei
                         gas gas_remaining wei
                        args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_7519 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_7519 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _7519 + (12 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    _9335 = mem[_7519 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                    require mem[_7519 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                    require _7519 + (11 * ceil32(return_data.size)) + mem[_7519 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _7519 + (11 * ceil32(return_data.size)) + return_data.size + 96
                    _9354 = mem[_7519 + (11 * ceil32(return_data.size)) + mem[_7519 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                    if mem[_7519 + (11 * ceil32(return_data.size)) + mem[_7519 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7519 + (11 * ceil32(return_data.size)) + mem[_7519 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _7519 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_7519 + (11 * ceil32(return_data.size)) + mem[_7519 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                        revert with 0, 65
                    mem[64] = _7519 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_7519 + (11 * ceil32(return_data.size)) + mem[_7519 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                    mem[_7519 + (12 * ceil32(return_data.size)) + 96] = _9354
                    require _9335 + (32 * _9354) + 32 <= return_data.size
                    t = _7519 + (12 * ceil32(return_data.size)) + 128
                    s = _7519 + (11 * ceil32(return_data.size)) + _9335 + 128
                    while s < _7519 + (11 * ceil32(return_data.size)) + _9335 + (32 * _9354) + 128:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10671 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_10671]
            else:
                if 1 >= mem[_7519]:
                    revert with 0, 50
                mem[_7519 + 64] = address(_7505)
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[_7519 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[_7519 + 100] = eth.balance(this.address) / 2
                mem[_7519 + 132] = 128
                mem[_7519 + 228] = mem[_7519]
                s = 0
                t = _7519 + 32
                u = _7519 + 260
                while s < mem[_7519]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_7519 + 164] = this.address
                mem[_7519 + 196] = block.timestamp + 60
                require ext_code.size(address(_7503))
                call address(_7503).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _7519 + (32 * mem[_7519]) + -mem[64] + 256]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _9315 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _9336 = mem[_9315]
                require mem[_9315] <= test266151307()
                require _9315 + mem[_9315] + 31 < _9315 + return_data.size
                _9355 = mem[_9315 + mem[_9315]]
                if mem[_9315 + mem[_9315]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_9315 + mem[_9315]]) + 1 < 0 or _9315 + ceil32(return_data.size) + ceil32(32 * mem[_9315 + mem[_9315]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _9315 + ceil32(return_data.size) + ceil32(32 * mem[_9315 + mem[_9315]]) + 1
                mem[_9315 + ceil32(return_data.size)] = _9355
                require _9336 + (32 * _9355) + 32 <= return_data.size
                t = _9315 + ceil32(return_data.size) + 32
                s = _9315 + _9336 + 32
                while s < _9315 + _9336 + (32 * _9355) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_7504))
                staticcall address(_7504).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10672 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10691 = mem[_10672]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_7505))
                staticcall address(_7505).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10726 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10739 = mem[_10726]
                if not _10691:
                    revert with 0, 'Desired value is zero'
                if not mem[_10726]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_7503)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_7504))
                call address(_7504).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_7503), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10818 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_10818] == bool(mem[_10818])
                mem[mem[64] + 4] = address(_7503)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_7505))
                call address(_7505).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_7503), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10862 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_10862] == bool(mem[_10862])
                if _10691 and 5 > -1 / _10691:
                    revert with 0, 17
                if 5 * _10691 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _10691 < 5000 * _10691 / 10^6:
                    revert with 0, 17
                if _10739 and 5 > -1 / _10739:
                    revert with 0, 17
                if 5 * _10739 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _10739 < 5000 * _10739 / 10^6:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _10691
                mem[mem[64] + 100] = _10739
                mem[mem[64] + 132] = _10691 - (5000 * _10691 / 10^6)
                mem[mem[64] + 164] = _10739 - (5000 * _10739 / 10^6)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_7503))
                call address(_7503).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_7504), address(_7505), _10691, _10739, _10691 - (5000 * _10691 / 10^6), _10739 - (5000 * _10739 / 10^6), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _11019 = mem[_746 + 160]
                _11020 = mem[_746 + 64]
                _11021 = mem[_746 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11021))
                staticcall address(_11021).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11057 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11065 = mem[_11057]
                if _11020 >= 999999:
                    mem[mem[64] + 4] = mem[_11057]
                    require ext_code.size(address(_11019))
                    call address(_11019).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _11065
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _11065
                    emit Earn(_11065);
                    _11126 = mem[_746 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11126))
                    staticcall address(_11126).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11186 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_746 + 96] = mem[_11186]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11290 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11310 = mem[_11290]
                    _11338 = mem[_746]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _11375 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _11310
                    mem[mem[64] + 36] = 128
                    _11395 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < _11395:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_11375 + 68] = this.address
                    mem[_11375 + 100] = block.timestamp + 60
                    require ext_code.size(address(_11338))
                    call address(_11338).mem[mem[64] len 4] with:
                       value _11310 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _11375 + (32 * _11395) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11865 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11885 = mem[_11865]
                    require mem[_11865] <= test266151307()
                    require _11865 + mem[_11865] + 31 < _11865 + return_data.size
                    _11905 = mem[_11865 + mem[_11865]]
                    if mem[_11865 + mem[_11865]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11865 + mem[_11865]]) + 1 < 0 or _11865 + ceil32(return_data.size) + ceil32(32 * mem[_11865 + mem[_11865]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11865 + ceil32(return_data.size) + ceil32(32 * mem[_11865 + mem[_11865]]) + 1
                    mem[_11865 + ceil32(return_data.size)] = _11905
                    require _11885 + (32 * _11905) + 32 <= return_data.size
                    t = _11865 + ceil32(return_data.size) + 32
                    s = _11865 + _11885 + 32
                    while s < _11865 + _11885 + (32 * _11905) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12453 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12453]
                else:
                    mem[mem[64] + 4] = _11020
                    mem[mem[64] + 36] = _11065
                    require ext_code.size(address(_11019))
                    call address(_11019).deposit(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args _11020, _11065
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _11065
                    emit Earn(_11065);
                    _11127 = mem[_746 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11127))
                    staticcall address(_11127).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11187 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_746 + 96] = mem[_11187]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11291 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11311 = mem[_11291]
                    _11339 = mem[_746]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _11376 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _11311
                    mem[mem[64] + 36] = 128
                    _11396 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_11376 + 100] = block.timestamp + 60
                    require ext_code.size(address(_11339))
                    call address(_11339).mem[mem[64] len 4] with:
                       value _11311 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _11376 + (32 * _11396) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11866 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11886 = mem[_11866]
                    require mem[_11866] <= test266151307()
                    require _11866 + mem[_11866] + 31 < _11866 + return_data.size
                    _11906 = mem[_11866 + mem[_11866]]
                    if mem[_11866 + mem[_11866]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11866 + mem[_11866]]) + 1 < 0 or _11866 + ceil32(return_data.size) + ceil32(32 * mem[_11866 + mem[_11866]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11866 + ceil32(return_data.size) + ceil32(32 * mem[_11866 + mem[_11866]]) + 1
                    mem[_11866 + ceil32(return_data.size)] = _11906
                    require _11886 + (32 * _11906) + 32 <= return_data.size
                    t = _11866 + ceil32(return_data.size) + 32
                    s = _11866 + _11886 + 32
                    while s < _11866 + _11886 + (32 * _11906) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12454 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12454]
        else:
            if 1 >= mem[_7519]:
                revert with 0, 50
            mem[_7519 + 64] = address(_7504)
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[_7519 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[_7519 + 100] = eth.balance(this.address) / 2
            mem[_7519 + 132] = 128
            mem[_7519 + 228] = mem[_7519]
            s = 0
            t = _7519 + 32
            u = _7519 + 260
            while s < mem[_7519]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_7519 + 164] = this.address
            mem[_7519 + 196] = block.timestamp + 60
            require ext_code.size(address(_7503))
            call address(_7503).mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _7519 + (32 * mem[_7519]) + -mem[64] + 256]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _9316 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _9337 = mem[_9316]
            require mem[_9316] <= test266151307()
            require _9316 + mem[_9316] + 31 < _9316 + return_data.size
            _9356 = mem[_9316 + mem[_9316]]
            if mem[_9316 + mem[_9316]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_9316 + mem[_9316]]) + 1 < 0 or _9316 + ceil32(return_data.size) + ceil32(32 * mem[_9316 + mem[_9316]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _9316 + ceil32(return_data.size) + ceil32(32 * mem[_9316 + mem[_9316]]) + 1
            mem[_9316 + ceil32(return_data.size)] = _9356
            require _9337 + (32 * _9356) + 32 <= return_data.size
            t = _9316 + ceil32(return_data.size) + 32
            s = _9316 + _9337 + 32
            while s < _9316 + _9337 + (32 * _9356) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if stor21 == address(_7505):
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_7504))
                staticcall address(_7504).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10682 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10699 = mem[_10682]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_7505))
                staticcall address(_7505).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10731 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10744 = mem[_10731]
                if not _10699:
                    revert with 0, 'Desired value is zero'
                if not mem[_10731]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_7503)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_7504))
                call address(_7504).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_7503), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10823 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_10823] == bool(mem[_10823])
                mem[mem[64] + 4] = address(_7503)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_7505))
                call address(_7505).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_7503), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10866 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_10866] == bool(mem[_10866])
                if _10699 and 5 > -1 / _10699:
                    revert with 0, 17
                if 5 * _10699 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _10699 < 5000 * _10699 / 10^6:
                    revert with 0, 17
                if _10744 and 5 > -1 / _10744:
                    revert with 0, 17
                if 5 * _10744 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _10744 < 5000 * _10744 / 10^6:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _10699
                mem[mem[64] + 100] = _10744
                mem[mem[64] + 132] = _10699 - (5000 * _10699 / 10^6)
                mem[mem[64] + 164] = _10744 - (5000 * _10744 / 10^6)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_7503))
                call address(_7503).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_7504), address(_7505), _10699, _10744, _10699 - (5000 * _10699 / 10^6), _10744 - (5000 * _10744 / 10^6), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _11035 = mem[_746 + 160]
                _11036 = mem[_746 + 64]
                _11037 = mem[_746 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11037))
                staticcall address(_11037).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11061 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11069 = mem[_11061]
                if _11036 >= 999999:
                    mem[mem[64] + 4] = mem[_11061]
                    require ext_code.size(address(_11035))
                    call address(_11035).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _11069
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _11069
                    emit Earn(_11069);
                    _11154 = mem[_746 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11154))
                    staticcall address(_11154).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11194 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_746 + 96] = mem[_11194]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11299 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11321 = mem[_11299]
                    _11349 = mem[_746]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _11386 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _11321
                    mem[mem[64] + 36] = 128
                    _11406 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_11386 + 100] = block.timestamp + 60
                    require ext_code.size(address(_11349))
                    call address(_11349).mem[mem[64] len 4] with:
                       value _11321 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _11386 + (32 * _11406) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11867 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11887 = mem[_11867]
                    require mem[_11867] <= test266151307()
                    require _11867 + mem[_11867] + 31 < _11867 + return_data.size
                    _11907 = mem[_11867 + mem[_11867]]
                    if mem[_11867 + mem[_11867]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11867 + mem[_11867]]) + 1 < 0 or _11867 + ceil32(return_data.size) + ceil32(32 * mem[_11867 + mem[_11867]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11867 + ceil32(return_data.size) + ceil32(32 * mem[_11867 + mem[_11867]]) + 1
                    mem[_11867 + ceil32(return_data.size)] = _11907
                    require _11887 + (32 * _11907) + 32 <= return_data.size
                    t = _11867 + ceil32(return_data.size) + 32
                    s = _11867 + _11887 + 32
                    while s < _11867 + _11887 + (32 * _11907) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12455 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12455]
                else:
                    mem[mem[64] + 4] = _11036
                    mem[mem[64] + 36] = _11069
                    require ext_code.size(address(_11035))
                    call address(_11035).deposit(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args _11036, _11069
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _11069
                    emit Earn(_11069);
                    _11155 = mem[_746 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11155))
                    staticcall address(_11155).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11195 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_746 + 96] = mem[_11195]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11300 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11322 = mem[_11300]
                    _11350 = mem[_746]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _11387 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _11322
                    mem[mem[64] + 36] = 128
                    _11407 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_11387 + 100] = block.timestamp + 60
                    require ext_code.size(address(_11350))
                    call address(_11350).mem[mem[64] len 4] with:
                       value _11322 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _11387 + (32 * _11407) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11868 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11888 = mem[_11868]
                    require mem[_11868] <= test266151307()
                    require _11868 + mem[_11868] + 31 < _11868 + return_data.size
                    _11908 = mem[_11868 + mem[_11868]]
                    if mem[_11868 + mem[_11868]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11868 + mem[_11868]]) + 1 < 0 or _11868 + ceil32(return_data.size) + ceil32(32 * mem[_11868 + mem[_11868]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11868 + ceil32(return_data.size) + ceil32(32 * mem[_11868 + mem[_11868]]) + 1
                    mem[_11868 + ceil32(return_data.size)] = _11908
                    require _11888 + (32 * _11908) + 32 <= return_data.size
                    t = _11868 + ceil32(return_data.size) + 32
                    s = _11868 + _11888 + 32
                    while s < _11868 + _11888 + (32 * _11908) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12456 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12456]
            else:
                if 1 >= mem[_7519]:
                    revert with 0, 50
                mem[_7519 + 64] = address(_7505)
                if 60 > !block.timestamp:
                    revert with 0, 17
                _10717 = mem[64]
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = eth.balance(this.address) / 2
                mem[mem[64] + 36] = 128
                _10732 = mem[_7519]
                mem[mem[64] + 132] = mem[_7519]
                s = 0
                t = _7519 + 32
                u = mem[64] + 164
                while s < _10732:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_10717 + 68] = this.address
                mem[_10717 + 100] = block.timestamp + 60
                require ext_code.size(address(_7503))
                call address(_7503).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _10717 + (32 * _10732) + -mem[64] + 160]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11869 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11889 = mem[_11869]
                require mem[_11869] <= test266151307()
                require _11869 + mem[_11869] + 31 < _11869 + return_data.size
                _11909 = mem[_11869 + mem[_11869]]
                if mem[_11869 + mem[_11869]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_11869 + mem[_11869]]) + 1 < 0 or _11869 + ceil32(return_data.size) + ceil32(32 * mem[_11869 + mem[_11869]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _11869 + ceil32(return_data.size) + ceil32(32 * mem[_11869 + mem[_11869]]) + 1
                mem[_11869 + ceil32(return_data.size)] = _11909
                require _11889 + (32 * _11909) + 32 <= return_data.size
                t = _11869 + ceil32(return_data.size) + 32
                s = _11869 + _11889 + 32
                while s < _11869 + _11889 + (32 * _11909) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_7504))
                staticcall address(_7504).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12457 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _12477 = mem[_12457]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_7505))
                staticcall address(_7505).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12497 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _12501 = mem[_12497]
                if not _12477:
                    revert with 0, 'Desired value is zero'
                if not mem[_12497]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_7503)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_7504))
                call address(_7504).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_7503), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12529 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12529] == bool(mem[_12529])
                mem[mem[64] + 4] = address(_7503)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_7505))
                call address(_7505).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_7503), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12545 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_12545] == bool(mem[_12545])
                if _12477 and 5 > -1 / _12477:
                    revert with 0, 17
                if 5 * _12477 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _12477 < 5000 * _12477 / 10^6:
                    revert with 0, 17
                if _12501 and 5 > -1 / _12501:
                    revert with 0, 17
                if 5 * _12501 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _12501 < 5000 * _12501 / 10^6:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _12477
                mem[mem[64] + 100] = _12501
                mem[mem[64] + 132] = _12477 - (5000 * _12477 / 10^6)
                mem[mem[64] + 164] = _12501 - (5000 * _12501 / 10^6)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_7503))
                call address(_7503).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_7504), address(_7505), _12477, _12501, _12477 - (5000 * _12477 / 10^6), _12501 - (5000 * _12501 / 10^6), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _12579 = mem[_746 + 160]
                _12580 = mem[_746 + 64]
                _12581 = mem[_746 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_12581))
                staticcall address(_12581).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12597 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _12601 = mem[_12597]
                if _12580 >= 999999:
                    mem[mem[64] + 4] = mem[_12597]
                    require ext_code.size(address(_12579))
                    call address(_12579).deposit(uint256 arg1) with:
                         gas gas_remaining wei
                        args _12601
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _12601
                    emit Earn(_12601);
                    _12638 = mem[_746 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12638))
                    staticcall address(_12638).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12662 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_746 + 96] = mem[_12662]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12710 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12718 = mem[_12710]
                    _12726 = mem[_746]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _12734 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _12718
                    mem[mem[64] + 36] = 128
                    _12742 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_12734 + 100] = block.timestamp + 60
                    require ext_code.size(address(_12726))
                    call address(_12726).mem[mem[64] len 4] with:
                       value _12718 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _12734 + (32 * _12742) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12854 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12862 = mem[_12854]
                    require mem[_12854] <= test266151307()
                    require _12854 + mem[_12854] + 31 < _12854 + return_data.size
                    _12870 = mem[_12854 + mem[_12854]]
                    if mem[_12854 + mem[_12854]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_12854 + mem[_12854]]) + 1 < 0 or _12854 + ceil32(return_data.size) + ceil32(32 * mem[_12854 + mem[_12854]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _12854 + ceil32(return_data.size) + ceil32(32 * mem[_12854 + mem[_12854]]) + 1
                    mem[_12854 + ceil32(return_data.size)] = _12870
                    require _12862 + (32 * _12870) + 32 <= return_data.size
                    t = _12854 + ceil32(return_data.size) + 32
                    s = _12854 + _12862 + 32
                    while s < _12854 + _12862 + (32 * _12870) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12950 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12950]
                else:
                    mem[mem[64] + 4] = _12580
                    mem[mem[64] + 36] = _12601
                    require ext_code.size(address(_12579))
                    call address(_12579).deposit(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args _12580, _12601
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[mem[64]] = _12601
                    emit Earn(_12601);
                    _12639 = mem[_746 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12639))
                    staticcall address(_12639).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12663 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    mem[_746 + 96] = mem[_12663]
                    if not mem[96]:
                        revert with 0, 50
                    mem[128] = stor21
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = USDTAddress
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12711 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12719 = mem[_12711]
                    _12727 = mem[_746]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    _12735 = mem[64]
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _12719
                    mem[mem[64] + 36] = 128
                    _12743 = mem[96]
                    mem[mem[64] + 132] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 164
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[_12735 + 100] = block.timestamp + 60
                    require ext_code.size(address(_12727))
                    call address(_12727).mem[mem[64] len 4] with:
                       value _12719 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _12735 + (32 * _12743) + -mem[64] + 160]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12855 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _12863 = mem[_12855]
                    require mem[_12855] <= test266151307()
                    require _12855 + mem[_12855] + 31 < _12855 + return_data.size
                    _12871 = mem[_12855 + mem[_12855]]
                    if mem[_12855 + mem[_12855]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_12855 + mem[_12855]]) + 1 < 0 or _12855 + ceil32(return_data.size) + ceil32(32 * mem[_12855 + mem[_12855]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _12855 + ceil32(return_data.size) + ceil32(32 * mem[_12855 + mem[_12855]]) + 1
                    mem[_12855 + ceil32(return_data.size)] = _12871
                    require _12863 + (32 * _12871) + 32 <= return_data.size
                    t = _12855 + ceil32(return_data.size) + 32
                    s = _12855 + _12863 + 32
                    while s < _12855 + _12863 + (32 * _12871) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(USDTAddress)
                    staticcall USDTAddress.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12951 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    sub_5e8f09aa = mem[_12951]
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = _746
        s = _3655 - (5000 * _3655 / 10^6)
        s = stor9[idx].field_0
        continue 
    _747 = mem[64]
    mem[64] = mem[64] + 256
    mem[_747] = 0
    mem[_747 + 32] = 0
    mem[_747 + 64] = 0
    mem[_747 + 96] = 0
    mem[_747 + 128] = 0
    mem[_747 + 160] = 0
    mem[_747 + 192] = 0
    mem[_747 + 224] = 0
    _751 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    mem[_751 + 32 len 64] = call.data[calldata.size len 64]
    idx = 0
    s = 96
    t = 0
    u = 0
    v = 0
    v = _747
    v = 0
    v = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _1756 = mem[64]
        mem[64] = mem[64] + 256
        mem[_1756] = strategyInfo[stor9[idx].field_0].field_0
        mem[_1756 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_1756 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_1756 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_1756 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_1756 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_1756 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_1756 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1771 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _1777 = mem[_1771]
            if not mem[_1771]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_1771]
                v = _1756
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1831 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _1847 = mem[_1831]
            require mem[_1831] == mem[_1831 + 18 len 14]
            _1862 = mem[_1831 + 32]
            require mem[_1831 + 32] == mem[_1831 + 50 len 14]
            require mem[_1831 + 64] == mem[_1831 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1893 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1902 = mem[_1893]
            if _1777 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_1893]:
                revert with 0, 18
            if 10^12 * _1777 / mem[_1893] and Mask(112, 0, _1847) > -1 / 10^12 * _1777 / mem[_1893]:
                revert with 0, 17
            if 10^12 * _1777 / mem[_1893] and Mask(112, 0, _1862) > -1 / 10^12 * _1777 / mem[_1893]:
                revert with 0, 17
            if 1 >= mem[_751]:
                revert with 0, 50
            mem[_751 + 64] = stor21
            if 0 >= mem[_751]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[_751 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1777 / _1902 * Mask(112, 0, _1862) / 10^12
                mem[mem[64] + 36] = 64
                _2019 = mem[_751]
                mem[mem[64] + 68] = mem[_751]
                s = 0
                t = _751 + 32
                u = mem[64] + 100
                while s < _2019:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _1777 / _1902 * Mask(112, 0, _1862) / 10^12, 64, mem[mem[64] + 68 len (32 * _2019) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3677 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3688 = mem[_3677]
                require mem[_3677] <= test266151307()
                require _3677 + mem[_3677] + 31 < _3677 + return_data.size
                _3698 = mem[_3677 + mem[_3677]]
                if mem[_3677 + mem[_3677]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3677 + mem[_3677]]) + 1 < 0 or _3677 + ceil32(return_data.size) + ceil32(32 * mem[_3677 + mem[_3677]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3677 + ceil32(return_data.size) + ceil32(32 * mem[_3677 + mem[_3677]]) + 1
                mem[_3677 + ceil32(return_data.size)] = _3698
                require _3688 + (32 * _3698) + 32 <= return_data.size
                t = _3677 + ceil32(return_data.size) + 32
                s = _3677 + _3688 + 32
                while s < _3677 + _3688 + (32 * _3698) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3698:
                    revert with 0, 50
                _5607 = mem[_3677 + ceil32(return_data.size) + 64]
                if 10^12 * _1777 / _1902 * Mask(112, 0, _1847) / 10^12 > !mem[_3677 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_1756 + 128] = (10^12 * _1777 / _1902 * Mask(112, 0, _1847) / 10^12) + mem[_3677 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _1777 / _1902 * Mask(112, 0, _1847) / 10^12) + _5607):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _3677 + ceil32(return_data.size)
                t = 10^12 * _1777 / _1902 * Mask(112, 0, _1862) / 10^12
                u = 10^12 * _1777 / _1902 * Mask(112, 0, _1847) / 10^12
                v = _1777
                v = _1756
                v = stor9[idx].field_0
                v = v + (10^12 * _1777 / _1902 * Mask(112, 0, _1847) / 10^12) + _5607
                continue 
            mem[_751 + 32] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                _2013 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1777 / _1902 * Mask(112, 0, _1847) / 10^12
                mem[mem[64] + 36] = 64
                _2028 = mem[_751]
                mem[mem[64] + 68] = mem[_751]
                s = 0
                t = _751 + 32
                u = mem[64] + 100
                while s < _2028:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _2013 + (32 * _2028) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3676 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3687 = mem[_3676]
                require mem[_3676] <= test266151307()
                require _3676 + mem[_3676] + 31 < _3676 + return_data.size
                _3697 = mem[_3676 + mem[_3676]]
                if mem[_3676 + mem[_3676]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3676 + mem[_3676]]) + 1 < 0 or _3676 + ceil32(return_data.size) + ceil32(32 * mem[_3676 + mem[_3676]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3676 + ceil32(return_data.size) + ceil32(32 * mem[_3676 + mem[_3676]]) + 1
                mem[_3676 + ceil32(return_data.size)] = _3697
                require _3687 + (32 * _3697) + 32 <= return_data.size
                t = _3676 + ceil32(return_data.size) + 32
                s = _3676 + _3687 + 32
                while s < _3676 + _3687 + (32 * _3697) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3697:
                    revert with 0, 50
                _5606 = mem[_3676 + ceil32(return_data.size) + 64]
                if 10^12 * _1777 / _1902 * Mask(112, 0, _1862) / 10^12 > !mem[_3676 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_1756 + 128] = (10^12 * _1777 / _1902 * Mask(112, 0, _1862) / 10^12) + mem[_3676 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _1777 / _1902 * Mask(112, 0, _1862) / 10^12) + _5606):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _3676 + ceil32(return_data.size)
                t = 10^12 * _1777 / _1902 * Mask(112, 0, _1862) / 10^12
                u = 10^12 * _1777 / _1902 * Mask(112, 0, _1847) / 10^12
                v = _1777
                v = _1756
                v = stor9[idx].field_0
                v = v + (10^12 * _1777 / _1902 * Mask(112, 0, _1862) / 10^12) + _5606
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2037 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2048 = mem[_2037]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2105 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2125 = mem[_2105]
            if mem[_2105] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _2048:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2241 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2266 = mem[_2241]
            if 10^12 * _2125 / _2048 and mem[_2241] > -1 / 10^12 * _2125 / _2048:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _2125 / _2048 * _2266 / 10^12
            mem[mem[64] + 36] = 64
            _2371 = mem[_751]
            mem[mem[64] + 68] = mem[_751]
            t = 0
            u = _751 + 32
            w = mem[64] + 100
            while t < _2371:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _2125 / _2048 * _2266 / 10^12, 64, mem[mem[64] + 68 len (32 * _2371) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3675 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3686 = mem[_3675]
            require mem[_3675] <= test266151307()
            require _3675 + mem[_3675] + 31 < _3675 + return_data.size
            _3696 = mem[_3675 + mem[_3675]]
            if mem[_3675 + mem[_3675]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3675 + mem[_3675]]) + 1 < 0 or _3675 + ceil32(return_data.size) + ceil32(32 * mem[_3675 + mem[_3675]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3675 + ceil32(return_data.size) + ceil32(32 * mem[_3675 + mem[_3675]]) + 1
            mem[_3675 + ceil32(return_data.size)] = _3696
            require _3686 + (32 * _3696) + 32 <= return_data.size
            u = _3675 + ceil32(return_data.size) + 32
            t = _3675 + _3686 + 32
            while t < _3675 + _3686 + (32 * _3696) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _3696:
                revert with 0, 50
            _5605 = mem[_3675 + ceil32(return_data.size) + 64]
            mem[_1756 + 128] = mem[_3675 + ceil32(return_data.size) + 64]
            if v > !_5605:
                revert with 0, 17
            if 0 >= mem[_751]:
                revert with 0, 50
            mem[_751 + 32] = mem[_1756 + 236 len 20]
            _5648 = mem[_1756 + 224]
            _5649 = mem[_1756]
            require ext_code.size(mem[_1756 + 236 len 20])
            staticcall mem[_1756 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5669 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5681 = mem[_5669]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_5648))
            staticcall address(_5648).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5699 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5728 = mem[_5699]
            if mem[_5699] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _5681:
                revert with 0, 18
            mem[mem[64] + 4] = address(_5649)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_5649)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5796 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5821 = mem[_5796]
            if 10^12 * _5728 / _5681 and mem[_5796] > -1 / 10^12 * _5728 / _5681:
                revert with 0, 17
            _5879 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _5728 / _5681 * _5821 / 10^12
            mem[mem[64] + 36] = 64
            _5904 = mem[_751]
            mem[mem[64] + 68] = mem[_751]
            t = 0
            u = _751 + 32
            w = mem[64] + 100
            while t < _5904:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_5649))
            staticcall address(_5649).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _5879 + (32 * _5904) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7529 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7549 = mem[_7529]
            require mem[_7529] <= test266151307()
            require _7529 + mem[_7529] + 31 < _7529 + return_data.size
            _7564 = mem[_7529 + mem[_7529]]
            if mem[_7529 + mem[_7529]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_7529 + mem[_7529]]) + 1 < 0 or _7529 + ceil32(return_data.size) + ceil32(32 * mem[_7529 + mem[_7529]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _7529 + ceil32(return_data.size) + ceil32(32 * mem[_7529 + mem[_7529]]) + 1
            mem[_7529 + ceil32(return_data.size)] = _7564
            require _7549 + (32 * _7564) + 32 <= return_data.size
            u = _7529 + ceil32(return_data.size) + 32
            t = _7529 + _7549 + 32
            while t < _7529 + _7549 + (32 * _7564) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _7564:
                revert with 0, 50
            if mem[_1756 + 128] > !mem[_7529 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1756 + 128] = mem[_1756 + 128] + mem[_7529 + ceil32(return_data.size) + 64]
            if v + _5605 > !mem[_1756 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _1777 / _1902 * Mask(112, 0, _1862) / 10^12
            u = 10^12 * _1777 / _1902 * Mask(112, 0, _1847) / 10^12
            v = _1777
            v = _1756
            v = stor9[idx].field_0
            v = v + _5605 + mem[_1756 + 128]
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1770 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _1776 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_1776] = mem[_1770]
        mem[_1776 + 32] = mem[_1770 + 32]
        mem[_1776 + 64] = mem[_1770 + 64]
        require return_data.size - 96 >= 96
        _1802 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_1802] = mem[_1770 + 96]
        mem[_1802 + 32] = mem[_1770 + 128]
        mem[_1802 + 64] = mem[_1770 + 160]
        mem[_1776 + 96] = _1802
        mem[_1776 + 128] = mem[_1770 + 192]
        require return_data.size - 224 >= 96
        _1823 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_1823] = mem[_1770 + 224]
        mem[_1823 + 32] = mem[_1770 + 256]
        mem[_1823 + 64] = mem[_1770 + 288]
        mem[_1776 + 160] = _1823
        _1838 = mem[_1776 + 64]
        if not mem[_1776 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            u = u
            v = mem[_1776 + 64]
            v = _1756
            v = stor9[idx].field_0
            v = v
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1876 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _1882 = mem[_1876]
        require mem[_1876] == mem[_1876 + 18 len 14]
        _1899 = mem[_1876 + 32]
        require mem[_1876 + 32] == mem[_1876 + 50 len 14]
        require mem[_1876 + 64] == mem[_1876 + 92 len 4]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _1937 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _1945 = mem[_1937]
        if _1838 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not mem[_1937]:
            revert with 0, 18
        if 10^12 * _1838 / mem[_1937] and Mask(112, 0, _1882) > -1 / 10^12 * _1838 / mem[_1937]:
            revert with 0, 17
        if 10^12 * _1838 / mem[_1937] and Mask(112, 0, _1899) > -1 / 10^12 * _1838 / mem[_1937]:
            revert with 0, 17
        if 1 >= mem[_751]:
            revert with 0, 50
        mem[_751 + 64] = stor21
        if 0 >= mem[_751]:
            revert with 0, 50
        if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
            mem[_751 + 32] = strategyInfo[stor9[idx].field_0].field_1792
            _2082 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1838 / _1945 * Mask(112, 0, _1899) / 10^12
            mem[mem[64] + 36] = 64
            _2119 = mem[_751]
            mem[mem[64] + 68] = mem[_751]
            s = 0
            t = _751 + 32
            u = mem[64] + 100
            while s < _2119:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _2082 + (32 * _2119) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3674 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3685 = mem[_3674]
            require mem[_3674] <= test266151307()
            require _3674 + mem[_3674] + 31 < _3674 + return_data.size
            _3695 = mem[_3674 + mem[_3674]]
            if mem[_3674 + mem[_3674]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3674 + mem[_3674]]) + 1 < 0 or _3674 + ceil32(return_data.size) + ceil32(32 * mem[_3674 + mem[_3674]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3674 + ceil32(return_data.size) + ceil32(32 * mem[_3674 + mem[_3674]]) + 1
            mem[_3674 + ceil32(return_data.size)] = _3695
            require _3685 + (32 * _3695) + 32 <= return_data.size
            t = _3674 + ceil32(return_data.size) + 32
            s = _3674 + _3685 + 32
            while s < _3674 + _3685 + (32 * _3695) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3695:
                revert with 0, 50
            _5604 = mem[_3674 + ceil32(return_data.size) + 64]
            if 10^12 * _1838 / _1945 * Mask(112, 0, _1882) / 10^12 > !mem[_3674 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1756 + 128] = (10^12 * _1838 / _1945 * Mask(112, 0, _1882) / 10^12) + mem[_3674 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _1838 / _1945 * Mask(112, 0, _1882) / 10^12) + _5604):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _3674 + ceil32(return_data.size)
            t = 10^12 * _1838 / _1945 * Mask(112, 0, _1899) / 10^12
            u = 10^12 * _1838 / _1945 * Mask(112, 0, _1882) / 10^12
            v = _1838
            v = _1756
            v = stor9[idx].field_0
            v = v + (10^12 * _1838 / _1945 * Mask(112, 0, _1882) / 10^12) + _5604
            continue 
        mem[_751 + 32] = strategyInfo[stor9[idx].field_0].field_1536
        if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1838 / _1945 * Mask(112, 0, _1882) / 10^12
            mem[mem[64] + 36] = 64
            _2124 = mem[_751]
            mem[mem[64] + 68] = mem[_751]
            s = 0
            t = _751 + 32
            w = mem[64] + 100
            while s < _2124:
                mem[w] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _1838 / _1945 * Mask(112, 0, _1882) / 10^12, 64, mem[mem[64] + 68 len (32 * _2124) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3673 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3684 = mem[_3673]
            require mem[_3673] <= test266151307()
            require _3673 + mem[_3673] + 31 < _3673 + return_data.size
            _3694 = mem[_3673 + mem[_3673]]
            if mem[_3673 + mem[_3673]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3673 + mem[_3673]]) + 1 < 0 or _3673 + ceil32(return_data.size) + ceil32(32 * mem[_3673 + mem[_3673]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3673 + ceil32(return_data.size) + ceil32(32 * mem[_3673 + mem[_3673]]) + 1
            mem[_3673 + ceil32(return_data.size)] = _3694
            require _3684 + (32 * _3694) + 32 <= return_data.size
            t = _3673 + ceil32(return_data.size) + 32
            s = _3673 + _3684 + 32
            while s < _3673 + _3684 + (32 * _3694) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3694:
                revert with 0, 50
            _5603 = mem[_3673 + ceil32(return_data.size) + 64]
            if 10^12 * _1838 / _1945 * Mask(112, 0, _1899) / 10^12 > !mem[_3673 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_1756 + 128] = (10^12 * _1838 / _1945 * Mask(112, 0, _1899) / 10^12) + mem[_3673 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _1838 / _1945 * Mask(112, 0, _1899) / 10^12) + _5603):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _3673 + ceil32(return_data.size)
            t = 10^12 * _1838 / _1945 * Mask(112, 0, _1899) / 10^12
            s = 10^12 * _1838 / _1945 * Mask(112, 0, _1882) / 10^12
            v = _1838
            v = _1756
            v = stor9[idx].field_0
            v = v + (10^12 * _1838 / _1945 * Mask(112, 0, _1899) / 10^12) + _5603
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2134 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2163 = mem[_2134]
        mem[mem[64] + 4] = this.address
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2206 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2222 = mem[_2206]
        if mem[_2206] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _2163:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _2339 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _2370 = mem[_2339]
        if 10^12 * _2222 / _2163 and mem[_2339] > -1 / 10^12 * _2222 / _2163:
            revert with 0, 17
        _2426 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _2222 / _2163 * _2370 / 10^12
        mem[mem[64] + 36] = 64
        _2438 = mem[_751]
        mem[mem[64] + 68] = mem[_751]
        t = 0
        u = _751 + 32
        w = mem[64] + 100
        while t < _2438:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _2426 + (32 * _2438) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3672 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3683 = mem[_3672]
        require mem[_3672] <= test266151307()
        require _3672 + mem[_3672] + 31 < _3672 + return_data.size
        _3693 = mem[_3672 + mem[_3672]]
        if mem[_3672 + mem[_3672]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_3672 + mem[_3672]]) + 1 < 0 or _3672 + ceil32(return_data.size) + ceil32(32 * mem[_3672 + mem[_3672]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _3672 + ceil32(return_data.size) + ceil32(32 * mem[_3672 + mem[_3672]]) + 1
        mem[_3672 + ceil32(return_data.size)] = _3693
        require _3683 + (32 * _3693) + 32 <= return_data.size
        u = _3672 + ceil32(return_data.size) + 32
        t = _3672 + _3683 + 32
        while t < _3672 + _3683 + (32 * _3693) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _3693:
            revert with 0, 50
        _5602 = mem[_3672 + ceil32(return_data.size) + 64]
        mem[_1756 + 128] = mem[_3672 + ceil32(return_data.size) + 64]
        if v > !_5602:
            revert with 0, 17
        if 0 >= mem[_751]:
            revert with 0, 50
        mem[_751 + 32] = mem[_1756 + 236 len 20]
        _5646 = mem[_1756 + 224]
        _5647 = mem[_1756]
        require ext_code.size(mem[_1756 + 236 len 20])
        staticcall mem[_1756 + 236 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5668 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5680 = mem[_5668]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_5646))
        staticcall address(_5646).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5698 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5727 = mem[_5698]
        if mem[_5698] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _5680:
            revert with 0, 18
        mem[mem[64] + 4] = address(_5647)
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args address(_5647)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5795 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5820 = mem[_5795]
        if 10^12 * _5727 / _5680 and mem[_5795] > -1 / 10^12 * _5727 / _5680:
            revert with 0, 17
        _5878 = mem[64]
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _5727 / _5680 * _5820 / 10^12
        mem[mem[64] + 36] = 64
        _5903 = mem[_751]
        mem[mem[64] + 68] = mem[_751]
        t = 0
        u = _751 + 32
        w = mem[64] + 100
        while t < _5903:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(address(_5647))
        staticcall address(_5647).mem[mem[64] len 4] with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len _5878 + (32 * _5903) + -mem[64] + 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _7528 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _7548 = mem[_7528]
        require mem[_7528] <= test266151307()
        require _7528 + mem[_7528] + 31 < _7528 + return_data.size
        _7563 = mem[_7528 + mem[_7528]]
        if mem[_7528 + mem[_7528]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_7528 + mem[_7528]]) + 1 < 0 or _7528 + ceil32(return_data.size) + ceil32(32 * mem[_7528 + mem[_7528]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _7528 + ceil32(return_data.size) + ceil32(32 * mem[_7528 + mem[_7528]]) + 1
        mem[_7528 + ceil32(return_data.size)] = _7563
        require _7548 + (32 * _7563) + 32 <= return_data.size
        u = _7528 + ceil32(return_data.size) + 32
        t = _7528 + _7548 + 32
        while t < _7528 + _7548 + (32 * _7563) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _7563:
            revert with 0, 50
        if mem[_1756 + 128] > !mem[_7528 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        mem[_1756 + 128] = mem[_1756 + 128] + mem[_7528 + ceil32(return_data.size) + 64]
        if v + _5602 > !mem[_1756 + 128]:
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s
        t = 10^12 * _1838 / _1945 * Mask(112, 0, _1899) / 10^12
        u = 10^12 * _1838 / _1945 * Mask(112, 0, _1882) / 10^12
        v = _1838
        v = _1756
        v = stor9[idx].field_0
        v = v + _5602 + mem[_1756 + 128]
        continue 
    emit 0xf9ede3d1 
    _1768 = mem[64]
    mem[64] = mem[64] + 256
    mem[_1768] = 0
    mem[_1768 + 32] = 0
    mem[_1768 + 64] = 0
    mem[_1768 + 96] = 0
    mem[_1768 + 128] = 0
    mem[_1768 + 160] = 0
    mem[_1768 + 192] = 0
    mem[_1768 + 224] = 0
    _1769 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    mem[_1769 + 32 len 64] = call.data[calldata.size len 64]
    idx = 0
    s = 96
    t = 0
    u = 0
    v = 0
    v = _1768
    v = 0
    v = 0
    while idx < stor9.length:
        mem[0] = stor9[idx].field_0
        mem[32] = 6
        _3644 = mem[64]
        mem[64] = mem[64] + 256
        mem[_3644] = strategyInfo[stor9[idx].field_0].field_0
        mem[_3644 + 32] = strategyInfo[stor9[idx].field_0].field_256
        mem[_3644 + 64] = strategyInfo[stor9[idx].field_0].field_512
        mem[_3644 + 96] = strategyInfo[stor9[idx].field_0].field_768
        mem[_3644 + 128] = strategyInfo[stor9[idx].field_0].field_1024
        mem[_3644 + 160] = strategyInfo[stor9[idx].field_0].field_1280
        mem[_3644 + 192] = strategyInfo[stor9[idx].field_0].field_1536
        mem[_3644 + 224] = strategyInfo[stor9[idx].field_0].field_1792
        if 999999 > strategyInfo[stor9[idx].field_0].field_512:
            mem[mem[64] + 36] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_512, this.address
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3671 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            _3681 = mem[_3671]
            if not mem[_3671]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_3671]
                v = _3644
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3725 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _3747 = mem[_3725]
            require mem[_3725] == mem[_3725 + 18 len 14]
            _3771 = mem[_3725 + 32]
            require mem[_3725 + 32] == mem[_3725 + 50 len 14]
            require mem[_3725 + 64] == mem[_3725 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3818 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3830 = mem[_3818]
            if _3681 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_3818]:
                revert with 0, 18
            if 10^12 * _3681 / mem[_3818] and Mask(112, 0, _3747) > -1 / 10^12 * _3681 / mem[_3818]:
                revert with 0, 17
            if 10^12 * _3681 / mem[_3818] and Mask(112, 0, _3771) > -1 / 10^12 * _3681 / mem[_3818]:
                revert with 0, 17
            if 1 >= mem[_1769]:
                revert with 0, 50
            mem[_1769 + 64] = stor21
            if 0 >= mem[_1769]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[_1769 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                _3964 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3681 / _3830 * Mask(112, 0, _3771) / 10^12
                mem[mem[64] + 36] = 64
                _3980 = mem[_1769]
                mem[mem[64] + 68] = mem[_1769]
                s = 0
                t = _1769 + 32
                u = mem[64] + 100
                while s < _3980:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _3964 + (32 * _3980) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5629 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5645 = mem[_5629]
                require mem[_5629] <= test266151307()
                require _5629 + mem[_5629] + 31 < _5629 + return_data.size
                _5665 = mem[_5629 + mem[_5629]]
                if mem[_5629 + mem[_5629]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_5629 + mem[_5629]]) + 1 < 0 or _5629 + ceil32(return_data.size) + ceil32(32 * mem[_5629 + mem[_5629]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _5629 + ceil32(return_data.size) + ceil32(32 * mem[_5629 + mem[_5629]]) + 1
                mem[_5629 + ceil32(return_data.size)] = _5665
                require _5645 + (32 * _5665) + 32 <= return_data.size
                t = _5629 + ceil32(return_data.size) + 32
                s = _5629 + _5645 + 32
                while s < _5629 + _5645 + (32 * _5665) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _5665:
                    revert with 0, 50
                _7499 = mem[_5629 + ceil32(return_data.size) + 64]
                if 10^12 * _3681 / _3830 * Mask(112, 0, _3747) / 10^12 > !mem[_5629 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3644 + 128] = (10^12 * _3681 / _3830 * Mask(112, 0, _3747) / 10^12) + mem[_5629 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _3681 / _3830 * Mask(112, 0, _3747) / 10^12) + _7499):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _5629 + ceil32(return_data.size)
                t = 10^12 * _3681 / _3830 * Mask(112, 0, _3771) / 10^12
                u = 10^12 * _3681 / _3830 * Mask(112, 0, _3747) / 10^12
                v = _3681
                v = _3644
                v = stor9[idx].field_0
                v = v + (10^12 * _3681 / _3830 * Mask(112, 0, _3747) / 10^12) + _7499
                continue 
            mem[_1769 + 32] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3681 / _3830 * Mask(112, 0, _3747) / 10^12
                mem[mem[64] + 36] = 64
                _3991 = mem[_1769]
                mem[mem[64] + 68] = mem[_1769]
                s = 0
                t = _1769 + 32
                u = mem[64] + 100
                while s < _3991:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _3681 / _3830 * Mask(112, 0, _3747) / 10^12, 64, mem[mem[64] + 68 len (32 * _3991) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5628 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5644 = mem[_5628]
                require mem[_5628] <= test266151307()
                require _5628 + mem[_5628] + 31 < _5628 + return_data.size
                _5664 = mem[_5628 + mem[_5628]]
                if mem[_5628 + mem[_5628]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_5628 + mem[_5628]]) + 1 < 0 or _5628 + ceil32(return_data.size) + ceil32(32 * mem[_5628 + mem[_5628]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _5628 + ceil32(return_data.size) + ceil32(32 * mem[_5628 + mem[_5628]]) + 1
                mem[_5628 + ceil32(return_data.size)] = _5664
                require _5644 + (32 * _5664) + 32 <= return_data.size
                t = _5628 + ceil32(return_data.size) + 32
                s = _5628 + _5644 + 32
                while s < _5628 + _5644 + (32 * _5664) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _5664:
                    revert with 0, 50
                _7498 = mem[_5628 + ceil32(return_data.size) + 64]
                if 10^12 * _3681 / _3830 * Mask(112, 0, _3771) / 10^12 > !mem[_5628 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3644 + 128] = (10^12 * _3681 / _3830 * Mask(112, 0, _3771) / 10^12) + mem[_5628 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _3681 / _3830 * Mask(112, 0, _3771) / 10^12) + _7498):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _5628 + ceil32(return_data.size)
                t = 10^12 * _3681 / _3830 * Mask(112, 0, _3771) / 10^12
                u = 10^12 * _3681 / _3830 * Mask(112, 0, _3747) / 10^12
                v = _3681
                v = _3644
                v = stor9[idx].field_0
                v = v + (10^12 * _3681 / _3830 * Mask(112, 0, _3771) / 10^12) + _7498
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3992 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4017 = mem[_3992]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4072 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4093 = mem[_4072]
            if mem[_4072] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _4017:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4206 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4221 = mem[_4206]
            if 10^12 * _4093 / _4017 and mem[_4206] > -1 / 10^12 * _4093 / _4017:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _4093 / _4017 * _4221 / 10^12
            mem[mem[64] + 36] = 64
            _4289 = mem[_1769]
            mem[mem[64] + 68] = mem[_1769]
            t = 0
            u = _1769 + 32
            w = mem[64] + 100
            while t < _4289:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _4093 / _4017 * _4221 / 10^12, 64, mem[mem[64] + 68 len (32 * _4289) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5627 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5643 = mem[_5627]
            require mem[_5627] <= test266151307()
            require _5627 + mem[_5627] + 31 < _5627 + return_data.size
            _5663 = mem[_5627 + mem[_5627]]
            if mem[_5627 + mem[_5627]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5627 + mem[_5627]]) + 1 < 0 or _5627 + ceil32(return_data.size) + ceil32(32 * mem[_5627 + mem[_5627]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5627 + ceil32(return_data.size) + ceil32(32 * mem[_5627 + mem[_5627]]) + 1
            mem[_5627 + ceil32(return_data.size)] = _5663
            require _5643 + (32 * _5663) + 32 <= return_data.size
            u = _5627 + ceil32(return_data.size) + 32
            t = _5627 + _5643 + 32
            while t < _5627 + _5643 + (32 * _5663) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _5663:
                revert with 0, 50
            _7497 = mem[_5627 + ceil32(return_data.size) + 64]
            mem[_3644 + 128] = mem[_5627 + ceil32(return_data.size) + 64]
            if v > !_7497:
                revert with 0, 17
            if 0 >= mem[_1769]:
                revert with 0, 50
            mem[_1769 + 32] = mem[_3644 + 236 len 20]
            _7546 = mem[_3644 + 224]
            _7547 = mem[_3644]
            require ext_code.size(mem[_3644 + 236 len 20])
            staticcall mem[_3644 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7572 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7584 = mem[_7572]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_7546))
            staticcall address(_7546).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7615 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7635 = mem[_7615]
            if mem[_7615] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _7584:
                revert with 0, 18
            mem[mem[64] + 4] = address(_7547)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_7547)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7743 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7756 = mem[_7743]
            if 10^12 * _7635 / _7584 and mem[_7743] > -1 / 10^12 * _7635 / _7584:
                revert with 0, 17
            _7807 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _7635 / _7584 * _7756 / 10^12
            mem[mem[64] + 36] = 64
            _7817 = mem[_1769]
            mem[mem[64] + 68] = mem[_1769]
            t = 0
            u = _1769 + 32
            w = mem[64] + 100
            while t < _7817:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_7547))
            staticcall address(_7547).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _7807 + (32 * _7817) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _9326 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _9347 = mem[_9326]
            require mem[_9326] <= test266151307()
            require _9326 + mem[_9326] + 31 < _9326 + return_data.size
            _9366 = mem[_9326 + mem[_9326]]
            if mem[_9326 + mem[_9326]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_9326 + mem[_9326]]) + 1 < 0 or _9326 + ceil32(return_data.size) + ceil32(32 * mem[_9326 + mem[_9326]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _9326 + ceil32(return_data.size) + ceil32(32 * mem[_9326 + mem[_9326]]) + 1
            mem[_9326 + ceil32(return_data.size)] = _9366
            require _9347 + (32 * _9366) + 32 <= return_data.size
            u = _9326 + ceil32(return_data.size) + 32
            t = _9326 + _9347 + 32
            while t < _9326 + _9347 + (32 * _9366) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _9366:
                revert with 0, 50
            if mem[_3644 + 128] > !mem[_9326 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3644 + 128] = mem[_3644 + 128] + mem[_9326 + ceil32(return_data.size) + 64]
            if v + _7497 > !mem[_3644 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _3681 / _3830 * Mask(112, 0, _3771) / 10^12
            u = 10^12 * _3681 / _3830 * Mask(112, 0, _3747) / 10^12
            v = _3681
            v = _3644
            v = stor9[idx].field_0
            v = v + _7497 + mem[_3644 + 128]
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
        staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                gas gas_remaining wei
               args this.address
        mem[mem[64] len 320] = ext_call.return_data[0 len 320]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3670 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 320
        _3680 = mem[64]
        if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 192
        mem[_3680] = mem[_3670]
        mem[_3680 + 32] = mem[_3670 + 32]
        mem[_3680 + 64] = mem[_3670 + 64]
        require return_data.size - 96 >= 96
        _3700 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_3700] = mem[_3670 + 96]
        mem[_3700 + 32] = mem[_3670 + 128]
        mem[_3700 + 64] = mem[_3670 + 160]
        mem[_3680 + 96] = _3700
        mem[_3680 + 128] = mem[_3670 + 192]
        require return_data.size - 224 >= 96
        _3719 = mem[64]
        if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
            revert with 0, 65
        mem[64] = mem[64] + 96
        mem[_3719] = mem[_3670 + 224]
        mem[_3719 + 32] = mem[_3670 + 256]
        mem[_3719 + 64] = mem[_3670 + 288]
        mem[_3680 + 160] = _3719
        _3739 = mem[_3680 + 64]
        if not mem[_3680 + 64]:
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = t
            u = u
            v = mem[_3680 + 64]
            v = _3644
            v = stor9[idx].field_0
            v = v
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3795 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _3807 = mem[_3795]
        require mem[_3795] == mem[_3795 + 18 len 14]
        _3823 = mem[_3795 + 32]
        require mem[_3795 + 32] == mem[_3795 + 50 len 14]
        require mem[_3795 + 64] == mem[_3795 + 92 len 4]
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
        staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3863 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _3870 = mem[_3863]
        if _3739 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not mem[_3863]:
            revert with 0, 18
        if 10^12 * _3739 / mem[_3863] and Mask(112, 0, _3807) > -1 / 10^12 * _3739 / mem[_3863]:
            revert with 0, 17
        if 10^12 * _3739 / mem[_3863] and Mask(112, 0, _3823) > -1 / 10^12 * _3739 / mem[_3863]:
            revert with 0, 17
        if 1 >= mem[_1769]:
            revert with 0, 50
        mem[_1769 + 64] = stor21
        if 0 >= mem[_1769]:
            revert with 0, 50
        if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
            mem[_1769 + 32] = strategyInfo[stor9[idx].field_0].field_1792
            _4055 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _3739 / _3870 * Mask(112, 0, _3823) / 10^12
            mem[mem[64] + 36] = 64
            _4081 = mem[_1769]
            mem[mem[64] + 68] = mem[_1769]
            s = 0
            t = _1769 + 32
            u = mem[64] + 100
            while s < _4081:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _4055 + (32 * _4081) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5626 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5642 = mem[_5626]
            require mem[_5626] <= test266151307()
            require _5626 + mem[_5626] + 31 < _5626 + return_data.size
            _5662 = mem[_5626 + mem[_5626]]
            if mem[_5626 + mem[_5626]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5626 + mem[_5626]]) + 1 < 0 or _5626 + ceil32(return_data.size) + ceil32(32 * mem[_5626 + mem[_5626]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5626 + ceil32(return_data.size) + ceil32(32 * mem[_5626 + mem[_5626]]) + 1
            mem[_5626 + ceil32(return_data.size)] = _5662
            require _5642 + (32 * _5662) + 32 <= return_data.size
            t = _5626 + ceil32(return_data.size) + 32
            s = _5626 + _5642 + 32
            while s < _5626 + _5642 + (32 * _5662) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _5662:
                revert with 0, 50
            _7496 = mem[_5626 + ceil32(return_data.size) + 64]
            if 10^12 * _3739 / _3870 * Mask(112, 0, _3807) / 10^12 > !mem[_5626 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3644 + 128] = (10^12 * _3739 / _3870 * Mask(112, 0, _3807) / 10^12) + mem[_5626 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _3739 / _3870 * Mask(112, 0, _3807) / 10^12) + _7496):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _5626 + ceil32(return_data.size)
            t = 10^12 * _3739 / _3870 * Mask(112, 0, _3823) / 10^12
            u = 10^12 * _3739 / _3870 * Mask(112, 0, _3807) / 10^12
            v = _3739
            v = _3644
            v = stor9[idx].field_0
            v = v + (10^12 * _3739 / _3870 * Mask(112, 0, _3807) / 10^12) + _7496
            continue 
        mem[_1769 + 32] = strategyInfo[stor9[idx].field_0].field_1536
        if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _3739 / _3870 * Mask(112, 0, _3807) / 10^12
            mem[mem[64] + 36] = 64
            _4092 = mem[_1769]
            mem[mem[64] + 68] = mem[_1769]
            s = 0
            t = _1769 + 32
            w = mem[64] + 100
            while s < _4092:
                mem[w] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _3739 / _3870 * Mask(112, 0, _3807) / 10^12, 64, mem[mem[64] + 68 len (32 * _4092) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5625 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5641 = mem[_5625]
            require mem[_5625] <= test266151307()
            require _5625 + mem[_5625] + 31 < _5625 + return_data.size
            _5661 = mem[_5625 + mem[_5625]]
            if mem[_5625 + mem[_5625]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5625 + mem[_5625]]) + 1 < 0 or _5625 + ceil32(return_data.size) + ceil32(32 * mem[_5625 + mem[_5625]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5625 + ceil32(return_data.size) + ceil32(32 * mem[_5625 + mem[_5625]]) + 1
            mem[_5625 + ceil32(return_data.size)] = _5661
            require _5641 + (32 * _5661) + 32 <= return_data.size
            t = _5625 + ceil32(return_data.size) + 32
            s = _5625 + _5641 + 32
            while s < _5625 + _5641 + (32 * _5661) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _5661:
                revert with 0, 50
            _7495 = mem[_5625 + ceil32(return_data.size) + 64]
            if 10^12 * _3739 / _3870 * Mask(112, 0, _3823) / 10^12 > !mem[_5625 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3644 + 128] = (10^12 * _3739 / _3870 * Mask(112, 0, _3823) / 10^12) + mem[_5625 + ceil32(return_data.size) + 64]
            if v > !((10^12 * _3739 / _3870 * Mask(112, 0, _3823) / 10^12) + _7495):
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _5625 + ceil32(return_data.size)
            t = 10^12 * _3739 / _3870 * Mask(112, 0, _3823) / 10^12
            s = 10^12 * _3739 / _3870 * Mask(112, 0, _3807) / 10^12
            v = _3739
            v = _3644
            v = stor9[idx].field_0
            v = v + (10^12 * _3739 / _3870 * Mask(112, 0, _3823) / 10^12) + _7495
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4100 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4127 = mem[_4100]
        mem[mem[64] + 4] = this.address
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4172 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4191 = mem[_4172]
        if mem[_4172] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _4127:
            revert with 0, 18
        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args strategyInfo[stor9[idx].field_0].field_0
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4273 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4288 = mem[_4273]
        if 10^12 * _4191 / _4127 and mem[_4273] > -1 / 10^12 * _4191 / _4127:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _4191 / _4127 * _4288 / 10^12
        mem[mem[64] + 36] = 64
        _4356 = mem[_1769]
        mem[mem[64] + 68] = mem[_1769]
        t = 0
        u = _1769 + 32
        w = mem[64] + 100
        while t < _4356:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _4191 / _4127 * _4288 / 10^12, 64, mem[mem[64] + 68 len (32 * _4356) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5624 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5640 = mem[_5624]
        require mem[_5624] <= test266151307()
        require _5624 + mem[_5624] + 31 < _5624 + return_data.size
        _5660 = mem[_5624 + mem[_5624]]
        if mem[_5624 + mem[_5624]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_5624 + mem[_5624]]) + 1 < 0 or _5624 + ceil32(return_data.size) + ceil32(32 * mem[_5624 + mem[_5624]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _5624 + ceil32(return_data.size) + ceil32(32 * mem[_5624 + mem[_5624]]) + 1
        mem[_5624 + ceil32(return_data.size)] = _5660
        require _5640 + (32 * _5660) + 32 <= return_data.size
        u = _5624 + ceil32(return_data.size) + 32
        t = _5624 + _5640 + 32
        while t < _5624 + _5640 + (32 * _5660) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _5660:
            revert with 0, 50
        _7494 = mem[_5624 + ceil32(return_data.size) + 64]
        mem[_3644 + 128] = mem[_5624 + ceil32(return_data.size) + 64]
        if v > !_7494:
            revert with 0, 17
        if 0 >= mem[_1769]:
            revert with 0, 50
        mem[_1769 + 32] = mem[_3644 + 236 len 20]
        _7544 = mem[_3644 + 224]
        _7545 = mem[_3644]
        require ext_code.size(mem[_3644 + 236 len 20])
        staticcall mem[_3644 + 236 len 20].0x18160ddd with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _7571 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _7583 = mem[_7571]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_7544))
        staticcall address(_7544).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _7614 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _7634 = mem[_7614]
        if mem[_7614] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
            revert with 0, 17
        if not _7583:
            revert with 0, 18
        mem[mem[64] + 4] = address(_7545)
        require ext_code.size(stor21)
        staticcall stor21.0x70a08231 with:
                gas gas_remaining wei
               args address(_7545)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _7742 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _7755 = mem[_7742]
        if 10^12 * _7634 / _7583 and mem[_7742] > -1 / 10^12 * _7634 / _7583:
            revert with 0, 17
        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
        mem[mem[64] + 4] = 10^12 * _7634 / _7583 * _7755 / 10^12
        mem[mem[64] + 36] = 64
        _7816 = mem[_1769]
        mem[mem[64] + 68] = mem[_1769]
        t = 0
        u = _1769 + 32
        w = mem[64] + 100
        while t < _7816:
            mem[w] = mem[u + 12 len 20]
            t = t + 1
            u = u + 32
            w = w + 32
            continue 
        require ext_code.size(address(_7545))
        staticcall address(_7545).getAmountsOut(uint256 arg1, address[] arg2) with:
                gas gas_remaining wei
               args 10^12 * _7634 / _7583 * _7755 / 10^12, 64, mem[mem[64] + 68 len (32 * _7816) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _9325 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _9346 = mem[_9325]
        require mem[_9325] <= test266151307()
        require _9325 + mem[_9325] + 31 < _9325 + return_data.size
        _9365 = mem[_9325 + mem[_9325]]
        if mem[_9325 + mem[_9325]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_9325 + mem[_9325]]) + 1 < 0 or _9325 + ceil32(return_data.size) + ceil32(32 * mem[_9325 + mem[_9325]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _9325 + ceil32(return_data.size) + ceil32(32 * mem[_9325 + mem[_9325]]) + 1
        mem[_9325 + ceil32(return_data.size)] = _9365
        require _9346 + (32 * _9365) + 32 <= return_data.size
        u = _9325 + ceil32(return_data.size) + 32
        t = _9325 + _9346 + 32
        while t < _9325 + _9346 + (32 * _9365) + 32:
            mem[u] = mem[t]
            u = u + 32
            t = t + 32
            continue 
        if 1 >= _9365:
            revert with 0, 50
        if mem[_3644 + 128] > !mem[_9325 + ceil32(return_data.size) + 64]:
            revert with 0, 17
        mem[_3644 + 128] = mem[_3644 + 128] + mem[_9325 + ceil32(return_data.size) + 64]
        if v + _7494 > !mem[_3644 + 128]:
            revert with 0, 17
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        s = s
        t = 10^12 * _3739 / _3870 * Mask(112, 0, _3823) / 10^12
        u = 10^12 * _3739 / _3870 * Mask(112, 0, _3807) / 10^12
        v = _3739
        v = _3644
        v = stor9[idx].field_0
        v = v + _7494 + mem[_3644 + 128]
        continue 
    _3649 = mem[64]
    mem[mem[64]] = 2
    mem[64] = mem[64] + 96
    if not mem[_3649]:
        revert with 0, 50
    mem[_3649 + 32] = stor21
    if stor21 == stor19:
        if stor21 == stor20:
            require ext_code.size(stor19)
            staticcall stor19.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(stor20)
            staticcall stor20.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                revert with 0, 'Desired value is zero'
            if not ext_call.return_data[0]:
                revert with 0, 'Desired value is zero'
            require ext_code.size(stor19)
            call stor19.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            require ext_code.size(stor20)
            call stor20.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
            if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 0, 17
            if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                revert with 0, 17
            if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                revert with 0, 17
            if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 0, 17
            if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            require ext_code.size(stor22)
            call stor22.addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                 gas gas_remaining wei
                args stor19, stor20, ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
        else:
            if 1 >= mem[_3649]:
                revert with 0, 50
            mem[_3649 + 64] = stor20
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[_3649 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[_3649 + 100] = eth.balance(this.address) / 2
            mem[_3649 + 132] = 128
            mem[_3649 + 228] = mem[_3649]
            idx = 0
            s = _3649 + 32
            t = _3649 + 260
            while idx < mem[_3649]:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_3649 + 164] = this.address
            mem[_3649 + 196] = block.timestamp + 60
            require ext_code.size(stor22)
            call stor22.mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _3649 + (32 * mem[_3649]) + -mem[64] + 256]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5618 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5630 = mem[_5618]
            require mem[_5618] <= test266151307()
            require _5618 + mem[_5618] + 31 < _5618 + return_data.size
            _5650 = mem[_5618 + mem[_5618]]
            if mem[_5618 + mem[_5618]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_5618 + mem[_5618]]) + 1 < 0 or _5618 + ceil32(return_data.size) + ceil32(32 * mem[_5618 + mem[_5618]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _5618 + ceil32(return_data.size) + ceil32(32 * mem[_5618 + mem[_5618]]) + 1
            mem[_5618 + ceil32(return_data.size)] = _5650
            require _5630 + (32 * _5650) + 32 <= return_data.size
            mem[_5618 + ceil32(return_data.size) + 32 len ceil32(32 * _5650)] = mem[_5618 + _5630 + 32 len ceil32(32 * _5650)]
            mem[mem[64] + 4] = this.address
            require ext_code.size(stor19)
            staticcall stor19.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7527 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7543 = mem[_7527]
            mem[mem[64] + 4] = this.address
            require ext_code.size(stor20)
            staticcall stor20.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7582 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7591 = mem[_7582]
            if not _7543:
                revert with 0, 'Desired value is zero'
            if not mem[_7582]:
                revert with 0, 'Desired value is zero'
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor19)
            call stor19.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7673 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_7673] == bool(mem[_7673])
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor20)
            call stor20.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7741 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_7741] == bool(mem[_7741])
            if _7543 and 5 > -1 / _7543:
                revert with 0, 17
            if 5 * _7543 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 0, 17
            if _7543 < 5000 * _7543 / 10^6:
                revert with 0, 17
            if _7591 and 5 > -1 / _7591:
                revert with 0, 17
            if 5 * _7591 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 0, 17
            if _7591 < 5000 * _7591 / 10^6:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            require ext_code.size(stor22)
            call stor22.addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                 gas gas_remaining wei
                args stor19, stor20, _7543, _7591, _7543 - (5000 * _7543 / 10^6), _7591 - (5000 * _7591 / 10^6), address(this.address), block.timestamp + 60
    else:
        if 1 >= mem[_3649]:
            revert with 0, 50
        mem[_3649 + 64] = stor19
        if 60 > !block.timestamp:
            revert with 0, 17
        mem[_3649 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
        mem[_3649 + 100] = eth.balance(this.address) / 2
        mem[_3649 + 132] = 128
        mem[_3649 + 228] = mem[_3649]
        idx = 0
        s = _3649 + 32
        t = _3649 + 260
        while idx < mem[_3649]:
            mem[t] = mem[s + 12 len 20]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        mem[_3649 + 164] = this.address
        mem[_3649 + 196] = block.timestamp + 60
        require ext_code.size(stor22)
        call stor22.mem[mem[64] len 4] with:
           value eth.balance(this.address) / 2 wei
             gas gas_remaining wei
            args mem[mem[64] + 4 len _3649 + (32 * mem[_3649]) + -mem[64] + 256]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _5619 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _5631 = mem[_5619]
        require mem[_5619] <= test266151307()
        require _5619 + mem[_5619] + 31 < _5619 + return_data.size
        _5651 = mem[_5619 + mem[_5619]]
        if mem[_5619 + mem[_5619]] > test266151307():
            revert with 0, 65
        if ceil32(32 * mem[_5619 + mem[_5619]]) + 1 < 0 or _5619 + ceil32(return_data.size) + ceil32(32 * mem[_5619 + mem[_5619]]) + 1 > test266151307():
            revert with 0, 65
        mem[64] = _5619 + ceil32(return_data.size) + ceil32(32 * mem[_5619 + mem[_5619]]) + 1
        mem[_5619 + ceil32(return_data.size)] = _5651
        require _5631 + (32 * _5651) + 32 <= return_data.size
        mem[_5619 + ceil32(return_data.size) + 32 len ceil32(32 * _5651)] = mem[_5619 + _5631 + 32 len ceil32(32 * _5651)]
        if stor21 == stor20:
            mem[mem[64] + 4] = this.address
            require ext_code.size(stor19)
            staticcall stor19.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7534 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7558 = mem[_7534]
            mem[mem[64] + 4] = this.address
            require ext_code.size(stor20)
            staticcall stor20.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7585 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7608 = mem[_7585]
            if not _7558:
                revert with 0, 'Desired value is zero'
            if not mem[_7585]:
                revert with 0, 'Desired value is zero'
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor19)
            call stor19.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7684 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_7684] == bool(mem[_7684])
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor20)
            call stor20.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7752 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_7752] == bool(mem[_7752])
            if _7558 and 5 > -1 / _7558:
                revert with 0, 17
            if 5 * _7558 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 0, 17
            if _7558 < 5000 * _7558 / 10^6:
                revert with 0, 17
            if _7608 and 5 > -1 / _7608:
                revert with 0, 17
            if 5 * _7608 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 0, 17
            if _7608 < 5000 * _7608 / 10^6:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            require ext_code.size(stor22)
            call stor22.addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                 gas gas_remaining wei
                args stor19, stor20, _7558, _7608, _7558 - (5000 * _7558 / 10^6), _7608 - (5000 * _7608 / 10^6), address(this.address), block.timestamp + 60
        else:
            if 1 >= mem[_3649]:
                revert with 0, 50
            mem[_3649 + 64] = stor20
            if 60 > !block.timestamp:
                revert with 0, 17
            _7575 = mem[64]
            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = eth.balance(this.address) / 2
            mem[mem[64] + 36] = 128
            _7586 = mem[_3649]
            mem[mem[64] + 132] = mem[_3649]
            idx = 0
            s = _3649 + 32
            t = mem[64] + 164
            while idx < _7586:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_7575 + 68] = this.address
            mem[_7575 + 100] = block.timestamp + 60
            require ext_code.size(stor22)
            call stor22.mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _7575 + (32 * _7586) + -mem[64] + 160]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _9308 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _9327 = mem[_9308]
            require mem[_9308] <= test266151307()
            require _9308 + mem[_9308] + 31 < _9308 + return_data.size
            _9348 = mem[_9308 + mem[_9308]]
            if mem[_9308 + mem[_9308]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_9308 + mem[_9308]]) + 1 < 0 or _9308 + ceil32(return_data.size) + ceil32(32 * mem[_9308 + mem[_9308]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _9308 + ceil32(return_data.size) + ceil32(32 * mem[_9308 + mem[_9308]]) + 1
            mem[_9308 + ceil32(return_data.size)] = _9348
            require _9327 + (32 * _9348) + 32 <= return_data.size
            mem[_9308 + ceil32(return_data.size) + 32 len ceil32(32 * _9348)] = mem[_9308 + _9327 + 32 len ceil32(32 * _9348)]
            mem[mem[64] + 4] = this.address
            require ext_code.size(stor19)
            staticcall stor19.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10666 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10685 = mem[_10666]
            mem[mem[64] + 4] = this.address
            require ext_code.size(stor20)
            staticcall stor20.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10724 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _10737 = mem[_10724]
            if not _10685:
                revert with 0, 'Desired value is zero'
            if not mem[_10724]:
                revert with 0, 'Desired value is zero'
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor19)
            call stor19.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10816 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_10816] == bool(mem[_10816])
            mem[mem[64] + 4] = stor22
            mem[mem[64] + 36] = -1
            require ext_code.size(stor20)
            call stor20.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args stor22, -1
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _10860 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            require mem[_10860] == bool(mem[_10860])
            if _10685 and 5 > -1 / _10685:
                revert with 0, 17
            if 5 * _10685 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 0, 17
            if _10685 < 5000 * _10685 / 10^6:
                revert with 0, 17
            if _10737 and 5 > -1 / _10737:
                revert with 0, 17
            if 5 * _10737 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 0, 17
            if _10737 < 5000 * _10737 / 10^6:
                revert with 0, 17
            if 60 > !block.timestamp:
                revert with 0, 17
            require ext_code.size(stor22)
            call stor22.addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                 gas gas_remaining wei
                args stor19, stor20, _10685, _10737, _10685 - (5000 * _10685 / 10^6), _10737 - (5000 * _10737 / 10^6), address(this.address), block.timestamp + 60
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
}

function migrate(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if msg.sender == owner:
        if not arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'The _contract can not be a zero address'
        mem[96] = 2
        mem[128 len 64] = call.data[calldata.size len 64]
        mem[64] = 448
        mem[192] = 0
        mem[224] = 0
        mem[256] = 0
        mem[288] = 0
        mem[320] = 0
        mem[352] = 0
        mem[384] = 0
        mem[416] = 0
        idx = 0
        s = 192
        s = 0
        s = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _1539 = mem[64]
            mem[64] = mem[64] + 256
            mem[_1539] = strategyInfo[stor9[idx].field_0].field_0
            mem[_1539 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_1539 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_1539 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_1539 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_1539 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_1539 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_1539 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1562 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1579 = mem[_1562]
                if not mem[_1562]:
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _1539
                    s = mem[_1562]
                    s = stor9[idx].field_0
                    continue 
                mem[0] = stor9[idx].field_0
                mem[32] = 6
                _1624 = mem[64]
                mem[64] = mem[64] + 256
                mem[_1624] = strategyInfo[stor9[idx].field_0].field_0
                mem[_1624 + 32] = strategyInfo[stor9[idx].field_0].field_256
                mem[_1624 + 64] = strategyInfo[stor9[idx].field_0].field_512
                mem[_1624 + 96] = strategyInfo[stor9[idx].field_0].field_768
                mem[_1624 + 128] = strategyInfo[stor9[idx].field_0].field_1024
                mem[_1624 + 160] = strategyInfo[stor9[idx].field_0].field_1280
                mem[_1624 + 192] = strategyInfo[stor9[idx].field_0].field_1536
                mem[_1624 + 224] = strategyInfo[stor9[idx].field_0].field_1792
                if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                    mem[mem[64] + 4] = _1579
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                         gas gas_remaining wei
                        args _1579
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1700 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1719 = mem[_1700]
                    require mem[_1700] == mem[_1700 + 12 len 20]
                    if 0 >= mem[96]:
                        revert with 0, 50
                    mem[128] = mem[_1700 + 12 len 20]
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = stor21
                    require ext_code.size(address(_1719))
                    staticcall address(_1719).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1802 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1822 = mem[_1802]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_1719))
                    staticcall address(_1719).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1868 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1893 = mem[_1868]
                    if mem[_1868] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                        revert with 0, 17
                    if not _1822:
                        revert with 0, 18
                    mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args strategyInfo[stor9[idx].field_0].field_0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1983 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1991 = mem[_1983]
                    if 10^12 * _1893 / _1822 and mem[_1983] > -1 / 10^12 * _1893 / _1822:
                        revert with 0, 17
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _1893 / _1822 * _1991 / 10^12
                    mem[mem[64] + 36] = 64
                    _2077 = mem[96]
                    mem[mem[64] + 68] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 100
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len (32 * _2077) + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3803 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3818 = mem[_3803]
                    require mem[_3803] <= test266151307()
                    require _3803 + mem[_3803] + 31 < _3803 + return_data.size
                    _3836 = mem[_3803 + mem[_3803]]
                    if mem[_3803 + mem[_3803]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_3803 + mem[_3803]]) + 1 < 0 or _3803 + ceil32(return_data.size) + ceil32(32 * mem[_3803 + mem[_3803]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _3803 + ceil32(return_data.size) + ceil32(32 * mem[_3803 + mem[_3803]]) + 1
                    mem[_3803 + ceil32(return_data.size)] = _3836
                    require _3818 + (32 * _3836) + 32 <= return_data.size
                    t = _3803 + ceil32(return_data.size) + 32
                    s = _3803 + _3818 + 32
                    while s < _3803 + _3818 + (32 * _3836) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _3836:
                        revert with 0, 50
                    _7320 = mem[_3803 + ceil32(return_data.size) + 64]
                    if mem[_3803 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_3803 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if 5 * mem[_3803 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if mem[_3803 + ceil32(return_data.size) + 64] < 5000 * mem[_3803 + ceil32(return_data.size) + 64] / 10^6:
                        revert with 0, 17
                    _7494 = mem[_1539]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_1719))
                    staticcall address(_1719).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7558 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7586 = mem[_7558]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _7586
                    mem[mem[64] + 36] = _7320 - (5000 * _7320 / 10^6)
                    mem[mem[64] + 68] = 160
                    _7669 = mem[96]
                    mem[mem[64] + 164] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 196
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 100] = this.address
                    mem[mem[64] + 132] = block.timestamp + 60
                    require ext_code.size(address(_7494))
                    call address(_7494).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _7669) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11439 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11455 = mem[_11439]
                    require mem[_11439] <= test266151307()
                    require _11439 + mem[_11439] + 31 < _11439 + return_data.size
                    _11481 = mem[_11439 + mem[_11439]]
                    if mem[_11439 + mem[_11439]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11439 + mem[_11439]]) + 1 < 0 or _11439 + ceil32(return_data.size) + ceil32(32 * mem[_11439 + mem[_11439]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11439 + ceil32(return_data.size) + ceil32(32 * mem[_11439 + mem[_11439]]) + 1
                    mem[_11439 + ceil32(return_data.size)] = _11481
                    require _11455 + (32 * _11481) + 32 <= return_data.size
                    t = _11439 + ceil32(return_data.size) + 32
                    s = _11439 + _11455 + 32
                    while s < _11439 + _11455 + (32 * _11481) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _15593 = mem[_1539]
                    _15594 = mem[_1539 + 192]
                    _15595 = mem[_1539 + 224]
                    _15622 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    mem[_15622 + 32 len 64] = call.data[calldata.size len 64]
                    if not mem[_15622]:
                        revert with 0, 50
                    mem[_15622 + 32] = stor21
                    if stor21 == address(_15594):
                        if stor21 == address(_15595):
                            mem[_15622 + 100] = this.address
                            require ext_code.size(address(_15594))
                            staticcall address(_15594).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15622 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_15622 + ceil32(return_data.size) + 100] = this.address
                            require ext_code.size(address(_15595))
                            staticcall address(_15595).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15622 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                revert with 0, 'Desired value is zero'
                            if not ext_call.return_data[0]:
                                revert with 0, 'Desired value is zero'
                            mem[_15622 + (2 * ceil32(return_data.size)) + 100] = address(_15593)
                            mem[_15622 + (2 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_15594))
                            call address(_15594).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_15593), -1
                            mem[_15622 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[_15622 + (4 * ceil32(return_data.size)) + 100] = address(_15593)
                            mem[_15622 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_15595))
                            call address(_15595).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_15593), -1
                            mem[_15622 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 0, 17
                            if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 0, 17
                            if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                                revert with 0, 17
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_15622 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                            mem[_15622 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            mem[_15622 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                            mem[_15622 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                            mem[_15622 + (6 * ceil32(return_data.size)) + 292] = this.address
                            mem[_15622 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                            require ext_code.size(address(_15593))
                            call address(_15593).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                                 gas gas_remaining wei
                                args address(_15594), address(_15595), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                            mem[_15622 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _15622 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 96
                            _16777 = mem[_1539 + 160]
                            _16778 = mem[_1539 + 64]
                            _16779 = mem[_1539 + 32]
                            mem[_15622 + (7 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_16779))
                            staticcall address(_16779).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15622 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _15622 + (8 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if _16778 >= 999999:
                                mem[_15622 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                require ext_code.size(address(_16777))
                                call address(_16777).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_15622 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                emit Earn(ext_call.return_data[0]);
                                _17056 = mem[_1539 + 32]
                                mem[_15622 + (8 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(address(_17056))
                                staticcall address(_17056).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_15622 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[_1539 + 96] = ext_call.return_data[0]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[_15622 + (10 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_15622 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _15622 + (11 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _17460 = mem[_1539]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                mem[_15622 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[_15622 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                mem[_15622 + (11 * ceil32(return_data.size)) + 132] = 128
                                mem[_15622 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                                s = 0
                                t = 128
                                u = _15622 + (11 * ceil32(return_data.size)) + 260
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_15622 + (11 * ceil32(return_data.size)) + 164] = this.address
                                mem[_15622 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                                require ext_code.size(address(_17460))
                                call address(_17460).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_15622 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_15622 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _15622 + (12 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _19654 = mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                                require mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                                require _15622 + (11 * ceil32(return_data.size)) + mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _15622 + (11 * ceil32(return_data.size)) + return_data.size + 96
                                _19692 = mem[_15622 + (11 * ceil32(return_data.size)) + mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                if mem[_15622 + (11 * ceil32(return_data.size)) + mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_15622 + (11 * ceil32(return_data.size)) + mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _15622 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15622 + (11 * ceil32(return_data.size)) + mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                    revert with 0, 65
                                mem[64] = _15622 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15622 + (11 * ceil32(return_data.size)) + mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                                mem[_15622 + (12 * ceil32(return_data.size)) + 96] = mem[_15622 + (11 * ceil32(return_data.size)) + mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                require _19654 + (32 * _19692) + 32 <= return_data.size
                                t = _15622 + (12 * ceil32(return_data.size)) + 128
                                s = _15622 + (11 * ceil32(return_data.size)) + _19654 + 128
                                while s < _15622 + (11 * ceil32(return_data.size)) + _19654 + (32 * _19692) + 128:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22847 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_22847]
                            else:
                                mem[_15622 + (8 * ceil32(return_data.size)) + 100] = _16778
                                mem[_15622 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                require ext_code.size(address(_16777))
                                call address(_16777).deposit(uint256 arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args _16778, ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_15622 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                emit Earn(ext_call.return_data[0]);
                                _17057 = mem[_1539 + 32]
                                mem[_15622 + (8 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(address(_17057))
                                staticcall address(_17057).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_15622 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[_1539 + 96] = ext_call.return_data[0]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[_15622 + (10 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_15622 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _15622 + (11 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _17461 = mem[_1539]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                mem[_15622 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[_15622 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                mem[_15622 + (11 * ceil32(return_data.size)) + 132] = 128
                                mem[_15622 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                                s = 0
                                t = 128
                                u = _15622 + (11 * ceil32(return_data.size)) + 260
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_15622 + (11 * ceil32(return_data.size)) + 164] = this.address
                                mem[_15622 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                                require ext_code.size(address(_17461))
                                call address(_17461).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_15622 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_15622 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _15622 + (12 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _19655 = mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                                require mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                                require _15622 + (11 * ceil32(return_data.size)) + mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _15622 + (11 * ceil32(return_data.size)) + return_data.size + 96
                                _19693 = mem[_15622 + (11 * ceil32(return_data.size)) + mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                if mem[_15622 + (11 * ceil32(return_data.size)) + mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_15622 + (11 * ceil32(return_data.size)) + mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _15622 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15622 + (11 * ceil32(return_data.size)) + mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                    revert with 0, 65
                                mem[64] = _15622 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15622 + (11 * ceil32(return_data.size)) + mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                                mem[_15622 + (12 * ceil32(return_data.size)) + 96] = mem[_15622 + (11 * ceil32(return_data.size)) + mem[_15622 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                require _19655 + (32 * _19693) + 32 <= return_data.size
                                t = _15622 + (12 * ceil32(return_data.size)) + 128
                                s = _15622 + (11 * ceil32(return_data.size)) + _19655 + 128
                                while s < _15622 + (11 * ceil32(return_data.size)) + _19655 + (32 * _19693) + 128:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22848 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_22848]
                        else:
                            if 1 >= mem[_15622]:
                                revert with 0, 50
                            mem[_15622 + 64] = address(_15595)
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_15622 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_15622 + 100] = eth.balance(this.address) / 2
                            mem[_15622 + 132] = 128
                            mem[_15622 + 228] = mem[_15622]
                            s = 0
                            t = _15622 + 32
                            u = _15622 + 260
                            while s < mem[_15622]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_15622 + 164] = this.address
                            mem[_15622 + 196] = block.timestamp + 60
                            require ext_code.size(address(_15593))
                            call address(_15593).mem[mem[64] len 4] with:
                               value eth.balance(this.address) / 2 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _15622 + (32 * mem[_15622]) + -mem[64] + 256]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19617 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _19656 = mem[_19617]
                            require mem[_19617] <= test266151307()
                            require _19617 + mem[_19617] + 31 < _19617 + return_data.size
                            _19694 = mem[_19617 + mem[_19617]]
                            if mem[_19617 + mem[_19617]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_19617 + mem[_19617]]) + 1 < 0 or _19617 + ceil32(return_data.size) + ceil32(32 * mem[_19617 + mem[_19617]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _19617 + ceil32(return_data.size) + ceil32(32 * mem[_19617 + mem[_19617]]) + 1
                            mem[_19617 + ceil32(return_data.size)] = _19694
                            require _19656 + (32 * _19694) + 32 <= return_data.size
                            t = _19617 + ceil32(return_data.size) + 32
                            s = _19617 + _19656 + 32
                            while s < _19617 + _19656 + (32 * _19694) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15594))
                            staticcall address(_15594).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22849 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22889 = mem[_22849]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15595))
                            staticcall address(_15595).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22971 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22995 = mem[_22971]
                            if not _22889:
                                revert with 0, 'Desired value is zero'
                            if not mem[_22971]:
                                revert with 0, 'Desired value is zero'
                            mem[mem[64] + 4] = address(_15593)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_15594))
                            call address(_15594).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_15593), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23173 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_23173] == bool(mem[_23173])
                            mem[mem[64] + 4] = address(_15593)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_15595))
                            call address(_15595).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_15593), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23275 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_23275] == bool(mem[_23275])
                            if _22889 and 5 > -1 / _22889:
                                revert with 0, 17
                            if 5 * _22889 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 0, 17
                            if _22889 < 5000 * _22889 / 10^6:
                                revert with 0, 17
                            if _22995 and 5 > -1 / _22995:
                                revert with 0, 17
                            if 5 * _22995 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 0, 17
                            if _22995 < 5000 * _22995 / 10^6:
                                revert with 0, 17
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[mem[64] + 68] = _22889
                            mem[mem[64] + 100] = _22995
                            mem[mem[64] + 132] = _22889 - (5000 * _22889 / 10^6)
                            mem[mem[64] + 164] = _22995 - (5000 * _22995 / 10^6)
                            mem[mem[64] + 196] = this.address
                            mem[mem[64] + 228] = block.timestamp + 60
                            require ext_code.size(address(_15593))
                            call address(_15593).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                                 gas gas_remaining wei
                                args address(_15594), address(_15595), _22889, _22995, _22889 - (5000 * _22889 / 10^6), _22995 - (5000 * _22995 / 10^6), address(this.address), block.timestamp + 60
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _23702 = mem[_1539 + 160]
                            _23703 = mem[_1539 + 64]
                            _23704 = mem[_1539 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_23704))
                            staticcall address(_23704).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23782 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _23805 = mem[_23782]
                            if _23703 >= 999999:
                                mem[mem[64] + 4] = mem[_23782]
                                require ext_code.size(address(_23702))
                                call address(_23702).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _23805
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _23805
                                emit Earn(_23805);
                                _23954 = mem[_1539 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_23954))
                                staticcall address(_23954).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24080 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1539 + 96] = mem[_24080]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24317 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _24361 = mem[_24317]
                                _24421 = mem[_1539]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _24501 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _24361
                                mem[mem[64] + 36] = 128
                                _24550 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 68] = this.address
                                mem[_24501 + 100] = block.timestamp + 60
                                require ext_code.size(address(_24421))
                                call address(_24421).mem[mem[64] len 4] with:
                                   value _24361 wei
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _24501 + (32 * _24550) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25628 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _25681 = mem[_25628]
                                require mem[_25628] <= test266151307()
                                require _25628 + mem[_25628] + 31 < _25628 + return_data.size
                                _25731 = mem[_25628 + mem[_25628]]
                                if mem[_25628 + mem[_25628]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_25628 + mem[_25628]]) + 1 < 0 or _25628 + ceil32(return_data.size) + ceil32(32 * mem[_25628 + mem[_25628]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _25628 + ceil32(return_data.size) + ceil32(32 * mem[_25628 + mem[_25628]]) + 1
                                mem[_25628 + ceil32(return_data.size)] = _25731
                                require _25681 + (32 * _25731) + 32 <= return_data.size
                                t = _25628 + ceil32(return_data.size) + 32
                                s = _25628 + _25681 + 32
                                while s < _25628 + _25681 + (32 * _25731) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27220 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_27220]
                            else:
                                mem[mem[64] + 4] = _23703
                                mem[mem[64] + 36] = _23805
                                require ext_code.size(address(_23702))
                                call address(_23702).deposit(uint256 arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args _23703, _23805
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _23805
                                emit Earn(_23805);
                                _23955 = mem[_1539 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_23955))
                                staticcall address(_23955).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24081 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1539 + 96] = mem[_24081]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24318 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _24362 = mem[_24318]
                                _24422 = mem[_1539]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _24502 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _24362
                                mem[mem[64] + 36] = 128
                                _24551 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 68] = this.address
                                mem[_24502 + 100] = block.timestamp + 60
                                require ext_code.size(address(_24422))
                                call address(_24422).mem[mem[64] len 4] with:
                                   value _24362 wei
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _24502 + (32 * _24551) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25629 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _25682 = mem[_25629]
                                require mem[_25629] <= test266151307()
                                require _25629 + mem[_25629] + 31 < _25629 + return_data.size
                                _25732 = mem[_25629 + mem[_25629]]
                                if mem[_25629 + mem[_25629]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_25629 + mem[_25629]]) + 1 < 0 or _25629 + ceil32(return_data.size) + ceil32(32 * mem[_25629 + mem[_25629]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _25629 + ceil32(return_data.size) + ceil32(32 * mem[_25629 + mem[_25629]]) + 1
                                mem[_25629 + ceil32(return_data.size)] = _25732
                                require _25682 + (32 * _25732) + 32 <= return_data.size
                                t = _25629 + ceil32(return_data.size) + 32
                                s = _25629 + _25682 + 32
                                while s < _25629 + _25682 + (32 * _25732) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27221 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_27221]
                    else:
                        if 1 >= mem[_15622]:
                            revert with 0, 50
                        mem[_15622 + 64] = address(_15594)
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_15622 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_15622 + 100] = eth.balance(this.address) / 2
                        mem[_15622 + 132] = 128
                        mem[_15622 + 228] = mem[_15622]
                        s = 0
                        t = _15622 + 32
                        u = _15622 + 260
                        while s < mem[_15622]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_15622 + 164] = this.address
                        mem[_15622 + 196] = block.timestamp + 60
                        require ext_code.size(address(_15593))
                        call address(_15593).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _15622 + (32 * mem[_15622]) + -mem[64] + 256]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19618 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _19657 = mem[_19618]
                        require mem[_19618] <= test266151307()
                        require _19618 + mem[_19618] + 31 < _19618 + return_data.size
                        _19695 = mem[_19618 + mem[_19618]]
                        if mem[_19618 + mem[_19618]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_19618 + mem[_19618]]) + 1 < 0 or _19618 + ceil32(return_data.size) + ceil32(32 * mem[_19618 + mem[_19618]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _19618 + ceil32(return_data.size) + ceil32(32 * mem[_19618 + mem[_19618]]) + 1
                        mem[_19618 + ceil32(return_data.size)] = _19695
                        require _19657 + (32 * _19695) + 32 <= return_data.size
                        t = _19618 + ceil32(return_data.size) + 32
                        s = _19618 + _19657 + 32
                        while s < _19618 + _19657 + (32 * _19695) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if stor21 == address(_15595):
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15594))
                            staticcall address(_15594).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22871 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22911 = mem[_22871]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15595))
                            staticcall address(_15595).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22981 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _23009 = mem[_22981]
                            if not _22911:
                                revert with 0, 'Desired value is zero'
                            if not mem[_22981]:
                                revert with 0, 'Desired value is zero'
                            mem[mem[64] + 4] = address(_15593)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_15594))
                            call address(_15594).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_15593), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23187 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_23187] == bool(mem[_23187])
                            mem[mem[64] + 4] = address(_15593)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_15595))
                            call address(_15595).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_15593), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23287 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_23287] == bool(mem[_23287])
                            if _22911 and 5 > -1 / _22911:
                                revert with 0, 17
                            if 5 * _22911 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 0, 17
                            if _22911 < 5000 * _22911 / 10^6:
                                revert with 0, 17
                            if _23009 and 5 > -1 / _23009:
                                revert with 0, 17
                            if 5 * _23009 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 0, 17
                            if _23009 < 5000 * _23009 / 10^6:
                                revert with 0, 17
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[mem[64] + 68] = _22911
                            mem[mem[64] + 100] = _23009
                            mem[mem[64] + 132] = _22911 - (5000 * _22911 / 10^6)
                            mem[mem[64] + 164] = _23009 - (5000 * _23009 / 10^6)
                            mem[mem[64] + 196] = this.address
                            mem[mem[64] + 228] = block.timestamp + 60
                            require ext_code.size(address(_15593))
                            call address(_15593).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                                 gas gas_remaining wei
                                args address(_15594), address(_15595), _22911, _23009, _22911 - (5000 * _22911 / 10^6), _23009 - (5000 * _23009 / 10^6), address(this.address), block.timestamp + 60
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _23734 = mem[_1539 + 160]
                            _23735 = mem[_1539 + 64]
                            _23736 = mem[_1539 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_23736))
                            staticcall address(_23736).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23793 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _23817 = mem[_23793]
                            if _23735 >= 999999:
                                mem[mem[64] + 4] = mem[_23793]
                                require ext_code.size(address(_23734))
                                call address(_23734).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _23817
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _23817
                                emit Earn(_23817);
                                _24009 = mem[_1539 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_24009))
                                staticcall address(_24009).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24101 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1539 + 96] = mem[_24101]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24337 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _24385 = mem[_24337]
                                _24443 = mem[_1539]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _24527 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _24385
                                mem[mem[64] + 36] = 128
                                _24576 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 68] = this.address
                                mem[_24527 + 100] = block.timestamp + 60
                                require ext_code.size(address(_24443))
                                call address(_24443).mem[mem[64] len 4] with:
                                   value _24385 wei
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _24527 + (32 * _24576) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25630 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _25683 = mem[_25630]
                                require mem[_25630] <= test266151307()
                                require _25630 + mem[_25630] + 31 < _25630 + return_data.size
                                _25733 = mem[_25630 + mem[_25630]]
                                if mem[_25630 + mem[_25630]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_25630 + mem[_25630]]) + 1 < 0 or _25630 + ceil32(return_data.size) + ceil32(32 * mem[_25630 + mem[_25630]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _25630 + ceil32(return_data.size) + ceil32(32 * mem[_25630 + mem[_25630]]) + 1
                                mem[_25630 + ceil32(return_data.size)] = _25733
                                require _25683 + (32 * _25733) + 32 <= return_data.size
                                t = _25630 + ceil32(return_data.size) + 32
                                s = _25630 + _25683 + 32
                                while s < _25630 + _25683 + (32 * _25733) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27222 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_27222]
                            else:
                                mem[mem[64] + 4] = _23735
                                mem[mem[64] + 36] = _23817
                                require ext_code.size(address(_23734))
                                call address(_23734).deposit(uint256 arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args _23735, _23817
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _23817
                                emit Earn(_23817);
                                _24010 = mem[_1539 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_24010))
                                staticcall address(_24010).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24102 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1539 + 96] = mem[_24102]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24338 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _24386 = mem[_24338]
                                _24444 = mem[_1539]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _24528 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _24386
                                mem[mem[64] + 36] = 128
                                _24577 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 68] = this.address
                                mem[_24528 + 100] = block.timestamp + 60
                                require ext_code.size(address(_24444))
                                call address(_24444).mem[mem[64] len 4] with:
                                   value _24386 wei
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _24528 + (32 * _24577) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25631 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _25684 = mem[_25631]
                                require mem[_25631] <= test266151307()
                                require _25631 + mem[_25631] + 31 < _25631 + return_data.size
                                _25734 = mem[_25631 + mem[_25631]]
                                if mem[_25631 + mem[_25631]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_25631 + mem[_25631]]) + 1 < 0 or _25631 + ceil32(return_data.size) + ceil32(32 * mem[_25631 + mem[_25631]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _25631 + ceil32(return_data.size) + ceil32(32 * mem[_25631 + mem[_25631]]) + 1
                                mem[_25631 + ceil32(return_data.size)] = _25734
                                require _25684 + (32 * _25734) + 32 <= return_data.size
                                t = _25631 + ceil32(return_data.size) + 32
                                s = _25631 + _25684 + 32
                                while s < _25631 + _25684 + (32 * _25734) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27223 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_27223]
                        else:
                            if 1 >= mem[_15622]:
                                revert with 0, 50
                            mem[_15622 + 64] = address(_15595)
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _22953 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = eth.balance(this.address) / 2
                            mem[mem[64] + 36] = 128
                            _22982 = mem[_15622]
                            mem[mem[64] + 132] = mem[_15622]
                            s = 0
                            t = _15622 + 32
                            u = mem[64] + 164
                            while s < _22982:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_22953 + 68] = this.address
                            mem[_22953 + 100] = block.timestamp + 60
                            require ext_code.size(address(_15593))
                            call address(_15593).mem[mem[64] len 4] with:
                               value eth.balance(this.address) / 2 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _22953 + (32 * _22982) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25632 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25685 = mem[_25632]
                            require mem[_25632] <= test266151307()
                            require _25632 + mem[_25632] + 31 < _25632 + return_data.size
                            _25735 = mem[_25632 + mem[_25632]]
                            if mem[_25632 + mem[_25632]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25632 + mem[_25632]]) + 1 < 0 or _25632 + ceil32(return_data.size) + ceil32(32 * mem[_25632 + mem[_25632]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25632 + ceil32(return_data.size) + ceil32(32 * mem[_25632 + mem[_25632]]) + 1
                            mem[_25632 + ceil32(return_data.size)] = _25735
                            require _25685 + (32 * _25735) + 32 <= return_data.size
                            t = _25632 + ceil32(return_data.size) + 32
                            s = _25632 + _25685 + 32
                            while s < _25632 + _25685 + (32 * _25735) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15594))
                            staticcall address(_15594).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27224 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27270 = mem[_27224]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15595))
                            staticcall address(_15595).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27329 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27337 = mem[_27329]
                            if not _27270:
                                revert with 0, 'Desired value is zero'
                            if not mem[_27329]:
                                revert with 0, 'Desired value is zero'
                            mem[mem[64] + 4] = address(_15593)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_15594))
                            call address(_15594).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_15593), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27411 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_27411] == bool(mem[_27411])
                            mem[mem[64] + 4] = address(_15593)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_15595))
                            call address(_15595).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_15593), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27443 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_27443] == bool(mem[_27443])
                            if _27270 and 5 > -1 / _27270:
                                revert with 0, 17
                            if 5 * _27270 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 0, 17
                            if _27270 < 5000 * _27270 / 10^6:
                                revert with 0, 17
                            if _27337 and 5 > -1 / _27337:
                                revert with 0, 17
                            if 5 * _27337 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 0, 17
                            if _27337 < 5000 * _27337 / 10^6:
                                revert with 0, 17
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[mem[64] + 68] = _27270
                            mem[mem[64] + 100] = _27337
                            mem[mem[64] + 132] = _27270 - (5000 * _27270 / 10^6)
                            mem[mem[64] + 164] = _27337 - (5000 * _27337 / 10^6)
                            mem[mem[64] + 196] = this.address
                            mem[mem[64] + 228] = block.timestamp + 60
                            require ext_code.size(address(_15593))
                            call address(_15593).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                                 gas gas_remaining wei
                                args address(_15594), address(_15595), _27270, _27337, _27270 - (5000 * _27270 / 10^6), _27337 - (5000 * _27337 / 10^6), address(this.address), block.timestamp + 60
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _27594 = mem[_1539 + 160]
                            _27595 = mem[_1539 + 64]
                            _27596 = mem[_1539 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27596))
                            staticcall address(_27596).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27636 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27646 = mem[_27636]
                            if _27595 >= 999999:
                                mem[mem[64] + 4] = mem[_27636]
                                require ext_code.size(address(_27594))
                                call address(_27594).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _27646
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _27646
                                emit Earn(_27646);
                                _27729 = mem[_1539 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_27729))
                                staticcall address(_27729).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27782 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1539 + 96] = mem[_27782]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27889 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _27905 = mem[_27889]
                                _27921 = mem[_1539]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _27941 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _27905
                                mem[mem[64] + 36] = 128
                                _27959 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _27959:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_27941 + 68] = this.address
                                mem[_27941 + 100] = block.timestamp + 60
                                require ext_code.size(address(_27921))
                                call address(_27921).mem[mem[64] len 4] with:
                                   value _27905 wei
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _27941 + (32 * _27959) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28253 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _28269 = mem[_28253]
                                require mem[_28253] <= test266151307()
                                require _28253 + mem[_28253] + 31 < _28253 + return_data.size
                                _28285 = mem[_28253 + mem[_28253]]
                                if mem[_28253 + mem[_28253]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_28253 + mem[_28253]]) + 1 < 0 or _28253 + ceil32(return_data.size) + ceil32(32 * mem[_28253 + mem[_28253]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _28253 + ceil32(return_data.size) + ceil32(32 * mem[_28253 + mem[_28253]]) + 1
                                mem[_28253 + ceil32(return_data.size)] = _28285
                                require _28269 + (32 * _28285) + 32 <= return_data.size
                                t = _28253 + ceil32(return_data.size) + 32
                                s = _28253 + _28269 + 32
                                while s < _28253 + _28269 + (32 * _28285) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28637 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_28637]
                            else:
                                mem[mem[64] + 4] = _27595
                                mem[mem[64] + 36] = _27646
                                require ext_code.size(address(_27594))
                                call address(_27594).deposit(uint256 arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args _27595, _27646
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _27646
                                emit Earn(_27646);
                                _27730 = mem[_1539 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_27730))
                                staticcall address(_27730).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27783 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1539 + 96] = mem[_27783]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27890 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _27906 = mem[_27890]
                                _27922 = mem[_1539]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _27942 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _27906
                                mem[mem[64] + 36] = 128
                                _27960 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _27960:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_27942 + 68] = this.address
                                mem[_27942 + 100] = block.timestamp + 60
                                require ext_code.size(address(_27922))
                                call address(_27922).mem[mem[64] len 4] with:
                                   value _27906 wei
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _27942 + (32 * _27960) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28254 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _28270 = mem[_28254]
                                require mem[_28254] <= test266151307()
                                require _28254 + mem[_28254] + 31 < _28254 + return_data.size
                                _28286 = mem[_28254 + mem[_28254]]
                                if mem[_28254 + mem[_28254]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_28254 + mem[_28254]]) + 1 < 0 or _28254 + ceil32(return_data.size) + ceil32(32 * mem[_28254 + mem[_28254]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _28254 + ceil32(return_data.size) + ceil32(32 * mem[_28254 + mem[_28254]]) + 1
                                mem[_28254 + ceil32(return_data.size)] = _28286
                                require _28270 + (32 * _28286) + 32 <= return_data.size
                                t = _28254 + ceil32(return_data.size) + 32
                                s = _28254 + _28270 + 32
                                while s < _28254 + _28270 + (32 * _28286) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28638 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_28638]
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _1539
                    s = _7320 - (5000 * _7320 / 10^6)
                    s = stor9[idx].field_0
                    continue 
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                mem[mem[64] + 36] = _1579
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args strategyInfo[stor9[idx].field_0].field_512, _1579
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1701 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1720 = mem[_1701]
                require mem[_1701] == mem[_1701 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_1701 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_1720))
                staticcall address(_1720).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1803 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1823 = mem[_1803]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1720))
                staticcall address(_1720).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1869 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1894 = mem[_1869]
                if mem[_1869] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _1823:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1984 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1992 = mem[_1984]
                if 10^12 * _1894 / _1823 and mem[_1984] > -1 / 10^12 * _1894 / _1823:
                    revert with 0, 17
                _2051 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1894 / _1823 * _1992 / 10^12
                mem[mem[64] + 36] = 64
                _2078 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < _2078:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _2051 + (32 * _2078) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3804 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3819 = mem[_3804]
                require mem[_3804] <= test266151307()
                require _3804 + mem[_3804] + 31 < _3804 + return_data.size
                _3837 = mem[_3804 + mem[_3804]]
                if mem[_3804 + mem[_3804]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3804 + mem[_3804]]) + 1 < 0 or _3804 + ceil32(return_data.size) + ceil32(32 * mem[_3804 + mem[_3804]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3804 + ceil32(return_data.size) + ceil32(32 * mem[_3804 + mem[_3804]]) + 1
                mem[_3804 + ceil32(return_data.size)] = _3837
                require _3819 + (32 * _3837) + 32 <= return_data.size
                t = _3804 + ceil32(return_data.size) + 32
                s = _3804 + _3819 + 32
                while s < _3804 + _3819 + (32 * _3837) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3837:
                    revert with 0, 50
                _7321 = mem[_3804 + ceil32(return_data.size) + 64]
                if mem[_3804 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_3804 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if 5 * mem[_3804 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if mem[_3804 + ceil32(return_data.size) + 64] < 5000 * mem[_3804 + ceil32(return_data.size) + 64] / 10^6:
                    revert with 0, 17
                _7495 = mem[_1539]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1720))
                staticcall address(_1720).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7559 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7587 = mem[_7559]
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7587
                mem[mem[64] + 36] = _7321 - (5000 * _7321 / 10^6)
                mem[mem[64] + 68] = 160
                _7670 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 100] = this.address
                mem[mem[64] + 132] = block.timestamp + 60
                require ext_code.size(address(_7495))
                call address(_7495).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _7670) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11440 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11456 = mem[_11440]
                require mem[_11440] <= test266151307()
                require _11440 + mem[_11440] + 31 < _11440 + return_data.size
                _11482 = mem[_11440 + mem[_11440]]
                if mem[_11440 + mem[_11440]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_11440 + mem[_11440]]) + 1 < 0 or _11440 + ceil32(return_data.size) + ceil32(32 * mem[_11440 + mem[_11440]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _11440 + ceil32(return_data.size) + ceil32(32 * mem[_11440 + mem[_11440]]) + 1
                mem[_11440 + ceil32(return_data.size)] = _11482
                require _11456 + (32 * _11482) + 32 <= return_data.size
                t = _11440 + ceil32(return_data.size) + 32
                s = _11440 + _11456 + 32
                while s < _11440 + _11456 + (32 * _11482) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _15596 = mem[_1539]
                _15597 = mem[_1539 + 192]
                _15598 = mem[_1539 + 224]
                _15624 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_15624 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_15624]:
                    revert with 0, 50
                mem[_15624 + 32] = stor21
                if stor21 == address(_15597):
                    if stor21 == address(_15598):
                        mem[_15624 + 100] = this.address
                        require ext_code.size(address(_15597))
                        staticcall address(_15597).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15624 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_15624 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_15598))
                        staticcall address(_15598).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15624 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            revert with 0, 'Desired value is zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'Desired value is zero'
                        mem[_15624 + (2 * ceil32(return_data.size)) + 100] = address(_15596)
                        mem[_15624 + (2 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_15597))
                        call address(_15597).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15596), -1
                        mem[_15624 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[_15624 + (4 * ceil32(return_data.size)) + 100] = address(_15596)
                        mem[_15624 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_15598))
                        call address(_15598).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15596), -1
                        mem[_15624 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_15624 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                        mem[_15624 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                        mem[_15624 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                        mem[_15624 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                        mem[_15624 + (6 * ceil32(return_data.size)) + 292] = this.address
                        mem[_15624 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                        require ext_code.size(address(_15596))
                        call address(_15596).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_15597), address(_15598), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                        mem[_15624 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _15624 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 96
                        _16780 = mem[_1539 + 160]
                        _16781 = mem[_1539 + 64]
                        _16782 = mem[_1539 + 32]
                        mem[_15624 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_16782))
                        staticcall address(_16782).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15624 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _15624 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if _16781 >= 999999:
                            mem[_15624 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_16780))
                            call address(_16780).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_15624 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _17058 = mem[_1539 + 32]
                            mem[_15624 + (8 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_17058))
                            staticcall address(_17058).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15624 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1539 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_15624 + (10 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15624 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _15624 + (11 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _17468 = mem[_1539]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_15624 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_15624 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_15624 + (11 * ceil32(return_data.size)) + 132] = 128
                            mem[_15624 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _15624 + (11 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_15624 + (11 * ceil32(return_data.size)) + 164] = this.address
                            mem[_15624 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_17468))
                            call address(_17468).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                               value ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_15624 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_15624 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _15624 + (12 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _19658 = mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _15624 + (11 * ceil32(return_data.size)) + mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _15624 + (11 * ceil32(return_data.size)) + return_data.size + 96
                            _19696 = mem[_15624 + (11 * ceil32(return_data.size)) + mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_15624 + (11 * ceil32(return_data.size)) + mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_15624 + (11 * ceil32(return_data.size)) + mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _15624 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15624 + (11 * ceil32(return_data.size)) + mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _15624 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15624 + (11 * ceil32(return_data.size)) + mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_15624 + (12 * ceil32(return_data.size)) + 96] = mem[_15624 + (11 * ceil32(return_data.size)) + mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _19658 + (32 * _19696) + 32 <= return_data.size
                            t = _15624 + (12 * ceil32(return_data.size)) + 128
                            s = _15624 + (11 * ceil32(return_data.size)) + _19658 + 128
                            while s < _15624 + (11 * ceil32(return_data.size)) + _19658 + (32 * _19696) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22850 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_22850]
                        else:
                            mem[_15624 + (8 * ceil32(return_data.size)) + 100] = _16781
                            mem[_15624 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_16780))
                            call address(_16780).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _16781, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_15624 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _17059 = mem[_1539 + 32]
                            mem[_15624 + (8 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_17059))
                            staticcall address(_17059).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15624 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1539 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_15624 + (10 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15624 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _15624 + (11 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _17469 = mem[_1539]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_15624 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_15624 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_15624 + (11 * ceil32(return_data.size)) + 132] = 128
                            mem[_15624 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _15624 + (11 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_15624 + (11 * ceil32(return_data.size)) + 164] = this.address
                            mem[_15624 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_17469))
                            call address(_17469).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                               value ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_15624 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_15624 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _15624 + (12 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _19659 = mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _15624 + (11 * ceil32(return_data.size)) + mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _15624 + (11 * ceil32(return_data.size)) + return_data.size + 96
                            _19697 = mem[_15624 + (11 * ceil32(return_data.size)) + mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_15624 + (11 * ceil32(return_data.size)) + mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_15624 + (11 * ceil32(return_data.size)) + mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _15624 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15624 + (11 * ceil32(return_data.size)) + mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _15624 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15624 + (11 * ceil32(return_data.size)) + mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_15624 + (12 * ceil32(return_data.size)) + 96] = mem[_15624 + (11 * ceil32(return_data.size)) + mem[_15624 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _19659 + (32 * _19697) + 32 <= return_data.size
                            t = _15624 + (12 * ceil32(return_data.size)) + 128
                            s = _15624 + (11 * ceil32(return_data.size)) + _19659 + 128
                            while s < _15624 + (11 * ceil32(return_data.size)) + _19659 + (32 * _19697) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22851 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_22851]
                    else:
                        if 1 >= mem[_15624]:
                            revert with 0, 50
                        mem[_15624 + 64] = address(_15598)
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_15624 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_15624 + 100] = eth.balance(this.address) / 2
                        mem[_15624 + 132] = 128
                        mem[_15624 + 228] = mem[_15624]
                        s = 0
                        t = _15624 + 32
                        u = _15624 + 260
                        while s < mem[_15624]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_15624 + 164] = this.address
                        mem[_15624 + 196] = block.timestamp + 60
                        require ext_code.size(address(_15596))
                        call address(_15596).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _15624 + (32 * mem[_15624]) + -mem[64] + 256]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19621 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _19660 = mem[_19621]
                        require mem[_19621] <= test266151307()
                        require _19621 + mem[_19621] + 31 < _19621 + return_data.size
                        _19698 = mem[_19621 + mem[_19621]]
                        if mem[_19621 + mem[_19621]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_19621 + mem[_19621]]) + 1 < 0 or _19621 + ceil32(return_data.size) + ceil32(32 * mem[_19621 + mem[_19621]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _19621 + ceil32(return_data.size) + ceil32(32 * mem[_19621 + mem[_19621]]) + 1
                        mem[_19621 + ceil32(return_data.size)] = _19698
                        require _19660 + (32 * _19698) + 32 <= return_data.size
                        t = _19621 + ceil32(return_data.size) + 32
                        s = _19621 + _19660 + 32
                        while s < _19621 + _19660 + (32 * _19698) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15597))
                        staticcall address(_15597).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22852 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22892 = mem[_22852]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15598))
                        staticcall address(_15598).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22972 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22996 = mem[_22972]
                        if not _22892:
                            revert with 0, 'Desired value is zero'
                        if not mem[_22972]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_15596)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15597))
                        call address(_15597).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15596), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23174 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23174] == bool(mem[_23174])
                        mem[mem[64] + 4] = address(_15596)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15598))
                        call address(_15598).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15596), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23276 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23276] == bool(mem[_23276])
                        if _22892 and 5 > -1 / _22892:
                            revert with 0, 17
                        if 5 * _22892 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _22892 < 5000 * _22892 / 10^6:
                            revert with 0, 17
                        if _22996 and 5 > -1 / _22996:
                            revert with 0, 17
                        if 5 * _22996 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _22996 < 5000 * _22996 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _22892
                        mem[mem[64] + 100] = _22996
                        mem[mem[64] + 132] = _22892 - (5000 * _22892 / 10^6)
                        mem[mem[64] + 164] = _22996 - (5000 * _22996 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_15596))
                        call address(_15596).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_15597), address(_15598), _22892, _22996, _22892 - (5000 * _22892 / 10^6), _22996 - (5000 * _22996 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _23705 = mem[_1539 + 160]
                        _23706 = mem[_1539 + 64]
                        _23707 = mem[_1539 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_23707))
                        staticcall address(_23707).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23783 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23806 = mem[_23783]
                        if _23706 >= 999999:
                            mem[mem[64] + 4] = mem[_23783]
                            require ext_code.size(address(_23705))
                            call address(_23705).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _23806
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _23806
                            emit Earn(_23806);
                            _23960 = mem[_1539 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_23960))
                            staticcall address(_23960).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24082 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1539 + 96] = mem[_24082]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24319 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24363 = mem[_24319]
                            _24423 = mem[_1539]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _24504 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _24363
                            mem[mem[64] + 36] = 128
                            _24553 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _24553:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_24504 + 68] = this.address
                            mem[_24504 + 100] = block.timestamp + 60
                            require ext_code.size(address(_24423))
                            call address(_24423).mem[mem[64] len 4] with:
                               value _24363 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _24504 + (32 * _24553) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25633 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25686 = mem[_25633]
                            require mem[_25633] <= test266151307()
                            require _25633 + mem[_25633] + 31 < _25633 + return_data.size
                            _25736 = mem[_25633 + mem[_25633]]
                            if mem[_25633 + mem[_25633]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25633 + mem[_25633]]) + 1 < 0 or _25633 + ceil32(return_data.size) + ceil32(32 * mem[_25633 + mem[_25633]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25633 + ceil32(return_data.size) + ceil32(32 * mem[_25633 + mem[_25633]]) + 1
                            mem[_25633 + ceil32(return_data.size)] = _25736
                            require _25686 + (32 * _25736) + 32 <= return_data.size
                            t = _25633 + ceil32(return_data.size) + 32
                            s = _25633 + _25686 + 32
                            while s < _25633 + _25686 + (32 * _25736) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27225 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_27225]
                        else:
                            mem[mem[64] + 4] = _23706
                            mem[mem[64] + 36] = _23806
                            require ext_code.size(address(_23705))
                            call address(_23705).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _23706, _23806
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _23806
                            emit Earn(_23806);
                            _23961 = mem[_1539 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_23961))
                            staticcall address(_23961).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24083 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1539 + 96] = mem[_24083]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24320 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24364 = mem[_24320]
                            _24424 = mem[_1539]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _24505 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _24364
                            mem[mem[64] + 36] = 128
                            _24554 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_24505 + 100] = block.timestamp + 60
                            require ext_code.size(address(_24424))
                            call address(_24424).mem[mem[64] len 4] with:
                               value _24364 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _24505 + (32 * _24554) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25634 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25687 = mem[_25634]
                            require mem[_25634] <= test266151307()
                            require _25634 + mem[_25634] + 31 < _25634 + return_data.size
                            _25737 = mem[_25634 + mem[_25634]]
                            if mem[_25634 + mem[_25634]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25634 + mem[_25634]]) + 1 < 0 or _25634 + ceil32(return_data.size) + ceil32(32 * mem[_25634 + mem[_25634]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25634 + ceil32(return_data.size) + ceil32(32 * mem[_25634 + mem[_25634]]) + 1
                            mem[_25634 + ceil32(return_data.size)] = _25737
                            require _25687 + (32 * _25737) + 32 <= return_data.size
                            t = _25634 + ceil32(return_data.size) + 32
                            s = _25634 + _25687 + 32
                            while s < _25634 + _25687 + (32 * _25737) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27226 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_27226]
                else:
                    if 1 >= mem[_15624]:
                        revert with 0, 50
                    mem[_15624 + 64] = address(_15597)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_15624 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_15624 + 100] = eth.balance(this.address) / 2
                    mem[_15624 + 132] = 128
                    mem[_15624 + 228] = mem[_15624]
                    s = 0
                    t = _15624 + 32
                    u = _15624 + 260
                    while s < mem[_15624]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_15624 + 164] = this.address
                    mem[_15624 + 196] = block.timestamp + 60
                    require ext_code.size(address(_15596))
                    call address(_15596).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _15624 + (32 * mem[_15624]) + -mem[64] + 256]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19622 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _19661 = mem[_19622]
                    require mem[_19622] <= test266151307()
                    require _19622 + mem[_19622] + 31 < _19622 + return_data.size
                    _19699 = mem[_19622 + mem[_19622]]
                    if mem[_19622 + mem[_19622]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_19622 + mem[_19622]]) + 1 < 0 or _19622 + ceil32(return_data.size) + ceil32(32 * mem[_19622 + mem[_19622]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _19622 + ceil32(return_data.size) + ceil32(32 * mem[_19622 + mem[_19622]]) + 1
                    mem[_19622 + ceil32(return_data.size)] = _19699
                    require _19661 + (32 * _19699) + 32 <= return_data.size
                    t = _19622 + ceil32(return_data.size) + 32
                    s = _19622 + _19661 + 32
                    while s < _19622 + _19661 + (32 * _19699) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_15598):
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15597))
                        staticcall address(_15597).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22872 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22912 = mem[_22872]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15598))
                        staticcall address(_15598).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22983 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23011 = mem[_22983]
                        if not _22912:
                            revert with 0, 'Desired value is zero'
                        if not mem[_22983]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_15596)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15597))
                        call address(_15597).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15596), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23189 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23189] == bool(mem[_23189])
                        mem[mem[64] + 4] = address(_15596)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15598))
                        call address(_15598).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15596), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23288 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23288] == bool(mem[_23288])
                        if _22912 and 5 > -1 / _22912:
                            revert with 0, 17
                        if 5 * _22912 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _22912 < 5000 * _22912 / 10^6:
                            revert with 0, 17
                        if _23011 and 5 > -1 / _23011:
                            revert with 0, 17
                        if 5 * _23011 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _23011 < 5000 * _23011 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _22912
                        mem[mem[64] + 100] = _23011
                        mem[mem[64] + 132] = _22912 - (5000 * _22912 / 10^6)
                        mem[mem[64] + 164] = _23011 - (5000 * _23011 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_15596))
                        call address(_15596).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_15597), address(_15598), _22912, _23011, _22912 - (5000 * _22912 / 10^6), _23011 - (5000 * _23011 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _23739 = mem[_1539 + 160]
                        _23740 = mem[_1539 + 64]
                        _23741 = mem[_1539 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_23741))
                        staticcall address(_23741).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23794 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23818 = mem[_23794]
                        if _23740 >= 999999:
                            mem[mem[64] + 4] = mem[_23794]
                            require ext_code.size(address(_23739))
                            call address(_23739).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _23818
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _23818
                            emit Earn(_23818);
                            _24015 = mem[_1539 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_24015))
                            staticcall address(_24015).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24103 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1539 + 96] = mem[_24103]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24340 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24390 = mem[_24340]
                            _24448 = mem[_1539]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _24529 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _24390
                            mem[mem[64] + 36] = 128
                            _24578 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _24578:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_24529 + 68] = this.address
                            mem[_24529 + 100] = block.timestamp + 60
                            require ext_code.size(address(_24448))
                            call address(_24448).mem[mem[64] len 4] with:
                               value _24390 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _24529 + (32 * _24578) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25635 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25688 = mem[_25635]
                            require mem[_25635] <= test266151307()
                            require _25635 + mem[_25635] + 31 < _25635 + return_data.size
                            _25738 = mem[_25635 + mem[_25635]]
                            if mem[_25635 + mem[_25635]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25635 + mem[_25635]]) + 1 < 0 or _25635 + ceil32(return_data.size) + ceil32(32 * mem[_25635 + mem[_25635]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25635 + ceil32(return_data.size) + ceil32(32 * mem[_25635 + mem[_25635]]) + 1
                            mem[_25635 + ceil32(return_data.size)] = _25738
                            require _25688 + (32 * _25738) + 32 <= return_data.size
                            t = _25635 + ceil32(return_data.size) + 32
                            s = _25635 + _25688 + 32
                            while s < _25635 + _25688 + (32 * _25738) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27227 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_27227]
                        else:
                            mem[mem[64] + 4] = _23740
                            mem[mem[64] + 36] = _23818
                            require ext_code.size(address(_23739))
                            call address(_23739).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _23740, _23818
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _23818
                            emit Earn(_23818);
                            _24016 = mem[_1539 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_24016))
                            staticcall address(_24016).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24104 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1539 + 96] = mem[_24104]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24341 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24391 = mem[_24341]
                            _24449 = mem[_1539]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _24530 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _24391
                            mem[mem[64] + 36] = 128
                            _24579 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_24530 + 100] = block.timestamp + 60
                            require ext_code.size(address(_24449))
                            call address(_24449).mem[mem[64] len 4] with:
                               value _24391 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _24530 + (32 * _24579) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25636 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25689 = mem[_25636]
                            require mem[_25636] <= test266151307()
                            require _25636 + mem[_25636] + 31 < _25636 + return_data.size
                            _25739 = mem[_25636 + mem[_25636]]
                            if mem[_25636 + mem[_25636]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25636 + mem[_25636]]) + 1 < 0 or _25636 + ceil32(return_data.size) + ceil32(32 * mem[_25636 + mem[_25636]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25636 + ceil32(return_data.size) + ceil32(32 * mem[_25636 + mem[_25636]]) + 1
                            mem[_25636 + ceil32(return_data.size)] = _25739
                            require _25689 + (32 * _25739) + 32 <= return_data.size
                            t = _25636 + ceil32(return_data.size) + 32
                            s = _25636 + _25689 + 32
                            while s < _25636 + _25689 + (32 * _25739) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27228 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_27228]
                    else:
                        if 1 >= mem[_15624]:
                            revert with 0, 50
                        mem[_15624 + 64] = address(_15598)
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 128
                        _22984 = mem[_15624]
                        mem[mem[64] + 132] = mem[_15624]
                        s = 0
                        t = _15624 + 32
                        u = mem[64] + 164
                        while s < _22984:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[mem[64] + 100] = block.timestamp + 60
                        require ext_code.size(address(_15596))
                        call address(_15596).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args Mask(255, 1, eth.balance(this.address)), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _22984) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25637 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25690 = mem[_25637]
                        require mem[_25637] <= test266151307()
                        require _25637 + mem[_25637] + 31 < _25637 + return_data.size
                        _25740 = mem[_25637 + mem[_25637]]
                        if mem[_25637 + mem[_25637]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25637 + mem[_25637]]) + 1 < 0 or _25637 + ceil32(return_data.size) + ceil32(32 * mem[_25637 + mem[_25637]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _25637 + ceil32(return_data.size) + ceil32(32 * mem[_25637 + mem[_25637]]) + 1
                        mem[_25637 + ceil32(return_data.size)] = _25740
                        require _25690 + (32 * _25740) + 32 <= return_data.size
                        t = _25637 + ceil32(return_data.size) + 32
                        s = _25637 + _25690 + 32
                        while s < _25637 + _25690 + (32 * _25740) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15597))
                        staticcall address(_15597).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27229 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27275 = mem[_27229]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15598))
                        staticcall address(_15598).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27330 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27338 = mem[_27330]
                        if not _27275:
                            revert with 0, 'Desired value is zero'
                        if not mem[_27330]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_15596)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15597))
                        call address(_15597).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15596), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27412 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27412] == bool(mem[_27412])
                        mem[mem[64] + 4] = address(_15596)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15598))
                        call address(_15598).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15596), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27444 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27444] == bool(mem[_27444])
                        if _27275 and 5 > -1 / _27275:
                            revert with 0, 17
                        if 5 * _27275 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _27275 < 5000 * _27275 / 10^6:
                            revert with 0, 17
                        if _27338 and 5 > -1 / _27338:
                            revert with 0, 17
                        if 5 * _27338 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _27338 < 5000 * _27338 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _27275
                        mem[mem[64] + 100] = _27338
                        mem[mem[64] + 132] = _27275 - (5000 * _27275 / 10^6)
                        mem[mem[64] + 164] = _27338 - (5000 * _27338 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_15596))
                        call address(_15596).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_15597), address(_15598), _27275, _27338, _27275 - (5000 * _27275 / 10^6), _27338 - (5000 * _27338 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _27597 = mem[_1539 + 160]
                        _27598 = mem[_1539 + 64]
                        _27599 = mem[_1539 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27599))
                        staticcall address(_27599).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27637 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27647 = mem[_27637]
                        if _27598 >= 999999:
                            mem[mem[64] + 4] = mem[_27637]
                            require ext_code.size(address(_27597))
                            call address(_27597).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _27647
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27647
                            emit Earn(_27647);
                            _27731 = mem[_1539 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27731))
                            staticcall address(_27731).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27784 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1539 + 96] = mem[_27784]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27891 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27907 = mem[_27891]
                            _27923 = mem[_1539]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _27943 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _27907
                            mem[mem[64] + 36] = 128
                            _27961 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _27961:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_27943 + 68] = this.address
                            mem[_27943 + 100] = block.timestamp + 60
                            require ext_code.size(address(_27923))
                            call address(_27923).mem[mem[64] len 4] with:
                               value _27907 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _27943 + (32 * _27961) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28255 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28271 = mem[_28255]
                            require mem[_28255] <= test266151307()
                            require _28255 + mem[_28255] + 31 < _28255 + return_data.size
                            _28287 = mem[_28255 + mem[_28255]]
                            if mem[_28255 + mem[_28255]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_28255 + mem[_28255]]) + 1 < 0 or _28255 + ceil32(return_data.size) + ceil32(32 * mem[_28255 + mem[_28255]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _28255 + ceil32(return_data.size) + ceil32(32 * mem[_28255 + mem[_28255]]) + 1
                            mem[_28255 + ceil32(return_data.size)] = _28287
                            require _28271 + (32 * _28287) + 32 <= return_data.size
                            t = _28255 + ceil32(return_data.size) + 32
                            s = _28255 + _28271 + 32
                            while s < _28255 + _28271 + (32 * _28287) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28639 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28639]
                        else:
                            mem[mem[64] + 4] = _27598
                            mem[mem[64] + 36] = _27647
                            require ext_code.size(address(_27597))
                            call address(_27597).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _27598, _27647
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27647
                            emit Earn(_27647);
                            _27732 = mem[_1539 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27732))
                            staticcall address(_27732).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27785 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1539 + 96] = mem[_27785]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27892 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27908 = mem[_27892]
                            _27924 = mem[_1539]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _27944 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _27908
                            mem[mem[64] + 36] = 128
                            _27962 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_27944 + 100] = block.timestamp + 60
                            require ext_code.size(address(_27924))
                            call address(_27924).mem[mem[64] len 4] with:
                               value _27908 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _27944 + (32 * _27962) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28256 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28272 = mem[_28256]
                            require mem[_28256] <= test266151307()
                            require _28256 + mem[_28256] + 31 < _28256 + return_data.size
                            _28288 = mem[_28256 + mem[_28256]]
                            if mem[_28256 + mem[_28256]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_28256 + mem[_28256]]) + 1 < 0 or _28256 + ceil32(return_data.size) + ceil32(32 * mem[_28256 + mem[_28256]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _28256 + ceil32(return_data.size) + ceil32(32 * mem[_28256 + mem[_28256]]) + 1
                            mem[_28256 + ceil32(return_data.size)] = _28288
                            require _28272 + (32 * _28288) + 32 <= return_data.size
                            t = _28256 + ceil32(return_data.size) + 32
                            s = _28256 + _28272 + 32
                            while s < _28256 + _28272 + (32 * _28288) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28640 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28640]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1539
                s = _7321 - (5000 * _7321 / 10^6)
                s = stor9[idx].field_0
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1561 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _1578 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_1578] = mem[_1561]
            mem[_1578 + 32] = mem[_1561 + 32]
            mem[_1578 + 64] = mem[_1561 + 64]
            require return_data.size - 96 >= 96
            _1607 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_1607] = mem[_1561 + 96]
            mem[_1607 + 32] = mem[_1561 + 128]
            mem[_1607 + 64] = mem[_1561 + 160]
            mem[_1578 + 96] = _1607
            mem[_1578 + 128] = mem[_1561 + 192]
            require return_data.size - 224 >= 96
            _1648 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_1648] = mem[_1561 + 224]
            mem[_1648 + 32] = mem[_1561 + 256]
            mem[_1648 + 64] = mem[_1561 + 288]
            mem[_1578 + 160] = _1648
            _1673 = mem[_1578 + 64]
            if not mem[_1578 + 64]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1539
                s = mem[_1578 + 64]
                s = stor9[idx].field_0
                continue 
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _1710 = mem[64]
            mem[64] = mem[64] + 256
            mem[_1710] = strategyInfo[stor9[idx].field_0].field_0
            mem[_1710 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_1710 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_1710 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_1710 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_1710 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_1710 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_1710 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 4] = _1673
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _1673
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1771 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1781 = mem[_1771]
                require mem[_1771] == mem[_1771 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_1771 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_1781))
                staticcall address(_1781).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1900 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1920 = mem[_1900]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1781))
                staticcall address(_1781).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1964 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1979 = mem[_1964]
                if mem[_1964] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _1920:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2048 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2075 = mem[_2048]
                if 10^12 * _1979 / _1920 and mem[_2048] > -1 / 10^12 * _1979 / _1920:
                    revert with 0, 17
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1979 / _1920 * _2075 / 10^12
                mem[mem[64] + 36] = 64
                _2184 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len (32 * _2184) + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3801 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3816 = mem[_3801]
                require mem[_3801] <= test266151307()
                require _3801 + mem[_3801] + 31 < _3801 + return_data.size
                _3834 = mem[_3801 + mem[_3801]]
                if mem[_3801 + mem[_3801]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3801 + mem[_3801]]) + 1 < 0 or _3801 + ceil32(return_data.size) + ceil32(32 * mem[_3801 + mem[_3801]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3801 + ceil32(return_data.size) + ceil32(32 * mem[_3801 + mem[_3801]]) + 1
                mem[_3801 + ceil32(return_data.size)] = _3834
                require _3816 + (32 * _3834) + 32 <= return_data.size
                t = _3801 + ceil32(return_data.size) + 32
                s = _3801 + _3816 + 32
                while s < _3801 + _3816 + (32 * _3834) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3834:
                    revert with 0, 50
                _7318 = mem[_3801 + ceil32(return_data.size) + 64]
                if mem[_3801 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_3801 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if 5 * mem[_3801 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if mem[_3801 + ceil32(return_data.size) + 64] < 5000 * mem[_3801 + ceil32(return_data.size) + 64] / 10^6:
                    revert with 0, 17
                _7492 = mem[_1539]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1781))
                staticcall address(_1781).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7556 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7584 = mem[_7556]
                if 60 > !block.timestamp:
                    revert with 0, 17
                _7643 = mem[64]
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7584
                mem[mem[64] + 36] = _7318 - (5000 * _7318 / 10^6)
                mem[mem[64] + 68] = 160
                _7667 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < _7667:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_7643 + 100] = this.address
                mem[_7643 + 132] = block.timestamp + 60
                require ext_code.size(address(_7492))
                call address(_7492).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _7643 + (32 * _7667) + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11437 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11453 = mem[_11437]
                require mem[_11437] <= test266151307()
                require _11437 + mem[_11437] + 31 < _11437 + return_data.size
                _11479 = mem[_11437 + mem[_11437]]
                if mem[_11437 + mem[_11437]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_11437 + mem[_11437]]) + 1 < 0 or _11437 + ceil32(return_data.size) + ceil32(32 * mem[_11437 + mem[_11437]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _11437 + ceil32(return_data.size) + ceil32(32 * mem[_11437 + mem[_11437]]) + 1
                mem[_11437 + ceil32(return_data.size)] = _11479
                require _11453 + (32 * _11479) + 32 <= return_data.size
                t = _11437 + ceil32(return_data.size) + 32
                s = _11437 + _11453 + 32
                while s < _11437 + _11453 + (32 * _11479) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _15587 = mem[_1539]
                _15588 = mem[_1539 + 192]
                _15589 = mem[_1539 + 224]
                _15618 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_15618 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_15618]:
                    revert with 0, 50
                mem[_15618 + 32] = stor21
                if stor21 == address(_15588):
                    if stor21 == address(_15589):
                        mem[_15618 + 100] = this.address
                        require ext_code.size(address(_15588))
                        staticcall address(_15588).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15618 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_15618 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_15589))
                        staticcall address(_15589).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15618 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            revert with 0, 'Desired value is zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'Desired value is zero'
                        mem[_15618 + (2 * ceil32(return_data.size)) + 100] = address(_15587)
                        mem[_15618 + (2 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_15588))
                        call address(_15588).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15587), -1
                        mem[_15618 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[_15618 + (4 * ceil32(return_data.size)) + 100] = address(_15587)
                        mem[_15618 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_15589))
                        call address(_15589).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15587), -1
                        mem[_15618 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_15618 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                        mem[_15618 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                        mem[_15618 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                        mem[_15618 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                        mem[_15618 + (6 * ceil32(return_data.size)) + 292] = this.address
                        mem[_15618 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                        require ext_code.size(address(_15587))
                        call address(_15587).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_15588), address(_15589), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                        mem[_15618 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _15618 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 96
                        _16771 = mem[_1539 + 160]
                        _16772 = mem[_1539 + 64]
                        _16773 = mem[_1539 + 32]
                        mem[_15618 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_16773))
                        staticcall address(_16773).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15618 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _15618 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if _16772 >= 999999:
                            mem[_15618 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_16771))
                            call address(_16771).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_15618 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _17052 = mem[_1539 + 32]
                            mem[_15618 + (8 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_17052))
                            staticcall address(_17052).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15618 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1539 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_15618 + (10 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15618 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _15618 + (11 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _17444 = mem[_1539]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_15618 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_15618 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_15618 + (11 * ceil32(return_data.size)) + 132] = 128
                            mem[_15618 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _15618 + (11 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_15618 + (11 * ceil32(return_data.size)) + 164] = this.address
                            mem[_15618 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_17444))
                            call address(_17444).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                               value ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_15618 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_15618 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _15618 + (12 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _19646 = mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _15618 + (11 * ceil32(return_data.size)) + mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _15618 + (11 * ceil32(return_data.size)) + return_data.size + 96
                            _19684 = mem[_15618 + (11 * ceil32(return_data.size)) + mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_15618 + (11 * ceil32(return_data.size)) + mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_15618 + (11 * ceil32(return_data.size)) + mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _15618 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15618 + (11 * ceil32(return_data.size)) + mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _15618 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15618 + (11 * ceil32(return_data.size)) + mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_15618 + (12 * ceil32(return_data.size)) + 96] = mem[_15618 + (11 * ceil32(return_data.size)) + mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _19646 + (32 * _19684) + 32 <= return_data.size
                            t = _15618 + (12 * ceil32(return_data.size)) + 128
                            s = _15618 + (11 * ceil32(return_data.size)) + _19646 + 128
                            while s < _15618 + (11 * ceil32(return_data.size)) + _19646 + (32 * _19684) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22841 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_22841]
                        else:
                            mem[_15618 + (8 * ceil32(return_data.size)) + 100] = _16772
                            mem[_15618 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_16771))
                            call address(_16771).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _16772, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_15618 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _17053 = mem[_1539 + 32]
                            mem[_15618 + (8 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_17053))
                            staticcall address(_17053).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15618 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1539 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_15618 + (10 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15618 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _15618 + (11 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _17445 = mem[_1539]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_15618 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_15618 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_15618 + (11 * ceil32(return_data.size)) + 132] = 128
                            mem[_15618 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _15618 + (11 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_15618 + (11 * ceil32(return_data.size)) + 164] = this.address
                            mem[_15618 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_17445))
                            call address(_17445).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                               value ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_15618 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_15618 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _15618 + (12 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _19647 = mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _15618 + (11 * ceil32(return_data.size)) + mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _15618 + (11 * ceil32(return_data.size)) + return_data.size + 96
                            _19685 = mem[_15618 + (11 * ceil32(return_data.size)) + mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_15618 + (11 * ceil32(return_data.size)) + mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_15618 + (11 * ceil32(return_data.size)) + mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _15618 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15618 + (11 * ceil32(return_data.size)) + mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _15618 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15618 + (11 * ceil32(return_data.size)) + mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_15618 + (12 * ceil32(return_data.size)) + 96] = mem[_15618 + (11 * ceil32(return_data.size)) + mem[_15618 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            require _19647 + (32 * _19685) + 32 <= return_data.size
                            t = _15618 + (12 * ceil32(return_data.size)) + 128
                            s = _15618 + (11 * ceil32(return_data.size)) + _19647 + 128
                            while s < _15618 + (11 * ceil32(return_data.size)) + _19647 + (32 * _19685) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22842 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_22842]
                    else:
                        if 1 >= mem[_15618]:
                            revert with 0, 50
                        mem[_15618 + 64] = address(_15589)
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_15618 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_15618 + 100] = eth.balance(this.address) / 2
                        mem[_15618 + 132] = 128
                        mem[_15618 + 228] = mem[_15618]
                        s = 0
                        t = _15618 + 32
                        u = _15618 + 260
                        while s < mem[_15618]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_15618 + 164] = this.address
                        mem[_15618 + 196] = block.timestamp + 60
                        require ext_code.size(address(_15587))
                        call address(_15587).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _15618 + (32 * mem[_15618]) + -mem[64] + 256]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19609 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _19648 = mem[_19609]
                        require mem[_19609] <= test266151307()
                        require _19609 + mem[_19609] + 31 < _19609 + return_data.size
                        _19686 = mem[_19609 + mem[_19609]]
                        if mem[_19609 + mem[_19609]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_19609 + mem[_19609]]) + 1 < 0 or _19609 + ceil32(return_data.size) + ceil32(32 * mem[_19609 + mem[_19609]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _19609 + ceil32(return_data.size) + ceil32(32 * mem[_19609 + mem[_19609]]) + 1
                        mem[_19609 + ceil32(return_data.size)] = _19686
                        require _19648 + (32 * _19686) + 32 <= return_data.size
                        t = _19609 + ceil32(return_data.size) + 32
                        s = _19609 + _19648 + 32
                        while s < _19609 + _19648 + (32 * _19686) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15588))
                        staticcall address(_15588).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22843 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22883 = mem[_22843]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15589))
                        staticcall address(_15589).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22969 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22993 = mem[_22969]
                        if not _22883:
                            revert with 0, 'Desired value is zero'
                        if not mem[_22969]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_15587)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15588))
                        call address(_15588).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15587), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23171 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23171] == bool(mem[_23171])
                        mem[mem[64] + 4] = address(_15587)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15589))
                        call address(_15589).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15587), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23273 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23273] == bool(mem[_23273])
                        if _22883 and 5 > -1 / _22883:
                            revert with 0, 17
                        if 5 * _22883 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _22883 < 5000 * _22883 / 10^6:
                            revert with 0, 17
                        if _22993 and 5 > -1 / _22993:
                            revert with 0, 17
                        if 5 * _22993 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _22993 < 5000 * _22993 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _22883
                        mem[mem[64] + 100] = _22993
                        mem[mem[64] + 132] = _22883 - (5000 * _22883 / 10^6)
                        mem[mem[64] + 164] = _22993 - (5000 * _22993 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_15587))
                        call address(_15587).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_15588), address(_15589), _22883, _22993, _22883 - (5000 * _22883 / 10^6), _22993 - (5000 * _22993 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _23696 = mem[_1539 + 160]
                        _23697 = mem[_1539 + 64]
                        _23698 = mem[_1539 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_23698))
                        staticcall address(_23698).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23780 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23803 = mem[_23780]
                        if _23697 >= 999999:
                            mem[mem[64] + 4] = mem[_23780]
                            require ext_code.size(address(_23696))
                            call address(_23696).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _23803
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _23803
                            emit Earn(_23803);
                            _23942 = mem[_1539 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_23942))
                            staticcall address(_23942).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24076 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1539 + 96] = mem[_24076]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24313 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24357 = mem[_24313]
                            _24417 = mem[_1539]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _24495 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _24357
                            mem[mem[64] + 36] = 128
                            _24544 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_24495 + 100] = block.timestamp + 60
                            require ext_code.size(address(_24417))
                            call address(_24417).mem[mem[64] len 4] with:
                               value _24357 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _24495 + (32 * _24544) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25618 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25671 = mem[_25618]
                            require mem[_25618] <= test266151307()
                            require _25618 + mem[_25618] + 31 < _25618 + return_data.size
                            _25721 = mem[_25618 + mem[_25618]]
                            if mem[_25618 + mem[_25618]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25618 + mem[_25618]]) + 1 < 0 or _25618 + ceil32(return_data.size) + ceil32(32 * mem[_25618 + mem[_25618]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25618 + ceil32(return_data.size) + ceil32(32 * mem[_25618 + mem[_25618]]) + 1
                            mem[_25618 + ceil32(return_data.size)] = _25721
                            require _25671 + (32 * _25721) + 32 <= return_data.size
                            t = _25618 + ceil32(return_data.size) + 32
                            s = _25618 + _25671 + 32
                            while s < _25618 + _25671 + (32 * _25721) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27210 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_27210]
                        else:
                            mem[mem[64] + 4] = _23697
                            mem[mem[64] + 36] = _23803
                            require ext_code.size(address(_23696))
                            call address(_23696).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _23697, _23803
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _23803
                            emit Earn(_23803);
                            _23943 = mem[_1539 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_23943))
                            staticcall address(_23943).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24077 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1539 + 96] = mem[_24077]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24314 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24358 = mem[_24314]
                            _24418 = mem[_1539]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _24496 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _24358
                            mem[mem[64] + 36] = 128
                            _24545 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_24496 + 100] = block.timestamp + 60
                            require ext_code.size(address(_24418))
                            call address(_24418).mem[mem[64] len 4] with:
                               value _24358 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _24496 + (32 * _24545) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25619 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25672 = mem[_25619]
                            require mem[_25619] <= test266151307()
                            require _25619 + mem[_25619] + 31 < _25619 + return_data.size
                            _25722 = mem[_25619 + mem[_25619]]
                            if mem[_25619 + mem[_25619]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25619 + mem[_25619]]) + 1 < 0 or _25619 + ceil32(return_data.size) + ceil32(32 * mem[_25619 + mem[_25619]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25619 + ceil32(return_data.size) + ceil32(32 * mem[_25619 + mem[_25619]]) + 1
                            mem[_25619 + ceil32(return_data.size)] = _25722
                            require _25672 + (32 * _25722) + 32 <= return_data.size
                            t = _25619 + ceil32(return_data.size) + 32
                            s = _25619 + _25672 + 32
                            while s < _25619 + _25672 + (32 * _25722) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27211 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_27211]
                else:
                    if 1 >= mem[_15618]:
                        revert with 0, 50
                    mem[_15618 + 64] = address(_15588)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_15618 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_15618 + 100] = eth.balance(this.address) / 2
                    mem[_15618 + 132] = 128
                    mem[_15618 + 228] = mem[_15618]
                    s = 0
                    t = _15618 + 32
                    u = _15618 + 260
                    while s < mem[_15618]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_15618 + 164] = this.address
                    mem[_15618 + 196] = block.timestamp + 60
                    require ext_code.size(address(_15587))
                    call address(_15587).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _15618 + (32 * mem[_15618]) + -mem[64] + 256]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19610 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _19649 = mem[_19610]
                    require mem[_19610] <= test266151307()
                    require _19610 + mem[_19610] + 31 < _19610 + return_data.size
                    _19687 = mem[_19610 + mem[_19610]]
                    if mem[_19610 + mem[_19610]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_19610 + mem[_19610]]) + 1 < 0 or _19610 + ceil32(return_data.size) + ceil32(32 * mem[_19610 + mem[_19610]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _19610 + ceil32(return_data.size) + ceil32(32 * mem[_19610 + mem[_19610]]) + 1
                    mem[_19610 + ceil32(return_data.size)] = _19687
                    require _19649 + (32 * _19687) + 32 <= return_data.size
                    t = _19610 + ceil32(return_data.size) + 32
                    s = _19610 + _19649 + 32
                    while s < _19610 + _19649 + (32 * _19687) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_15589):
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15588))
                        staticcall address(_15588).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22869 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22909 = mem[_22869]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15589))
                        staticcall address(_15589).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22977 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23005 = mem[_22977]
                        if not _22909:
                            revert with 0, 'Desired value is zero'
                        if not mem[_22977]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_15587)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15588))
                        call address(_15588).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15587), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23183 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23183] == bool(mem[_23183])
                        mem[mem[64] + 4] = address(_15587)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15589))
                        call address(_15589).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15587), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23285 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23285] == bool(mem[_23285])
                        if _22909 and 5 > -1 / _22909:
                            revert with 0, 17
                        if 5 * _22909 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _22909 < 5000 * _22909 / 10^6:
                            revert with 0, 17
                        if _23005 and 5 > -1 / _23005:
                            revert with 0, 17
                        if 5 * _23005 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _23005 < 5000 * _23005 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _22909
                        mem[mem[64] + 100] = _23005
                        mem[mem[64] + 132] = _22909 - (5000 * _22909 / 10^6)
                        mem[mem[64] + 164] = _23005 - (5000 * _23005 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_15587))
                        call address(_15587).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_15588), address(_15589), _22909, _23005, _22909 - (5000 * _22909 / 10^6), _23005 - (5000 * _23005 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _23724 = mem[_1539 + 160]
                        _23725 = mem[_1539 + 64]
                        _23726 = mem[_1539 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_23726))
                        staticcall address(_23726).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23791 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23815 = mem[_23791]
                        if _23725 >= 999999:
                            mem[mem[64] + 4] = mem[_23791]
                            require ext_code.size(address(_23724))
                            call address(_23724).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _23815
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _23815
                            emit Earn(_23815);
                            _23997 = mem[_1539 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_23997))
                            staticcall address(_23997).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24097 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1539 + 96] = mem[_24097]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24331 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24375 = mem[_24331]
                            _24433 = mem[_1539]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _24523 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _24375
                            mem[mem[64] + 36] = 128
                            _24572 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_24523 + 100] = block.timestamp + 60
                            require ext_code.size(address(_24433))
                            call address(_24433).mem[mem[64] len 4] with:
                               value _24375 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _24523 + (32 * _24572) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25620 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25673 = mem[_25620]
                            require mem[_25620] <= test266151307()
                            require _25620 + mem[_25620] + 31 < _25620 + return_data.size
                            _25723 = mem[_25620 + mem[_25620]]
                            if mem[_25620 + mem[_25620]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25620 + mem[_25620]]) + 1 < 0 or _25620 + ceil32(return_data.size) + ceil32(32 * mem[_25620 + mem[_25620]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25620 + ceil32(return_data.size) + ceil32(32 * mem[_25620 + mem[_25620]]) + 1
                            mem[_25620 + ceil32(return_data.size)] = _25723
                            require _25673 + (32 * _25723) + 32 <= return_data.size
                            t = _25620 + ceil32(return_data.size) + 32
                            s = _25620 + _25673 + 32
                            while s < _25620 + _25673 + (32 * _25723) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27212 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_27212]
                        else:
                            mem[mem[64] + 4] = _23725
                            mem[mem[64] + 36] = _23815
                            require ext_code.size(address(_23724))
                            call address(_23724).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _23725, _23815
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _23815
                            emit Earn(_23815);
                            _23998 = mem[_1539 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_23998))
                            staticcall address(_23998).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24098 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1539 + 96] = mem[_24098]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24332 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24376 = mem[_24332]
                            _24434 = mem[_1539]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _24524 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _24376
                            mem[mem[64] + 36] = 128
                            _24573 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_24524 + 100] = block.timestamp + 60
                            require ext_code.size(address(_24434))
                            call address(_24434).mem[mem[64] len 4] with:
                               value _24376 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _24524 + (32 * _24573) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25621 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25674 = mem[_25621]
                            require mem[_25621] <= test266151307()
                            require _25621 + mem[_25621] + 31 < _25621 + return_data.size
                            _25724 = mem[_25621 + mem[_25621]]
                            if mem[_25621 + mem[_25621]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25621 + mem[_25621]]) + 1 < 0 or _25621 + ceil32(return_data.size) + ceil32(32 * mem[_25621 + mem[_25621]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25621 + ceil32(return_data.size) + ceil32(32 * mem[_25621 + mem[_25621]]) + 1
                            mem[_25621 + ceil32(return_data.size)] = _25724
                            require _25674 + (32 * _25724) + 32 <= return_data.size
                            t = _25621 + ceil32(return_data.size) + 32
                            s = _25621 + _25674 + 32
                            while s < _25621 + _25674 + (32 * _25724) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27213 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_27213]
                    else:
                        if 1 >= mem[_15618]:
                            revert with 0, 50
                        mem[_15618 + 64] = address(_15589)
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 128
                        _22978 = mem[_15618]
                        mem[mem[64] + 132] = mem[_15618]
                        s = 0
                        t = _15618 + 32
                        u = mem[64] + 164
                        while s < _22978:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[mem[64] + 100] = block.timestamp + 60
                        require ext_code.size(address(_15587))
                        call address(_15587).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args Mask(255, 1, eth.balance(this.address)), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _22978) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25622 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25675 = mem[_25622]
                        require mem[_25622] <= test266151307()
                        require _25622 + mem[_25622] + 31 < _25622 + return_data.size
                        _25725 = mem[_25622 + mem[_25622]]
                        if mem[_25622 + mem[_25622]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25622 + mem[_25622]]) + 1 < 0 or _25622 + ceil32(return_data.size) + ceil32(32 * mem[_25622 + mem[_25622]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _25622 + ceil32(return_data.size) + ceil32(32 * mem[_25622 + mem[_25622]]) + 1
                        mem[_25622 + ceil32(return_data.size)] = _25725
                        require _25675 + (32 * _25725) + 32 <= return_data.size
                        t = _25622 + ceil32(return_data.size) + 32
                        s = _25622 + _25675 + 32
                        while s < _25622 + _25675 + (32 * _25725) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15588))
                        staticcall address(_15588).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27214 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27260 = mem[_27214]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15589))
                        staticcall address(_15589).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27327 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27335 = mem[_27327]
                        if not _27260:
                            revert with 0, 'Desired value is zero'
                        if not mem[_27327]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_15587)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15588))
                        call address(_15588).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15587), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27409 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27409] == bool(mem[_27409])
                        mem[mem[64] + 4] = address(_15587)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15589))
                        call address(_15589).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15587), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27441 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27441] == bool(mem[_27441])
                        if _27260 and 5 > -1 / _27260:
                            revert with 0, 17
                        if 5 * _27260 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _27260 < 5000 * _27260 / 10^6:
                            revert with 0, 17
                        if _27335 and 5 > -1 / _27335:
                            revert with 0, 17
                        if 5 * _27335 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _27335 < 5000 * _27335 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _27260
                        mem[mem[64] + 100] = _27335
                        mem[mem[64] + 132] = _27260 - (5000 * _27260 / 10^6)
                        mem[mem[64] + 164] = _27335 - (5000 * _27335 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_15587))
                        call address(_15587).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_15588), address(_15589), _27260, _27335, _27260 - (5000 * _27260 / 10^6), _27335 - (5000 * _27335 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _27588 = mem[_1539 + 160]
                        _27589 = mem[_1539 + 64]
                        _27590 = mem[_1539 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27590))
                        staticcall address(_27590).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27634 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27644 = mem[_27634]
                        if _27589 >= 999999:
                            mem[mem[64] + 4] = mem[_27634]
                            require ext_code.size(address(_27588))
                            call address(_27588).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _27644
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27644
                            emit Earn(_27644);
                            _27725 = mem[_1539 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27725))
                            staticcall address(_27725).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27778 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1539 + 96] = mem[_27778]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27885 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27901 = mem[_27885]
                            _27917 = mem[_1539]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _27937 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _27901
                            mem[mem[64] + 36] = 128
                            _27955 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _27955:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_27937 + 68] = this.address
                            mem[_27937 + 100] = block.timestamp + 60
                            require ext_code.size(address(_27917))
                            call address(_27917).mem[mem[64] len 4] with:
                               value _27901 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _27937 + (32 * _27955) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28249 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28265 = mem[_28249]
                            require mem[_28249] <= test266151307()
                            require _28249 + mem[_28249] + 31 < _28249 + return_data.size
                            _28281 = mem[_28249 + mem[_28249]]
                            if mem[_28249 + mem[_28249]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_28249 + mem[_28249]]) + 1 < 0 or _28249 + ceil32(return_data.size) + ceil32(32 * mem[_28249 + mem[_28249]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _28249 + ceil32(return_data.size) + ceil32(32 * mem[_28249 + mem[_28249]]) + 1
                            mem[_28249 + ceil32(return_data.size)] = _28281
                            require _28265 + (32 * _28281) + 32 <= return_data.size
                            t = _28249 + ceil32(return_data.size) + 32
                            s = _28249 + _28265 + 32
                            while s < _28249 + _28265 + (32 * _28281) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28633 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28633]
                        else:
                            mem[mem[64] + 4] = _27589
                            mem[mem[64] + 36] = _27644
                            require ext_code.size(address(_27588))
                            call address(_27588).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _27589, _27644
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27644
                            emit Earn(_27644);
                            _27726 = mem[_1539 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27726))
                            staticcall address(_27726).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27779 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1539 + 96] = mem[_27779]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27886 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27902 = mem[_27886]
                            _27918 = mem[_1539]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _27938 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _27902
                            mem[mem[64] + 36] = 128
                            _27956 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_27938 + 100] = block.timestamp + 60
                            require ext_code.size(address(_27918))
                            call address(_27918).mem[mem[64] len 4] with:
                               value _27902 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _27938 + (32 * _27956) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28250 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28266 = mem[_28250]
                            require mem[_28250] <= test266151307()
                            require _28250 + mem[_28250] + 31 < _28250 + return_data.size
                            _28282 = mem[_28250 + mem[_28250]]
                            if mem[_28250 + mem[_28250]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_28250 + mem[_28250]]) + 1 < 0 or _28250 + ceil32(return_data.size) + ceil32(32 * mem[_28250 + mem[_28250]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _28250 + ceil32(return_data.size) + ceil32(32 * mem[_28250 + mem[_28250]]) + 1
                            mem[_28250 + ceil32(return_data.size)] = _28282
                            require _28266 + (32 * _28282) + 32 <= return_data.size
                            t = _28250 + ceil32(return_data.size) + 32
                            s = _28250 + _28266 + 32
                            while s < _28250 + _28266 + (32 * _28282) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28634 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28634]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1539
                s = _7318 - (5000 * _7318 / 10^6)
                s = stor9[idx].field_0
                continue 
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
            mem[mem[64] + 36] = _1673
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args strategyInfo[stor9[idx].field_0].field_512, _1673
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1772 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1782 = mem[_1772]
            require mem[_1772] == mem[_1772 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_1772 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_1782))
            staticcall address(_1782).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1901 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1921 = mem[_1901]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_1782))
            staticcall address(_1782).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1965 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1980 = mem[_1965]
            if mem[_1965] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _1921:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2049 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2076 = mem[_2049]
            if 10^12 * _1980 / _1921 and mem[_2049] > -1 / 10^12 * _1980 / _1921:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1980 / _1921 * _2076 / 10^12
            mem[mem[64] + 36] = 64
            _2185 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len (32 * _2185) + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3802 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3817 = mem[_3802]
            require mem[_3802] <= test266151307()
            require _3802 + mem[_3802] + 31 < _3802 + return_data.size
            _3835 = mem[_3802 + mem[_3802]]
            if mem[_3802 + mem[_3802]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3802 + mem[_3802]]) + 1 < 0 or _3802 + ceil32(return_data.size) + ceil32(32 * mem[_3802 + mem[_3802]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3802 + ceil32(return_data.size) + ceil32(32 * mem[_3802 + mem[_3802]]) + 1
            mem[_3802 + ceil32(return_data.size)] = _3835
            require _3817 + (32 * _3835) + 32 <= return_data.size
            t = _3802 + ceil32(return_data.size) + 32
            s = _3802 + _3817 + 32
            while s < _3802 + _3817 + (32 * _3835) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3835:
                revert with 0, 50
            _7319 = mem[_3802 + ceil32(return_data.size) + 64]
            if mem[_3802 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_3802 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if 5 * mem[_3802 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 0, 17
            if mem[_3802 + ceil32(return_data.size) + 64] < 5000 * mem[_3802 + ceil32(return_data.size) + 64] / 10^6:
                revert with 0, 17
            _7493 = mem[_1539]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_1782))
            staticcall address(_1782).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7557 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7585 = mem[_7557]
            if 60 > !block.timestamp:
                revert with 0, 17
            _7644 = mem[64]
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _7585
            mem[mem[64] + 36] = _7319 - (5000 * _7319 / 10^6)
            mem[mem[64] + 68] = 160
            _7668 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < _7668:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_7644 + 100] = this.address
            mem[_7644 + 132] = block.timestamp + 60
            require ext_code.size(address(_7493))
            call address(_7493).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _7644 + (32 * _7668) + -mem[64] + 192]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11438 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11454 = mem[_11438]
            require mem[_11438] <= test266151307()
            require _11438 + mem[_11438] + 31 < _11438 + return_data.size
            _11480 = mem[_11438 + mem[_11438]]
            if mem[_11438 + mem[_11438]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_11438 + mem[_11438]]) + 1 < 0 or _11438 + ceil32(return_data.size) + ceil32(32 * mem[_11438 + mem[_11438]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _11438 + ceil32(return_data.size) + ceil32(32 * mem[_11438 + mem[_11438]]) + 1
            mem[_11438 + ceil32(return_data.size)] = _11480
            require _11454 + (32 * _11480) + 32 <= return_data.size
            t = _11438 + ceil32(return_data.size) + 32
            s = _11438 + _11454 + 32
            while s < _11438 + _11454 + (32 * _11480) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _15590 = mem[_1539]
            _15591 = mem[_1539 + 192]
            _15592 = mem[_1539 + 224]
            _15620 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_15620 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_15620]:
                revert with 0, 50
            mem[_15620 + 32] = stor21
            if stor21 == address(_15591):
                if stor21 == address(_15592):
                    mem[_15620 + 100] = this.address
                    require ext_code.size(address(_15591))
                    staticcall address(_15591).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_15620 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_15620 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(address(_15592))
                    staticcall address(_15592).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_15620 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    mem[_15620 + (2 * ceil32(return_data.size)) + 100] = address(_15590)
                    mem[_15620 + (2 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_15591))
                    call address(_15591).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_15590), -1
                    mem[_15620 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[_15620 + (4 * ceil32(return_data.size)) + 100] = address(_15590)
                    mem[_15620 + (4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_15592))
                    call address(_15592).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_15590), -1
                    mem[_15620 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                        revert with 0, 17
                    if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_15620 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                    mem[_15620 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                    mem[_15620 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                    mem[_15620 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                    mem[_15620 + (6 * ceil32(return_data.size)) + 292] = this.address
                    mem[_15620 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                    require ext_code.size(address(_15590))
                    call address(_15590).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_15591), address(_15592), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                    mem[_15620 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _15620 + (7 * ceil32(return_data.size)) + 96
                    require return_data.size >= 96
                    _16774 = mem[_1539 + 160]
                    _16775 = mem[_1539 + 64]
                    _16776 = mem[_1539 + 32]
                    mem[_15620 + (7 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_16776))
                    staticcall address(_16776).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_15620 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _15620 + (8 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if _16775 >= 999999:
                        mem[_15620 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_16774))
                        call address(_16774).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_15620 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _17054 = mem[_1539 + 32]
                        mem[_15620 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_17054))
                        staticcall address(_17054).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15620 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_1539 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_15620 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15620 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _15620 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _17452 = mem[_1539]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_15620 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_15620 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_15620 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_15620 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _15620 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_15620 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_15620 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_17452))
                        call address(_17452).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_15620 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_15620 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _15620 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _19650 = mem[_15620 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_15620 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _15620 + (11 * ceil32(return_data.size)) + mem[_15620 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _15620 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _19688 = mem[_15620 + (11 * ceil32(return_data.size)) + mem[_15620 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_15620 + (11 * ceil32(return_data.size)) + mem[_15620 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_15620 + (11 * ceil32(return_data.size)) + mem[_15620 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _15620 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15620 + (11 * ceil32(return_data.size)) + mem[_15620 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _15620 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15620 + (11 * ceil32(return_data.size)) + mem[_15620 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_15620 + (12 * ceil32(return_data.size)) + 96] = _19688
                        require _19650 + (32 * _19688) + 32 <= return_data.size
                        t = _15620 + (12 * ceil32(return_data.size)) + 128
                        s = _15620 + (11 * ceil32(return_data.size)) + _19650 + 128
                        while s < _15620 + (11 * ceil32(return_data.size)) + _19650 + (32 * _19688) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22844 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_22844]
                    else:
                        mem[_15620 + (8 * ceil32(return_data.size)) + 100] = _16775
                        mem[_15620 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_16774))
                        call address(_16774).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _16775, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_15620 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _17055 = mem[_1539 + 32]
                        mem[_15620 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_17055))
                        staticcall address(_17055).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15620 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_1539 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_15620 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15620 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _15620 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _17453 = mem[_1539]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_15620 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_15620 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_15620 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_15620 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _15620 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_15620 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_15620 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_17453))
                        call address(_17453).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_15620 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_15620 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _15620 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _19651 = mem[_15620 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_15620 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _15620 + (11 * ceil32(return_data.size)) + mem[_15620 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _15620 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _19689 = mem[_15620 + (11 * ceil32(return_data.size)) + mem[_15620 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_15620 + (11 * ceil32(return_data.size)) + mem[_15620 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_15620 + (11 * ceil32(return_data.size)) + mem[_15620 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _15620 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15620 + (11 * ceil32(return_data.size)) + mem[_15620 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _15620 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15620 + (11 * ceil32(return_data.size)) + mem[_15620 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_15620 + (12 * ceil32(return_data.size)) + 96] = _19689
                        require _19651 + (32 * _19689) + 32 <= return_data.size
                        t = _15620 + (12 * ceil32(return_data.size)) + 128
                        s = _15620 + (11 * ceil32(return_data.size)) + _19651 + 128
                        while s < _15620 + (11 * ceil32(return_data.size)) + _19651 + (32 * _19689) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22845 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_22845]
                else:
                    if 1 >= mem[_15620]:
                        revert with 0, 50
                    mem[_15620 + 64] = address(_15592)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_15620 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_15620 + 100] = eth.balance(this.address) / 2
                    mem[_15620 + 132] = 128
                    mem[_15620 + 228] = mem[_15620]
                    s = 0
                    t = _15620 + 32
                    u = _15620 + 260
                    while s < mem[_15620]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_15620 + 164] = this.address
                    mem[_15620 + 196] = block.timestamp + 60
                    require ext_code.size(address(_15590))
                    call address(_15590).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _15620 + (32 * mem[_15620]) + -mem[64] + 256]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19613 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _19652 = mem[_19613]
                    require mem[_19613] <= test266151307()
                    require _19613 + mem[_19613] + 31 < _19613 + return_data.size
                    _19690 = mem[_19613 + mem[_19613]]
                    if mem[_19613 + mem[_19613]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_19613 + mem[_19613]]) + 1 < 0 or _19613 + ceil32(return_data.size) + ceil32(32 * mem[_19613 + mem[_19613]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _19613 + ceil32(return_data.size) + ceil32(32 * mem[_19613 + mem[_19613]]) + 1
                    mem[_19613 + ceil32(return_data.size)] = _19690
                    require _19652 + (32 * _19690) + 32 <= return_data.size
                    t = _19613 + ceil32(return_data.size) + 32
                    s = _19613 + _19652 + 32
                    while s < _19613 + _19652 + (32 * _19690) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_15591))
                    staticcall address(_15591).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22846 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22886 = mem[_22846]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_15592))
                    staticcall address(_15592).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22970 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22994 = mem[_22970]
                    if not _22886:
                        revert with 0, 'Desired value is zero'
                    if not mem[_22970]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_15590)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_15591))
                    call address(_15591).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_15590), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23172 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23172] == bool(mem[_23172])
                    mem[mem[64] + 4] = address(_15590)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_15592))
                    call address(_15592).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_15590), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23274 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23274] == bool(mem[_23274])
                    if _22886 and 5 > -1 / _22886:
                        revert with 0, 17
                    if 5 * _22886 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _22886 < 5000 * _22886 / 10^6:
                        revert with 0, 17
                    if _22994 and 5 > -1 / _22994:
                        revert with 0, 17
                    if 5 * _22994 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _22994 < 5000 * _22994 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _22886
                    mem[mem[64] + 100] = _22994
                    mem[mem[64] + 132] = _22886 - (5000 * _22886 / 10^6)
                    mem[mem[64] + 164] = _22994 - (5000 * _22994 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_15590))
                    call address(_15590).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_15591), address(_15592), _22886, _22994, _22886 - (5000 * _22886 / 10^6), _22994 - (5000 * _22994 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _23699 = mem[_1539 + 160]
                    _23700 = mem[_1539 + 64]
                    _23701 = mem[_1539 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_23701))
                    staticcall address(_23701).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23781 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _23804 = mem[_23781]
                    if _23700 >= 999999:
                        mem[mem[64] + 4] = mem[_23781]
                        require ext_code.size(address(_23699))
                        call address(_23699).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _23804
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _23804
                        emit Earn(_23804);
                        _23948 = mem[_1539 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_23948))
                        staticcall address(_23948).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24078 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1539 + 96] = mem[_24078]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24315 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24359 = mem[_24315]
                        _24419 = mem[_1539]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _24498 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _24359
                        mem[mem[64] + 36] = 128
                        _24547 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _24547:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_24498 + 68] = this.address
                        mem[_24498 + 100] = block.timestamp + 60
                        require ext_code.size(address(_24419))
                        call address(_24419).mem[mem[64] len 4] with:
                           value _24359 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _24498 + (32 * _24547) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25623 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25676 = mem[_25623]
                        require mem[_25623] <= test266151307()
                        require _25623 + mem[_25623] + 31 < _25623 + return_data.size
                        _25726 = mem[_25623 + mem[_25623]]
                        if mem[_25623 + mem[_25623]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25623 + mem[_25623]]) + 1 < 0 or _25623 + ceil32(return_data.size) + ceil32(32 * mem[_25623 + mem[_25623]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _25623 + ceil32(return_data.size) + ceil32(32 * mem[_25623 + mem[_25623]]) + 1
                        mem[_25623 + ceil32(return_data.size)] = _25726
                        require _25676 + (32 * _25726) + 32 <= return_data.size
                        t = _25623 + ceil32(return_data.size) + 32
                        s = _25623 + _25676 + 32
                        while s < _25623 + _25676 + (32 * _25726) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27215 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_27215]
                    else:
                        mem[mem[64] + 4] = _23700
                        mem[mem[64] + 36] = _23804
                        require ext_code.size(address(_23699))
                        call address(_23699).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _23700, _23804
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _23804
                        emit Earn(_23804);
                        _23949 = mem[_1539 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_23949))
                        staticcall address(_23949).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24079 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1539 + 96] = mem[_24079]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24316 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24360 = mem[_24316]
                        _24420 = mem[_1539]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _24499 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _24360
                        mem[mem[64] + 36] = 128
                        _24548 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_24499 + 100] = block.timestamp + 60
                        require ext_code.size(address(_24420))
                        call address(_24420).mem[mem[64] len 4] with:
                           value _24360 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _24499 + (32 * _24548) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25624 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25677 = mem[_25624]
                        require mem[_25624] <= test266151307()
                        require _25624 + mem[_25624] + 31 < _25624 + return_data.size
                        _25727 = mem[_25624 + mem[_25624]]
                        if mem[_25624 + mem[_25624]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25624 + mem[_25624]]) + 1 < 0 or _25624 + ceil32(return_data.size) + ceil32(32 * mem[_25624 + mem[_25624]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _25624 + ceil32(return_data.size) + ceil32(32 * mem[_25624 + mem[_25624]]) + 1
                        mem[_25624 + ceil32(return_data.size)] = _25727
                        require _25677 + (32 * _25727) + 32 <= return_data.size
                        t = _25624 + ceil32(return_data.size) + 32
                        s = _25624 + _25677 + 32
                        while s < _25624 + _25677 + (32 * _25727) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27216 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_27216]
            else:
                if 1 >= mem[_15620]:
                    revert with 0, 50
                mem[_15620 + 64] = address(_15591)
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[_15620 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[_15620 + 100] = eth.balance(this.address) / 2
                mem[_15620 + 132] = 128
                mem[_15620 + 228] = mem[_15620]
                s = 0
                t = _15620 + 32
                u = _15620 + 260
                while s < mem[_15620]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_15620 + 164] = this.address
                mem[_15620 + 196] = block.timestamp + 60
                require ext_code.size(address(_15590))
                call address(_15590).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _15620 + (32 * mem[_15620]) + -mem[64] + 256]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19614 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _19653 = mem[_19614]
                require mem[_19614] <= test266151307()
                require _19614 + mem[_19614] + 31 < _19614 + return_data.size
                _19691 = mem[_19614 + mem[_19614]]
                if mem[_19614 + mem[_19614]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_19614 + mem[_19614]]) + 1 < 0 or _19614 + ceil32(return_data.size) + ceil32(32 * mem[_19614 + mem[_19614]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _19614 + ceil32(return_data.size) + ceil32(32 * mem[_19614 + mem[_19614]]) + 1
                mem[_19614 + ceil32(return_data.size)] = _19691
                require _19653 + (32 * _19691) + 32 <= return_data.size
                t = _19614 + ceil32(return_data.size) + 32
                s = _19614 + _19653 + 32
                while s < _19614 + _19653 + (32 * _19691) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_15592):
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_15591))
                    staticcall address(_15591).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22870 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22910 = mem[_22870]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_15592))
                    staticcall address(_15592).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22979 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _23007 = mem[_22979]
                    if not _22910:
                        revert with 0, 'Desired value is zero'
                    if not mem[_22979]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_15590)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_15591))
                    call address(_15591).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_15590), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23185 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23185] == bool(mem[_23185])
                    mem[mem[64] + 4] = address(_15590)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_15592))
                    call address(_15592).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_15590), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23286 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23286] == bool(mem[_23286])
                    if _22910 and 5 > -1 / _22910:
                        revert with 0, 17
                    if 5 * _22910 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _22910 < 5000 * _22910 / 10^6:
                        revert with 0, 17
                    if _23007 and 5 > -1 / _23007:
                        revert with 0, 17
                    if 5 * _23007 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _23007 < 5000 * _23007 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _22910
                    mem[mem[64] + 100] = _23007
                    mem[mem[64] + 132] = _22910 - (5000 * _22910 / 10^6)
                    mem[mem[64] + 164] = _23007 - (5000 * _23007 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_15590))
                    call address(_15590).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_15591), address(_15592), _22910, _23007, _22910 - (5000 * _22910 / 10^6), _23007 - (5000 * _23007 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _23729 = mem[_1539 + 160]
                    _23730 = mem[_1539 + 64]
                    _23731 = mem[_1539 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_23731))
                    staticcall address(_23731).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23792 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _23816 = mem[_23792]
                    if _23730 >= 999999:
                        mem[mem[64] + 4] = mem[_23792]
                        require ext_code.size(address(_23729))
                        call address(_23729).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _23816
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _23816
                        emit Earn(_23816);
                        _24003 = mem[_1539 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_24003))
                        staticcall address(_24003).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24099 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1539 + 96] = mem[_24099]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24334 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24380 = mem[_24334]
                        _24438 = mem[_1539]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _24525 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _24380
                        mem[mem[64] + 36] = 128
                        _24574 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_24525 + 100] = block.timestamp + 60
                        require ext_code.size(address(_24438))
                        call address(_24438).mem[mem[64] len 4] with:
                           value _24380 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _24525 + (32 * _24574) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25625 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25678 = mem[_25625]
                        require mem[_25625] <= test266151307()
                        require _25625 + mem[_25625] + 31 < _25625 + return_data.size
                        _25728 = mem[_25625 + mem[_25625]]
                        if mem[_25625 + mem[_25625]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25625 + mem[_25625]]) + 1 < 0 or _25625 + ceil32(return_data.size) + ceil32(32 * mem[_25625 + mem[_25625]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _25625 + ceil32(return_data.size) + ceil32(32 * mem[_25625 + mem[_25625]]) + 1
                        mem[_25625 + ceil32(return_data.size)] = _25728
                        require _25678 + (32 * _25728) + 32 <= return_data.size
                        t = _25625 + ceil32(return_data.size) + 32
                        s = _25625 + _25678 + 32
                        while s < _25625 + _25678 + (32 * _25728) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27217 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_27217]
                    else:
                        mem[mem[64] + 4] = _23730
                        mem[mem[64] + 36] = _23816
                        require ext_code.size(address(_23729))
                        call address(_23729).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _23730, _23816
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _23816
                        emit Earn(_23816);
                        _24004 = mem[_1539 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_24004))
                        staticcall address(_24004).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24100 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1539 + 96] = mem[_24100]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24335 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24381 = mem[_24335]
                        _24439 = mem[_1539]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _24526 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _24381
                        mem[mem[64] + 36] = 128
                        _24575 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_24526 + 100] = block.timestamp + 60
                        require ext_code.size(address(_24439))
                        call address(_24439).mem[mem[64] len 4] with:
                           value _24381 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _24526 + (32 * _24575) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25626 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25679 = mem[_25626]
                        require mem[_25626] <= test266151307()
                        require _25626 + mem[_25626] + 31 < _25626 + return_data.size
                        _25729 = mem[_25626 + mem[_25626]]
                        if mem[_25626 + mem[_25626]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25626 + mem[_25626]]) + 1 < 0 or _25626 + ceil32(return_data.size) + ceil32(32 * mem[_25626 + mem[_25626]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _25626 + ceil32(return_data.size) + ceil32(32 * mem[_25626 + mem[_25626]]) + 1
                        mem[_25626 + ceil32(return_data.size)] = _25729
                        require _25679 + (32 * _25729) + 32 <= return_data.size
                        t = _25626 + ceil32(return_data.size) + 32
                        s = _25626 + _25679 + 32
                        while s < _25626 + _25679 + (32 * _25729) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27218 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_27218]
                else:
                    if 1 >= mem[_15620]:
                        revert with 0, 50
                    mem[_15620 + 64] = address(_15592)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 128
                    _22980 = mem[_15620]
                    mem[mem[64] + 132] = mem[_15620]
                    s = 0
                    t = _15620 + 32
                    u = mem[64] + 164
                    while s < _22980:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_15590))
                    call address(_15590).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args Mask(255, 1, eth.balance(this.address)), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _22980) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25627 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25680 = mem[_25627]
                    require mem[_25627] <= test266151307()
                    require _25627 + mem[_25627] + 31 < _25627 + return_data.size
                    _25730 = mem[_25627 + mem[_25627]]
                    if mem[_25627 + mem[_25627]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_25627 + mem[_25627]]) + 1 < 0 or _25627 + ceil32(return_data.size) + ceil32(32 * mem[_25627 + mem[_25627]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _25627 + ceil32(return_data.size) + ceil32(32 * mem[_25627 + mem[_25627]]) + 1
                    mem[_25627 + ceil32(return_data.size)] = _25730
                    require _25680 + (32 * _25730) + 32 <= return_data.size
                    t = _25627 + ceil32(return_data.size) + 32
                    s = _25627 + _25680 + 32
                    while s < _25627 + _25680 + (32 * _25730) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_15591))
                    staticcall address(_15591).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27219 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27265 = mem[_27219]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_15592))
                    staticcall address(_15592).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27328 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27336 = mem[_27328]
                    if not _27265:
                        revert with 0, 'Desired value is zero'
                    if not mem[_27328]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_15590)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_15591))
                    call address(_15591).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_15590), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27410 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_27410] == bool(mem[_27410])
                    mem[mem[64] + 4] = address(_15590)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_15592))
                    call address(_15592).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_15590), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27442 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_27442] == bool(mem[_27442])
                    if _27265 and 5 > -1 / _27265:
                        revert with 0, 17
                    if 5 * _27265 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _27265 < 5000 * _27265 / 10^6:
                        revert with 0, 17
                    if _27336 and 5 > -1 / _27336:
                        revert with 0, 17
                    if 5 * _27336 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _27336 < 5000 * _27336 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _27265
                    mem[mem[64] + 100] = _27336
                    mem[mem[64] + 132] = _27265 - (5000 * _27265 / 10^6)
                    mem[mem[64] + 164] = _27336 - (5000 * _27336 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_15590))
                    call address(_15590).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_15591), address(_15592), _27265, _27336, _27265 - (5000 * _27265 / 10^6), _27336 - (5000 * _27336 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _27591 = mem[_1539 + 160]
                    _27592 = mem[_1539 + 64]
                    _27593 = mem[_1539 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_27593))
                    staticcall address(_27593).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27635 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27645 = mem[_27635]
                    if _27592 >= 999999:
                        mem[mem[64] + 4] = mem[_27635]
                        require ext_code.size(address(_27591))
                        call address(_27591).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _27645
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _27645
                        emit Earn(_27645);
                        _27727 = mem[_1539 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27727))
                        staticcall address(_27727).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27780 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1539 + 96] = mem[_27780]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27887 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27903 = mem[_27887]
                        _27919 = mem[_1539]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _27939 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _27903
                        mem[mem[64] + 36] = 128
                        _27957 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _27957:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_27939 + 68] = this.address
                        mem[_27939 + 100] = block.timestamp + 60
                        require ext_code.size(address(_27919))
                        call address(_27919).mem[mem[64] len 4] with:
                           value _27903 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _27939 + (32 * _27957) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28251 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28267 = mem[_28251]
                        require mem[_28251] <= test266151307()
                        require _28251 + mem[_28251] + 31 < _28251 + return_data.size
                        _28283 = mem[_28251 + mem[_28251]]
                        if mem[_28251 + mem[_28251]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28251 + mem[_28251]]) + 1 < 0 or _28251 + ceil32(return_data.size) + ceil32(32 * mem[_28251 + mem[_28251]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28251 + ceil32(return_data.size) + ceil32(32 * mem[_28251 + mem[_28251]]) + 1
                        mem[_28251 + ceil32(return_data.size)] = _28283
                        require _28267 + (32 * _28283) + 32 <= return_data.size
                        t = _28251 + ceil32(return_data.size) + 32
                        s = _28251 + _28267 + 32
                        while s < _28251 + _28267 + (32 * _28283) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28635 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_28635]
                    else:
                        mem[mem[64] + 4] = _27592
                        mem[mem[64] + 36] = _27645
                        require ext_code.size(address(_27591))
                        call address(_27591).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _27592, _27645
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _27645
                        emit Earn(_27645);
                        _27728 = mem[_1539 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27728))
                        staticcall address(_27728).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27781 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1539 + 96] = mem[_27781]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27888 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27904 = mem[_27888]
                        _27920 = mem[_1539]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _27940 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _27904
                        mem[mem[64] + 36] = 128
                        _27958 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _27958:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_27940 + 68] = this.address
                        mem[_27940 + 100] = block.timestamp + 60
                        require ext_code.size(address(_27920))
                        call address(_27920).mem[mem[64] len 4] with:
                           value _27904 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _27940 + (32 * _27958) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28252 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28268 = mem[_28252]
                        require mem[_28252] <= test266151307()
                        require _28252 + mem[_28252] + 31 < _28252 + return_data.size
                        _28284 = mem[_28252 + mem[_28252]]
                        if mem[_28252 + mem[_28252]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28252 + mem[_28252]]) + 1 < 0 or _28252 + ceil32(return_data.size) + ceil32(32 * mem[_28252 + mem[_28252]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28252 + ceil32(return_data.size) + ceil32(32 * mem[_28252 + mem[_28252]]) + 1
                        mem[_28252 + ceil32(return_data.size)] = _28284
                        require _28268 + (32 * _28284) + 32 <= return_data.size
                        t = _28252 + ceil32(return_data.size) + 32
                        s = _28252 + _28268 + 32
                        while s < _28252 + _28268 + (32 * _28284) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28636 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_28636]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _1539
            s = _7319 - (5000 * _7319 / 10^6)
            s = stor9[idx].field_0
            continue 
        _1543 = mem[64]
        mem[64] = mem[64] + 256
        mem[_1543] = 0
        mem[_1543 + 32] = 0
        mem[_1543 + 64] = 0
        mem[_1543 + 96] = 0
        mem[_1543 + 128] = 0
        mem[_1543 + 160] = 0
        mem[_1543 + 192] = 0
        mem[_1543 + 224] = 0
        _1551 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_1551 + 32 len 64] = call.data[calldata.size len 64]
        idx = 0
        s = 96
        t = 0
        u = 0
        v = 0
        v = _1543
        v = 0
        v = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _3766 = mem[64]
            mem[64] = mem[64] + 256
            mem[_3766] = strategyInfo[stor9[idx].field_0].field_0
            mem[_3766 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_3766 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_3766 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_3766 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_3766 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_3766 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_3766 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3800 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _3814 = mem[_3800]
                if not mem[_3800]:
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s
                    t = t
                    u = u
                    v = mem[_3800]
                    v = _3766
                    v = stor9[idx].field_0
                    v = v
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
                staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3875 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _3900 = mem[_3875]
                require mem[_3875] == mem[_3875 + 18 len 14]
                _3914 = mem[_3875 + 32]
                require mem[_3875 + 32] == mem[_3875 + 50 len 14]
                require mem[_3875 + 64] == mem[_3875 + 92 len 4]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
                staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3942 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3959 = mem[_3942]
                if _3814 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not mem[_3942]:
                    revert with 0, 18
                if 10^12 * _3814 / mem[_3942] and Mask(112, 0, _3900) > -1 / 10^12 * _3814 / mem[_3942]:
                    revert with 0, 17
                if 10^12 * _3814 / mem[_3942] and Mask(112, 0, _3914) > -1 / 10^12 * _3814 / mem[_3942]:
                    revert with 0, 17
                if 1 >= mem[_1551]:
                    revert with 0, 50
                mem[_1551 + 64] = stor21
                if 0 >= mem[_1551]:
                    revert with 0, 50
                if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                    mem[_1551 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                    _4177 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _3814 / _3959 * Mask(112, 0, _3914) / 10^12
                    mem[mem[64] + 36] = 64
                    _4204 = mem[_1551]
                    mem[mem[64] + 68] = mem[_1551]
                    s = 0
                    t = _1551 + 32
                    u = mem[64] + 100
                    while s < _4204:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _4177 + (32 * _4204) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7364 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7389 = mem[_7364]
                    require mem[_7364] <= test266151307()
                    require _7364 + mem[_7364] + 31 < _7364 + return_data.size
                    _7414 = mem[_7364 + mem[_7364]]
                    if mem[_7364 + mem[_7364]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7364 + mem[_7364]]) + 1 < 0 or _7364 + ceil32(return_data.size) + ceil32(32 * mem[_7364 + mem[_7364]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _7364 + ceil32(return_data.size) + ceil32(32 * mem[_7364 + mem[_7364]]) + 1
                    mem[_7364 + ceil32(return_data.size)] = _7414
                    require _7389 + (32 * _7414) + 32 <= return_data.size
                    t = _7364 + ceil32(return_data.size) + 32
                    s = _7364 + _7389 + 32
                    while s < _7364 + _7389 + (32 * _7414) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7414:
                        revert with 0, 50
                    _11414 = mem[_7364 + ceil32(return_data.size) + 64]
                    if 10^12 * _3814 / _3959 * Mask(112, 0, _3900) / 10^12 > !mem[_7364 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    mem[_3766 + 128] = (10^12 * _3814 / _3959 * Mask(112, 0, _3900) / 10^12) + mem[_7364 + ceil32(return_data.size) + 64]
                    if v > !((10^12 * _3814 / _3959 * Mask(112, 0, _3900) / 10^12) + _11414):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _7364 + ceil32(return_data.size)
                    t = 10^12 * _3814 / _3959 * Mask(112, 0, _3914) / 10^12
                    u = 10^12 * _3814 / _3959 * Mask(112, 0, _3900) / 10^12
                    v = _3814
                    v = _3766
                    v = stor9[idx].field_0
                    v = v + (10^12 * _3814 / _3959 * Mask(112, 0, _3900) / 10^12) + _11414
                    continue 
                mem[_1551 + 32] = strategyInfo[stor9[idx].field_0].field_1536
                if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                    _4196 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _3814 / _3959 * Mask(112, 0, _3900) / 10^12
                    mem[mem[64] + 36] = 64
                    _4217 = mem[_1551]
                    mem[mem[64] + 68] = mem[_1551]
                    s = 0
                    t = _1551 + 32
                    u = mem[64] + 100
                    while s < _4217:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _4196 + (32 * _4217) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7363 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7388 = mem[_7363]
                    require mem[_7363] <= test266151307()
                    require _7363 + mem[_7363] + 31 < _7363 + return_data.size
                    _7413 = mem[_7363 + mem[_7363]]
                    if mem[_7363 + mem[_7363]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7363 + mem[_7363]]) + 1 < 0 or _7363 + ceil32(return_data.size) + ceil32(32 * mem[_7363 + mem[_7363]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _7363 + ceil32(return_data.size) + ceil32(32 * mem[_7363 + mem[_7363]]) + 1
                    mem[_7363 + ceil32(return_data.size)] = _7413
                    require _7388 + (32 * _7413) + 32 <= return_data.size
                    t = _7363 + ceil32(return_data.size) + 32
                    s = _7363 + _7388 + 32
                    while s < _7363 + _7388 + (32 * _7413) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7413:
                        revert with 0, 50
                    _11413 = mem[_7363 + ceil32(return_data.size) + 64]
                    if 10^12 * _3814 / _3959 * Mask(112, 0, _3914) / 10^12 > !mem[_7363 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    mem[_3766 + 128] = (10^12 * _3814 / _3959 * Mask(112, 0, _3914) / 10^12) + mem[_7363 + ceil32(return_data.size) + 64]
                    if v > !((10^12 * _3814 / _3959 * Mask(112, 0, _3914) / 10^12) + _11413):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _7363 + ceil32(return_data.size)
                    t = 10^12 * _3814 / _3959 * Mask(112, 0, _3914) / 10^12
                    u = 10^12 * _3814 / _3959 * Mask(112, 0, _3900) / 10^12
                    v = _3814
                    v = _3766
                    v = stor9[idx].field_0
                    v = v + (10^12 * _3814 / _3959 * Mask(112, 0, _3914) / 10^12) + _11413
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4220 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4235 = mem[_4220]
                mem[mem[64] + 4] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4316 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4353 = mem[_4316]
                if mem[_4316] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _4235:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4520 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4561 = mem[_4520]
                if 10^12 * _4353 / _4235 and mem[_4520] > -1 / 10^12 * _4353 / _4235:
                    revert with 0, 17
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _4353 / _4235 * _4561 / 10^12
                mem[mem[64] + 36] = 64
                _4736 = mem[_1551]
                mem[mem[64] + 68] = mem[_1551]
                t = 0
                u = _1551 + 32
                w = mem[64] + 100
                while t < _4736:
                    mem[w] = mem[u + 12 len 20]
                    t = t + 1
                    u = u + 32
                    w = w + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _4353 / _4235 * _4561 / 10^12, 64, mem[mem[64] + 68 len (32 * _4736) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7362 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7387 = mem[_7362]
                require mem[_7362] <= test266151307()
                require _7362 + mem[_7362] + 31 < _7362 + return_data.size
                _7412 = mem[_7362 + mem[_7362]]
                if mem[_7362 + mem[_7362]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_7362 + mem[_7362]]) + 1 < 0 or _7362 + ceil32(return_data.size) + ceil32(32 * mem[_7362 + mem[_7362]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _7362 + ceil32(return_data.size) + ceil32(32 * mem[_7362 + mem[_7362]]) + 1
                mem[_7362 + ceil32(return_data.size)] = _7412
                require _7387 + (32 * _7412) + 32 <= return_data.size
                u = _7362 + ceil32(return_data.size) + 32
                t = _7362 + _7387 + 32
                while t < _7362 + _7387 + (32 * _7412) + 32:
                    mem[u] = mem[t]
                    u = u + 32
                    t = t + 32
                    continue 
                if 1 >= _7412:
                    revert with 0, 50
                _11412 = mem[_7362 + ceil32(return_data.size) + 64]
                mem[_3766 + 128] = mem[_7362 + ceil32(return_data.size) + 64]
                if v > !_11412:
                    revert with 0, 17
                if 0 >= mem[_1551]:
                    revert with 0, 50
                mem[_1551 + 32] = mem[_3766 + 236 len 20]
                _11468 = mem[_3766 + 224]
                _11469 = mem[_3766]
                require ext_code.size(mem[_3766 + 236 len 20])
                staticcall mem[_3766 + 236 len 20].0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11499 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11516 = mem[_11499]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11468))
                staticcall address(_11468).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11543 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11574 = mem[_11543]
                if mem[_11543] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _11516:
                    revert with 0, 18
                mem[mem[64] + 4] = address(_11469)
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args address(_11469)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11694 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11741 = mem[_11694]
                if 10^12 * _11574 / _11516 and mem[_11694] > -1 / 10^12 * _11574 / _11516:
                    revert with 0, 17
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _11574 / _11516 * _11741 / 10^12
                mem[mem[64] + 36] = 64
                _11917 = mem[_1551]
                mem[mem[64] + 68] = mem[_1551]
                t = 0
                u = _1551 + 32
                w = mem[64] + 100
                while t < _11917:
                    mem[w] = mem[u + 12 len 20]
                    t = t + 1
                    u = u + 32
                    w = w + 32
                    continue 
                require ext_code.size(address(_11469))
                staticcall address(_11469).getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _11574 / _11516 * _11741 / 10^12, 64, mem[mem[64] + 68 len (32 * _11917) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15647 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _15677 = mem[_15647]
                require mem[_15647] <= test266151307()
                require _15647 + mem[_15647] + 31 < _15647 + return_data.size
                _15707 = mem[_15647 + mem[_15647]]
                if mem[_15647 + mem[_15647]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_15647 + mem[_15647]]) + 1 < 0 or _15647 + ceil32(return_data.size) + ceil32(32 * mem[_15647 + mem[_15647]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _15647 + ceil32(return_data.size) + ceil32(32 * mem[_15647 + mem[_15647]]) + 1
                mem[_15647 + ceil32(return_data.size)] = _15707
                require _15677 + (32 * _15707) + 32 <= return_data.size
                u = _15647 + ceil32(return_data.size) + 32
                t = _15647 + _15677 + 32
                while t < _15647 + _15677 + (32 * _15707) + 32:
                    mem[u] = mem[t]
                    u = u + 32
                    t = t + 32
                    continue 
                if 1 >= _15707:
                    revert with 0, 50
                if mem[_3766 + 128] > !mem[_15647 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3766 + 128] = mem[_3766 + 128] + mem[_15647 + ceil32(return_data.size) + 64]
                if v + _11412 > !mem[_3766 + 128]:
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = 10^12 * _3814 / _3959 * Mask(112, 0, _3914) / 10^12
                u = 10^12 * _3814 / _3959 * Mask(112, 0, _3900) / 10^12
                v = _3814
                v = _3766
                v = stor9[idx].field_0
                v = v + _11412 + mem[_3766 + 128]
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3799 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _3813 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_3813] = mem[_3799]
            mem[_3813 + 32] = mem[_3799 + 32]
            mem[_3813 + 64] = mem[_3799 + 64]
            require return_data.size - 96 >= 96
            _3843 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_3843] = mem[_3799 + 96]
            mem[_3843 + 32] = mem[_3799 + 128]
            mem[_3843 + 64] = mem[_3799 + 160]
            mem[_3813 + 96] = _3843
            mem[_3813 + 128] = mem[_3799 + 192]
            require return_data.size - 224 >= 96
            _3869 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_3869] = mem[_3799 + 224]
            mem[_3869 + 32] = mem[_3799 + 256]
            mem[_3869 + 64] = mem[_3799 + 288]
            mem[_3813 + 160] = _3869
            _3889 = mem[_3813 + 64]
            if not mem[_3813 + 64]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_3813 + 64]
                v = _3766
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3924 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _3927 = mem[_3924]
            require mem[_3924] == mem[_3924 + 18 len 14]
            _3951 = mem[_3924 + 32]
            require mem[_3924 + 32] == mem[_3924 + 50 len 14]
            require mem[_3924 + 64] == mem[_3924 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4027 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4056 = mem[_4027]
            if _3889 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_4027]:
                revert with 0, 18
            if 10^12 * _3889 / mem[_4027] and Mask(112, 0, _3927) > -1 / 10^12 * _3889 / mem[_4027]:
                revert with 0, 17
            if 10^12 * _3889 / mem[_4027] and Mask(112, 0, _3951) > -1 / 10^12 * _3889 / mem[_4027]:
                revert with 0, 17
            if 1 >= mem[_1551]:
                revert with 0, 50
            mem[_1551 + 64] = stor21
            if 0 >= mem[_1551]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[_1551 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3889 / _4056 * Mask(112, 0, _3951) / 10^12
                mem[mem[64] + 36] = 64
                _4344 = mem[_1551]
                mem[mem[64] + 68] = mem[_1551]
                s = 0
                t = _1551 + 32
                u = mem[64] + 100
                while s < _4344:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _3889 / _4056 * Mask(112, 0, _3951) / 10^12, 64, mem[mem[64] + 68 len (32 * _4344) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7361 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7386 = mem[_7361]
                require mem[_7361] <= test266151307()
                require _7361 + mem[_7361] + 31 < _7361 + return_data.size
                _7411 = mem[_7361 + mem[_7361]]
                if mem[_7361 + mem[_7361]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_7361 + mem[_7361]]) + 1 < 0 or _7361 + ceil32(return_data.size) + ceil32(32 * mem[_7361 + mem[_7361]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _7361 + ceil32(return_data.size) + ceil32(32 * mem[_7361 + mem[_7361]]) + 1
                mem[_7361 + ceil32(return_data.size)] = _7411
                require _7386 + (32 * _7411) + 32 <= return_data.size
                t = _7361 + ceil32(return_data.size) + 32
                s = _7361 + _7386 + 32
                while s < _7361 + _7386 + (32 * _7411) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7411:
                    revert with 0, 50
                _11411 = mem[_7361 + ceil32(return_data.size) + 64]
                if 10^12 * _3889 / _4056 * Mask(112, 0, _3927) / 10^12 > !mem[_7361 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3766 + 128] = (10^12 * _3889 / _4056 * Mask(112, 0, _3927) / 10^12) + mem[_7361 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _3889 / _4056 * Mask(112, 0, _3927) / 10^12) + _11411):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _7361 + ceil32(return_data.size)
                t = 10^12 * _3889 / _4056 * Mask(112, 0, _3951) / 10^12
                u = 10^12 * _3889 / _4056 * Mask(112, 0, _3927) / 10^12
                v = _3889
                v = _3766
                v = stor9[idx].field_0
                v = v + (10^12 * _3889 / _4056 * Mask(112, 0, _3927) / 10^12) + _11411
                continue 
            mem[_1551 + 32] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3889 / _4056 * Mask(112, 0, _3927) / 10^12
                mem[mem[64] + 36] = 64
                _4352 = mem[_1551]
                mem[mem[64] + 68] = mem[_1551]
                s = 0
                t = _1551 + 32
                w = mem[64] + 100
                while s < _4352:
                    mem[w] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    w = w + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _3889 / _4056 * Mask(112, 0, _3927) / 10^12, 64, mem[mem[64] + 68 len (32 * _4352) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7360 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7385 = mem[_7360]
                require mem[_7360] <= test266151307()
                require _7360 + mem[_7360] + 31 < _7360 + return_data.size
                _7410 = mem[_7360 + mem[_7360]]
                if mem[_7360 + mem[_7360]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_7360 + mem[_7360]]) + 1 < 0 or _7360 + ceil32(return_data.size) + ceil32(32 * mem[_7360 + mem[_7360]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _7360 + ceil32(return_data.size) + ceil32(32 * mem[_7360 + mem[_7360]]) + 1
                mem[_7360 + ceil32(return_data.size)] = _7410
                require _7385 + (32 * _7410) + 32 <= return_data.size
                t = _7360 + ceil32(return_data.size) + 32
                s = _7360 + _7385 + 32
                while s < _7360 + _7385 + (32 * _7410) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7410:
                    revert with 0, 50
                _11410 = mem[_7360 + ceil32(return_data.size) + 64]
                if 10^12 * _3889 / _4056 * Mask(112, 0, _3951) / 10^12 > !mem[_7360 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3766 + 128] = (10^12 * _3889 / _4056 * Mask(112, 0, _3951) / 10^12) + mem[_7360 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _3889 / _4056 * Mask(112, 0, _3951) / 10^12) + _11410):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _7360 + ceil32(return_data.size)
                t = 10^12 * _3889 / _4056 * Mask(112, 0, _3951) / 10^12
                s = 10^12 * _3889 / _4056 * Mask(112, 0, _3927) / 10^12
                v = _3889
                v = _3766
                v = stor9[idx].field_0
                v = v + (10^12 * _3889 / _4056 * Mask(112, 0, _3951) / 10^12) + _11410
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4369 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4415 = mem[_4369]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4461 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4485 = mem[_4461]
            if mem[_4461] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _4415:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4683 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4735 = mem[_4683]
            if 10^12 * _4485 / _4415 and mem[_4683] > -1 / 10^12 * _4485 / _4415:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _4485 / _4415 * _4735 / 10^12
            mem[mem[64] + 36] = 64
            _4862 = mem[_1551]
            mem[mem[64] + 68] = mem[_1551]
            t = 0
            u = _1551 + 32
            w = mem[64] + 100
            while t < _4862:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _4485 / _4415 * _4735 / 10^12, 64, mem[mem[64] + 68 len (32 * _4862) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7359 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7384 = mem[_7359]
            require mem[_7359] <= test266151307()
            require _7359 + mem[_7359] + 31 < _7359 + return_data.size
            _7409 = mem[_7359 + mem[_7359]]
            if mem[_7359 + mem[_7359]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_7359 + mem[_7359]]) + 1 < 0 or _7359 + ceil32(return_data.size) + ceil32(32 * mem[_7359 + mem[_7359]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _7359 + ceil32(return_data.size) + ceil32(32 * mem[_7359 + mem[_7359]]) + 1
            mem[_7359 + ceil32(return_data.size)] = _7409
            require _7384 + (32 * _7409) + 32 <= return_data.size
            u = _7359 + ceil32(return_data.size) + 32
            t = _7359 + _7384 + 32
            while t < _7359 + _7384 + (32 * _7409) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _7409:
                revert with 0, 50
            _11409 = mem[_7359 + ceil32(return_data.size) + 64]
            mem[_3766 + 128] = mem[_7359 + ceil32(return_data.size) + 64]
            if v > !_11409:
                revert with 0, 17
            if 0 >= mem[_1551]:
                revert with 0, 50
            mem[_1551 + 32] = mem[_3766 + 236 len 20]
            _11466 = mem[_3766 + 224]
            _11467 = mem[_3766]
            require ext_code.size(mem[_3766 + 236 len 20])
            staticcall mem[_3766 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11498 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11515 = mem[_11498]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_11466))
            staticcall address(_11466).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11542 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11573 = mem[_11542]
            if mem[_11542] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _11515:
                revert with 0, 18
            mem[mem[64] + 4] = address(_11467)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_11467)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11693 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11740 = mem[_11693]
            if 10^12 * _11573 / _11515 and mem[_11693] > -1 / 10^12 * _11573 / _11515:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _11573 / _11515 * _11740 / 10^12
            mem[mem[64] + 36] = 64
            _11916 = mem[_1551]
            mem[mem[64] + 68] = mem[_1551]
            t = 0
            u = _1551 + 32
            w = mem[64] + 100
            while t < _11916:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_11467))
            staticcall address(_11467).getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _11573 / _11515 * _11740 / 10^12, 64, mem[mem[64] + 68 len (32 * _11916) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15646 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _15676 = mem[_15646]
            require mem[_15646] <= test266151307()
            require _15646 + mem[_15646] + 31 < _15646 + return_data.size
            _15706 = mem[_15646 + mem[_15646]]
            if mem[_15646 + mem[_15646]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_15646 + mem[_15646]]) + 1 < 0 or _15646 + ceil32(return_data.size) + ceil32(32 * mem[_15646 + mem[_15646]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _15646 + ceil32(return_data.size) + ceil32(32 * mem[_15646 + mem[_15646]]) + 1
            mem[_15646 + ceil32(return_data.size)] = _15706
            require _15676 + (32 * _15706) + 32 <= return_data.size
            u = _15646 + ceil32(return_data.size) + 32
            t = _15646 + _15676 + 32
            while t < _15646 + _15676 + (32 * _15706) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _15706:
                revert with 0, 50
            if mem[_3766 + 128] > !mem[_15646 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3766 + 128] = mem[_3766 + 128] + mem[_15646 + ceil32(return_data.size) + 64]
            if v + _11409 > !mem[_3766 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _3889 / _4056 * Mask(112, 0, _3951) / 10^12
            u = 10^12 * _3889 / _4056 * Mask(112, 0, _3927) / 10^12
            v = _3889
            v = _3766
            v = stor9[idx].field_0
            v = v + _11409 + mem[_3766 + 128]
            continue 
        emit 0xf9ede3d1 
        require ext_code.size(arg1)
        staticcall arg1.0x83249ef9 with:
                gas gas_remaining wei
        mem[mem[64] len 192] = ext_call.return_data[0 len 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3797 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 192
        _3811 = mem[_3797]
        require mem[_3797] == mem[_3797 + 12 len 20]
        _3833 = mem[_3797 + 32]
        require mem[_3797 + 32] == mem[_3797 + 44 len 20]
        require mem[_3797 + 64] == mem[_3797 + 76 len 20]
        require mem[_3797 + 96] == mem[_3797 + 108 len 20]
        require mem[_3797 + 128] == mem[_3797 + 140 len 20]
        _3923 = mem[64]
        mem[64] = mem[64] + 256
        mem[_3923] = 0
        mem[_3923 + 32] = 0
        mem[_3923 + 64] = 0
        mem[_3923 + 96] = 0
        mem[_3923 + 128] = 0
        mem[_3923 + 160] = 0
        mem[_3923 + 192] = 0
        mem[_3923 + 224] = 0
        idx = 0
        s = _3923
        s = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _7303 = mem[64]
            mem[64] = mem[64] + 256
            mem[_7303] = strategyInfo[stor9[idx].field_0].field_0
            mem[_7303 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_7303 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_7303 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_7303 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_7303 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_7303 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_7303 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7358 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _7382 = mem[_7358]
                if idx >= stor9.length:
                    revert with 0, 50
                mem[0] = stor9[idx].field_0
                mem[32] = 6
                _7449 = mem[64]
                mem[64] = mem[64] + 256
                mem[_7449] = strategyInfo[stor9[idx].field_0].field_0
                mem[_7449 + 32] = strategyInfo[stor9[idx].field_0].field_256
                mem[_7449 + 64] = strategyInfo[stor9[idx].field_0].field_512
                mem[_7449 + 96] = strategyInfo[stor9[idx].field_0].field_768
                mem[_7449 + 128] = strategyInfo[stor9[idx].field_0].field_1024
                mem[_7449 + 160] = strategyInfo[stor9[idx].field_0].field_1280
                mem[_7449 + 192] = strategyInfo[stor9[idx].field_0].field_1536
                mem[_7449 + 224] = strategyInfo[stor9[idx].field_0].field_1792
                if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _7382
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                         gas gas_remaining wei
                        args _7382
                else:
                    mem[mem[64]] = 0x441a3e7000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                    mem[mem[64] + 36] = _7382
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args strategyInfo[stor9[idx].field_0].field_512, _7382
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _7303
                s = _7382
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7357 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _7381 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_7381] = mem[_7357]
            mem[_7381 + 32] = mem[_7357 + 32]
            mem[_7381 + 64] = mem[_7357 + 64]
            require return_data.size - 96 >= 96
            _7422 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_7422] = mem[_7357 + 96]
            mem[_7422 + 32] = mem[_7357 + 128]
            mem[_7422 + 64] = mem[_7357 + 160]
            mem[_7381 + 96] = _7422
            mem[_7381 + 128] = mem[_7357 + 192]
            require return_data.size - 224 >= 96
            _7472 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_7472] = mem[_7357 + 224]
            mem[_7472 + 32] = mem[_7357 + 256]
            mem[_7472 + 64] = mem[_7357 + 288]
            mem[_7381 + 160] = _7472
            _7509 = mem[_7381 + 64]
            if idx >= stor9.length:
                revert with 0, 50
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _7568 = mem[64]
            mem[64] = mem[64] + 256
            mem[_7568] = strategyInfo[stor9[idx].field_0].field_0
            mem[_7568 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_7568 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_7568 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_7568 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_7568 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_7568 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_7568 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7509
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _7509
            else:
                mem[mem[64]] = 0x441a3e7000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                mem[mem[64] + 36] = _7509
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args strategyInfo[stor9[idx].field_0].field_512, _7509
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _7303
            s = _7509
            continue 
        idx = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _11408 = mem[64]
            mem[64] = mem[64] + 256
            mem[_11408] = strategyInfo[stor9[idx].field_0].field_0
            mem[_11408 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_11408 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_11408 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_11408 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_11408 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_11408 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_11408 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11446 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11465 = mem[_11446]
            if mem[_11446]:
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 36] = strategyInfo[stor9[idx].field_0].field_1792
                mem[mem[64] + 68] = _11465
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = 0
                mem[mem[64] + 164] = this.address
                mem[mem[64] + 196] = block.timestamp + 60
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                call strategyInfo[stor9[idx].field_0].field_0.removeLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, address arg6, uint256 arg7) with:
                     gas gas_remaining wei
                    args strategyInfo[stor9[idx].field_0].field_1536, strategyInfo[stor9[idx].field_0].field_1792, _11465, 0, 0, address(this.address), block.timestamp + 60
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _11599 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_11599 + 32 len 64] = call.data[calldata.size len 64]
                if 1 >= mem[_11599]:
                    revert with 0, 50
                mem[_11599 + 64] = stor21
                if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                    if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                        staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                                gas gas_remaining wei
                        mem[_11599 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[_11599 + ceil32(return_data.size) + 96] = 2
                        mem[_11599 + ceil32(return_data.size) + 128] = address(ext_call.return_data[0])
                        mem[_11599 + ceil32(return_data.size) + 160] = stor21
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_11599 + ceil32(return_data.size) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_11599 + (2 * ceil32(return_data.size)) + 196] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args mem[_11599 + (2 * ceil32(return_data.size)) + 196 len ceil32(return_data.size) + 32]
                        mem[_11599 + (2 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_11599 + (4 * ceil32(return_data.size)) + 196] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args mem[_11599 + (4 * ceil32(return_data.size)) + 196 len (5 * ceil32(return_data.size)) + 32]
                        mem[_11599 + (4 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_11599 + (6 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_11599 + (6 * ceil32(return_data.size)) + 196] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_11599 + (6 * ceil32(return_data.size)) + 228] = 64
                        mem[_11599 + (6 * ceil32(return_data.size)) + 260] = 2
                        s = 0
                        t = _11599 + ceil32(return_data.size) + 128
                        u = _11599 + (6 * ceil32(return_data.size)) + 292
                        while s < 2:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, Array(len=2, data=mem[_11599 + (6 * ceil32(return_data.size)) + 292 len 64])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_11599 + (6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _11599 + (7 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _15673 = mem[_11599 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_11599 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _11599 + (6 * ceil32(return_data.size)) + mem[_11599 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 223 < _11599 + (6 * ceil32(return_data.size)) + return_data.size + 192
                        _15703 = mem[_11599 + (6 * ceil32(return_data.size)) + mem[_11599 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]
                        if mem[_11599 + (6 * ceil32(return_data.size)) + mem[_11599 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11599 + (6 * ceil32(return_data.size)) + mem[_11599 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 1 < 0 or _11599 + (7 * ceil32(return_data.size)) + ceil32(32 * mem[_11599 + (6 * ceil32(return_data.size)) + mem[_11599 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 193 > test266151307():
                            revert with 0, 65
                        mem[64] = _11599 + (7 * ceil32(return_data.size)) + ceil32(32 * mem[_11599 + (6 * ceil32(return_data.size)) + mem[_11599 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 193
                        mem[_11599 + (7 * ceil32(return_data.size)) + 192] = _15703
                        require _15673 + (32 * _15703) + 32 <= return_data.size
                        t = _11599 + (7 * ceil32(return_data.size)) + 224
                        s = _11599 + (6 * ceil32(return_data.size)) + _15673 + 224
                        while s < _11599 + (6 * ceil32(return_data.size)) + _15673 + (32 * _15703) + 224:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _15703:
                            revert with 0, 50
                        _19553 = mem[_11599 + (7 * ceil32(return_data.size)) + 256]
                        if mem[_11599 + (7 * ceil32(return_data.size)) + 256] and 5 > -1 / mem[_11599 + (7 * ceil32(return_data.size)) + 256]:
                            revert with 0, 17
                        if 5 * mem[_11599 + (7 * ceil32(return_data.size)) + 256] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if mem[_11599 + (7 * ceil32(return_data.size)) + 256] < 5000 * mem[_11599 + (7 * ceil32(return_data.size)) + 256] / 10^6:
                            revert with 0, 17
                        _19803 = mem[_11408]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19906 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _19958 = mem[_19906]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _19958
                        mem[mem[64] + 36] = _19553 - (5000 * _19553 / 10^6)
                        mem[mem[64] + 68] = 160
                        mem[mem[64] + 164] = 2
                        s = 0
                        t = _11599 + ceil32(return_data.size) + 128
                        u = mem[64] + 196
                        while s < 2:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(address(_19803))
                        call address(_19803).swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _19958, _19553 - (5000 * _19553 / 10^6), Array(len=2, data=mem[mem[64] + 196 len 64]), address(this.address), block.timestamp + 60
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22818 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22866 = mem[_22818]
                        require mem[_22818] <= test266151307()
                        require _22818 + mem[_22818] + 31 < _22818 + return_data.size
                        _22906 = mem[_22818 + mem[_22818]]
                        if mem[_22818 + mem[_22818]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_22818 + mem[_22818]]) + 1 < 0 or _22818 + ceil32(return_data.size) + ceil32(32 * mem[_22818 + mem[_22818]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _22818 + ceil32(return_data.size) + ceil32(32 * mem[_22818 + mem[_22818]]) + 1
                        mem[_22818 + ceil32(return_data.size)] = _22906
                        require _22866 + (32 * _22906) + 32 <= return_data.size
                        t = _22818 + ceil32(return_data.size) + 32
                        s = _22818 + _22866 + 32
                        while s < _22818 + _22866 + (32 * _22906) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                    else:
                        if 0 >= mem[_11599]:
                            revert with 0, 50
                        mem[_11599 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                                gas gas_remaining wei
                        mem[_11599 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_11599 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_11599 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_11599 + (2 * ceil32(return_data.size)) + 100] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args strategyInfo[stor9[idx].field_0].field_0
                        mem[_11599 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _11599 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_11599 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_11599 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_11599 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_11599 + (4 * ceil32(return_data.size)) + 164] = mem[_11599]
                        s = 0
                        t = _11599 + 32
                        u = _11599 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_11599]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _11599 + (4 * ceil32(return_data.size)) + (32 * mem[_11599]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15644 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _15674 = mem[_15644]
                        require mem[_15644] <= test266151307()
                        require _15644 + mem[_15644] + 31 < _15644 + return_data.size
                        _15704 = mem[_15644 + mem[_15644]]
                        if mem[_15644 + mem[_15644]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_15644 + mem[_15644]]) + 1 < 0 or _15644 + ceil32(return_data.size) + ceil32(32 * mem[_15644 + mem[_15644]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _15644 + ceil32(return_data.size) + ceil32(32 * mem[_15644 + mem[_15644]]) + 1
                        mem[_15644 + ceil32(return_data.size)] = _15704
                        require _15674 + (32 * _15704) + 32 <= return_data.size
                        t = _15644 + ceil32(return_data.size) + 32
                        s = _15644 + _15674 + 32
                        while s < _15644 + _15674 + (32 * _15704) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _15704:
                            revert with 0, 50
                        _19554 = mem[_15644 + ceil32(return_data.size) + 64]
                        if mem[_15644 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_15644 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if 5 * mem[_15644 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if mem[_15644 + ceil32(return_data.size) + 64] < 5000 * mem[_15644 + ceil32(return_data.size) + 64] / 10^6:
                            revert with 0, 17
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1792)
                        staticcall strategyInfo[stor9[idx].field_0].field_1792.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19907 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _19959 = mem[_19907]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _20054 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _19959
                        mem[mem[64] + 36] = _19554 - (5000 * _19554 / 10^6)
                        mem[mem[64] + 68] = 160
                        _20089 = mem[_11599]
                        mem[mem[64] + 164] = mem[_11599]
                        s = 0
                        t = _11599 + 32
                        u = mem[64] + 196
                        while s < _20089:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_20054 + 100] = this.address
                        mem[_20054 + 132] = block.timestamp + 60
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        call strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _20054 + (32 * _20089) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22819 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22867 = mem[_22819]
                        require mem[_22819] <= test266151307()
                        require _22819 + mem[_22819] + 31 < _22819 + return_data.size
                        _22907 = mem[_22819 + mem[_22819]]
                        if mem[_22819 + mem[_22819]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_22819 + mem[_22819]]) + 1 < 0 or _22819 + ceil32(return_data.size) + ceil32(32 * mem[_22819 + mem[_22819]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _22819 + ceil32(return_data.size) + ceil32(32 * mem[_22819 + mem[_22819]]) + 1
                        mem[_22819 + ceil32(return_data.size)] = _22907
                        require _22867 + (32 * _22907) + 32 <= return_data.size
                        t = _22819 + ceil32(return_data.size) + 32
                        s = _22819 + _22867 + 32
                        while s < _22819 + _22867 + (32 * _22907) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(mem[_11408 + 172 len 20])
                        staticcall mem[_11408 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25716 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25763 = mem[_25716]
                        require mem[_25716] == mem[_25716 + 12 len 20]
                        _25820 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_25820]:
                            revert with 0, 50
                        mem[_25820 + 32] = address(_25763)
                        if 1 >= mem[_25820]:
                            revert with 0, 50
                        mem[_25820 + 64] = stor21
                        _25873 = mem[_11408]
                        require ext_code.size(address(_25763))
                        staticcall address(_25763).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_25820 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_25820 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_25763))
                        staticcall address(_25763).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_25820 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_25820 + (2 * ceil32(return_data.size)) + 100] = address(_25873)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_25873)
                        mem[_25820 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _25820 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_25820 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_25820 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_25820 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_25820 + (4 * ceil32(return_data.size)) + 164] = mem[_25820]
                        s = 0
                        t = _25820 + 32
                        u = _25820 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_25820]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_25873))
                        staticcall address(_25873).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _25820 + (4 * ceil32(return_data.size)) + (32 * mem[_25820]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27207 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27253 = mem[_27207]
                        require mem[_27207] <= test266151307()
                        require _27207 + mem[_27207] + 31 < _27207 + return_data.size
                        _27299 = mem[_27207 + mem[_27207]]
                        if mem[_27207 + mem[_27207]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27207 + mem[_27207]]) + 1 < 0 or _27207 + ceil32(return_data.size) + ceil32(32 * mem[_27207 + mem[_27207]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27207 + ceil32(return_data.size) + ceil32(32 * mem[_27207 + mem[_27207]]) + 1
                        mem[_27207 + ceil32(return_data.size)] = _27299
                        require _27253 + (32 * _27299) + 32 <= return_data.size
                        t = _27207 + ceil32(return_data.size) + 32
                        s = _27207 + _27253 + 32
                        while s < _27207 + _27253 + (32 * _27299) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _27299:
                            revert with 0, 50
                        _28227 = mem[_27207 + ceil32(return_data.size) + 64]
                        if mem[_27207 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_27207 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if 5 * mem[_27207 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if mem[_27207 + ceil32(return_data.size) + 64] < 5000 * mem[_27207 + ceil32(return_data.size) + 64] / 10^6:
                            revert with 0, 17
                        _28329 = mem[_11408]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25763))
                        staticcall address(_25763).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28377 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28399 = mem[_28377]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28399
                        mem[mem[64] + 36] = _28227 - (5000 * _28227 / 10^6)
                        mem[mem[64] + 68] = 160
                        _28427 = mem[_25820]
                        mem[mem[64] + 164] = mem[_25820]
                        s = 0
                        t = _25820 + 32
                        u = mem[64] + 196
                        while s < _28427:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(address(_28329))
                        call address(_28329).swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _28399, _28227 - (5000 * _28227 / 10^6), 160, address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _28427) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28627 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28649 = mem[_28627]
                        require mem[_28627] <= test266151307()
                        require _28627 + mem[_28627] + 31 < _28627 + return_data.size
                        _28671 = mem[_28627 + mem[_28627]]
                        if mem[_28627 + mem[_28627]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28627 + mem[_28627]]) + 1 < 0 or _28627 + ceil32(return_data.size) + ceil32(32 * mem[_28627 + mem[_28627]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28627 + ceil32(return_data.size) + ceil32(32 * mem[_28627 + mem[_28627]]) + 1
                        mem[_28627 + ceil32(return_data.size)] = _28671
                        require _28649 + (32 * _28671) + 32 <= return_data.size
                        t = _28627 + ceil32(return_data.size) + 32
                        s = _28627 + _28649 + 32
                        while s < _28627 + _28649 + (32 * _28671) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                else:
                    if 0 >= mem[_11599]:
                        revert with 0, 50
                    mem[_11599 + 32] = strategyInfo[stor9[idx].field_0].field_1536
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                            gas gas_remaining wei
                    mem[_11599 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_11599 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_11599 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                        revert with 0, 17
                    if not ext_call.return_data[0]:
                        revert with 0, 18
                    mem[_11599 + (2 * ceil32(return_data.size)) + 100] = strategyInfo[stor9[idx].field_0].field_0
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args strategyInfo[stor9[idx].field_0].field_0
                    mem[_11599 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _11599 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 17
                    mem[_11599 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_11599 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                    mem[_11599 + (4 * ceil32(return_data.size)) + 132] = 64
                    mem[_11599 + (4 * ceil32(return_data.size)) + 164] = mem[_11599]
                    s = 0
                    t = _11599 + 32
                    u = _11599 + (4 * ceil32(return_data.size)) + 196
                    while s < mem[_11599]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _11599 + (4 * ceil32(return_data.size)) + (32 * mem[_11599]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15645 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _15675 = mem[_15645]
                    require mem[_15645] <= test266151307()
                    require _15645 + mem[_15645] + 31 < _15645 + return_data.size
                    _15705 = mem[_15645 + mem[_15645]]
                    if mem[_15645 + mem[_15645]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_15645 + mem[_15645]]) + 1 < 0 or _15645 + ceil32(return_data.size) + ceil32(32 * mem[_15645 + mem[_15645]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _15645 + ceil32(return_data.size) + ceil32(32 * mem[_15645 + mem[_15645]]) + 1
                    mem[_15645 + ceil32(return_data.size)] = _15705
                    require _15675 + (32 * _15705) + 32 <= return_data.size
                    t = _15645 + ceil32(return_data.size) + 32
                    s = _15645 + _15675 + 32
                    while s < _15645 + _15675 + (32 * _15705) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _15705:
                        revert with 0, 50
                    _19555 = mem[_15645 + ceil32(return_data.size) + 64]
                    if mem[_15645 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_15645 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if 5 * mem[_15645 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if mem[_15645 + ceil32(return_data.size) + 64] < 5000 * mem[_15645 + ceil32(return_data.size) + 64] / 10^6:
                        revert with 0, 17
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19908 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _19960 = mem[_19908]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _19960
                    mem[mem[64] + 36] = _19555 - (5000 * _19555 / 10^6)
                    mem[mem[64] + 68] = 160
                    _20090 = mem[_11599]
                    mem[mem[64] + 164] = mem[_11599]
                    s = 0
                    t = _11599 + 32
                    u = mem[64] + 196
                    while s < _20090:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 100] = this.address
                    mem[mem[64] + 132] = block.timestamp + 60
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    call strategyInfo[stor9[idx].field_0].field_0.swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args _19960, _19555 - (5000 * _19555 / 10^6), 160, address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _20090) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22820 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22868 = mem[_22820]
                    require mem[_22820] <= test266151307()
                    require _22820 + mem[_22820] + 31 < _22820 + return_data.size
                    _22908 = mem[_22820 + mem[_22820]]
                    if mem[_22820 + mem[_22820]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_22820 + mem[_22820]]) + 1 < 0 or _22820 + ceil32(return_data.size) + ceil32(32 * mem[_22820 + mem[_22820]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _22820 + ceil32(return_data.size) + ceil32(32 * mem[_22820 + mem[_22820]]) + 1
                    mem[_22820 + ceil32(return_data.size)] = _22908
                    require _22868 + (32 * _22908) + 32 <= return_data.size
                    t = _22820 + ceil32(return_data.size) + 32
                    s = _22820 + _22868 + 32
                    while s < _22820 + _22868 + (32 * _22908) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                        require ext_code.size(mem[_11408 + 172 len 20])
                        staticcall mem[_11408 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25719 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25767 = mem[_25719]
                        require mem[_25719] == mem[_25719 + 12 len 20]
                        _25828 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_25828]:
                            revert with 0, 50
                        mem[_25828 + 32] = address(_25767)
                        if 1 >= mem[_25828]:
                            revert with 0, 50
                        mem[_25828 + 64] = stor21
                        _25879 = mem[_11408]
                        require ext_code.size(address(_25767))
                        staticcall address(_25767).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_25828 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_25828 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_25767))
                        staticcall address(_25767).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_25828 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_25828 + (2 * ceil32(return_data.size)) + 100] = address(_25879)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_25879)
                        mem[_25828 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _25828 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_25828 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_25828 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_25828 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_25828 + (4 * ceil32(return_data.size)) + 164] = mem[_25828]
                        s = 0
                        t = _25828 + 32
                        u = _25828 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_25828]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_25879))
                        staticcall address(_25879).getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, 64, mem[_25828 + (4 * ceil32(return_data.size)) + 164 len (32 * mem[_25828]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_25828 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _25828 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _27254 = mem[_25828 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_25828 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _25828 + (4 * ceil32(return_data.size)) + mem[_25828 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 127 < _25828 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _27300 = mem[_25828 + (4 * ceil32(return_data.size)) + mem[_25828 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        if mem[_25828 + (4 * ceil32(return_data.size)) + mem[_25828 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25828 + (4 * ceil32(return_data.size)) + mem[_25828 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 1 < 0 or _25828 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_25828 + (4 * ceil32(return_data.size)) + mem[_25828 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _25828 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_25828 + (4 * ceil32(return_data.size)) + mem[_25828 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97
                        mem[_25828 + (6 * ceil32(return_data.size)) + 96] = mem[_25828 + (4 * ceil32(return_data.size)) + mem[_25828 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        require _27254 + (32 * _27300) + 32 <= return_data.size
                        t = _25828 + (6 * ceil32(return_data.size)) + 128
                        s = _25828 + (4 * ceil32(return_data.size)) + _27254 + 128
                        while s < _25828 + (4 * ceil32(return_data.size)) + _27254 + (32 * _27300) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _27300:
                            revert with 0, 50
                        _28228 = mem[_25828 + (6 * ceil32(return_data.size)) + 160]
                        if mem[_25828 + (6 * ceil32(return_data.size)) + 160] and 5 > -1 / mem[_25828 + (6 * ceil32(return_data.size)) + 160]:
                            revert with 0, 17
                        if 5 * mem[_25828 + (6 * ceil32(return_data.size)) + 160] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if mem[_25828 + (6 * ceil32(return_data.size)) + 160] < 5000 * mem[_25828 + (6 * ceil32(return_data.size)) + 160] / 10^6:
                            revert with 0, 17
                        _28330 = mem[_11408]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25767))
                        staticcall address(_25767).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28378 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28400 = mem[_28378]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28400
                        mem[mem[64] + 36] = _28228 - (5000 * _28228 / 10^6)
                        mem[mem[64] + 68] = 160
                        _28428 = mem[_25828]
                        mem[mem[64] + 164] = mem[_25828]
                        s = 0
                        t = _25828 + 32
                        u = mem[64] + 196
                        while s < _28428:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(address(_28330))
                        call address(_28330).swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _28400, _28228 - (5000 * _28228 / 10^6), 160, address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _28428) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28628 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28650 = mem[_28628]
                        require mem[_28628] <= test266151307()
                        require _28628 + mem[_28628] + 31 < _28628 + return_data.size
                        _28672 = mem[_28628 + mem[_28628]]
                        if mem[_28628 + mem[_28628]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28628 + mem[_28628]]) + 1 < 0 or _28628 + ceil32(return_data.size) + ceil32(32 * mem[_28628 + mem[_28628]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28628 + ceil32(return_data.size) + ceil32(32 * mem[_28628 + mem[_28628]]) + 1
                        mem[_28628 + ceil32(return_data.size)] = _28672
                        require _28650 + (32 * _28672) + 32 <= return_data.size
                        t = _28628 + ceil32(return_data.size) + 32
                        s = _28628 + _28650 + 32
                        while s < _28628 + _28650 + (32 * _28672) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                    else:
                        if 0 >= mem[_11599]:
                            revert with 0, 50
                        mem[_11599 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25720 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25768 = mem[_25720]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25822 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25875 = mem[_25822]
                        if mem[_25822] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not _25768:
                            revert with 0, 18
                        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args strategyInfo[stor9[idx].field_0].field_0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26104 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26121 = mem[_26104]
                        if 10^12 * _25875 / _25768 and mem[_26104] > -1 / 10^12 * _25875 / _25768:
                            revert with 0, 17
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 10^12 * _25875 / _25768 * _26121 / 10^12
                        mem[mem[64] + 36] = 64
                        _26193 = mem[_11599]
                        mem[mem[64] + 68] = mem[_11599]
                        s = 0
                        t = _11599 + 32
                        u = mem[64] + 100
                        while s < _26193:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * _25875 / _25768 * _26121 / 10^12, 64, mem[mem[64] + 68 len (32 * _26193) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27209 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27255 = mem[_27209]
                        require mem[_27209] <= test266151307()
                        require _27209 + mem[_27209] + 31 < _27209 + return_data.size
                        _27301 = mem[_27209 + mem[_27209]]
                        if mem[_27209 + mem[_27209]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27209 + mem[_27209]]) + 1 < 0 or _27209 + ceil32(return_data.size) + ceil32(32 * mem[_27209 + mem[_27209]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27209 + ceil32(return_data.size) + ceil32(32 * mem[_27209 + mem[_27209]]) + 1
                        mem[_27209 + ceil32(return_data.size)] = _27301
                        require _27255 + (32 * _27301) + 32 <= return_data.size
                        t = _27209 + ceil32(return_data.size) + 32
                        s = _27209 + _27255 + 32
                        while s < _27209 + _27255 + (32 * _27301) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _27301:
                            revert with 0, 50
                        _28229 = mem[_27209 + ceil32(return_data.size) + 64]
                        if mem[_27209 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_27209 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if 5 * mem[_27209 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if mem[_27209 + ceil32(return_data.size) + 64] < 5000 * mem[_27209 + ceil32(return_data.size) + 64] / 10^6:
                            revert with 0, 17
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1792)
                        staticcall strategyInfo[stor9[idx].field_0].field_1792.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28379 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28401 = mem[_28379]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28401
                        mem[mem[64] + 36] = _28229 - (5000 * _28229 / 10^6)
                        mem[mem[64] + 68] = 160
                        _28429 = mem[_11599]
                        mem[mem[64] + 164] = mem[_11599]
                        s = 0
                        t = _11599 + 32
                        u = mem[64] + 196
                        while s < _28429:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        call strategyInfo[stor9[idx].field_0].field_0.swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _28401, _28229 - (5000 * _28229 / 10^6), 160, address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _28429) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28629 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28651 = mem[_28629]
                        require mem[_28629] <= test266151307()
                        require _28629 + mem[_28629] + 31 < _28629 + return_data.size
                        _28673 = mem[_28629 + mem[_28629]]
                        if mem[_28629 + mem[_28629]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28629 + mem[_28629]]) + 1 < 0 or _28629 + ceil32(return_data.size) + ceil32(32 * mem[_28629 + mem[_28629]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28629 + ceil32(return_data.size) + ceil32(32 * mem[_28629 + mem[_28629]]) + 1
                        mem[_28629 + ceil32(return_data.size)] = _28673
                        require _28651 + (32 * _28673) + 32 <= return_data.size
                        t = _28629 + ceil32(return_data.size) + 32
                        s = _28629 + _28651 + 32
                        while s < _28629 + _28651 + (32 * _28673) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(mem[_11408 + 172 len 20])
                        staticcall mem[_11408 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28793 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28795 = mem[_28793]
                        require mem[_28793] == mem[_28793 + 12 len 20]
                        _28797 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_28797]:
                            revert with 0, 50
                        mem[_28797 + 32] = address(_28795)
                        if 1 >= mem[_28797]:
                            revert with 0, 50
                        mem[_28797 + 64] = stor21
                        _28803 = mem[_11408]
                        require ext_code.size(address(_28795))
                        staticcall address(_28795).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_28797 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_28797 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_28795))
                        staticcall address(_28795).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_28797 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_28797 + (2 * ceil32(return_data.size)) + 100] = address(_28803)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_28803)
                        mem[_28797 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _28797 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_28797 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_28797 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_28797 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_28797 + (4 * ceil32(return_data.size)) + 164] = mem[_28797]
                        s = 0
                        t = _28797 + 32
                        u = _28797 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_28797]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_28803))
                        staticcall address(_28803).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _28797 + (4 * ceil32(return_data.size)) + (32 * mem[_28797]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28883 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28885 = mem[_28883]
                        require mem[_28883] <= test266151307()
                        require _28883 + mem[_28883] + 31 < _28883 + return_data.size
                        _28887 = mem[_28883 + mem[_28883]]
                        if mem[_28883 + mem[_28883]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28883 + mem[_28883]]) + 1 < 0 or _28883 + ceil32(return_data.size) + ceil32(32 * mem[_28883 + mem[_28883]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28883 + ceil32(return_data.size) + ceil32(32 * mem[_28883 + mem[_28883]]) + 1
                        mem[_28883 + ceil32(return_data.size)] = _28887
                        require _28885 + (32 * _28887) + 32 <= return_data.size
                        t = _28883 + ceil32(return_data.size) + 32
                        s = _28883 + _28885 + 32
                        while s < _28883 + _28885 + (32 * _28887) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _28887:
                            revert with 0, 50
                        _28929 = mem[_28883 + ceil32(return_data.size) + 64]
                        if mem[_28883 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_28883 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if 5 * mem[_28883 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if mem[_28883 + ceil32(return_data.size) + 64] < 5000 * mem[_28883 + ceil32(return_data.size) + 64] / 10^6:
                            revert with 0, 17
                        _28931 = mem[_11408]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_28795))
                        staticcall address(_28795).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28937 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28939 = mem[_28937]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _28941 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28939
                        mem[mem[64] + 36] = _28929 - (5000 * _28929 / 10^6)
                        mem[mem[64] + 68] = 160
                        _28943 = mem[_28797]
                        mem[mem[64] + 164] = mem[_28797]
                        s = 0
                        t = _28797 + 32
                        u = mem[64] + 196
                        while s < _28943:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_28941 + 100] = this.address
                        mem[_28941 + 132] = block.timestamp + 60
                        require ext_code.size(address(_28931))
                        call address(_28931).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _28941 + (32 * _28943) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28963 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28965 = mem[_28963]
                        require mem[_28963] <= test266151307()
                        require _28963 + mem[_28963] + 31 < _28963 + return_data.size
                        _28967 = mem[_28963 + mem[_28963]]
                        if mem[_28963 + mem[_28963]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28963 + mem[_28963]]) + 1 < 0 or _28963 + ceil32(return_data.size) + ceil32(32 * mem[_28963 + mem[_28963]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28963 + ceil32(return_data.size) + ceil32(32 * mem[_28963 + mem[_28963]]) + 1
                        mem[_28963 + ceil32(return_data.size)] = _28967
                        require _28965 + (32 * _28967) + 32 <= return_data.size
                        t = _28963 + ceil32(return_data.size) + 32
                        s = _28963 + _28965 + 32
                        while s < _28963 + _28965 + (32 * _28967) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        require ext_code.size(address(_3811))
        staticcall address(_3811).token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _11431 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _11445 = mem[_11431]
        require mem[_11431] == mem[_11431 + 12 len 20]
        require ext_code.size(address(_3811))
        staticcall address(_3811).token1() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _11513 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _11519 = mem[_11513]
        require mem[_11513] == mem[_11513 + 12 len 20]
        _11595 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        if not mem[_11595]:
            revert with 0, 50
        mem[_11595 + 32] = stor21
        if stor21 == address(_11519):
            if stor21 == address(_3833):
                require ext_code.size(address(_11519))
                staticcall address(_11519).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(_3833))
                staticcall address(_3833).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    revert with 0, 'Desired value is zero'
                if not ext_call.return_data[0]:
                    revert with 0, 'Desired value is zero'
                require ext_code.size(address(_11519))
                call address(_11519).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_11445), -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_code.size(address(_3833))
                call address(_3833).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_11445), -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                    revert with 0, 17
                if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                require ext_code.size(address(_11445))
                call address(_11445).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_11519), address(_3833), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_code.size(address(_3811))
                staticcall address(_3811).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(_3811))
                call address(_3811).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if 1 >= mem[_11595]:
                    revert with 0, 50
                mem[_11595 + 64] = address(_3833)
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[_11595 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[_11595 + 100] = eth.balance(this.address) / 2
                mem[_11595 + 132] = 128
                mem[_11595 + 228] = mem[_11595]
                idx = 0
                s = _11595 + 32
                t = _11595 + 260
                while idx < mem[_11595]:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_11595 + 164] = this.address
                mem[_11595 + 196] = block.timestamp + 60
                require ext_code.size(address(_11445))
                call address(_11445).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _11595 + (32 * mem[_11595]) + -mem[64] + 256]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15639 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _15661 = mem[_15639]
                require mem[_15639] <= test266151307()
                require _15639 + mem[_15639] + 31 < _15639 + return_data.size
                _15699 = mem[_15639 + mem[_15639]]
                if mem[_15639 + mem[_15639]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_15639 + mem[_15639]]) + 1 < 0 or _15639 + ceil32(return_data.size) + ceil32(32 * mem[_15639 + mem[_15639]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _15639 + ceil32(return_data.size) + ceil32(32 * mem[_15639 + mem[_15639]]) + 1
                mem[_15639 + ceil32(return_data.size)] = _15699
                require _15661 + (32 * _15699) + 32 <= return_data.size
                mem[_15639 + ceil32(return_data.size) + 32 len ceil32(32 * _15699)] = mem[_15639 + _15661 + 32 len ceil32(32 * _15699)]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11519))
                staticcall address(_11519).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19641 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _19681 = mem[_19641]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3833))
                staticcall address(_3833).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19759 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _19765 = mem[_19759]
                if not _19681:
                    revert with 0, 'Desired value is zero'
                if not mem[_19759]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_11445)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_11519))
                call address(_11519).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_11445), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19957 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_19957] == bool(mem[_19957])
                mem[mem[64] + 4] = address(_11445)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_3833))
                call address(_3833).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_11445), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _20069 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_20069] == bool(mem[_20069])
                if _19681 and 5 > -1 / _19681:
                    revert with 0, 17
                if 5 * _19681 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _19681 < 5000 * _19681 / 10^6:
                    revert with 0, 17
                if _19765 and 5 > -1 / _19765:
                    revert with 0, 17
                if 5 * _19765 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _19765 < 5000 * _19765 / 10^6:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _19681
                mem[mem[64] + 100] = _19765
                mem[mem[64] + 132] = _19681 - (5000 * _19681 / 10^6)
                mem[mem[64] + 164] = _19765 - (5000 * _19765 / 10^6)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_11445))
                call address(_11445).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_11519), address(_3833), _19681, _19765, _19681 - (5000 * _19681 / 10^6), _19765 - (5000 * _19765 / 10^6), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3811))
                staticcall address(_3811).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _20667 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _20689 = mem[_20667]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _20689
                require ext_code.size(address(_3811))
                call address(_3811).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _20689
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _20739 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_20739] == bool(mem[_20739])
        else:
            if 1 >= mem[_11595]:
                revert with 0, 50
            mem[_11595 + 64] = address(_11519)
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[_11595 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[_11595 + 100] = eth.balance(this.address) / 2
            mem[_11595 + 132] = 128
            mem[_11595 + 228] = mem[_11595]
            idx = 0
            s = _11595 + 32
            t = _11595 + 260
            while idx < mem[_11595]:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_11595 + 164] = this.address
            mem[_11595 + 196] = block.timestamp + 60
            require ext_code.size(address(_11445))
            call address(_11445).mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _11595 + (32 * mem[_11595]) + -mem[64] + 256]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15640 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _15662 = mem[_15640]
            require mem[_15640] <= test266151307()
            require _15640 + mem[_15640] + 31 < _15640 + return_data.size
            _15700 = mem[_15640 + mem[_15640]]
            if mem[_15640 + mem[_15640]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_15640 + mem[_15640]]) + 1 < 0 or _15640 + ceil32(return_data.size) + ceil32(32 * mem[_15640 + mem[_15640]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _15640 + ceil32(return_data.size) + ceil32(32 * mem[_15640 + mem[_15640]]) + 1
            mem[_15640 + ceil32(return_data.size)] = _15700
            require _15662 + (32 * _15700) + 32 <= return_data.size
            mem[_15640 + ceil32(return_data.size) + 32 len ceil32(32 * _15700)] = mem[_15640 + _15662 + 32 len ceil32(32 * _15700)]
            if stor21 == address(_3833):
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11519))
                staticcall address(_11519).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19643 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _19683 = mem[_19643]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3833))
                staticcall address(_3833).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19761 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _19767 = mem[_19761]
                if not _19683:
                    revert with 0, 'Desired value is zero'
                if not mem[_19761]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_11445)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_11519))
                call address(_11519).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_11445), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19989 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_19989] == bool(mem[_19989])
                mem[mem[64] + 4] = address(_11445)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_3833))
                call address(_3833).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_11445), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _20087 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_20087] == bool(mem[_20087])
                if _19683 and 5 > -1 / _19683:
                    revert with 0, 17
                if 5 * _19683 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _19683 < 5000 * _19683 / 10^6:
                    revert with 0, 17
                if _19767 and 5 > -1 / _19767:
                    revert with 0, 17
                if 5 * _19767 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _19767 < 5000 * _19767 / 10^6:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _19683
                mem[mem[64] + 100] = _19767
                mem[mem[64] + 132] = _19683 - (5000 * _19683 / 10^6)
                mem[mem[64] + 164] = _19767 - (5000 * _19767 / 10^6)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_11445))
                call address(_11445).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_11519), address(_3833), _19683, _19767, _19683 - (5000 * _19683 / 10^6), _19767 - (5000 * _19767 / 10^6), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3811))
                staticcall address(_3811).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _20679 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _20711 = mem[_20679]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _20711
                require ext_code.size(address(_3811))
                call address(_3811).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _20711
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _20767 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_20767] == bool(mem[_20767])
            else:
                if 1 >= mem[_11595]:
                    revert with 0, 50
                mem[_11595 + 64] = address(_3833)
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = eth.balance(this.address) / 2
                mem[mem[64] + 36] = 128
                _19762 = mem[_11595]
                mem[mem[64] + 132] = mem[_11595]
                idx = 0
                s = _11595 + 32
                t = mem[64] + 164
                while idx < _19762:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 68] = this.address
                mem[mem[64] + 100] = block.timestamp + 60
                require ext_code.size(address(_11445))
                call address(_11445).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args Mask(255, 1, eth.balance(this.address)), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _19762) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22817 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _22865 = mem[_22817]
                require mem[_22817] <= test266151307()
                require _22817 + mem[_22817] + 31 < _22817 + return_data.size
                _22905 = mem[_22817 + mem[_22817]]
                if mem[_22817 + mem[_22817]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_22817 + mem[_22817]]) + 1 < 0 or _22817 + ceil32(return_data.size) + ceil32(32 * mem[_22817 + mem[_22817]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _22817 + ceil32(return_data.size) + ceil32(32 * mem[_22817 + mem[_22817]]) + 1
                mem[_22817 + ceil32(return_data.size)] = _22905
                require _22865 + (32 * _22905) + 32 <= return_data.size
                mem[_22817 + ceil32(return_data.size) + 32 len ceil32(32 * _22905)] = mem[_22817 + _22865 + 32 len ceil32(32 * _22905)]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11519))
                staticcall address(_11519).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25659 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25715 = mem[_25659]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3833))
                staticcall address(_3833).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25813 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25819 = mem[_25813]
                if not _25715:
                    revert with 0, 'Desired value is zero'
                if not mem[_25813]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_11445)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_11519))
                call address(_11519).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_11445), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26025 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26025] == bool(mem[_26025])
                mem[mem[64] + 4] = address(_11445)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_3833))
                call address(_3833).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_11445), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26119 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26119] == bool(mem[_26119])
                if _25715 and 5 > -1 / _25715:
                    revert with 0, 17
                if 5 * _25715 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _25715 < 5000 * _25715 / 10^6:
                    revert with 0, 17
                if _25819 and 5 > -1 / _25819:
                    revert with 0, 17
                if 5 * _25819 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _25819 < 5000 * _25819 / 10^6:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _25715
                mem[mem[64] + 100] = _25819
                mem[mem[64] + 132] = _25715 - (5000 * _25715 / 10^6)
                mem[mem[64] + 164] = _25819 - (5000 * _25819 / 10^6)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_11445))
                call address(_11445).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_11519), address(_3833), _25715, _25819, _25715 - (5000 * _25715 / 10^6), _25819 - (5000 * _25819 / 10^6), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3811))
                staticcall address(_3811).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26325 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26333 = mem[_26325]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _26333
                require ext_code.size(address(_3811))
                call address(_3811).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _26333
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26343 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26343] == bool(mem[_26343])
    else:
        if governmentAddress != msg.sender:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: caller is not the owner or government'
        if not arg1:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'The _contract can not be a zero address'
        mem[96] = 2
        mem[128 len 64] = call.data[calldata.size len 64]
        mem[64] = 448
        mem[192] = 0
        mem[224] = 0
        mem[256] = 0
        mem[288] = 0
        mem[320] = 0
        mem[352] = 0
        mem[384] = 0
        mem[416] = 0
        idx = 0
        s = 192
        s = 0
        s = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _1542 = mem[64]
            mem[64] = mem[64] + 256
            mem[_1542] = strategyInfo[stor9[idx].field_0].field_0
            mem[_1542 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_1542 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_1542 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_1542 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_1542 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_1542 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_1542 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1564 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _1587 = mem[_1564]
                if not mem[_1564]:
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _1542
                    s = mem[_1564]
                    s = stor9[idx].field_0
                    continue 
                mem[0] = stor9[idx].field_0
                mem[32] = 6
                _1630 = mem[64]
                mem[64] = mem[64] + 256
                mem[_1630] = strategyInfo[stor9[idx].field_0].field_0
                mem[_1630 + 32] = strategyInfo[stor9[idx].field_0].field_256
                mem[_1630 + 64] = strategyInfo[stor9[idx].field_0].field_512
                mem[_1630 + 96] = strategyInfo[stor9[idx].field_0].field_768
                mem[_1630 + 128] = strategyInfo[stor9[idx].field_0].field_1024
                mem[_1630 + 160] = strategyInfo[stor9[idx].field_0].field_1280
                mem[_1630 + 192] = strategyInfo[stor9[idx].field_0].field_1536
                mem[_1630 + 224] = strategyInfo[stor9[idx].field_0].field_1792
                if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                    mem[mem[64] + 4] = _1587
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                         gas gas_remaining wei
                        args _1587
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1707 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1727 = mem[_1707]
                    require mem[_1707] == mem[_1707 + 12 len 20]
                    if 0 >= mem[96]:
                        revert with 0, 50
                    mem[128] = mem[_1707 + 12 len 20]
                    if 1 >= mem[96]:
                        revert with 0, 50
                    mem[160] = stor21
                    require ext_code.size(address(_1727))
                    staticcall address(_1727).0x18160ddd with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1807 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1829 = mem[_1807]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_1727))
                    staticcall address(_1727).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1873 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1897 = mem[_1873]
                    if mem[_1873] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                        revert with 0, 17
                    if not _1829:
                        revert with 0, 18
                    mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args strategyInfo[stor9[idx].field_0].field_0
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _1985 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _1995 = mem[_1985]
                    if 10^12 * _1897 / _1829 and mem[_1985] > -1 / 10^12 * _1897 / _1829:
                        revert with 0, 17
                    _2061 = mem[64]
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _1897 / _1829 * _1995 / 10^12
                    mem[mem[64] + 36] = 64
                    _2085 = mem[96]
                    mem[mem[64] + 68] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 100
                    while s < _2085:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _2061 + (32 * _2085) + -mem[64] + 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3809 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3825 = mem[_3809]
                    require mem[_3809] <= test266151307()
                    require _3809 + mem[_3809] + 31 < _3809 + return_data.size
                    _3841 = mem[_3809 + mem[_3809]]
                    if mem[_3809 + mem[_3809]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_3809 + mem[_3809]]) + 1 < 0 or _3809 + ceil32(return_data.size) + ceil32(32 * mem[_3809 + mem[_3809]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _3809 + ceil32(return_data.size) + ceil32(32 * mem[_3809 + mem[_3809]]) + 1
                    mem[_3809 + ceil32(return_data.size)] = _3841
                    require _3825 + (32 * _3841) + 32 <= return_data.size
                    t = _3809 + ceil32(return_data.size) + 32
                    s = _3809 + _3825 + 32
                    while s < _3809 + _3825 + (32 * _3841) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _3841:
                        revert with 0, 50
                    _7327 = mem[_3809 + ceil32(return_data.size) + 64]
                    if mem[_3809 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_3809 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if 5 * mem[_3809 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if mem[_3809 + ceil32(return_data.size) + 64] < 5000 * mem[_3809 + ceil32(return_data.size) + 64] / 10^6:
                        revert with 0, 17
                    _7505 = mem[_1542]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_1727))
                    staticcall address(_1727).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7563 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7601 = mem[_7563]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _7601
                    mem[mem[64] + 36] = _7327 - (5000 * _7327 / 10^6)
                    mem[mem[64] + 68] = 160
                    _7677 = mem[96]
                    mem[mem[64] + 164] = mem[96]
                    s = 0
                    t = 128
                    u = mem[64] + 196
                    while s < mem[96]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 100] = this.address
                    mem[mem[64] + 132] = block.timestamp + 60
                    require ext_code.size(address(_7505))
                    call address(_7505).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _7677) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _11443 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _11463 = mem[_11443]
                    require mem[_11443] <= test266151307()
                    require _11443 + mem[_11443] + 31 < _11443 + return_data.size
                    _11489 = mem[_11443 + mem[_11443]]
                    if mem[_11443 + mem[_11443]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_11443 + mem[_11443]]) + 1 < 0 or _11443 + ceil32(return_data.size) + ceil32(32 * mem[_11443 + mem[_11443]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _11443 + ceil32(return_data.size) + ceil32(32 * mem[_11443 + mem[_11443]]) + 1
                    mem[_11443 + ceil32(return_data.size)] = _11489
                    require _11463 + (32 * _11489) + 32 <= return_data.size
                    t = _11443 + ceil32(return_data.size) + 32
                    s = _11443 + _11463 + 32
                    while s < _11443 + _11463 + (32 * _11489) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    _15607 = mem[_1542]
                    _15608 = mem[_1542 + 192]
                    _15609 = mem[_1542 + 224]
                    _15635 = mem[64]
                    mem[mem[64]] = 2
                    mem[64] = mem[64] + 96
                    mem[_15635 + 32 len 64] = call.data[calldata.size len 64]
                    if not mem[_15635]:
                        revert with 0, 50
                    mem[_15635 + 32] = stor21
                    if stor21 == address(_15608):
                        if stor21 == address(_15609):
                            mem[_15635 + 100] = this.address
                            require ext_code.size(address(_15608))
                            staticcall address(_15608).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15635 + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_15635 + ceil32(return_data.size) + 100] = this.address
                            require ext_code.size(address(_15609))
                            staticcall address(_15609).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15635 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            if not ext_call.return_data[0]:
                                revert with 0, 'Desired value is zero'
                            if not ext_call.return_data[0]:
                                revert with 0, 'Desired value is zero'
                            mem[_15635 + (2 * ceil32(return_data.size)) + 100] = address(_15607)
                            mem[_15635 + (2 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_15608))
                            call address(_15608).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_15607), -1
                            mem[_15635 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            mem[_15635 + (4 * ceil32(return_data.size)) + 100] = address(_15607)
                            mem[_15635 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_15609))
                            call address(_15609).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_15607), -1
                            mem[_15635 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 0, 17
                            if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                                revert with 0, 17
                            if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                                revert with 0, 17
                            if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 0, 17
                            if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                                revert with 0, 17
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_15635 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                            mem[_15635 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                            mem[_15635 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                            mem[_15635 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                            mem[_15635 + (6 * ceil32(return_data.size)) + 292] = this.address
                            mem[_15635 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                            require ext_code.size(address(_15607))
                            call address(_15607).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                                 gas gas_remaining wei
                                args address(_15608), address(_15609), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                            mem[_15635 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _15635 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 96
                            _16791 = mem[_1542 + 160]
                            _16792 = mem[_1542 + 64]
                            _16793 = mem[_1542 + 32]
                            mem[_15635 + (7 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_16793))
                            staticcall address(_16793).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15635 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _15635 + (8 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if _16792 >= 999999:
                                mem[_15635 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                require ext_code.size(address(_16791))
                                call address(_16791).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_15635 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                emit Earn(ext_call.return_data[0]);
                                _17067 = mem[_1542 + 32]
                                mem[_15635 + (8 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(address(_17067))
                                staticcall address(_17067).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_15635 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[_1542 + 96] = ext_call.return_data[0]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[_15635 + (10 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_15635 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _15635 + (11 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _17495 = mem[_1542]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                mem[_15635 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[_15635 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                mem[_15635 + (11 * ceil32(return_data.size)) + 132] = 128
                                mem[_15635 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                                s = 0
                                t = 128
                                u = _15635 + (11 * ceil32(return_data.size)) + 260
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_15635 + (11 * ceil32(return_data.size)) + 164] = this.address
                                mem[_15635 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                                require ext_code.size(address(_17495))
                                call address(_17495).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_15635 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_15635 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _15635 + (12 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _19673 = mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                                require mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                                require _15635 + (11 * ceil32(return_data.size)) + mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _15635 + (11 * ceil32(return_data.size)) + return_data.size + 96
                                _19709 = mem[_15635 + (11 * ceil32(return_data.size)) + mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                if mem[_15635 + (11 * ceil32(return_data.size)) + mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_15635 + (11 * ceil32(return_data.size)) + mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _15635 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15635 + (11 * ceil32(return_data.size)) + mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                    revert with 0, 65
                                mem[64] = _15635 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15635 + (11 * ceil32(return_data.size)) + mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                                mem[_15635 + (12 * ceil32(return_data.size)) + 96] = mem[_15635 + (11 * ceil32(return_data.size)) + mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                require _19673 + (32 * _19709) + 32 <= return_data.size
                                t = _15635 + (12 * ceil32(return_data.size)) + 128
                                s = _15635 + (11 * ceil32(return_data.size)) + _19673 + 128
                                while s < _15635 + (11 * ceil32(return_data.size)) + _19673 + (32 * _19709) + 128:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22859 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_22859]
                            else:
                                mem[_15635 + (8 * ceil32(return_data.size)) + 100] = _16792
                                mem[_15635 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                                require ext_code.size(address(_16791))
                                call address(_16791).deposit(uint256 arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args _16792, ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_15635 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                emit Earn(ext_call.return_data[0]);
                                _17068 = mem[_1542 + 32]
                                mem[_15635 + (8 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(address(_17068))
                                staticcall address(_17068).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_15635 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                mem[_1542 + 96] = ext_call.return_data[0]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[_15635 + (10 * ceil32(return_data.size)) + 100] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[_15635 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[64] = _15635 + (11 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _17496 = mem[_1542]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                mem[_15635 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[_15635 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                                mem[_15635 + (11 * ceil32(return_data.size)) + 132] = 128
                                mem[_15635 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                                s = 0
                                t = 128
                                u = _15635 + (11 * ceil32(return_data.size)) + 260
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_15635 + (11 * ceil32(return_data.size)) + 164] = this.address
                                mem[_15635 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                                require ext_code.size(address(_17496))
                                call address(_17496).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                                   value ext_call.return_data[0] wei
                                     gas gas_remaining wei
                                    args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_15635 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_15635 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _15635 + (12 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _19674 = mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                                require mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                                require _15635 + (11 * ceil32(return_data.size)) + mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _15635 + (11 * ceil32(return_data.size)) + return_data.size + 96
                                _19710 = mem[_15635 + (11 * ceil32(return_data.size)) + mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                if mem[_15635 + (11 * ceil32(return_data.size)) + mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_15635 + (11 * ceil32(return_data.size)) + mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _15635 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15635 + (11 * ceil32(return_data.size)) + mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                    revert with 0, 65
                                mem[64] = _15635 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15635 + (11 * ceil32(return_data.size)) + mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                                mem[_15635 + (12 * ceil32(return_data.size)) + 96] = mem[_15635 + (11 * ceil32(return_data.size)) + mem[_15635 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                                require _19674 + (32 * _19710) + 32 <= return_data.size
                                t = _15635 + (12 * ceil32(return_data.size)) + 128
                                s = _15635 + (11 * ceil32(return_data.size)) + _19674 + 128
                                while s < _15635 + (11 * ceil32(return_data.size)) + _19674 + (32 * _19710) + 128:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22860 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_22860]
                        else:
                            if 1 >= mem[_15635]:
                                revert with 0, 50
                            mem[_15635 + 64] = address(_15609)
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_15635 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_15635 + 100] = eth.balance(this.address) / 2
                            mem[_15635 + 132] = 128
                            mem[_15635 + 228] = mem[_15635]
                            s = 0
                            t = _15635 + 32
                            u = _15635 + 260
                            while s < mem[_15635]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_15635 + 164] = this.address
                            mem[_15635 + 196] = block.timestamp + 60
                            require ext_code.size(address(_15607))
                            call address(_15607).mem[mem[64] len 4] with:
                               value eth.balance(this.address) / 2 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _15635 + (32 * mem[_15635]) + -mem[64] + 256]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19635 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _19675 = mem[_19635]
                            require mem[_19635] <= test266151307()
                            require _19635 + mem[_19635] + 31 < _19635 + return_data.size
                            _19711 = mem[_19635 + mem[_19635]]
                            if mem[_19635 + mem[_19635]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_19635 + mem[_19635]]) + 1 < 0 or _19635 + ceil32(return_data.size) + ceil32(32 * mem[_19635 + mem[_19635]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _19635 + ceil32(return_data.size) + ceil32(32 * mem[_19635 + mem[_19635]]) + 1
                            mem[_19635 + ceil32(return_data.size)] = _19711
                            require _19675 + (32 * _19711) + 32 <= return_data.size
                            t = _19635 + ceil32(return_data.size) + 32
                            s = _19635 + _19675 + 32
                            while s < _19635 + _19675 + (32 * _19711) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15608))
                            staticcall address(_15608).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22861 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22901 = mem[_22861]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15609))
                            staticcall address(_15609).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22975 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22999 = mem[_22975]
                            if not _22901:
                                revert with 0, 'Desired value is zero'
                            if not mem[_22975]:
                                revert with 0, 'Desired value is zero'
                            mem[mem[64] + 4] = address(_15607)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_15608))
                            call address(_15608).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_15607), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23179 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_23179] == bool(mem[_23179])
                            mem[mem[64] + 4] = address(_15607)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_15609))
                            call address(_15609).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_15607), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23279 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_23279] == bool(mem[_23279])
                            if _22901 and 5 > -1 / _22901:
                                revert with 0, 17
                            if 5 * _22901 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 0, 17
                            if _22901 < 5000 * _22901 / 10^6:
                                revert with 0, 17
                            if _22999 and 5 > -1 / _22999:
                                revert with 0, 17
                            if 5 * _22999 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 0, 17
                            if _22999 < 5000 * _22999 / 10^6:
                                revert with 0, 17
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[mem[64] + 68] = _22901
                            mem[mem[64] + 100] = _22999
                            mem[mem[64] + 132] = _22901 - (5000 * _22901 / 10^6)
                            mem[mem[64] + 164] = _22999 - (5000 * _22999 / 10^6)
                            mem[mem[64] + 196] = this.address
                            mem[mem[64] + 228] = block.timestamp + 60
                            require ext_code.size(address(_15607))
                            call address(_15607).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                                 gas gas_remaining wei
                                args address(_15608), address(_15609), _22901, _22999, _22901 - (5000 * _22901 / 10^6), _22999 - (5000 * _22999 / 10^6), address(this.address), block.timestamp + 60
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _23715 = mem[_1542 + 160]
                            _23716 = mem[_1542 + 64]
                            _23717 = mem[_1542 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_23717))
                            staticcall address(_23717).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23787 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _23811 = mem[_23787]
                            if _23716 >= 999999:
                                mem[mem[64] + 4] = mem[_23787]
                                require ext_code.size(address(_23715))
                                call address(_23715).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _23811
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _23811
                                emit Earn(_23811);
                                _23981 = mem[_1542 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_23981))
                                staticcall address(_23981).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24091 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1542 + 96] = mem[_24091]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24325 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _24369 = mem[_24325]
                                _24429 = mem[_1542]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _24515 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _24369
                                mem[mem[64] + 36] = 128
                                _24565 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 68] = this.address
                                mem[_24515 + 100] = block.timestamp + 60
                                require ext_code.size(address(_24429))
                                call address(_24429).mem[mem[64] len 4] with:
                                   value _24369 wei
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _24515 + (32 * _24565) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25649 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _25705 = mem[_25649]
                                require mem[_25649] <= test266151307()
                                require _25649 + mem[_25649] + 31 < _25649 + return_data.size
                                _25753 = mem[_25649 + mem[_25649]]
                                if mem[_25649 + mem[_25649]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_25649 + mem[_25649]]) + 1 < 0 or _25649 + ceil32(return_data.size) + ceil32(32 * mem[_25649 + mem[_25649]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _25649 + ceil32(return_data.size) + ceil32(32 * mem[_25649 + mem[_25649]]) + 1
                                mem[_25649 + ceil32(return_data.size)] = _25753
                                require _25705 + (32 * _25753) + 32 <= return_data.size
                                t = _25649 + ceil32(return_data.size) + 32
                                s = _25649 + _25705 + 32
                                while s < _25649 + _25705 + (32 * _25753) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27243 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_27243]
                            else:
                                mem[mem[64] + 4] = _23716
                                mem[mem[64] + 36] = _23811
                                require ext_code.size(address(_23715))
                                call address(_23715).deposit(uint256 arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args _23716, _23811
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _23811
                                emit Earn(_23811);
                                _23982 = mem[_1542 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_23982))
                                staticcall address(_23982).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24092 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1542 + 96] = mem[_24092]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24326 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _24370 = mem[_24326]
                                _24430 = mem[_1542]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _24516 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _24370
                                mem[mem[64] + 36] = 128
                                _24566 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _24566:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_24516 + 68] = this.address
                                mem[_24516 + 100] = block.timestamp + 60
                                require ext_code.size(address(_24430))
                                call address(_24430).mem[mem[64] len 4] with:
                                   value _24370 wei
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _24516 + (32 * _24566) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25650 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _25706 = mem[_25650]
                                require mem[_25650] <= test266151307()
                                require _25650 + mem[_25650] + 31 < _25650 + return_data.size
                                _25754 = mem[_25650 + mem[_25650]]
                                if mem[_25650 + mem[_25650]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_25650 + mem[_25650]]) + 1 < 0 or _25650 + ceil32(return_data.size) + ceil32(32 * mem[_25650 + mem[_25650]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _25650 + ceil32(return_data.size) + ceil32(32 * mem[_25650 + mem[_25650]]) + 1
                                mem[_25650 + ceil32(return_data.size)] = _25754
                                require _25706 + (32 * _25754) + 32 <= return_data.size
                                t = _25650 + ceil32(return_data.size) + 32
                                s = _25650 + _25706 + 32
                                while s < _25650 + _25706 + (32 * _25754) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27244 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_27244]
                    else:
                        if 1 >= mem[_15635]:
                            revert with 0, 50
                        mem[_15635 + 64] = address(_15608)
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_15635 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_15635 + 100] = eth.balance(this.address) / 2
                        mem[_15635 + 132] = 128
                        mem[_15635 + 228] = mem[_15635]
                        s = 0
                        t = _15635 + 32
                        u = _15635 + 260
                        while s < mem[_15635]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_15635 + 164] = this.address
                        mem[_15635 + 196] = block.timestamp + 60
                        require ext_code.size(address(_15607))
                        call address(_15607).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _15635 + (32 * mem[_15635]) + -mem[64] + 256]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19636 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _19676 = mem[_19636]
                        require mem[_19636] <= test266151307()
                        require _19636 + mem[_19636] + 31 < _19636 + return_data.size
                        _19712 = mem[_19636 + mem[_19636]]
                        if mem[_19636 + mem[_19636]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_19636 + mem[_19636]]) + 1 < 0 or _19636 + ceil32(return_data.size) + ceil32(32 * mem[_19636 + mem[_19636]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _19636 + ceil32(return_data.size) + ceil32(32 * mem[_19636 + mem[_19636]]) + 1
                        mem[_19636 + ceil32(return_data.size)] = _19712
                        require _19676 + (32 * _19712) + 32 <= return_data.size
                        t = _19636 + ceil32(return_data.size) + 32
                        s = _19636 + _19676 + 32
                        while s < _19636 + _19676 + (32 * _19712) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if stor21 == address(_15609):
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15608))
                            staticcall address(_15608).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22879 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _22919 = mem[_22879]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15609))
                            staticcall address(_15609).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22989 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _23021 = mem[_22989]
                            if not _22919:
                                revert with 0, 'Desired value is zero'
                            if not mem[_22989]:
                                revert with 0, 'Desired value is zero'
                            mem[mem[64] + 4] = address(_15607)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_15608))
                            call address(_15608).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_15607), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23197 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_23197] == bool(mem[_23197])
                            mem[mem[64] + 4] = address(_15607)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_15609))
                            call address(_15609).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_15607), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23295 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_23295] == bool(mem[_23295])
                            if _22919 and 5 > -1 / _22919:
                                revert with 0, 17
                            if 5 * _22919 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 0, 17
                            if _22919 < 5000 * _22919 / 10^6:
                                revert with 0, 17
                            if _23021 and 5 > -1 / _23021:
                                revert with 0, 17
                            if 5 * _23021 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 0, 17
                            if _23021 < 5000 * _23021 / 10^6:
                                revert with 0, 17
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[mem[64] + 68] = _22919
                            mem[mem[64] + 100] = _23021
                            mem[mem[64] + 132] = _22919 - (5000 * _22919 / 10^6)
                            mem[mem[64] + 164] = _23021 - (5000 * _23021 / 10^6)
                            mem[mem[64] + 196] = this.address
                            mem[mem[64] + 228] = block.timestamp + 60
                            require ext_code.size(address(_15607))
                            call address(_15607).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                                 gas gas_remaining wei
                                args address(_15608), address(_15609), _22919, _23021, _22919 - (5000 * _22919 / 10^6), _23021 - (5000 * _23021 / 10^6), address(this.address), block.timestamp + 60
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _23755 = mem[_1542 + 160]
                            _23756 = mem[_1542 + 64]
                            _23757 = mem[_1542 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_23757))
                            staticcall address(_23757).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _23799 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _23823 = mem[_23799]
                            if _23756 >= 999999:
                                mem[mem[64] + 4] = mem[_23799]
                                require ext_code.size(address(_23755))
                                call address(_23755).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _23823
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _23823
                                emit Earn(_23823);
                                _24033 = mem[_1542 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_24033))
                                staticcall address(_24033).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24111 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1542 + 96] = mem[_24111]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24351 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _24407 = mem[_24351]
                                _24463 = mem[_1542]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _24537 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _24407
                                mem[mem[64] + 36] = 128
                                _24585 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 68] = this.address
                                mem[_24537 + 100] = block.timestamp + 60
                                require ext_code.size(address(_24463))
                                call address(_24463).mem[mem[64] len 4] with:
                                   value _24407 wei
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _24537 + (32 * _24585) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25651 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _25707 = mem[_25651]
                                require mem[_25651] <= test266151307()
                                require _25651 + mem[_25651] + 31 < _25651 + return_data.size
                                _25755 = mem[_25651 + mem[_25651]]
                                if mem[_25651 + mem[_25651]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_25651 + mem[_25651]]) + 1 < 0 or _25651 + ceil32(return_data.size) + ceil32(32 * mem[_25651 + mem[_25651]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _25651 + ceil32(return_data.size) + ceil32(32 * mem[_25651 + mem[_25651]]) + 1
                                mem[_25651 + ceil32(return_data.size)] = _25755
                                require _25707 + (32 * _25755) + 32 <= return_data.size
                                t = _25651 + ceil32(return_data.size) + 32
                                s = _25651 + _25707 + 32
                                while s < _25651 + _25707 + (32 * _25755) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27245 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_27245]
                            else:
                                mem[mem[64] + 4] = _23756
                                mem[mem[64] + 36] = _23823
                                require ext_code.size(address(_23755))
                                call address(_23755).deposit(uint256 arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args _23756, _23823
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _23823
                                emit Earn(_23823);
                                _24034 = mem[_1542 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_24034))
                                staticcall address(_24034).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24112 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1542 + 96] = mem[_24112]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _24352 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _24408 = mem[_24352]
                                _24464 = mem[_1542]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _24538 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _24408
                                mem[mem[64] + 36] = 128
                                _24586 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 68] = this.address
                                mem[_24538 + 100] = block.timestamp + 60
                                require ext_code.size(address(_24464))
                                call address(_24464).mem[mem[64] len 4] with:
                                   value _24408 wei
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _24538 + (32 * _24586) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _25652 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _25708 = mem[_25652]
                                require mem[_25652] <= test266151307()
                                require _25652 + mem[_25652] + 31 < _25652 + return_data.size
                                _25756 = mem[_25652 + mem[_25652]]
                                if mem[_25652 + mem[_25652]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_25652 + mem[_25652]]) + 1 < 0 or _25652 + ceil32(return_data.size) + ceil32(32 * mem[_25652 + mem[_25652]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _25652 + ceil32(return_data.size) + ceil32(32 * mem[_25652 + mem[_25652]]) + 1
                                mem[_25652 + ceil32(return_data.size)] = _25756
                                require _25708 + (32 * _25756) + 32 <= return_data.size
                                t = _25652 + ceil32(return_data.size) + 32
                                s = _25652 + _25708 + 32
                                while s < _25652 + _25708 + (32 * _25756) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27246 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_27246]
                        else:
                            if 1 >= mem[_15635]:
                                revert with 0, 50
                            mem[_15635 + 64] = address(_15609)
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = eth.balance(this.address) / 2
                            mem[mem[64] + 36] = 128
                            _22990 = mem[_15635]
                            mem[mem[64] + 132] = mem[_15635]
                            s = 0
                            t = _15635 + 32
                            u = mem[64] + 164
                            while s < _22990:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[mem[64] + 100] = block.timestamp + 60
                            require ext_code.size(address(_15607))
                            call address(_15607).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                               value eth.balance(this.address) / 2 wei
                                 gas gas_remaining wei
                                args Mask(255, 1, eth.balance(this.address)), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _22990) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25653 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25709 = mem[_25653]
                            require mem[_25653] <= test266151307()
                            require _25653 + mem[_25653] + 31 < _25653 + return_data.size
                            _25757 = mem[_25653 + mem[_25653]]
                            if mem[_25653 + mem[_25653]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25653 + mem[_25653]]) + 1 < 0 or _25653 + ceil32(return_data.size) + ceil32(32 * mem[_25653 + mem[_25653]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25653 + ceil32(return_data.size) + ceil32(32 * mem[_25653 + mem[_25653]]) + 1
                            mem[_25653 + ceil32(return_data.size)] = _25757
                            require _25709 + (32 * _25757) + 32 <= return_data.size
                            t = _25653 + ceil32(return_data.size) + 32
                            s = _25653 + _25709 + 32
                            while s < _25653 + _25709 + (32 * _25757) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15608))
                            staticcall address(_15608).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27247 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27293 = mem[_27247]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15609))
                            staticcall address(_15609).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27333 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27341 = mem[_27333]
                            if not _27293:
                                revert with 0, 'Desired value is zero'
                            if not mem[_27333]:
                                revert with 0, 'Desired value is zero'
                            mem[mem[64] + 4] = address(_15607)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_15608))
                            call address(_15608).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_15607), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27415 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_27415] == bool(mem[_27415])
                            mem[mem[64] + 4] = address(_15607)
                            mem[mem[64] + 36] = -1
                            require ext_code.size(address(_15609))
                            call address(_15609).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_15607), -1
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27447 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_27447] == bool(mem[_27447])
                            if _27293 and 5 > -1 / _27293:
                                revert with 0, 17
                            if 5 * _27293 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 0, 17
                            if _27293 < 5000 * _27293 / 10^6:
                                revert with 0, 17
                            if _27341 and 5 > -1 / _27341:
                                revert with 0, 17
                            if 5 * _27341 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                                revert with 0, 17
                            if _27341 < 5000 * _27341 / 10^6:
                                revert with 0, 17
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[mem[64] + 68] = _27293
                            mem[mem[64] + 100] = _27341
                            mem[mem[64] + 132] = _27293 - (5000 * _27293 / 10^6)
                            mem[mem[64] + 164] = _27341 - (5000 * _27341 / 10^6)
                            mem[mem[64] + 196] = this.address
                            mem[mem[64] + 228] = block.timestamp + 60
                            require ext_code.size(address(_15607))
                            call address(_15607).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                                 gas gas_remaining wei
                                args address(_15608), address(_15609), _27293, _27341, _27293 - (5000 * _27293 / 10^6), _27341 - (5000 * _27341 / 10^6), address(this.address), block.timestamp + 60
                            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 96
                            _27607 = mem[_1542 + 160]
                            _27608 = mem[_1542 + 64]
                            _27609 = mem[_1542 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27609))
                            staticcall address(_27609).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27641 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27651 = mem[_27641]
                            if _27608 >= 999999:
                                mem[mem[64] + 4] = mem[_27641]
                                require ext_code.size(address(_27607))
                                call address(_27607).deposit(uint256 arg1) with:
                                     gas gas_remaining wei
                                    args _27651
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _27651
                                emit Earn(_27651);
                                _27737 = mem[_1542 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_27737))
                                staticcall address(_27737).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27791 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1542 + 96] = mem[_27791]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27897 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _27913 = mem[_27897]
                                _27929 = mem[_1542]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _27949 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _27913
                                mem[mem[64] + 36] = 128
                                _27967 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < _27967:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_27949 + 68] = this.address
                                mem[_27949 + 100] = block.timestamp + 60
                                require ext_code.size(address(_27929))
                                call address(_27929).mem[mem[64] len 4] with:
                                   value _27913 wei
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _27949 + (32 * _27967) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28261 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _28277 = mem[_28261]
                                require mem[_28261] <= test266151307()
                                require _28261 + mem[_28261] + 31 < _28261 + return_data.size
                                _28293 = mem[_28261 + mem[_28261]]
                                if mem[_28261 + mem[_28261]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_28261 + mem[_28261]]) + 1 < 0 or _28261 + ceil32(return_data.size) + ceil32(32 * mem[_28261 + mem[_28261]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _28261 + ceil32(return_data.size) + ceil32(32 * mem[_28261 + mem[_28261]]) + 1
                                mem[_28261 + ceil32(return_data.size)] = _28293
                                require _28277 + (32 * _28293) + 32 <= return_data.size
                                t = _28261 + ceil32(return_data.size) + 32
                                s = _28261 + _28277 + 32
                                while s < _28261 + _28277 + (32 * _28293) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28645 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_28645]
                            else:
                                mem[mem[64] + 4] = _27608
                                mem[mem[64] + 36] = _27651
                                require ext_code.size(address(_27607))
                                call address(_27607).deposit(uint256 arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args _27608, _27651
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[mem[64]] = _27651
                                emit Earn(_27651);
                                _27738 = mem[_1542 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_27738))
                                staticcall address(_27738).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27792 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                mem[_1542 + 96] = mem[_27792]
                                if not mem[96]:
                                    revert with 0, 50
                                mem[128] = stor21
                                if 1 >= mem[96]:
                                    revert with 0, 50
                                mem[160] = USDTAddress
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(stor21)
                                staticcall stor21.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _27898 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _27914 = mem[_27898]
                                _27930 = mem[_1542]
                                if 60 > !block.timestamp:
                                    revert with 0, 17
                                _27950 = mem[64]
                                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _27914
                                mem[mem[64] + 36] = 128
                                _27968 = mem[96]
                                mem[mem[64] + 132] = mem[96]
                                s = 0
                                t = 128
                                u = mem[64] + 164
                                while s < mem[96]:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[mem[64] + 68] = this.address
                                mem[_27950 + 100] = block.timestamp + 60
                                require ext_code.size(address(_27930))
                                call address(_27930).mem[mem[64] len 4] with:
                                   value _27914 wei
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _27950 + (32 * _27968) + -mem[64] + 160]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28262 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _28278 = mem[_28262]
                                require mem[_28262] <= test266151307()
                                require _28262 + mem[_28262] + 31 < _28262 + return_data.size
                                _28294 = mem[_28262 + mem[_28262]]
                                if mem[_28262 + mem[_28262]] > test266151307():
                                    revert with 0, 65
                                if ceil32(32 * mem[_28262 + mem[_28262]]) + 1 < 0 or _28262 + ceil32(return_data.size) + ceil32(32 * mem[_28262 + mem[_28262]]) + 1 > test266151307():
                                    revert with 0, 65
                                mem[64] = _28262 + ceil32(return_data.size) + ceil32(32 * mem[_28262 + mem[_28262]]) + 1
                                mem[_28262 + ceil32(return_data.size)] = _28294
                                require _28278 + (32 * _28294) + 32 <= return_data.size
                                t = _28262 + ceil32(return_data.size) + 32
                                s = _28262 + _28278 + 32
                                while s < _28262 + _28278 + (32 * _28294) + 32:
                                    mem[t] = mem[s]
                                    t = t + 32
                                    s = s + 32
                                    continue 
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(USDTAddress)
                                staticcall USDTAddress.0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _28646 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                sub_5e8f09aa = mem[_28646]
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _1542
                    s = _7327 - (5000 * _7327 / 10^6)
                    s = stor9[idx].field_0
                    continue 
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                mem[mem[64] + 36] = _1587
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args strategyInfo[stor9[idx].field_0].field_512, _1587
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1708 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1728 = mem[_1708]
                require mem[_1708] == mem[_1708 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_1708 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_1728))
                staticcall address(_1728).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1808 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1830 = mem[_1808]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1728))
                staticcall address(_1728).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1874 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1898 = mem[_1874]
                if mem[_1874] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _1830:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1986 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1996 = mem[_1986]
                if 10^12 * _1898 / _1830 and mem[_1986] > -1 / 10^12 * _1898 / _1830:
                    revert with 0, 17
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1898 / _1830 * _1996 / 10^12
                mem[mem[64] + 36] = 64
                _2086 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len (32 * _2086) + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3810 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3826 = mem[_3810]
                require mem[_3810] <= test266151307()
                require _3810 + mem[_3810] + 31 < _3810 + return_data.size
                _3842 = mem[_3810 + mem[_3810]]
                if mem[_3810 + mem[_3810]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3810 + mem[_3810]]) + 1 < 0 or _3810 + ceil32(return_data.size) + ceil32(32 * mem[_3810 + mem[_3810]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3810 + ceil32(return_data.size) + ceil32(32 * mem[_3810 + mem[_3810]]) + 1
                mem[_3810 + ceil32(return_data.size)] = _3842
                require _3826 + (32 * _3842) + 32 <= return_data.size
                t = _3810 + ceil32(return_data.size) + 32
                s = _3810 + _3826 + 32
                while s < _3810 + _3826 + (32 * _3842) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3842:
                    revert with 0, 50
                _7328 = mem[_3810 + ceil32(return_data.size) + 64]
                if mem[_3810 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_3810 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if 5 * mem[_3810 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if mem[_3810 + ceil32(return_data.size) + 64] < 5000 * mem[_3810 + ceil32(return_data.size) + 64] / 10^6:
                    revert with 0, 17
                _7506 = mem[_1542]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1728))
                staticcall address(_1728).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7564 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7602 = mem[_7564]
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7602
                mem[mem[64] + 36] = _7328 - (5000 * _7328 / 10^6)
                mem[mem[64] + 68] = 160
                _7678 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 100] = this.address
                mem[mem[64] + 132] = block.timestamp + 60
                require ext_code.size(address(_7506))
                call address(_7506).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _7678) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11444 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11464 = mem[_11444]
                require mem[_11444] <= test266151307()
                require _11444 + mem[_11444] + 31 < _11444 + return_data.size
                _11490 = mem[_11444 + mem[_11444]]
                if mem[_11444 + mem[_11444]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_11444 + mem[_11444]]) + 1 < 0 or _11444 + ceil32(return_data.size) + ceil32(32 * mem[_11444 + mem[_11444]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _11444 + ceil32(return_data.size) + ceil32(32 * mem[_11444 + mem[_11444]]) + 1
                mem[_11444 + ceil32(return_data.size)] = _11490
                require _11464 + (32 * _11490) + 32 <= return_data.size
                t = _11444 + ceil32(return_data.size) + 32
                s = _11444 + _11464 + 32
                while s < _11444 + _11464 + (32 * _11490) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _15610 = mem[_1542]
                _15611 = mem[_1542 + 192]
                _15612 = mem[_1542 + 224]
                _15637 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_15637 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_15637]:
                    revert with 0, 50
                mem[_15637 + 32] = stor21
                if stor21 == address(_15611):
                    if stor21 == address(_15612):
                        mem[_15637 + 100] = this.address
                        require ext_code.size(address(_15611))
                        staticcall address(_15611).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15637 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_15637 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_15612))
                        staticcall address(_15612).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15637 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            revert with 0, 'Desired value is zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'Desired value is zero'
                        mem[_15637 + (2 * ceil32(return_data.size)) + 100] = address(_15610)
                        mem[_15637 + (2 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_15611))
                        call address(_15611).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15610), -1
                        mem[_15637 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[_15637 + (4 * ceil32(return_data.size)) + 100] = address(_15610)
                        mem[_15637 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_15612))
                        call address(_15612).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15610), -1
                        mem[_15637 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_15637 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                        mem[_15637 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                        mem[_15637 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                        mem[_15637 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                        mem[_15637 + (6 * ceil32(return_data.size)) + 292] = this.address
                        mem[_15637 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                        require ext_code.size(address(_15610))
                        call address(_15610).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_15611), address(_15612), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                        mem[_15637 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _15637 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 96
                        _16794 = mem[_1542 + 160]
                        _16795 = mem[_1542 + 64]
                        _16796 = mem[_1542 + 32]
                        mem[_15637 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_16796))
                        staticcall address(_16796).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15637 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _15637 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if _16795 >= 999999:
                            mem[_15637 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_16794))
                            call address(_16794).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_15637 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _17069 = mem[_1542 + 32]
                            mem[_15637 + (8 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_17069))
                            staticcall address(_17069).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15637 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1542 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_15637 + (10 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15637 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _15637 + (11 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _17503 = mem[_1542]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_15637 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_15637 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_15637 + (11 * ceil32(return_data.size)) + 132] = 128
                            mem[_15637 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _15637 + (11 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_15637 + (11 * ceil32(return_data.size)) + 164] = this.address
                            mem[_15637 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_17503))
                            call address(_17503).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                               value ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_15637 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_15637 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _15637 + (12 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _19677 = mem[_15637 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_15637 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _15637 + (11 * ceil32(return_data.size)) + mem[_15637 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _15637 + (11 * ceil32(return_data.size)) + return_data.size + 96
                            _19713 = mem[_15637 + (11 * ceil32(return_data.size)) + mem[_15637 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_15637 + (11 * ceil32(return_data.size)) + mem[_15637 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_15637 + (11 * ceil32(return_data.size)) + mem[_15637 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _15637 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15637 + (11 * ceil32(return_data.size)) + mem[_15637 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _15637 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15637 + (11 * ceil32(return_data.size)) + mem[_15637 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_15637 + (12 * ceil32(return_data.size)) + 96] = _19713
                            require _19677 + (32 * _19713) + 32 <= return_data.size
                            t = _15637 + (12 * ceil32(return_data.size)) + 128
                            s = _15637 + (11 * ceil32(return_data.size)) + _19677 + 128
                            while s < _15637 + (11 * ceil32(return_data.size)) + _19677 + (32 * _19713) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22862 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_22862]
                        else:
                            mem[_15637 + (8 * ceil32(return_data.size)) + 100] = _16795
                            mem[_15637 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_16794))
                            call address(_16794).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _16795, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_15637 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _17070 = mem[_1542 + 32]
                            mem[_15637 + (8 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_17070))
                            staticcall address(_17070).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15637 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1542 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_15637 + (10 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15637 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _15637 + (11 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _17504 = mem[_1542]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_15637 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_15637 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_15637 + (11 * ceil32(return_data.size)) + 132] = 128
                            mem[_15637 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _15637 + (11 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_15637 + (11 * ceil32(return_data.size)) + 164] = this.address
                            mem[_15637 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_17504))
                            call address(_17504).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                               value ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_15637 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_15637 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _15637 + (12 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _19678 = mem[_15637 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_15637 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _15637 + (11 * ceil32(return_data.size)) + mem[_15637 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _15637 + (11 * ceil32(return_data.size)) + return_data.size + 96
                            _19714 = mem[_15637 + (11 * ceil32(return_data.size)) + mem[_15637 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_15637 + (11 * ceil32(return_data.size)) + mem[_15637 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_15637 + (11 * ceil32(return_data.size)) + mem[_15637 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _15637 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15637 + (11 * ceil32(return_data.size)) + mem[_15637 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _15637 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15637 + (11 * ceil32(return_data.size)) + mem[_15637 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_15637 + (12 * ceil32(return_data.size)) + 96] = _19714
                            require _19678 + (32 * _19714) + 32 <= return_data.size
                            t = _15637 + (12 * ceil32(return_data.size)) + 128
                            s = _15637 + (11 * ceil32(return_data.size)) + _19678 + 128
                            while s < _15637 + (11 * ceil32(return_data.size)) + _19678 + (32 * _19714) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22863 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_22863]
                    else:
                        if 1 >= mem[_15637]:
                            revert with 0, 50
                        mem[_15637 + 64] = address(_15612)
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_15637 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_15637 + 100] = eth.balance(this.address) / 2
                        mem[_15637 + 132] = 128
                        mem[_15637 + 228] = mem[_15637]
                        s = 0
                        t = _15637 + 32
                        u = _15637 + 260
                        while s < mem[_15637]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_15637 + 164] = this.address
                        mem[_15637 + 196] = block.timestamp + 60
                        require ext_code.size(address(_15610))
                        call address(_15610).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _15637 + (32 * mem[_15637]) + -mem[64] + 256]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19639 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _19679 = mem[_19639]
                        require mem[_19639] <= test266151307()
                        require _19639 + mem[_19639] + 31 < _19639 + return_data.size
                        _19715 = mem[_19639 + mem[_19639]]
                        if mem[_19639 + mem[_19639]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_19639 + mem[_19639]]) + 1 < 0 or _19639 + ceil32(return_data.size) + ceil32(32 * mem[_19639 + mem[_19639]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _19639 + ceil32(return_data.size) + ceil32(32 * mem[_19639 + mem[_19639]]) + 1
                        mem[_19639 + ceil32(return_data.size)] = _19715
                        require _19679 + (32 * _19715) + 32 <= return_data.size
                        t = _19639 + ceil32(return_data.size) + 32
                        s = _19639 + _19679 + 32
                        while s < _19639 + _19679 + (32 * _19715) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15611))
                        staticcall address(_15611).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22864 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22904 = mem[_22864]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15612))
                        staticcall address(_15612).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22976 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23000 = mem[_22976]
                        if not _22904:
                            revert with 0, 'Desired value is zero'
                        if not mem[_22976]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_15610)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15611))
                        call address(_15611).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15610), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23180 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23180] == bool(mem[_23180])
                        mem[mem[64] + 4] = address(_15610)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15612))
                        call address(_15612).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15610), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23280 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23280] == bool(mem[_23280])
                        if _22904 and 5 > -1 / _22904:
                            revert with 0, 17
                        if 5 * _22904 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _22904 < 5000 * _22904 / 10^6:
                            revert with 0, 17
                        if _23000 and 5 > -1 / _23000:
                            revert with 0, 17
                        if 5 * _23000 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _23000 < 5000 * _23000 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _22904
                        mem[mem[64] + 100] = _23000
                        mem[mem[64] + 132] = _22904 - (5000 * _22904 / 10^6)
                        mem[mem[64] + 164] = _23000 - (5000 * _23000 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_15610))
                        call address(_15610).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_15611), address(_15612), _22904, _23000, _22904 - (5000 * _22904 / 10^6), _23000 - (5000 * _23000 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _23718 = mem[_1542 + 160]
                        _23719 = mem[_1542 + 64]
                        _23720 = mem[_1542 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_23720))
                        staticcall address(_23720).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23788 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23812 = mem[_23788]
                        if _23719 >= 999999:
                            mem[mem[64] + 4] = mem[_23788]
                            require ext_code.size(address(_23718))
                            call address(_23718).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _23812
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _23812
                            emit Earn(_23812);
                            _23987 = mem[_1542 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_23987))
                            staticcall address(_23987).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24093 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1542 + 96] = mem[_24093]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24327 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24371 = mem[_24327]
                            _24431 = mem[_1542]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _24518 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _24371
                            mem[mem[64] + 36] = 128
                            _24568 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_24518 + 100] = block.timestamp + 60
                            require ext_code.size(address(_24431))
                            call address(_24431).mem[mem[64] len 4] with:
                               value _24371 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _24518 + (32 * _24568) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25654 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25710 = mem[_25654]
                            require mem[_25654] <= test266151307()
                            require _25654 + mem[_25654] + 31 < _25654 + return_data.size
                            _25758 = mem[_25654 + mem[_25654]]
                            if mem[_25654 + mem[_25654]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25654 + mem[_25654]]) + 1 < 0 or _25654 + ceil32(return_data.size) + ceil32(32 * mem[_25654 + mem[_25654]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25654 + ceil32(return_data.size) + ceil32(32 * mem[_25654 + mem[_25654]]) + 1
                            mem[_25654 + ceil32(return_data.size)] = _25758
                            require _25710 + (32 * _25758) + 32 <= return_data.size
                            t = _25654 + ceil32(return_data.size) + 32
                            s = _25654 + _25710 + 32
                            while s < _25654 + _25710 + (32 * _25758) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27248 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_27248]
                        else:
                            mem[mem[64] + 4] = _23719
                            mem[mem[64] + 36] = _23812
                            require ext_code.size(address(_23718))
                            call address(_23718).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _23719, _23812
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _23812
                            emit Earn(_23812);
                            _23988 = mem[_1542 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_23988))
                            staticcall address(_23988).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24094 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1542 + 96] = mem[_24094]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24328 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24372 = mem[_24328]
                            _24432 = mem[_1542]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _24519 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _24372
                            mem[mem[64] + 36] = 128
                            _24569 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_24519 + 100] = block.timestamp + 60
                            require ext_code.size(address(_24432))
                            call address(_24432).mem[mem[64] len 4] with:
                               value _24372 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _24519 + (32 * _24569) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25655 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25711 = mem[_25655]
                            require mem[_25655] <= test266151307()
                            require _25655 + mem[_25655] + 31 < _25655 + return_data.size
                            _25759 = mem[_25655 + mem[_25655]]
                            if mem[_25655 + mem[_25655]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25655 + mem[_25655]]) + 1 < 0 or _25655 + ceil32(return_data.size) + ceil32(32 * mem[_25655 + mem[_25655]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25655 + ceil32(return_data.size) + ceil32(32 * mem[_25655 + mem[_25655]]) + 1
                            mem[_25655 + ceil32(return_data.size)] = _25759
                            require _25711 + (32 * _25759) + 32 <= return_data.size
                            t = _25655 + ceil32(return_data.size) + 32
                            s = _25655 + _25711 + 32
                            while s < _25655 + _25711 + (32 * _25759) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27249 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_27249]
                else:
                    if 1 >= mem[_15637]:
                        revert with 0, 50
                    mem[_15637 + 64] = address(_15611)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_15637 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_15637 + 100] = eth.balance(this.address) / 2
                    mem[_15637 + 132] = 128
                    mem[_15637 + 228] = mem[_15637]
                    s = 0
                    t = _15637 + 32
                    u = _15637 + 260
                    while s < mem[_15637]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_15637 + 164] = this.address
                    mem[_15637 + 196] = block.timestamp + 60
                    require ext_code.size(address(_15610))
                    call address(_15610).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _15637 + (32 * mem[_15637]) + -mem[64] + 256]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19640 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _19680 = mem[_19640]
                    require mem[_19640] <= test266151307()
                    require _19640 + mem[_19640] + 31 < _19640 + return_data.size
                    _19716 = mem[_19640 + mem[_19640]]
                    if mem[_19640 + mem[_19640]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_19640 + mem[_19640]]) + 1 < 0 or _19640 + ceil32(return_data.size) + ceil32(32 * mem[_19640 + mem[_19640]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _19640 + ceil32(return_data.size) + ceil32(32 * mem[_19640 + mem[_19640]]) + 1
                    mem[_19640 + ceil32(return_data.size)] = _19716
                    require _19680 + (32 * _19716) + 32 <= return_data.size
                    t = _19640 + ceil32(return_data.size) + 32
                    s = _19640 + _19680 + 32
                    while s < _19640 + _19680 + (32 * _19716) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_15612):
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15611))
                        staticcall address(_15611).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22880 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22920 = mem[_22880]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15612))
                        staticcall address(_15612).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22991 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23023 = mem[_22991]
                        if not _22920:
                            revert with 0, 'Desired value is zero'
                        if not mem[_22991]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_15610)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15611))
                        call address(_15611).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15610), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23199 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23199] == bool(mem[_23199])
                        mem[mem[64] + 4] = address(_15610)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15612))
                        call address(_15612).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15610), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23296 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23296] == bool(mem[_23296])
                        if _22920 and 5 > -1 / _22920:
                            revert with 0, 17
                        if 5 * _22920 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _22920 < 5000 * _22920 / 10^6:
                            revert with 0, 17
                        if _23023 and 5 > -1 / _23023:
                            revert with 0, 17
                        if 5 * _23023 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _23023 < 5000 * _23023 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _22920
                        mem[mem[64] + 100] = _23023
                        mem[mem[64] + 132] = _22920 - (5000 * _22920 / 10^6)
                        mem[mem[64] + 164] = _23023 - (5000 * _23023 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_15610))
                        call address(_15610).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_15611), address(_15612), _22920, _23023, _22920 - (5000 * _22920 / 10^6), _23023 - (5000 * _23023 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _23760 = mem[_1542 + 160]
                        _23761 = mem[_1542 + 64]
                        _23762 = mem[_1542 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_23762))
                        staticcall address(_23762).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23800 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23824 = mem[_23800]
                        if _23761 >= 999999:
                            mem[mem[64] + 4] = mem[_23800]
                            require ext_code.size(address(_23760))
                            call address(_23760).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _23824
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _23824
                            emit Earn(_23824);
                            _24039 = mem[_1542 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_24039))
                            staticcall address(_24039).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24113 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1542 + 96] = mem[_24113]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24354 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24412 = mem[_24354]
                            _24468 = mem[_1542]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _24539 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _24412
                            mem[mem[64] + 36] = 128
                            _24587 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_24539 + 100] = block.timestamp + 60
                            require ext_code.size(address(_24468))
                            call address(_24468).mem[mem[64] len 4] with:
                               value _24412 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _24539 + (32 * _24587) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25656 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25712 = mem[_25656]
                            require mem[_25656] <= test266151307()
                            require _25656 + mem[_25656] + 31 < _25656 + return_data.size
                            _25760 = mem[_25656 + mem[_25656]]
                            if mem[_25656 + mem[_25656]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25656 + mem[_25656]]) + 1 < 0 or _25656 + ceil32(return_data.size) + ceil32(32 * mem[_25656 + mem[_25656]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25656 + ceil32(return_data.size) + ceil32(32 * mem[_25656 + mem[_25656]]) + 1
                            mem[_25656 + ceil32(return_data.size)] = _25760
                            require _25712 + (32 * _25760) + 32 <= return_data.size
                            t = _25656 + ceil32(return_data.size) + 32
                            s = _25656 + _25712 + 32
                            while s < _25656 + _25712 + (32 * _25760) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27250 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_27250]
                        else:
                            mem[mem[64] + 4] = _23761
                            mem[mem[64] + 36] = _23824
                            require ext_code.size(address(_23760))
                            call address(_23760).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _23761, _23824
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _23824
                            emit Earn(_23824);
                            _24040 = mem[_1542 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_24040))
                            staticcall address(_24040).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24114 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1542 + 96] = mem[_24114]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24355 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24413 = mem[_24355]
                            _24469 = mem[_1542]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _24540 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _24413
                            mem[mem[64] + 36] = 128
                            _24588 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _24588:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_24540 + 68] = this.address
                            mem[_24540 + 100] = block.timestamp + 60
                            require ext_code.size(address(_24469))
                            call address(_24469).mem[mem[64] len 4] with:
                               value _24413 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _24540 + (32 * _24588) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25657 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25713 = mem[_25657]
                            require mem[_25657] <= test266151307()
                            require _25657 + mem[_25657] + 31 < _25657 + return_data.size
                            _25761 = mem[_25657 + mem[_25657]]
                            if mem[_25657 + mem[_25657]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25657 + mem[_25657]]) + 1 < 0 or _25657 + ceil32(return_data.size) + ceil32(32 * mem[_25657 + mem[_25657]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25657 + ceil32(return_data.size) + ceil32(32 * mem[_25657 + mem[_25657]]) + 1
                            mem[_25657 + ceil32(return_data.size)] = _25761
                            require _25713 + (32 * _25761) + 32 <= return_data.size
                            t = _25657 + ceil32(return_data.size) + 32
                            s = _25657 + _25713 + 32
                            while s < _25657 + _25713 + (32 * _25761) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27251 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_27251]
                    else:
                        if 1 >= mem[_15637]:
                            revert with 0, 50
                        mem[_15637 + 64] = address(_15612)
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 128
                        _22992 = mem[_15637]
                        mem[mem[64] + 132] = mem[_15637]
                        s = 0
                        t = _15637 + 32
                        u = mem[64] + 164
                        while s < _22992:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[mem[64] + 100] = block.timestamp + 60
                        require ext_code.size(address(_15610))
                        call address(_15610).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args Mask(255, 1, eth.balance(this.address)), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _22992) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25658 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25714 = mem[_25658]
                        require mem[_25658] <= test266151307()
                        require _25658 + mem[_25658] + 31 < _25658 + return_data.size
                        _25762 = mem[_25658 + mem[_25658]]
                        if mem[_25658 + mem[_25658]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25658 + mem[_25658]]) + 1 < 0 or _25658 + ceil32(return_data.size) + ceil32(32 * mem[_25658 + mem[_25658]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _25658 + ceil32(return_data.size) + ceil32(32 * mem[_25658 + mem[_25658]]) + 1
                        mem[_25658 + ceil32(return_data.size)] = _25762
                        require _25714 + (32 * _25762) + 32 <= return_data.size
                        t = _25658 + ceil32(return_data.size) + 32
                        s = _25658 + _25714 + 32
                        while s < _25658 + _25714 + (32 * _25762) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15611))
                        staticcall address(_15611).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27252 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27298 = mem[_27252]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15612))
                        staticcall address(_15612).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27334 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27342 = mem[_27334]
                        if not _27298:
                            revert with 0, 'Desired value is zero'
                        if not mem[_27334]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_15610)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15611))
                        call address(_15611).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15610), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27416 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27416] == bool(mem[_27416])
                        mem[mem[64] + 4] = address(_15610)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15612))
                        call address(_15612).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15610), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27448 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27448] == bool(mem[_27448])
                        if _27298 and 5 > -1 / _27298:
                            revert with 0, 17
                        if 5 * _27298 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _27298 < 5000 * _27298 / 10^6:
                            revert with 0, 17
                        if _27342 and 5 > -1 / _27342:
                            revert with 0, 17
                        if 5 * _27342 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _27342 < 5000 * _27342 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _27298
                        mem[mem[64] + 100] = _27342
                        mem[mem[64] + 132] = _27298 - (5000 * _27298 / 10^6)
                        mem[mem[64] + 164] = _27342 - (5000 * _27342 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_15610))
                        call address(_15610).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_15611), address(_15612), _27298, _27342, _27298 - (5000 * _27298 / 10^6), _27342 - (5000 * _27342 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _27610 = mem[_1542 + 160]
                        _27611 = mem[_1542 + 64]
                        _27612 = mem[_1542 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27612))
                        staticcall address(_27612).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27642 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27652 = mem[_27642]
                        if _27611 >= 999999:
                            mem[mem[64] + 4] = mem[_27642]
                            require ext_code.size(address(_27610))
                            call address(_27610).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _27652
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27652
                            emit Earn(_27652);
                            _27739 = mem[_1542 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27739))
                            staticcall address(_27739).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27793 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1542 + 96] = mem[_27793]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27899 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27915 = mem[_27899]
                            _27931 = mem[_1542]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _27951 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _27915
                            mem[mem[64] + 36] = 128
                            _27969 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _27969:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_27951 + 68] = this.address
                            mem[_27951 + 100] = block.timestamp + 60
                            require ext_code.size(address(_27931))
                            call address(_27931).mem[mem[64] len 4] with:
                               value _27915 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _27951 + (32 * _27969) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28263 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28279 = mem[_28263]
                            require mem[_28263] <= test266151307()
                            require _28263 + mem[_28263] + 31 < _28263 + return_data.size
                            _28295 = mem[_28263 + mem[_28263]]
                            if mem[_28263 + mem[_28263]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_28263 + mem[_28263]]) + 1 < 0 or _28263 + ceil32(return_data.size) + ceil32(32 * mem[_28263 + mem[_28263]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _28263 + ceil32(return_data.size) + ceil32(32 * mem[_28263 + mem[_28263]]) + 1
                            mem[_28263 + ceil32(return_data.size)] = _28295
                            require _28279 + (32 * _28295) + 32 <= return_data.size
                            t = _28263 + ceil32(return_data.size) + 32
                            s = _28263 + _28279 + 32
                            while s < _28263 + _28279 + (32 * _28295) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28647 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28647]
                        else:
                            mem[mem[64] + 4] = _27611
                            mem[mem[64] + 36] = _27652
                            require ext_code.size(address(_27610))
                            call address(_27610).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _27611, _27652
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27652
                            emit Earn(_27652);
                            _27740 = mem[_1542 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27740))
                            staticcall address(_27740).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27794 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1542 + 96] = mem[_27794]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27900 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27916 = mem[_27900]
                            _27932 = mem[_1542]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _27952 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _27916
                            mem[mem[64] + 36] = 128
                            _27970 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_27952 + 100] = block.timestamp + 60
                            require ext_code.size(address(_27932))
                            call address(_27932).mem[mem[64] len 4] with:
                               value _27916 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _27952 + (32 * _27970) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28264 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28280 = mem[_28264]
                            require mem[_28264] <= test266151307()
                            require _28264 + mem[_28264] + 31 < _28264 + return_data.size
                            _28296 = mem[_28264 + mem[_28264]]
                            if mem[_28264 + mem[_28264]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_28264 + mem[_28264]]) + 1 < 0 or _28264 + ceil32(return_data.size) + ceil32(32 * mem[_28264 + mem[_28264]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _28264 + ceil32(return_data.size) + ceil32(32 * mem[_28264 + mem[_28264]]) + 1
                            mem[_28264 + ceil32(return_data.size)] = _28296
                            require _28280 + (32 * _28296) + 32 <= return_data.size
                            t = _28264 + ceil32(return_data.size) + 32
                            s = _28264 + _28280 + 32
                            while s < _28264 + _28280 + (32 * _28296) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28648 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28648]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1542
                s = _7328 - (5000 * _7328 / 10^6)
                s = stor9[idx].field_0
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1563 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _1586 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_1586] = mem[_1563]
            mem[_1586 + 32] = mem[_1563 + 32]
            mem[_1586 + 64] = mem[_1563 + 64]
            require return_data.size - 96 >= 96
            _1610 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_1610] = mem[_1563 + 96]
            mem[_1610 + 32] = mem[_1563 + 128]
            mem[_1610 + 64] = mem[_1563 + 160]
            mem[_1586 + 96] = _1610
            mem[_1586 + 128] = mem[_1563 + 192]
            require return_data.size - 224 >= 96
            _1652 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_1652] = mem[_1563 + 224]
            mem[_1652 + 32] = mem[_1563 + 256]
            mem[_1652 + 64] = mem[_1563 + 288]
            mem[_1586 + 160] = _1652
            _1678 = mem[_1586 + 64]
            if not mem[_1586 + 64]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1542
                s = mem[_1586 + 64]
                s = stor9[idx].field_0
                continue 
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _1712 = mem[64]
            mem[64] = mem[64] + 256
            mem[_1712] = strategyInfo[stor9[idx].field_0].field_0
            mem[_1712 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_1712 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_1712 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_1712 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_1712 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_1712 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_1712 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 4] = _1678
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _1678
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1777 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1787 = mem[_1777]
                require mem[_1777] == mem[_1777 + 12 len 20]
                if 0 >= mem[96]:
                    revert with 0, 50
                mem[128] = mem[_1777 + 12 len 20]
                if 1 >= mem[96]:
                    revert with 0, 50
                mem[160] = stor21
                require ext_code.size(address(_1787))
                staticcall address(_1787).0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1903 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1927 = mem[_1903]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1787))
                staticcall address(_1787).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1967 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1981 = mem[_1967]
                if mem[_1967] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _1927:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2059 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2083 = mem[_2059]
                if 10^12 * _1981 / _1927 and mem[_2059] > -1 / 10^12 * _1981 / _1927:
                    revert with 0, 17
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _1981 / _1927 * _2083 / 10^12
                mem[mem[64] + 36] = 64
                _2193 = mem[96]
                mem[mem[64] + 68] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 100
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len (32 * _2193) + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3807 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3823 = mem[_3807]
                require mem[_3807] <= test266151307()
                require _3807 + mem[_3807] + 31 < _3807 + return_data.size
                _3839 = mem[_3807 + mem[_3807]]
                if mem[_3807 + mem[_3807]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_3807 + mem[_3807]]) + 1 < 0 or _3807 + ceil32(return_data.size) + ceil32(32 * mem[_3807 + mem[_3807]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _3807 + ceil32(return_data.size) + ceil32(32 * mem[_3807 + mem[_3807]]) + 1
                mem[_3807 + ceil32(return_data.size)] = _3839
                require _3823 + (32 * _3839) + 32 <= return_data.size
                t = _3807 + ceil32(return_data.size) + 32
                s = _3807 + _3823 + 32
                while s < _3807 + _3823 + (32 * _3839) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _3839:
                    revert with 0, 50
                _7325 = mem[_3807 + ceil32(return_data.size) + 64]
                if mem[_3807 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_3807 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                if 5 * mem[_3807 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if mem[_3807 + ceil32(return_data.size) + 64] < 5000 * mem[_3807 + ceil32(return_data.size) + 64] / 10^6:
                    revert with 0, 17
                _7503 = mem[_1542]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_1787))
                staticcall address(_1787).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7561 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7599 = mem[_7561]
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7599
                mem[mem[64] + 36] = _7325 - (5000 * _7325 / 10^6)
                mem[mem[64] + 68] = 160
                _7675 = mem[96]
                mem[mem[64] + 164] = mem[96]
                s = 0
                t = 128
                u = mem[64] + 196
                while s < mem[96]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[mem[64] + 100] = this.address
                mem[mem[64] + 132] = block.timestamp + 60
                require ext_code.size(address(_7503))
                call address(_7503).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _7675) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11441 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11461 = mem[_11441]
                require mem[_11441] <= test266151307()
                require _11441 + mem[_11441] + 31 < _11441 + return_data.size
                _11487 = mem[_11441 + mem[_11441]]
                if mem[_11441 + mem[_11441]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_11441 + mem[_11441]]) + 1 < 0 or _11441 + ceil32(return_data.size) + ceil32(32 * mem[_11441 + mem[_11441]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _11441 + ceil32(return_data.size) + ceil32(32 * mem[_11441 + mem[_11441]]) + 1
                mem[_11441 + ceil32(return_data.size)] = _11487
                require _11461 + (32 * _11487) + 32 <= return_data.size
                t = _11441 + ceil32(return_data.size) + 32
                s = _11441 + _11461 + 32
                while s < _11441 + _11461 + (32 * _11487) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                _15601 = mem[_1542]
                _15602 = mem[_1542 + 192]
                _15603 = mem[_1542 + 224]
                _15631 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_15631 + 32 len 64] = call.data[calldata.size len 64]
                if not mem[_15631]:
                    revert with 0, 50
                mem[_15631 + 32] = stor21
                if stor21 == address(_15602):
                    if stor21 == address(_15603):
                        mem[_15631 + 100] = this.address
                        require ext_code.size(address(_15602))
                        staticcall address(_15602).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15631 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_15631 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_15603))
                        staticcall address(_15603).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15631 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if not ext_call.return_data[0]:
                            revert with 0, 'Desired value is zero'
                        if not ext_call.return_data[0]:
                            revert with 0, 'Desired value is zero'
                        mem[_15631 + (2 * ceil32(return_data.size)) + 100] = address(_15601)
                        mem[_15631 + (2 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_15602))
                        call address(_15602).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15601), -1
                        mem[_15631 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        mem[_15631 + (4 * ceil32(return_data.size)) + 100] = address(_15601)
                        mem[_15631 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_15603))
                        call address(_15603).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15601), -1
                        mem[_15631 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                            revert with 0, 17
                        if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_15631 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                        mem[_15631 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                        mem[_15631 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                        mem[_15631 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                        mem[_15631 + (6 * ceil32(return_data.size)) + 292] = this.address
                        mem[_15631 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                        require ext_code.size(address(_15601))
                        call address(_15601).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_15602), address(_15603), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                        mem[_15631 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _15631 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 96
                        _16785 = mem[_1542 + 160]
                        _16786 = mem[_1542 + 64]
                        _16787 = mem[_1542 + 32]
                        mem[_15631 + (7 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_16787))
                        staticcall address(_16787).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15631 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _15631 + (8 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if _16786 >= 999999:
                            mem[_15631 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            require ext_code.size(address(_16785))
                            call address(_16785).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_15631 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _17063 = mem[_1542 + 32]
                            mem[_15631 + (8 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_17063))
                            staticcall address(_17063).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15631 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1542 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_15631 + (10 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15631 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _15631 + (11 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _17479 = mem[_1542]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_15631 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_15631 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_15631 + (11 * ceil32(return_data.size)) + 132] = 128
                            mem[_15631 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _15631 + (11 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_15631 + (11 * ceil32(return_data.size)) + 164] = this.address
                            mem[_15631 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_17479))
                            call address(_17479).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                               value ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_15631 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_15631 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _15631 + (12 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _19665 = mem[_15631 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_15631 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _15631 + (11 * ceil32(return_data.size)) + mem[_15631 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _15631 + (11 * ceil32(return_data.size)) + return_data.size + 96
                            _19701 = mem[_15631 + (11 * ceil32(return_data.size)) + mem[_15631 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_15631 + (11 * ceil32(return_data.size)) + mem[_15631 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_15631 + (11 * ceil32(return_data.size)) + mem[_15631 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _15631 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15631 + (11 * ceil32(return_data.size)) + mem[_15631 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _15631 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15631 + (11 * ceil32(return_data.size)) + mem[_15631 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_15631 + (12 * ceil32(return_data.size)) + 96] = _19701
                            require _19665 + (32 * _19701) + 32 <= return_data.size
                            t = _15631 + (12 * ceil32(return_data.size)) + 128
                            s = _15631 + (11 * ceil32(return_data.size)) + _19665 + 128
                            while s < _15631 + (11 * ceil32(return_data.size)) + _19665 + (32 * _19701) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22853 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_22853]
                        else:
                            mem[_15631 + (8 * ceil32(return_data.size)) + 100] = _16786
                            mem[_15631 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                            require ext_code.size(address(_16785))
                            call address(_16785).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _16786, ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_15631 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            emit Earn(ext_call.return_data[0]);
                            _17064 = mem[_1542 + 32]
                            mem[_15631 + (8 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(address(_17064))
                            staticcall address(_17064).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15631 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            mem[_1542 + 96] = ext_call.return_data[0]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[_15631 + (10 * ceil32(return_data.size)) + 100] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[_15631 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _15631 + (11 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _17480 = mem[_1542]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            mem[_15631 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[_15631 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                            mem[_15631 + (11 * ceil32(return_data.size)) + 132] = 128
                            mem[_15631 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                            s = 0
                            t = 128
                            u = _15631 + (11 * ceil32(return_data.size)) + 260
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_15631 + (11 * ceil32(return_data.size)) + 164] = this.address
                            mem[_15631 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                            require ext_code.size(address(_17480))
                            call address(_17480).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                               value ext_call.return_data[0] wei
                                 gas gas_remaining wei
                                args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_15631 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_15631 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _15631 + (12 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _19666 = mem[_15631 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                            require mem[_15631 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                            require _15631 + (11 * ceil32(return_data.size)) + mem[_15631 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _15631 + (11 * ceil32(return_data.size)) + return_data.size + 96
                            _19702 = mem[_15631 + (11 * ceil32(return_data.size)) + mem[_15631 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                            if mem[_15631 + (11 * ceil32(return_data.size)) + mem[_15631 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_15631 + (11 * ceil32(return_data.size)) + mem[_15631 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _15631 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15631 + (11 * ceil32(return_data.size)) + mem[_15631 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                                revert with 0, 65
                            mem[64] = _15631 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15631 + (11 * ceil32(return_data.size)) + mem[_15631 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                            mem[_15631 + (12 * ceil32(return_data.size)) + 96] = _19702
                            require _19666 + (32 * _19702) + 32 <= return_data.size
                            t = _15631 + (12 * ceil32(return_data.size)) + 128
                            s = _15631 + (11 * ceil32(return_data.size)) + _19666 + 128
                            while s < _15631 + (11 * ceil32(return_data.size)) + _19666 + (32 * _19702) + 128:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22854 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_22854]
                    else:
                        if 1 >= mem[_15631]:
                            revert with 0, 50
                        mem[_15631 + 64] = address(_15603)
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_15631 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_15631 + 100] = eth.balance(this.address) / 2
                        mem[_15631 + 132] = 128
                        mem[_15631 + 228] = mem[_15631]
                        s = 0
                        t = _15631 + 32
                        u = _15631 + 260
                        while s < mem[_15631]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_15631 + 164] = this.address
                        mem[_15631 + 196] = block.timestamp + 60
                        require ext_code.size(address(_15601))
                        call address(_15601).mem[mem[64] len 4] with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _15631 + (32 * mem[_15631]) + -mem[64] + 256]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19627 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _19667 = mem[_19627]
                        require mem[_19627] <= test266151307()
                        require _19627 + mem[_19627] + 31 < _19627 + return_data.size
                        _19703 = mem[_19627 + mem[_19627]]
                        if mem[_19627 + mem[_19627]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_19627 + mem[_19627]]) + 1 < 0 or _19627 + ceil32(return_data.size) + ceil32(32 * mem[_19627 + mem[_19627]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _19627 + ceil32(return_data.size) + ceil32(32 * mem[_19627 + mem[_19627]]) + 1
                        mem[_19627 + ceil32(return_data.size)] = _19703
                        require _19667 + (32 * _19703) + 32 <= return_data.size
                        t = _19627 + ceil32(return_data.size) + 32
                        s = _19627 + _19667 + 32
                        while s < _19627 + _19667 + (32 * _19703) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15602))
                        staticcall address(_15602).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22855 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22895 = mem[_22855]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15603))
                        staticcall address(_15603).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22973 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22997 = mem[_22973]
                        if not _22895:
                            revert with 0, 'Desired value is zero'
                        if not mem[_22973]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_15601)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15602))
                        call address(_15602).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15601), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23177 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23177] == bool(mem[_23177])
                        mem[mem[64] + 4] = address(_15601)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15603))
                        call address(_15603).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15601), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23277 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23277] == bool(mem[_23277])
                        if _22895 and 5 > -1 / _22895:
                            revert with 0, 17
                        if 5 * _22895 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _22895 < 5000 * _22895 / 10^6:
                            revert with 0, 17
                        if _22997 and 5 > -1 / _22997:
                            revert with 0, 17
                        if 5 * _22997 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _22997 < 5000 * _22997 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _22895
                        mem[mem[64] + 100] = _22997
                        mem[mem[64] + 132] = _22895 - (5000 * _22895 / 10^6)
                        mem[mem[64] + 164] = _22997 - (5000 * _22997 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_15601))
                        call address(_15601).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_15602), address(_15603), _22895, _22997, _22895 - (5000 * _22895 / 10^6), _22997 - (5000 * _22997 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _23709 = mem[_1542 + 160]
                        _23710 = mem[_1542 + 64]
                        _23711 = mem[_1542 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_23711))
                        staticcall address(_23711).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23785 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23809 = mem[_23785]
                        if _23710 >= 999999:
                            mem[mem[64] + 4] = mem[_23785]
                            require ext_code.size(address(_23709))
                            call address(_23709).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _23809
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _23809
                            emit Earn(_23809);
                            _23969 = mem[_1542 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_23969))
                            staticcall address(_23969).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24087 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1542 + 96] = mem[_24087]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24321 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24365 = mem[_24321]
                            _24425 = mem[_1542]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _24509 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _24365
                            mem[mem[64] + 36] = 128
                            _24559 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < _24559:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_24509 + 68] = this.address
                            mem[_24509 + 100] = block.timestamp + 60
                            require ext_code.size(address(_24425))
                            call address(_24425).mem[mem[64] len 4] with:
                               value _24365 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _24509 + (32 * _24559) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25639 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25695 = mem[_25639]
                            require mem[_25639] <= test266151307()
                            require _25639 + mem[_25639] + 31 < _25639 + return_data.size
                            _25743 = mem[_25639 + mem[_25639]]
                            if mem[_25639 + mem[_25639]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25639 + mem[_25639]]) + 1 < 0 or _25639 + ceil32(return_data.size) + ceil32(32 * mem[_25639 + mem[_25639]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25639 + ceil32(return_data.size) + ceil32(32 * mem[_25639 + mem[_25639]]) + 1
                            mem[_25639 + ceil32(return_data.size)] = _25743
                            require _25695 + (32 * _25743) + 32 <= return_data.size
                            t = _25639 + ceil32(return_data.size) + 32
                            s = _25639 + _25695 + 32
                            while s < _25639 + _25695 + (32 * _25743) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27233 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_27233]
                        else:
                            mem[mem[64] + 4] = _23710
                            mem[mem[64] + 36] = _23809
                            require ext_code.size(address(_23709))
                            call address(_23709).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _23710, _23809
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _23809
                            emit Earn(_23809);
                            _23970 = mem[_1542 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_23970))
                            staticcall address(_23970).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24088 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1542 + 96] = mem[_24088]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24322 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24366 = mem[_24322]
                            _24426 = mem[_1542]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _24510 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _24366
                            mem[mem[64] + 36] = 128
                            _24560 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_24510 + 100] = block.timestamp + 60
                            require ext_code.size(address(_24426))
                            call address(_24426).mem[mem[64] len 4] with:
                               value _24366 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _24510 + (32 * _24560) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25640 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25696 = mem[_25640]
                            require mem[_25640] <= test266151307()
                            require _25640 + mem[_25640] + 31 < _25640 + return_data.size
                            _25744 = mem[_25640 + mem[_25640]]
                            if mem[_25640 + mem[_25640]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25640 + mem[_25640]]) + 1 < 0 or _25640 + ceil32(return_data.size) + ceil32(32 * mem[_25640 + mem[_25640]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25640 + ceil32(return_data.size) + ceil32(32 * mem[_25640 + mem[_25640]]) + 1
                            mem[_25640 + ceil32(return_data.size)] = _25744
                            require _25696 + (32 * _25744) + 32 <= return_data.size
                            t = _25640 + ceil32(return_data.size) + 32
                            s = _25640 + _25696 + 32
                            while s < _25640 + _25696 + (32 * _25744) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27234 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_27234]
                else:
                    if 1 >= mem[_15631]:
                        revert with 0, 50
                    mem[_15631 + 64] = address(_15602)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_15631 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_15631 + 100] = eth.balance(this.address) / 2
                    mem[_15631 + 132] = 128
                    mem[_15631 + 228] = mem[_15631]
                    s = 0
                    t = _15631 + 32
                    u = _15631 + 260
                    while s < mem[_15631]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_15631 + 164] = this.address
                    mem[_15631 + 196] = block.timestamp + 60
                    require ext_code.size(address(_15601))
                    call address(_15601).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _15631 + (32 * mem[_15631]) + -mem[64] + 256]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19628 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _19668 = mem[_19628]
                    require mem[_19628] <= test266151307()
                    require _19628 + mem[_19628] + 31 < _19628 + return_data.size
                    _19704 = mem[_19628 + mem[_19628]]
                    if mem[_19628 + mem[_19628]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_19628 + mem[_19628]]) + 1 < 0 or _19628 + ceil32(return_data.size) + ceil32(32 * mem[_19628 + mem[_19628]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _19628 + ceil32(return_data.size) + ceil32(32 * mem[_19628 + mem[_19628]]) + 1
                    mem[_19628 + ceil32(return_data.size)] = _19704
                    require _19668 + (32 * _19704) + 32 <= return_data.size
                    t = _19628 + ceil32(return_data.size) + 32
                    s = _19628 + _19668 + 32
                    while s < _19628 + _19668 + (32 * _19704) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == address(_15603):
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15602))
                        staticcall address(_15602).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22877 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22917 = mem[_22877]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15603))
                        staticcall address(_15603).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22985 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23017 = mem[_22985]
                        if not _22917:
                            revert with 0, 'Desired value is zero'
                        if not mem[_22985]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_15601)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15602))
                        call address(_15602).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15601), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23193 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23193] == bool(mem[_23193])
                        mem[mem[64] + 4] = address(_15601)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15603))
                        call address(_15603).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15601), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23293 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_23293] == bool(mem[_23293])
                        if _22917 and 5 > -1 / _22917:
                            revert with 0, 17
                        if 5 * _22917 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _22917 < 5000 * _22917 / 10^6:
                            revert with 0, 17
                        if _23017 and 5 > -1 / _23017:
                            revert with 0, 17
                        if 5 * _23017 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _23017 < 5000 * _23017 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _22917
                        mem[mem[64] + 100] = _23017
                        mem[mem[64] + 132] = _22917 - (5000 * _22917 / 10^6)
                        mem[mem[64] + 164] = _23017 - (5000 * _23017 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_15601))
                        call address(_15601).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_15602), address(_15603), _22917, _23017, _22917 - (5000 * _22917 / 10^6), _23017 - (5000 * _23017 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _23745 = mem[_1542 + 160]
                        _23746 = mem[_1542 + 64]
                        _23747 = mem[_1542 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_23747))
                        staticcall address(_23747).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _23797 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _23821 = mem[_23797]
                        if _23746 >= 999999:
                            mem[mem[64] + 4] = mem[_23797]
                            require ext_code.size(address(_23745))
                            call address(_23745).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _23821
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _23821
                            emit Earn(_23821);
                            _24021 = mem[_1542 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_24021))
                            staticcall address(_24021).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24107 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1542 + 96] = mem[_24107]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24345 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24397 = mem[_24345]
                            _24453 = mem[_1542]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _24533 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _24397
                            mem[mem[64] + 36] = 128
                            _24581 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_24533 + 100] = block.timestamp + 60
                            require ext_code.size(address(_24453))
                            call address(_24453).mem[mem[64] len 4] with:
                               value _24397 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _24533 + (32 * _24581) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25641 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25697 = mem[_25641]
                            require mem[_25641] <= test266151307()
                            require _25641 + mem[_25641] + 31 < _25641 + return_data.size
                            _25745 = mem[_25641 + mem[_25641]]
                            if mem[_25641 + mem[_25641]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25641 + mem[_25641]]) + 1 < 0 or _25641 + ceil32(return_data.size) + ceil32(32 * mem[_25641 + mem[_25641]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25641 + ceil32(return_data.size) + ceil32(32 * mem[_25641 + mem[_25641]]) + 1
                            mem[_25641 + ceil32(return_data.size)] = _25745
                            require _25697 + (32 * _25745) + 32 <= return_data.size
                            t = _25641 + ceil32(return_data.size) + 32
                            s = _25641 + _25697 + 32
                            while s < _25641 + _25697 + (32 * _25745) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27235 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_27235]
                        else:
                            mem[mem[64] + 4] = _23746
                            mem[mem[64] + 36] = _23821
                            require ext_code.size(address(_23745))
                            call address(_23745).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _23746, _23821
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _23821
                            emit Earn(_23821);
                            _24022 = mem[_1542 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_24022))
                            staticcall address(_24022).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24108 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1542 + 96] = mem[_24108]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _24346 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _24398 = mem[_24346]
                            _24454 = mem[_1542]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _24534 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _24398
                            mem[mem[64] + 36] = 128
                            _24582 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_24534 + 100] = block.timestamp + 60
                            require ext_code.size(address(_24454))
                            call address(_24454).mem[mem[64] len 4] with:
                               value _24398 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _24534 + (32 * _24582) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _25642 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _25698 = mem[_25642]
                            require mem[_25642] <= test266151307()
                            require _25642 + mem[_25642] + 31 < _25642 + return_data.size
                            _25746 = mem[_25642 + mem[_25642]]
                            if mem[_25642 + mem[_25642]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_25642 + mem[_25642]]) + 1 < 0 or _25642 + ceil32(return_data.size) + ceil32(32 * mem[_25642 + mem[_25642]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _25642 + ceil32(return_data.size) + ceil32(32 * mem[_25642 + mem[_25642]]) + 1
                            mem[_25642 + ceil32(return_data.size)] = _25746
                            require _25698 + (32 * _25746) + 32 <= return_data.size
                            t = _25642 + ceil32(return_data.size) + 32
                            s = _25642 + _25698 + 32
                            while s < _25642 + _25698 + (32 * _25746) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27236 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_27236]
                    else:
                        if 1 >= mem[_15631]:
                            revert with 0, 50
                        mem[_15631 + 64] = address(_15603)
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = eth.balance(this.address) / 2
                        mem[mem[64] + 36] = 128
                        _22986 = mem[_15631]
                        mem[mem[64] + 132] = mem[_15631]
                        s = 0
                        t = _15631 + 32
                        u = mem[64] + 164
                        while s < _22986:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[mem[64] + 100] = block.timestamp + 60
                        require ext_code.size(address(_15601))
                        call address(_15601).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value eth.balance(this.address) / 2 wei
                             gas gas_remaining wei
                            args Mask(255, 1, eth.balance(this.address)), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _22986) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25643 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25699 = mem[_25643]
                        require mem[_25643] <= test266151307()
                        require _25643 + mem[_25643] + 31 < _25643 + return_data.size
                        _25747 = mem[_25643 + mem[_25643]]
                        if mem[_25643 + mem[_25643]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25643 + mem[_25643]]) + 1 < 0 or _25643 + ceil32(return_data.size) + ceil32(32 * mem[_25643 + mem[_25643]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _25643 + ceil32(return_data.size) + ceil32(32 * mem[_25643 + mem[_25643]]) + 1
                        mem[_25643 + ceil32(return_data.size)] = _25747
                        require _25699 + (32 * _25747) + 32 <= return_data.size
                        t = _25643 + ceil32(return_data.size) + 32
                        s = _25643 + _25699 + 32
                        while s < _25643 + _25699 + (32 * _25747) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15602))
                        staticcall address(_15602).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27237 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27283 = mem[_27237]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15603))
                        staticcall address(_15603).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27331 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27339 = mem[_27331]
                        if not _27283:
                            revert with 0, 'Desired value is zero'
                        if not mem[_27331]:
                            revert with 0, 'Desired value is zero'
                        mem[mem[64] + 4] = address(_15601)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15602))
                        call address(_15602).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15601), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27413 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27413] == bool(mem[_27413])
                        mem[mem[64] + 4] = address(_15601)
                        mem[mem[64] + 36] = -1
                        require ext_code.size(address(_15603))
                        call address(_15603).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_15601), -1
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27445 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_27445] == bool(mem[_27445])
                        if _27283 and 5 > -1 / _27283:
                            revert with 0, 17
                        if 5 * _27283 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _27283 < 5000 * _27283 / 10^6:
                            revert with 0, 17
                        if _27339 and 5 > -1 / _27339:
                            revert with 0, 17
                        if 5 * _27339 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if _27339 < 5000 * _27339 / 10^6:
                            revert with 0, 17
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64] + 68] = _27283
                        mem[mem[64] + 100] = _27339
                        mem[mem[64] + 132] = _27283 - (5000 * _27283 / 10^6)
                        mem[mem[64] + 164] = _27339 - (5000 * _27339 / 10^6)
                        mem[mem[64] + 196] = this.address
                        mem[mem[64] + 228] = block.timestamp + 60
                        require ext_code.size(address(_15601))
                        call address(_15601).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                             gas gas_remaining wei
                            args address(_15602), address(_15603), _27283, _27339, _27283 - (5000 * _27283 / 10^6), _27339 - (5000 * _27339 / 10^6), address(this.address), block.timestamp + 60
                        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 96
                        _27601 = mem[_1542 + 160]
                        _27602 = mem[_1542 + 64]
                        _27603 = mem[_1542 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27603))
                        staticcall address(_27603).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27639 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27649 = mem[_27639]
                        if _27602 >= 999999:
                            mem[mem[64] + 4] = mem[_27639]
                            require ext_code.size(address(_27601))
                            call address(_27601).deposit(uint256 arg1) with:
                                 gas gas_remaining wei
                                args _27649
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27649
                            emit Earn(_27649);
                            _27733 = mem[_1542 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27733))
                            staticcall address(_27733).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27787 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1542 + 96] = mem[_27787]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27893 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27909 = mem[_27893]
                            _27925 = mem[_1542]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _27945 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _27909
                            mem[mem[64] + 36] = 128
                            _27963 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_27945 + 100] = block.timestamp + 60
                            require ext_code.size(address(_27925))
                            call address(_27925).mem[mem[64] len 4] with:
                               value _27909 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _27945 + (32 * _27963) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28257 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28273 = mem[_28257]
                            require mem[_28257] <= test266151307()
                            require _28257 + mem[_28257] + 31 < _28257 + return_data.size
                            _28289 = mem[_28257 + mem[_28257]]
                            if mem[_28257 + mem[_28257]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_28257 + mem[_28257]]) + 1 < 0 or _28257 + ceil32(return_data.size) + ceil32(32 * mem[_28257 + mem[_28257]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _28257 + ceil32(return_data.size) + ceil32(32 * mem[_28257 + mem[_28257]]) + 1
                            mem[_28257 + ceil32(return_data.size)] = _28289
                            require _28273 + (32 * _28289) + 32 <= return_data.size
                            t = _28257 + ceil32(return_data.size) + 32
                            s = _28257 + _28273 + 32
                            while s < _28257 + _28273 + (32 * _28289) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28641 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28641]
                        else:
                            mem[mem[64] + 4] = _27602
                            mem[mem[64] + 36] = _27649
                            require ext_code.size(address(_27601))
                            call address(_27601).deposit(uint256 arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args _27602, _27649
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[mem[64]] = _27649
                            emit Earn(_27649);
                            _27734 = mem[_1542 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_27734))
                            staticcall address(_27734).0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27788 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            mem[_1542 + 96] = mem[_27788]
                            if not mem[96]:
                                revert with 0, 50
                            mem[128] = stor21
                            if 1 >= mem[96]:
                                revert with 0, 50
                            mem[160] = USDTAddress
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(stor21)
                            staticcall stor21.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _27894 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _27910 = mem[_27894]
                            _27926 = mem[_1542]
                            if 60 > !block.timestamp:
                                revert with 0, 17
                            _27946 = mem[64]
                            mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = _27910
                            mem[mem[64] + 36] = 128
                            _27964 = mem[96]
                            mem[mem[64] + 132] = mem[96]
                            s = 0
                            t = 128
                            u = mem[64] + 164
                            while s < mem[96]:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[mem[64] + 68] = this.address
                            mem[_27946 + 100] = block.timestamp + 60
                            require ext_code.size(address(_27926))
                            call address(_27926).mem[mem[64] len 4] with:
                               value _27910 wei
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _27946 + (32 * _27964) + -mem[64] + 160]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28258 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _28274 = mem[_28258]
                            require mem[_28258] <= test266151307()
                            require _28258 + mem[_28258] + 31 < _28258 + return_data.size
                            _28290 = mem[_28258 + mem[_28258]]
                            if mem[_28258 + mem[_28258]] > test266151307():
                                revert with 0, 65
                            if ceil32(32 * mem[_28258 + mem[_28258]]) + 1 < 0 or _28258 + ceil32(return_data.size) + ceil32(32 * mem[_28258 + mem[_28258]]) + 1 > test266151307():
                                revert with 0, 65
                            mem[64] = _28258 + ceil32(return_data.size) + ceil32(32 * mem[_28258 + mem[_28258]]) + 1
                            mem[_28258 + ceil32(return_data.size)] = _28290
                            require _28274 + (32 * _28290) + 32 <= return_data.size
                            t = _28258 + ceil32(return_data.size) + 32
                            s = _28258 + _28274 + 32
                            while s < _28258 + _28274 + (32 * _28290) + 32:
                                mem[t] = mem[s]
                                t = t + 32
                                s = s + 32
                                continue 
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(USDTAddress)
                            staticcall USDTAddress.0x70a08231 with:
                                    gas gas_remaining wei
                                   args this.address
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _28642 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            sub_5e8f09aa = mem[_28642]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _1542
                s = _7325 - (5000 * _7325 / 10^6)
                s = stor9[idx].field_0
                continue 
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
            mem[mem[64] + 36] = _1678
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args strategyInfo[stor9[idx].field_0].field_512, _1678
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1778 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1788 = mem[_1778]
            require mem[_1778] == mem[_1778 + 12 len 20]
            if 0 >= mem[96]:
                revert with 0, 50
            mem[128] = mem[_1778 + 12 len 20]
            if 1 >= mem[96]:
                revert with 0, 50
            mem[160] = stor21
            require ext_code.size(address(_1788))
            staticcall address(_1788).0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1904 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1928 = mem[_1904]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_1788))
            staticcall address(_1788).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _1968 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _1982 = mem[_1968]
            if mem[_1968] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _1928:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2060 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _2084 = mem[_2060]
            if 10^12 * _1982 / _1928 and mem[_2060] > -1 / 10^12 * _1982 / _1928:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _1982 / _1928 * _2084 / 10^12
            mem[mem[64] + 36] = 64
            _2194 = mem[96]
            mem[mem[64] + 68] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 100
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len (32 * _2194) + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3808 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _3824 = mem[_3808]
            require mem[_3808] <= test266151307()
            require _3808 + mem[_3808] + 31 < _3808 + return_data.size
            _3840 = mem[_3808 + mem[_3808]]
            if mem[_3808 + mem[_3808]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_3808 + mem[_3808]]) + 1 < 0 or _3808 + ceil32(return_data.size) + ceil32(32 * mem[_3808 + mem[_3808]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _3808 + ceil32(return_data.size) + ceil32(32 * mem[_3808 + mem[_3808]]) + 1
            mem[_3808 + ceil32(return_data.size)] = _3840
            require _3824 + (32 * _3840) + 32 <= return_data.size
            t = _3808 + ceil32(return_data.size) + 32
            s = _3808 + _3824 + 32
            while s < _3808 + _3824 + (32 * _3840) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            if 1 >= _3840:
                revert with 0, 50
            _7326 = mem[_3808 + ceil32(return_data.size) + 64]
            if mem[_3808 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_3808 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            if 5 * mem[_3808 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                revert with 0, 17
            if mem[_3808 + ceil32(return_data.size) + 64] < 5000 * mem[_3808 + ceil32(return_data.size) + 64] / 10^6:
                revert with 0, 17
            _7504 = mem[_1542]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_1788))
            staticcall address(_1788).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7562 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7600 = mem[_7562]
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _7600
            mem[mem[64] + 36] = _7326 - (5000 * _7326 / 10^6)
            mem[mem[64] + 68] = 160
            _7676 = mem[96]
            mem[mem[64] + 164] = mem[96]
            s = 0
            t = 128
            u = mem[64] + 196
            while s < mem[96]:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[mem[64] + 100] = this.address
            mem[mem[64] + 132] = block.timestamp + 60
            require ext_code.size(address(_7504))
            call address(_7504).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len 96], address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _7676) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11442 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11462 = mem[_11442]
            require mem[_11442] <= test266151307()
            require _11442 + mem[_11442] + 31 < _11442 + return_data.size
            _11488 = mem[_11442 + mem[_11442]]
            if mem[_11442 + mem[_11442]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_11442 + mem[_11442]]) + 1 < 0 or _11442 + ceil32(return_data.size) + ceil32(32 * mem[_11442 + mem[_11442]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _11442 + ceil32(return_data.size) + ceil32(32 * mem[_11442 + mem[_11442]]) + 1
            mem[_11442 + ceil32(return_data.size)] = _11488
            require _11462 + (32 * _11488) + 32 <= return_data.size
            t = _11442 + ceil32(return_data.size) + 32
            s = _11442 + _11462 + 32
            while s < _11442 + _11462 + (32 * _11488) + 32:
                mem[t] = mem[s]
                t = t + 32
                s = s + 32
                continue 
            _15604 = mem[_1542]
            _15605 = mem[_1542 + 192]
            _15606 = mem[_1542 + 224]
            _15633 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            mem[_15633 + 32 len 64] = call.data[calldata.size len 64]
            if not mem[_15633]:
                revert with 0, 50
            mem[_15633 + 32] = stor21
            if stor21 == address(_15605):
                if stor21 == address(_15606):
                    mem[_15633 + 100] = this.address
                    require ext_code.size(address(_15605))
                    staticcall address(_15605).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_15633 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_15633 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(address(_15606))
                    staticcall address(_15606).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_15633 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    if not ext_call.return_data[0]:
                        revert with 0, 'Desired value is zero'
                    mem[_15633 + (2 * ceil32(return_data.size)) + 100] = address(_15604)
                    mem[_15633 + (2 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_15605))
                    call address(_15605).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_15604), -1
                    mem[_15633 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    mem[_15633 + (4 * ceil32(return_data.size)) + 100] = address(_15604)
                    mem[_15633 + (4 * ceil32(return_data.size)) + 132] = -1
                    require ext_code.size(address(_15606))
                    call address(_15606).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_15604), -1
                    mem[_15633 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                        revert with 0, 17
                    if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                        revert with 0, 17
                    if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_15633 + (6 * ceil32(return_data.size)) + 164] = ext_call.return_data[0]
                    mem[_15633 + (6 * ceil32(return_data.size)) + 196] = ext_call.return_data[0]
                    mem[_15633 + (6 * ceil32(return_data.size)) + 228] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                    mem[_15633 + (6 * ceil32(return_data.size)) + 260] = ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6)
                    mem[_15633 + (6 * ceil32(return_data.size)) + 292] = this.address
                    mem[_15633 + (6 * ceil32(return_data.size)) + 324] = block.timestamp + 60
                    require ext_code.size(address(_15604))
                    call address(_15604).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_15605), address(_15606), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                    mem[_15633 + (6 * ceil32(return_data.size)) + 96 len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _15633 + (7 * ceil32(return_data.size)) + 96
                    require return_data.size >= 96
                    _16788 = mem[_1542 + 160]
                    _16789 = mem[_1542 + 64]
                    _16790 = mem[_1542 + 32]
                    mem[_15633 + (7 * ceil32(return_data.size)) + 100] = this.address
                    require ext_code.size(address(_16790))
                    staticcall address(_16790).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_15633 + (7 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _15633 + (8 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if _16789 >= 999999:
                        mem[_15633 + (8 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        require ext_code.size(address(_16788))
                        call address(_16788).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_15633 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _17065 = mem[_1542 + 32]
                        mem[_15633 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_17065))
                        staticcall address(_17065).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15633 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_1542 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_15633 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15633 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _15633 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _17487 = mem[_1542]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_15633 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_15633 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_15633 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_15633 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _15633 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_15633 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_15633 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_17487))
                        call address(_17487).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_15633 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_15633 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _15633 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _19669 = mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _15633 + (11 * ceil32(return_data.size)) + mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _15633 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _19705 = mem[_15633 + (11 * ceil32(return_data.size)) + mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_15633 + (11 * ceil32(return_data.size)) + mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_15633 + (11 * ceil32(return_data.size)) + mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _15633 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15633 + (11 * ceil32(return_data.size)) + mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _15633 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15633 + (11 * ceil32(return_data.size)) + mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_15633 + (12 * ceil32(return_data.size)) + 96] = mem[_15633 + (11 * ceil32(return_data.size)) + mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _19669 + (32 * _19705) + 32 <= return_data.size
                        t = _15633 + (12 * ceil32(return_data.size)) + 128
                        s = _15633 + (11 * ceil32(return_data.size)) + _19669 + 128
                        while s < _15633 + (11 * ceil32(return_data.size)) + _19669 + (32 * _19705) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22856 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_22856]
                    else:
                        mem[_15633 + (8 * ceil32(return_data.size)) + 100] = _16789
                        mem[_15633 + (8 * ceil32(return_data.size)) + 132] = ext_call.return_data[0]
                        require ext_code.size(address(_16788))
                        call address(_16788).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _16789, ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_15633 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        emit Earn(ext_call.return_data[0]);
                        _17066 = mem[_1542 + 32]
                        mem[_15633 + (8 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(address(_17066))
                        staticcall address(_17066).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15633 + (8 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_1542 + 96] = ext_call.return_data[0]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[_15633 + (10 * ceil32(return_data.size)) + 100] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_15633 + (10 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _15633 + (11 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _17488 = mem[_1542]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[_15633 + (11 * ceil32(return_data.size)) + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[_15633 + (11 * ceil32(return_data.size)) + 100] = ext_call.return_data[0]
                        mem[_15633 + (11 * ceil32(return_data.size)) + 132] = 128
                        mem[_15633 + (11 * ceil32(return_data.size)) + 228] = mem[96]
                        s = 0
                        t = 128
                        u = _15633 + (11 * ceil32(return_data.size)) + 260
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_15633 + (11 * ceil32(return_data.size)) + 164] = this.address
                        mem[_15633 + (11 * ceil32(return_data.size)) + 196] = block.timestamp + 60
                        require ext_code.size(address(_17488))
                        call address(_17488).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                           value ext_call.return_data[0] wei
                             gas gas_remaining wei
                            args ext_call.return_data[0], 128, address(this.address), block.timestamp + 60, mem[_15633 + (11 * ceil32(return_data.size)) + 228 len (32 * mem[96]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_15633 + (11 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _15633 + (12 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _19670 = mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28]
                        require mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] <= test266151307()
                        require _15633 + (11 * ceil32(return_data.size)) + mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 127 < _15633 + (11 * ceil32(return_data.size)) + return_data.size + 96
                        _19706 = mem[_15633 + (11 * ceil32(return_data.size)) + mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        if mem[_15633 + (11 * ceil32(return_data.size)) + mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_15633 + (11 * ceil32(return_data.size)) + mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 1 < 0 or _15633 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15633 + (11 * ceil32(return_data.size)) + mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _15633 + (12 * ceil32(return_data.size)) + ceil32(32 * mem[_15633 + (11 * ceil32(return_data.size)) + mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]) + 97
                        mem[_15633 + (12 * ceil32(return_data.size)) + 96] = mem[_15633 + (11 * ceil32(return_data.size)) + mem[_15633 + (11 * ceil32(return_data.size)) + 96 len 4], ext_call.return_data[0 len 28] + 96]
                        require _19670 + (32 * _19706) + 32 <= return_data.size
                        t = _15633 + (12 * ceil32(return_data.size)) + 128
                        s = _15633 + (11 * ceil32(return_data.size)) + _19670 + 128
                        while s < _15633 + (11 * ceil32(return_data.size)) + _19670 + (32 * _19706) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22857 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_22857]
                else:
                    if 1 >= mem[_15633]:
                        revert with 0, 50
                    mem[_15633 + 64] = address(_15606)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[_15633 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[_15633 + 100] = eth.balance(this.address) / 2
                    mem[_15633 + 132] = 128
                    mem[_15633 + 228] = mem[_15633]
                    s = 0
                    t = _15633 + 32
                    u = _15633 + 260
                    while s < mem[_15633]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_15633 + 164] = this.address
                    mem[_15633 + 196] = block.timestamp + 60
                    require ext_code.size(address(_15604))
                    call address(_15604).mem[mem[64] len 4] with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _15633 + (32 * mem[_15633]) + -mem[64] + 256]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19631 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _19671 = mem[_19631]
                    require mem[_19631] <= test266151307()
                    require _19631 + mem[_19631] + 31 < _19631 + return_data.size
                    _19707 = mem[_19631 + mem[_19631]]
                    if mem[_19631 + mem[_19631]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_19631 + mem[_19631]]) + 1 < 0 or _19631 + ceil32(return_data.size) + ceil32(32 * mem[_19631 + mem[_19631]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _19631 + ceil32(return_data.size) + ceil32(32 * mem[_19631 + mem[_19631]]) + 1
                    mem[_19631 + ceil32(return_data.size)] = _19707
                    require _19671 + (32 * _19707) + 32 <= return_data.size
                    t = _19631 + ceil32(return_data.size) + 32
                    s = _19631 + _19671 + 32
                    while s < _19631 + _19671 + (32 * _19707) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_15605))
                    staticcall address(_15605).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22858 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22898 = mem[_22858]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_15606))
                    staticcall address(_15606).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22974 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22998 = mem[_22974]
                    if not _22898:
                        revert with 0, 'Desired value is zero'
                    if not mem[_22974]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_15604)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_15605))
                    call address(_15605).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_15604), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23178 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23178] == bool(mem[_23178])
                    mem[mem[64] + 4] = address(_15604)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_15606))
                    call address(_15606).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_15604), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23278 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23278] == bool(mem[_23278])
                    if _22898 and 5 > -1 / _22898:
                        revert with 0, 17
                    if 5 * _22898 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _22898 < 5000 * _22898 / 10^6:
                        revert with 0, 17
                    if _22998 and 5 > -1 / _22998:
                        revert with 0, 17
                    if 5 * _22998 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _22998 < 5000 * _22998 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _22898
                    mem[mem[64] + 100] = _22998
                    mem[mem[64] + 132] = _22898 - (5000 * _22898 / 10^6)
                    mem[mem[64] + 164] = _22998 - (5000 * _22998 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_15604))
                    call address(_15604).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_15605), address(_15606), _22898, _22998, _22898 - (5000 * _22898 / 10^6), _22998 - (5000 * _22998 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _23712 = mem[_1542 + 160]
                    _23713 = mem[_1542 + 64]
                    _23714 = mem[_1542 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_23714))
                    staticcall address(_23714).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23786 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _23810 = mem[_23786]
                    if _23713 >= 999999:
                        mem[mem[64] + 4] = mem[_23786]
                        require ext_code.size(address(_23712))
                        call address(_23712).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _23810
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _23810
                        emit Earn(_23810);
                        _23975 = mem[_1542 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_23975))
                        staticcall address(_23975).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24089 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1542 + 96] = mem[_24089]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24323 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24367 = mem[_24323]
                        _24427 = mem[_1542]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _24512 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _24367
                        mem[mem[64] + 36] = 128
                        _24562 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_24512 + 100] = block.timestamp + 60
                        require ext_code.size(address(_24427))
                        call address(_24427).mem[mem[64] len 4] with:
                           value _24367 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _24512 + (32 * _24562) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25644 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25700 = mem[_25644]
                        require mem[_25644] <= test266151307()
                        require _25644 + mem[_25644] + 31 < _25644 + return_data.size
                        _25748 = mem[_25644 + mem[_25644]]
                        if mem[_25644 + mem[_25644]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25644 + mem[_25644]]) + 1 < 0 or _25644 + ceil32(return_data.size) + ceil32(32 * mem[_25644 + mem[_25644]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _25644 + ceil32(return_data.size) + ceil32(32 * mem[_25644 + mem[_25644]]) + 1
                        mem[_25644 + ceil32(return_data.size)] = _25748
                        require _25700 + (32 * _25748) + 32 <= return_data.size
                        t = _25644 + ceil32(return_data.size) + 32
                        s = _25644 + _25700 + 32
                        while s < _25644 + _25700 + (32 * _25748) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27238 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_27238]
                    else:
                        mem[mem[64] + 4] = _23713
                        mem[mem[64] + 36] = _23810
                        require ext_code.size(address(_23712))
                        call address(_23712).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _23713, _23810
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _23810
                        emit Earn(_23810);
                        _23976 = mem[_1542 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_23976))
                        staticcall address(_23976).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24090 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1542 + 96] = mem[_24090]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24324 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24368 = mem[_24324]
                        _24428 = mem[_1542]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _24513 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _24368
                        mem[mem[64] + 36] = 128
                        _24563 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_24513 + 100] = block.timestamp + 60
                        require ext_code.size(address(_24428))
                        call address(_24428).mem[mem[64] len 4] with:
                           value _24368 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _24513 + (32 * _24563) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25645 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25701 = mem[_25645]
                        require mem[_25645] <= test266151307()
                        require _25645 + mem[_25645] + 31 < _25645 + return_data.size
                        _25749 = mem[_25645 + mem[_25645]]
                        if mem[_25645 + mem[_25645]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25645 + mem[_25645]]) + 1 < 0 or _25645 + ceil32(return_data.size) + ceil32(32 * mem[_25645 + mem[_25645]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _25645 + ceil32(return_data.size) + ceil32(32 * mem[_25645 + mem[_25645]]) + 1
                        mem[_25645 + ceil32(return_data.size)] = _25749
                        require _25701 + (32 * _25749) + 32 <= return_data.size
                        t = _25645 + ceil32(return_data.size) + 32
                        s = _25645 + _25701 + 32
                        while s < _25645 + _25701 + (32 * _25749) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27239 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_27239]
            else:
                if 1 >= mem[_15633]:
                    revert with 0, 50
                mem[_15633 + 64] = address(_15605)
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[_15633 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[_15633 + 100] = eth.balance(this.address) / 2
                mem[_15633 + 132] = 128
                mem[_15633 + 228] = mem[_15633]
                s = 0
                t = _15633 + 32
                u = _15633 + 260
                while s < mem[_15633]:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_15633 + 164] = this.address
                mem[_15633 + 196] = block.timestamp + 60
                require ext_code.size(address(_15604))
                call address(_15604).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _15633 + (32 * mem[_15633]) + -mem[64] + 256]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19632 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _19672 = mem[_19632]
                require mem[_19632] <= test266151307()
                require _19632 + mem[_19632] + 31 < _19632 + return_data.size
                _19708 = mem[_19632 + mem[_19632]]
                if mem[_19632 + mem[_19632]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_19632 + mem[_19632]]) + 1 < 0 or _19632 + ceil32(return_data.size) + ceil32(32 * mem[_19632 + mem[_19632]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _19632 + ceil32(return_data.size) + ceil32(32 * mem[_19632 + mem[_19632]]) + 1
                mem[_19632 + ceil32(return_data.size)] = _19708
                require _19672 + (32 * _19708) + 32 <= return_data.size
                t = _19632 + ceil32(return_data.size) + 32
                s = _19632 + _19672 + 32
                while s < _19632 + _19672 + (32 * _19708) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if stor21 == address(_15606):
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_15605))
                    staticcall address(_15605).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22878 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22918 = mem[_22878]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_15606))
                    staticcall address(_15606).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22987 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _23019 = mem[_22987]
                    if not _22918:
                        revert with 0, 'Desired value is zero'
                    if not mem[_22987]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_15604)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_15605))
                    call address(_15605).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_15604), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23195 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23195] == bool(mem[_23195])
                    mem[mem[64] + 4] = address(_15604)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_15606))
                    call address(_15606).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_15604), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23294 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_23294] == bool(mem[_23294])
                    if _22918 and 5 > -1 / _22918:
                        revert with 0, 17
                    if 5 * _22918 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _22918 < 5000 * _22918 / 10^6:
                        revert with 0, 17
                    if _23019 and 5 > -1 / _23019:
                        revert with 0, 17
                    if 5 * _23019 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _23019 < 5000 * _23019 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _22918
                    mem[mem[64] + 100] = _23019
                    mem[mem[64] + 132] = _22918 - (5000 * _22918 / 10^6)
                    mem[mem[64] + 164] = _23019 - (5000 * _23019 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_15604))
                    call address(_15604).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_15605), address(_15606), _22918, _23019, _22918 - (5000 * _22918 / 10^6), _23019 - (5000 * _23019 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _23750 = mem[_1542 + 160]
                    _23751 = mem[_1542 + 64]
                    _23752 = mem[_1542 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_23752))
                    staticcall address(_23752).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _23798 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _23822 = mem[_23798]
                    if _23751 >= 999999:
                        mem[mem[64] + 4] = mem[_23798]
                        require ext_code.size(address(_23750))
                        call address(_23750).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _23822
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _23822
                        emit Earn(_23822);
                        _24027 = mem[_1542 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_24027))
                        staticcall address(_24027).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24109 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1542 + 96] = mem[_24109]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24348 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24402 = mem[_24348]
                        _24458 = mem[_1542]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _24535 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _24402
                        mem[mem[64] + 36] = 128
                        _24583 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_24535 + 100] = block.timestamp + 60
                        require ext_code.size(address(_24458))
                        call address(_24458).mem[mem[64] len 4] with:
                           value _24402 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _24535 + (32 * _24583) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25646 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25702 = mem[_25646]
                        require mem[_25646] <= test266151307()
                        require _25646 + mem[_25646] + 31 < _25646 + return_data.size
                        _25750 = mem[_25646 + mem[_25646]]
                        if mem[_25646 + mem[_25646]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25646 + mem[_25646]]) + 1 < 0 or _25646 + ceil32(return_data.size) + ceil32(32 * mem[_25646 + mem[_25646]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _25646 + ceil32(return_data.size) + ceil32(32 * mem[_25646 + mem[_25646]]) + 1
                        mem[_25646 + ceil32(return_data.size)] = _25750
                        require _25702 + (32 * _25750) + 32 <= return_data.size
                        t = _25646 + ceil32(return_data.size) + 32
                        s = _25646 + _25702 + 32
                        while s < _25646 + _25702 + (32 * _25750) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27240 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_27240]
                    else:
                        mem[mem[64] + 4] = _23751
                        mem[mem[64] + 36] = _23822
                        require ext_code.size(address(_23750))
                        call address(_23750).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _23751, _23822
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _23822
                        emit Earn(_23822);
                        _24028 = mem[_1542 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_24028))
                        staticcall address(_24028).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24110 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1542 + 96] = mem[_24110]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _24349 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _24403 = mem[_24349]
                        _24459 = mem[_1542]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _24536 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _24403
                        mem[mem[64] + 36] = 128
                        _24584 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < _24584:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_24536 + 68] = this.address
                        mem[_24536 + 100] = block.timestamp + 60
                        require ext_code.size(address(_24459))
                        call address(_24459).mem[mem[64] len 4] with:
                           value _24403 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _24536 + (32 * _24584) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25647 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25703 = mem[_25647]
                        require mem[_25647] <= test266151307()
                        require _25647 + mem[_25647] + 31 < _25647 + return_data.size
                        _25751 = mem[_25647 + mem[_25647]]
                        if mem[_25647 + mem[_25647]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25647 + mem[_25647]]) + 1 < 0 or _25647 + ceil32(return_data.size) + ceil32(32 * mem[_25647 + mem[_25647]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _25647 + ceil32(return_data.size) + ceil32(32 * mem[_25647 + mem[_25647]]) + 1
                        mem[_25647 + ceil32(return_data.size)] = _25751
                        require _25703 + (32 * _25751) + 32 <= return_data.size
                        t = _25647 + ceil32(return_data.size) + 32
                        s = _25647 + _25703 + 32
                        while s < _25647 + _25703 + (32 * _25751) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27241 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_27241]
                else:
                    if 1 >= mem[_15633]:
                        revert with 0, 50
                    mem[_15633 + 64] = address(_15606)
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = eth.balance(this.address) / 2
                    mem[mem[64] + 36] = 128
                    _22988 = mem[_15633]
                    mem[mem[64] + 132] = mem[_15633]
                    s = 0
                    t = _15633 + 32
                    u = mem[64] + 164
                    while s < _22988:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 68] = this.address
                    mem[mem[64] + 100] = block.timestamp + 60
                    require ext_code.size(address(_15604))
                    call address(_15604).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                       value eth.balance(this.address) / 2 wei
                         gas gas_remaining wei
                        args Mask(255, 1, eth.balance(this.address)), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _22988) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _25648 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _25704 = mem[_25648]
                    require mem[_25648] <= test266151307()
                    require _25648 + mem[_25648] + 31 < _25648 + return_data.size
                    _25752 = mem[_25648 + mem[_25648]]
                    if mem[_25648 + mem[_25648]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_25648 + mem[_25648]]) + 1 < 0 or _25648 + ceil32(return_data.size) + ceil32(32 * mem[_25648 + mem[_25648]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _25648 + ceil32(return_data.size) + ceil32(32 * mem[_25648 + mem[_25648]]) + 1
                    mem[_25648 + ceil32(return_data.size)] = _25752
                    require _25704 + (32 * _25752) + 32 <= return_data.size
                    t = _25648 + ceil32(return_data.size) + 32
                    s = _25648 + _25704 + 32
                    while s < _25648 + _25704 + (32 * _25752) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_15605))
                    staticcall address(_15605).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27242 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27288 = mem[_27242]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_15606))
                    staticcall address(_15606).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27332 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27340 = mem[_27332]
                    if not _27288:
                        revert with 0, 'Desired value is zero'
                    if not mem[_27332]:
                        revert with 0, 'Desired value is zero'
                    mem[mem[64] + 4] = address(_15604)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_15605))
                    call address(_15605).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_15604), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27414 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_27414] == bool(mem[_27414])
                    mem[mem[64] + 4] = address(_15604)
                    mem[mem[64] + 36] = -1
                    require ext_code.size(address(_15606))
                    call address(_15606).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_15604), -1
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27446 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_27446] == bool(mem[_27446])
                    if _27288 and 5 > -1 / _27288:
                        revert with 0, 17
                    if 5 * _27288 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _27288 < 5000 * _27288 / 10^6:
                        revert with 0, 17
                    if _27340 and 5 > -1 / _27340:
                        revert with 0, 17
                    if 5 * _27340 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if _27340 < 5000 * _27340 / 10^6:
                        revert with 0, 17
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64] + 68] = _27288
                    mem[mem[64] + 100] = _27340
                    mem[mem[64] + 132] = _27288 - (5000 * _27288 / 10^6)
                    mem[mem[64] + 164] = _27340 - (5000 * _27340 / 10^6)
                    mem[mem[64] + 196] = this.address
                    mem[mem[64] + 228] = block.timestamp + 60
                    require ext_code.size(address(_15604))
                    call address(_15604).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                         gas gas_remaining wei
                        args address(_15605), address(_15606), _27288, _27340, _27288 - (5000 * _27288 / 10^6), _27340 - (5000 * _27340 / 10^6), address(this.address), block.timestamp + 60
                    mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 96
                    _27604 = mem[_1542 + 160]
                    _27605 = mem[_1542 + 64]
                    _27606 = mem[_1542 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_27606))
                    staticcall address(_27606).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _27640 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _27650 = mem[_27640]
                    if _27605 >= 999999:
                        mem[mem[64] + 4] = mem[_27640]
                        require ext_code.size(address(_27604))
                        call address(_27604).deposit(uint256 arg1) with:
                             gas gas_remaining wei
                            args _27650
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _27650
                        emit Earn(_27650);
                        _27735 = mem[_1542 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27735))
                        staticcall address(_27735).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27789 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1542 + 96] = mem[_27789]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27895 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27911 = mem[_27895]
                        _27927 = mem[_1542]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _27947 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _27911
                        mem[mem[64] + 36] = 128
                        _27965 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_27947 + 100] = block.timestamp + 60
                        require ext_code.size(address(_27927))
                        call address(_27927).mem[mem[64] len 4] with:
                           value _27911 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _27947 + (32 * _27965) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28259 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28275 = mem[_28259]
                        require mem[_28259] <= test266151307()
                        require _28259 + mem[_28259] + 31 < _28259 + return_data.size
                        _28291 = mem[_28259 + mem[_28259]]
                        if mem[_28259 + mem[_28259]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28259 + mem[_28259]]) + 1 < 0 or _28259 + ceil32(return_data.size) + ceil32(32 * mem[_28259 + mem[_28259]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28259 + ceil32(return_data.size) + ceil32(32 * mem[_28259 + mem[_28259]]) + 1
                        mem[_28259 + ceil32(return_data.size)] = _28291
                        require _28275 + (32 * _28291) + 32 <= return_data.size
                        t = _28259 + ceil32(return_data.size) + 32
                        s = _28259 + _28275 + 32
                        while s < _28259 + _28275 + (32 * _28291) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28643 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_28643]
                    else:
                        mem[mem[64] + 4] = _27605
                        mem[mem[64] + 36] = _27650
                        require ext_code.size(address(_27604))
                        call address(_27604).deposit(uint256 arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args _27605, _27650
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[mem[64]] = _27650
                        emit Earn(_27650);
                        _27736 = mem[_1542 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_27736))
                        staticcall address(_27736).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27790 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        mem[_1542 + 96] = mem[_27790]
                        if not mem[96]:
                            revert with 0, 50
                        mem[128] = stor21
                        if 1 >= mem[96]:
                            revert with 0, 50
                        mem[160] = USDTAddress
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27896 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27912 = mem[_27896]
                        _27928 = mem[_1542]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _27948 = mem[64]
                        mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _27912
                        mem[mem[64] + 36] = 128
                        _27966 = mem[96]
                        mem[mem[64] + 132] = mem[96]
                        s = 0
                        t = 128
                        u = mem[64] + 164
                        while s < mem[96]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 68] = this.address
                        mem[_27948 + 100] = block.timestamp + 60
                        require ext_code.size(address(_27928))
                        call address(_27928).mem[mem[64] len 4] with:
                           value _27912 wei
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _27948 + (32 * _27966) + -mem[64] + 160]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28260 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28276 = mem[_28260]
                        require mem[_28260] <= test266151307()
                        require _28260 + mem[_28260] + 31 < _28260 + return_data.size
                        _28292 = mem[_28260 + mem[_28260]]
                        if mem[_28260 + mem[_28260]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28260 + mem[_28260]]) + 1 < 0 or _28260 + ceil32(return_data.size) + ceil32(32 * mem[_28260 + mem[_28260]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28260 + ceil32(return_data.size) + ceil32(32 * mem[_28260 + mem[_28260]]) + 1
                        mem[_28260 + ceil32(return_data.size)] = _28292
                        require _28276 + (32 * _28292) + 32 <= return_data.size
                        t = _28260 + ceil32(return_data.size) + 32
                        s = _28260 + _28276 + 32
                        while s < _28260 + _28276 + (32 * _28292) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(USDTAddress)
                        staticcall USDTAddress.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28644 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        sub_5e8f09aa = mem[_28644]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _1542
            s = _7326 - (5000 * _7326 / 10^6)
            s = stor9[idx].field_0
            continue 
        _1547 = mem[64]
        mem[64] = mem[64] + 256
        mem[_1547] = 0
        mem[_1547 + 32] = 0
        mem[_1547 + 64] = 0
        mem[_1547 + 96] = 0
        mem[_1547 + 128] = 0
        mem[_1547 + 160] = 0
        mem[_1547 + 192] = 0
        mem[_1547 + 224] = 0
        _1556 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        mem[_1556 + 32 len 64] = call.data[calldata.size len 64]
        idx = 0
        s = 96
        t = 0
        u = 0
        v = 0
        v = _1547
        v = 0
        v = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _3770 = mem[64]
            mem[64] = mem[64] + 256
            mem[_3770] = strategyInfo[stor9[idx].field_0].field_0
            mem[_3770 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_3770 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_3770 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_3770 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_3770 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_3770 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_3770 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3806 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _3821 = mem[_3806]
                if not mem[_3806]:
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = s
                    t = t
                    u = u
                    v = mem[_3806]
                    v = _3770
                    v = stor9[idx].field_0
                    v = v
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
                staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3880 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _3906 = mem[_3880]
                require mem[_3880] == mem[_3880 + 18 len 14]
                _3916 = mem[_3880 + 32]
                require mem[_3880 + 32] == mem[_3880 + 50 len 14]
                require mem[_3880 + 64] == mem[_3880 + 92 len 4]
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
                staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3946 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3962 = mem[_3946]
                if _3821 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not mem[_3946]:
                    revert with 0, 18
                if 10^12 * _3821 / mem[_3946] and Mask(112, 0, _3906) > -1 / 10^12 * _3821 / mem[_3946]:
                    revert with 0, 17
                if 10^12 * _3821 / mem[_3946] and Mask(112, 0, _3916) > -1 / 10^12 * _3821 / mem[_3946]:
                    revert with 0, 17
                if 1 >= mem[_1556]:
                    revert with 0, 50
                mem[_1556 + 64] = stor21
                if 0 >= mem[_1556]:
                    revert with 0, 50
                if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                    mem[_1556 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _3821 / _3962 * Mask(112, 0, _3916) / 10^12
                    mem[mem[64] + 36] = 64
                    _4212 = mem[_1556]
                    mem[mem[64] + 68] = mem[_1556]
                    s = 0
                    t = _1556 + 32
                    u = mem[64] + 100
                    while s < _4212:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args 10^12 * _3821 / _3962 * Mask(112, 0, _3916) / 10^12, 64, mem[mem[64] + 68 len (32 * _4212) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7374 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7398 = mem[_7374]
                    require mem[_7374] <= test266151307()
                    require _7374 + mem[_7374] + 31 < _7374 + return_data.size
                    _7420 = mem[_7374 + mem[_7374]]
                    if mem[_7374 + mem[_7374]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7374 + mem[_7374]]) + 1 < 0 or _7374 + ceil32(return_data.size) + ceil32(32 * mem[_7374 + mem[_7374]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _7374 + ceil32(return_data.size) + ceil32(32 * mem[_7374 + mem[_7374]]) + 1
                    mem[_7374 + ceil32(return_data.size)] = _7420
                    require _7398 + (32 * _7420) + 32 <= return_data.size
                    t = _7374 + ceil32(return_data.size) + 32
                    s = _7374 + _7398 + 32
                    while s < _7374 + _7398 + (32 * _7420) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7420:
                        revert with 0, 50
                    _11426 = mem[_7374 + ceil32(return_data.size) + 64]
                    if 10^12 * _3821 / _3962 * Mask(112, 0, _3906) / 10^12 > !mem[_7374 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    mem[_3770 + 128] = (10^12 * _3821 / _3962 * Mask(112, 0, _3906) / 10^12) + mem[_7374 + ceil32(return_data.size) + 64]
                    if v > !((10^12 * _3821 / _3962 * Mask(112, 0, _3906) / 10^12) + _11426):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _7374 + ceil32(return_data.size)
                    t = 10^12 * _3821 / _3962 * Mask(112, 0, _3916) / 10^12
                    u = 10^12 * _3821 / _3962 * Mask(112, 0, _3906) / 10^12
                    v = _3821
                    v = _3770
                    v = stor9[idx].field_0
                    v = v + (10^12 * _3821 / _3962 * Mask(112, 0, _3906) / 10^12) + _11426
                    continue 
                mem[_1556 + 32] = strategyInfo[stor9[idx].field_0].field_1536
                if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = 10^12 * _3821 / _3962 * Mask(112, 0, _3906) / 10^12
                    mem[mem[64] + 36] = 64
                    _4218 = mem[_1556]
                    mem[mem[64] + 68] = mem[_1556]
                    s = 0
                    t = _1556 + 32
                    u = mem[64] + 100
                    while s < _4218:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                            gas gas_remaining wei
                           args 10^12 * _3821 / _3962 * Mask(112, 0, _3906) / 10^12, 64, mem[mem[64] + 68 len (32 * _4218) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _7373 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _7397 = mem[_7373]
                    require mem[_7373] <= test266151307()
                    require _7373 + mem[_7373] + 31 < _7373 + return_data.size
                    _7419 = mem[_7373 + mem[_7373]]
                    if mem[_7373 + mem[_7373]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_7373 + mem[_7373]]) + 1 < 0 or _7373 + ceil32(return_data.size) + ceil32(32 * mem[_7373 + mem[_7373]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _7373 + ceil32(return_data.size) + ceil32(32 * mem[_7373 + mem[_7373]]) + 1
                    mem[_7373 + ceil32(return_data.size)] = _7419
                    require _7397 + (32 * _7419) + 32 <= return_data.size
                    t = _7373 + ceil32(return_data.size) + 32
                    s = _7373 + _7397 + 32
                    while s < _7373 + _7397 + (32 * _7419) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _7419:
                        revert with 0, 50
                    _11425 = mem[_7373 + ceil32(return_data.size) + 64]
                    if 10^12 * _3821 / _3962 * Mask(112, 0, _3916) / 10^12 > !mem[_7373 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    mem[_3770 + 128] = (10^12 * _3821 / _3962 * Mask(112, 0, _3916) / 10^12) + mem[_7373 + ceil32(return_data.size) + 64]
                    if v > !((10^12 * _3821 / _3962 * Mask(112, 0, _3916) / 10^12) + _11425):
                        revert with 0, 17
                    if idx == -1:
                        revert with 0, 17
                    idx = idx + 1
                    s = _7373 + ceil32(return_data.size)
                    t = 10^12 * _3821 / _3962 * Mask(112, 0, _3916) / 10^12
                    u = 10^12 * _3821 / _3962 * Mask(112, 0, _3906) / 10^12
                    v = _3821
                    v = _3770
                    v = stor9[idx].field_0
                    v = v + (10^12 * _3821 / _3962 * Mask(112, 0, _3916) / 10^12) + _11425
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4223 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4238 = mem[_4223]
                mem[mem[64] + 4] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4331 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4361 = mem[_4331]
                if mem[_4331] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _4238:
                    revert with 0, 18
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_0
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4528 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4568 = mem[_4528]
                if 10^12 * _4361 / _4238 and mem[_4528] > -1 / 10^12 * _4361 / _4238:
                    revert with 0, 17
                _4708 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _4361 / _4238 * _4568 / 10^12
                mem[mem[64] + 36] = 64
                _4746 = mem[_1556]
                mem[mem[64] + 68] = mem[_1556]
                t = 0
                u = _1556 + 32
                w = mem[64] + 100
                while t < _4746:
                    mem[w] = mem[u + 12 len 20]
                    t = t + 1
                    u = u + 32
                    w = w + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _4708 + (32 * _4746) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7372 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7396 = mem[_7372]
                require mem[_7372] <= test266151307()
                require _7372 + mem[_7372] + 31 < _7372 + return_data.size
                _7418 = mem[_7372 + mem[_7372]]
                if mem[_7372 + mem[_7372]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_7372 + mem[_7372]]) + 1 < 0 or _7372 + ceil32(return_data.size) + ceil32(32 * mem[_7372 + mem[_7372]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _7372 + ceil32(return_data.size) + ceil32(32 * mem[_7372 + mem[_7372]]) + 1
                mem[_7372 + ceil32(return_data.size)] = _7418
                require _7396 + (32 * _7418) + 32 <= return_data.size
                u = _7372 + ceil32(return_data.size) + 32
                t = _7372 + _7396 + 32
                while t < _7372 + _7396 + (32 * _7418) + 32:
                    mem[u] = mem[t]
                    u = u + 32
                    t = t + 32
                    continue 
                if 1 >= _7418:
                    revert with 0, 50
                _11424 = mem[_7372 + ceil32(return_data.size) + 64]
                mem[_3770 + 128] = mem[_7372 + ceil32(return_data.size) + 64]
                if v > !_11424:
                    revert with 0, 17
                if 0 >= mem[_1556]:
                    revert with 0, 50
                mem[_1556 + 32] = mem[_3770 + 236 len 20]
                _11473 = mem[_3770 + 224]
                _11474 = mem[_3770]
                require ext_code.size(mem[_3770 + 236 len 20])
                staticcall mem[_3770 + 236 len 20].0x18160ddd with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11508 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11518 = mem[_11508]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11473))
                staticcall address(_11473).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11546 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11586 = mem[_11546]
                if mem[_11546] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                    revert with 0, 17
                if not _11518:
                    revert with 0, 18
                mem[mem[64] + 4] = address(_11474)
                require ext_code.size(stor21)
                staticcall stor21.0x70a08231 with:
                        gas gas_remaining wei
                       args address(_11474)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _11702 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _11752 = mem[_11702]
                if 10^12 * _11586 / _11518 and mem[_11702] > -1 / 10^12 * _11586 / _11518:
                    revert with 0, 17
                _11874 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _11586 / _11518 * _11752 / 10^12
                mem[mem[64] + 36] = 64
                _11940 = mem[_1556]
                mem[mem[64] + 68] = mem[_1556]
                t = 0
                u = _1556 + 32
                w = mem[64] + 100
                while t < _11940:
                    mem[w] = mem[u + 12 len 20]
                    t = t + 1
                    u = u + 32
                    w = w + 32
                    continue 
                require ext_code.size(address(_11474))
                staticcall address(_11474).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _11874 + (32 * _11940) + -mem[64] + 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15656 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _15690 = mem[_15656]
                require mem[_15656] <= test266151307()
                require _15656 + mem[_15656] + 31 < _15656 + return_data.size
                _15716 = mem[_15656 + mem[_15656]]
                if mem[_15656 + mem[_15656]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_15656 + mem[_15656]]) + 1 < 0 or _15656 + ceil32(return_data.size) + ceil32(32 * mem[_15656 + mem[_15656]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _15656 + ceil32(return_data.size) + ceil32(32 * mem[_15656 + mem[_15656]]) + 1
                mem[_15656 + ceil32(return_data.size)] = _15716
                require _15690 + (32 * _15716) + 32 <= return_data.size
                u = _15656 + ceil32(return_data.size) + 32
                t = _15656 + _15690 + 32
                while t < _15656 + _15690 + (32 * _15716) + 32:
                    mem[u] = mem[t]
                    u = u + 32
                    t = t + 32
                    continue 
                if 1 >= _15716:
                    revert with 0, 50
                if mem[_3770 + 128] > !mem[_15656 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3770 + 128] = mem[_3770 + 128] + mem[_15656 + ceil32(return_data.size) + 64]
                if v + _11424 > !mem[_3770 + 128]:
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = 10^12 * _3821 / _3962 * Mask(112, 0, _3916) / 10^12
                u = 10^12 * _3821 / _3962 * Mask(112, 0, _3906) / 10^12
                v = _3821
                v = _3770
                v = stor9[idx].field_0
                v = v + _11424 + mem[_3770 + 128]
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3805 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _3820 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_3820] = mem[_3805]
            mem[_3820 + 32] = mem[_3805 + 32]
            mem[_3820 + 64] = mem[_3805 + 64]
            require return_data.size - 96 >= 96
            _3844 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_3844] = mem[_3805 + 96]
            mem[_3844 + 32] = mem[_3805 + 128]
            mem[_3844 + 64] = mem[_3805 + 160]
            mem[_3820 + 96] = _3844
            mem[_3820 + 128] = mem[_3805 + 192]
            require return_data.size - 224 >= 96
            _3870 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_3870] = mem[_3805 + 224]
            mem[_3870 + 32] = mem[_3805 + 256]
            mem[_3870 + 64] = mem[_3805 + 288]
            mem[_3820 + 160] = _3870
            _3894 = mem[_3820 + 64]
            if not mem[_3820 + 64]:
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = s
                t = t
                u = u
                v = mem[_3820 + 64]
                v = _3770
                v = stor9[idx].field_0
                v = v
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3926 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _3930 = mem[_3926]
            require mem[_3926] == mem[_3926 + 18 len 14]
            _3956 = mem[_3926 + 32]
            require mem[_3926 + 32] == mem[_3926 + 50 len 14]
            require mem[_3926 + 64] == mem[_3926 + 92 len 4]
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4036 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4062 = mem[_4036]
            if _3894 > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not mem[_4036]:
                revert with 0, 18
            if 10^12 * _3894 / mem[_4036] and Mask(112, 0, _3930) > -1 / 10^12 * _3894 / mem[_4036]:
                revert with 0, 17
            if 10^12 * _3894 / mem[_4036] and Mask(112, 0, _3956) > -1 / 10^12 * _3894 / mem[_4036]:
                revert with 0, 17
            if 1 >= mem[_1556]:
                revert with 0, 50
            mem[_1556 + 64] = stor21
            if 0 >= mem[_1556]:
                revert with 0, 50
            if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                mem[_1556 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3894 / _4062 * Mask(112, 0, _3956) / 10^12
                mem[mem[64] + 36] = 64
                _4349 = mem[_1556]
                mem[mem[64] + 68] = mem[_1556]
                s = 0
                t = _1556 + 32
                u = mem[64] + 100
                while s < _4349:
                    mem[u] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _3894 / _4062 * Mask(112, 0, _3956) / 10^12, 64, mem[mem[64] + 68 len (32 * _4349) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7371 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7395 = mem[_7371]
                require mem[_7371] <= test266151307()
                require _7371 + mem[_7371] + 31 < _7371 + return_data.size
                _7417 = mem[_7371 + mem[_7371]]
                if mem[_7371 + mem[_7371]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_7371 + mem[_7371]]) + 1 < 0 or _7371 + ceil32(return_data.size) + ceil32(32 * mem[_7371 + mem[_7371]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _7371 + ceil32(return_data.size) + ceil32(32 * mem[_7371 + mem[_7371]]) + 1
                mem[_7371 + ceil32(return_data.size)] = _7417
                require _7395 + (32 * _7417) + 32 <= return_data.size
                t = _7371 + ceil32(return_data.size) + 32
                s = _7371 + _7395 + 32
                while s < _7371 + _7395 + (32 * _7417) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7417:
                    revert with 0, 50
                _11423 = mem[_7371 + ceil32(return_data.size) + 64]
                if 10^12 * _3894 / _4062 * Mask(112, 0, _3930) / 10^12 > !mem[_7371 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3770 + 128] = (10^12 * _3894 / _4062 * Mask(112, 0, _3930) / 10^12) + mem[_7371 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _3894 / _4062 * Mask(112, 0, _3930) / 10^12) + _11423):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _7371 + ceil32(return_data.size)
                t = 10^12 * _3894 / _4062 * Mask(112, 0, _3956) / 10^12
                u = 10^12 * _3894 / _4062 * Mask(112, 0, _3930) / 10^12
                v = _3894
                v = _3770
                v = stor9[idx].field_0
                v = v + (10^12 * _3894 / _4062 * Mask(112, 0, _3930) / 10^12) + _11423
                continue 
            mem[_1556 + 32] = strategyInfo[stor9[idx].field_0].field_1536
            if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = 10^12 * _3894 / _4062 * Mask(112, 0, _3930) / 10^12
                mem[mem[64] + 36] = 64
                _4360 = mem[_1556]
                mem[mem[64] + 68] = mem[_1556]
                s = 0
                t = _1556 + 32
                w = mem[64] + 100
                while s < _4360:
                    mem[w] = mem[t + 12 len 20]
                    s = s + 1
                    t = t + 32
                    w = w + 32
                    continue 
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                        gas gas_remaining wei
                       args 10^12 * _3894 / _4062 * Mask(112, 0, _3930) / 10^12, 64, mem[mem[64] + 68 len (32 * _4360) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7370 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _7394 = mem[_7370]
                require mem[_7370] <= test266151307()
                require _7370 + mem[_7370] + 31 < _7370 + return_data.size
                _7416 = mem[_7370 + mem[_7370]]
                if mem[_7370 + mem[_7370]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_7370 + mem[_7370]]) + 1 < 0 or _7370 + ceil32(return_data.size) + ceil32(32 * mem[_7370 + mem[_7370]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _7370 + ceil32(return_data.size) + ceil32(32 * mem[_7370 + mem[_7370]]) + 1
                mem[_7370 + ceil32(return_data.size)] = _7416
                require _7394 + (32 * _7416) + 32 <= return_data.size
                t = _7370 + ceil32(return_data.size) + 32
                s = _7370 + _7394 + 32
                while s < _7370 + _7394 + (32 * _7416) + 32:
                    mem[t] = mem[s]
                    t = t + 32
                    s = s + 32
                    continue 
                if 1 >= _7416:
                    revert with 0, 50
                _11422 = mem[_7370 + ceil32(return_data.size) + 64]
                if 10^12 * _3894 / _4062 * Mask(112, 0, _3956) / 10^12 > !mem[_7370 + ceil32(return_data.size) + 64]:
                    revert with 0, 17
                mem[_3770 + 128] = (10^12 * _3894 / _4062 * Mask(112, 0, _3956) / 10^12) + mem[_7370 + ceil32(return_data.size) + 64]
                if v > !((10^12 * _3894 / _4062 * Mask(112, 0, _3956) / 10^12) + _11422):
                    revert with 0, 17
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _7370 + ceil32(return_data.size)
                t = 10^12 * _3894 / _4062 * Mask(112, 0, _3956) / 10^12
                s = 10^12 * _3894 / _4062 * Mask(112, 0, _3930) / 10^12
                v = _3894
                v = _3770
                v = stor9[idx].field_0
                v = v + (10^12 * _3894 / _4062 * Mask(112, 0, _3956) / 10^12) + _11422
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4378 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4421 = mem[_4378]
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
            staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4465 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4503 = mem[_4465]
            if mem[_4465] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _4421:
                revert with 0, 18
            mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args strategyInfo[stor9[idx].field_0].field_0
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4705 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4745 = mem[_4705]
            if 10^12 * _4503 / _4421 and mem[_4705] > -1 / 10^12 * _4503 / _4421:
                revert with 0, 17
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _4503 / _4421 * _4745 / 10^12
            mem[mem[64] + 36] = 64
            _4871 = mem[_1556]
            mem[mem[64] + 68] = mem[_1556]
            t = 0
            u = _1556 + 32
            w = mem[64] + 100
            while t < _4871:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
            staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                    gas gas_remaining wei
                   args 10^12 * _4503 / _4421 * _4745 / 10^12, 64, mem[mem[64] + 68 len (32 * _4871) + 32]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7369 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _7393 = mem[_7369]
            require mem[_7369] <= test266151307()
            require _7369 + mem[_7369] + 31 < _7369 + return_data.size
            _7415 = mem[_7369 + mem[_7369]]
            if mem[_7369 + mem[_7369]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_7369 + mem[_7369]]) + 1 < 0 or _7369 + ceil32(return_data.size) + ceil32(32 * mem[_7369 + mem[_7369]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _7369 + ceil32(return_data.size) + ceil32(32 * mem[_7369 + mem[_7369]]) + 1
            mem[_7369 + ceil32(return_data.size)] = _7415
            require _7393 + (32 * _7415) + 32 <= return_data.size
            u = _7369 + ceil32(return_data.size) + 32
            t = _7369 + _7393 + 32
            while t < _7369 + _7393 + (32 * _7415) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _7415:
                revert with 0, 50
            _11421 = mem[_7369 + ceil32(return_data.size) + 64]
            mem[_3770 + 128] = mem[_7369 + ceil32(return_data.size) + 64]
            if v > !_11421:
                revert with 0, 17
            if 0 >= mem[_1556]:
                revert with 0, 50
            mem[_1556 + 32] = mem[_3770 + 236 len 20]
            _11471 = mem[_3770 + 224]
            _11472 = mem[_3770]
            require ext_code.size(mem[_3770 + 236 len 20])
            staticcall mem[_3770 + 236 len 20].0x18160ddd with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11507 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11517 = mem[_11507]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_11471))
            staticcall address(_11471).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11545 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11585 = mem[_11545]
            if mem[_11545] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                revert with 0, 17
            if not _11517:
                revert with 0, 18
            mem[mem[64] + 4] = address(_11472)
            require ext_code.size(stor21)
            staticcall stor21.0x70a08231 with:
                    gas gas_remaining wei
                   args address(_11472)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11701 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11751 = mem[_11701]
            if 10^12 * _11585 / _11517 and mem[_11701] > -1 / 10^12 * _11585 / _11517:
                revert with 0, 17
            _11873 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 10^12 * _11585 / _11517 * _11751 / 10^12
            mem[mem[64] + 36] = 64
            _11939 = mem[_1556]
            mem[mem[64] + 68] = mem[_1556]
            t = 0
            u = _1556 + 32
            w = mem[64] + 100
            while t < _11939:
                mem[w] = mem[u + 12 len 20]
                t = t + 1
                u = u + 32
                w = w + 32
                continue 
            require ext_code.size(address(_11472))
            staticcall address(_11472).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _11873 + (32 * _11939) + -mem[64] + 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15655 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _15689 = mem[_15655]
            require mem[_15655] <= test266151307()
            require _15655 + mem[_15655] + 31 < _15655 + return_data.size
            _15715 = mem[_15655 + mem[_15655]]
            if mem[_15655 + mem[_15655]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_15655 + mem[_15655]]) + 1 < 0 or _15655 + ceil32(return_data.size) + ceil32(32 * mem[_15655 + mem[_15655]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _15655 + ceil32(return_data.size) + ceil32(32 * mem[_15655 + mem[_15655]]) + 1
            mem[_15655 + ceil32(return_data.size)] = _15715
            require _15689 + (32 * _15715) + 32 <= return_data.size
            u = _15655 + ceil32(return_data.size) + 32
            t = _15655 + _15689 + 32
            while t < _15655 + _15689 + (32 * _15715) + 32:
                mem[u] = mem[t]
                u = u + 32
                t = t + 32
                continue 
            if 1 >= _15715:
                revert with 0, 50
            if mem[_3770 + 128] > !mem[_15655 + ceil32(return_data.size) + 64]:
                revert with 0, 17
            mem[_3770 + 128] = mem[_3770 + 128] + mem[_15655 + ceil32(return_data.size) + 64]
            if v + _11421 > !mem[_3770 + 128]:
                revert with 0, 17
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = s
            t = 10^12 * _3894 / _4062 * Mask(112, 0, _3956) / 10^12
            u = 10^12 * _3894 / _4062 * Mask(112, 0, _3930) / 10^12
            v = _3894
            v = _3770
            v = stor9[idx].field_0
            v = v + _11421 + mem[_3770 + 128]
            continue 
        emit 0xf9ede3d1 
        require ext_code.size(arg1)
        staticcall arg1.0x83249ef9 with:
                gas gas_remaining wei
        mem[mem[64] len 192] = ext_call.return_data[0 len 192]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _3798 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 192
        _3812 = mem[_3798]
        require mem[_3798] == mem[_3798 + 12 len 20]
        _3838 = mem[_3798 + 32]
        require mem[_3798 + 32] == mem[_3798 + 44 len 20]
        require mem[_3798 + 64] == mem[_3798 + 76 len 20]
        require mem[_3798 + 96] == mem[_3798 + 108 len 20]
        require mem[_3798 + 128] == mem[_3798 + 140 len 20]
        _3925 = mem[64]
        mem[64] = mem[64] + 256
        mem[_3925] = 0
        mem[_3925 + 32] = 0
        mem[_3925 + 64] = 0
        mem[_3925 + 96] = 0
        mem[_3925 + 128] = 0
        mem[_3925 + 160] = 0
        mem[_3925 + 192] = 0
        mem[_3925 + 224] = 0
        idx = 0
        s = _3925
        s = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _7310 = mem[64]
            mem[64] = mem[64] + 256
            mem[_7310] = strategyInfo[stor9[idx].field_0].field_0
            mem[_7310 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_7310 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_7310 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_7310 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_7310 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_7310 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_7310 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 > strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64] + 36] = this.address
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                staticcall strategyInfo[stor9[idx].field_0].field_1280.userInfo(uint256 arg1, address arg2) with:
                        gas gas_remaining wei
                       args strategyInfo[stor9[idx].field_0].field_512, this.address
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _7368 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _7391 = mem[_7368]
                if idx >= stor9.length:
                    revert with 0, 50
                mem[0] = stor9[idx].field_0
                mem[32] = 6
                _7454 = mem[64]
                mem[64] = mem[64] + 256
                mem[_7454] = strategyInfo[stor9[idx].field_0].field_0
                mem[_7454 + 32] = strategyInfo[stor9[idx].field_0].field_256
                mem[_7454 + 64] = strategyInfo[stor9[idx].field_0].field_512
                mem[_7454 + 96] = strategyInfo[stor9[idx].field_0].field_768
                mem[_7454 + 128] = strategyInfo[stor9[idx].field_0].field_1024
                mem[_7454 + 160] = strategyInfo[stor9[idx].field_0].field_1280
                mem[_7454 + 192] = strategyInfo[stor9[idx].field_0].field_1536
                mem[_7454 + 224] = strategyInfo[stor9[idx].field_0].field_1792
                if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                    mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _7391
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                         gas gas_remaining wei
                        args _7391
                else:
                    mem[mem[64]] = 0x441a3e7000000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                    mem[mem[64] + 36] = _7391
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                    call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args strategyInfo[stor9[idx].field_0].field_512, _7391
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                if idx == -1:
                    revert with 0, 17
                idx = idx + 1
                s = _7310
                s = _7391
                continue 
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
            staticcall strategyInfo[stor9[idx].field_0].field_1280.info(address arg1) with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] len 320] = ext_call.return_data[0 len 320]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _7367 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 320
            _7390 = mem[64]
            if mem[64] + 192 > test266151307() or mem[64] + 192 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 192
            mem[_7390] = mem[_7367]
            mem[_7390 + 32] = mem[_7367 + 32]
            mem[_7390 + 64] = mem[_7367 + 64]
            require return_data.size - 96 >= 96
            _7424 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_7424] = mem[_7367 + 96]
            mem[_7424 + 32] = mem[_7367 + 128]
            mem[_7424 + 64] = mem[_7367 + 160]
            mem[_7390 + 96] = _7424
            mem[_7390 + 128] = mem[_7367 + 192]
            require return_data.size - 224 >= 96
            _7476 = mem[64]
            if mem[64] + 96 > test266151307() or mem[64] + 96 < mem[64]:
                revert with 0, 65
            mem[64] = mem[64] + 96
            mem[_7476] = mem[_7367 + 224]
            mem[_7476 + 32] = mem[_7367 + 256]
            mem[_7476 + 64] = mem[_7367 + 288]
            mem[_7390 + 160] = _7476
            _7518 = mem[_7390 + 64]
            if idx >= stor9.length:
                revert with 0, 50
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _7572 = mem[64]
            mem[64] = mem[64] + 256
            mem[_7572] = strategyInfo[stor9[idx].field_0].field_0
            mem[_7572 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_7572 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_7572 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_7572 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_7572 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_7572 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_7572 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            if 999999 <= strategyInfo[stor9[idx].field_0].field_512:
                mem[mem[64]] = 0x2e1a7d4d00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _7518
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.0x2e1a7d4d with:
                     gas gas_remaining wei
                    args _7518
            else:
                mem[mem[64]] = 0x441a3e7000000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_512
                mem[mem[64] + 36] = _7518
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                call strategyInfo[stor9[idx].field_0].field_1280.withdraw(uint256 arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args strategyInfo[stor9[idx].field_0].field_512, _7518
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            s = _7310
            s = _7518
            continue 
        idx = 0
        while idx < stor9.length:
            mem[0] = stor9[idx].field_0
            mem[32] = 6
            _11420 = mem[64]
            mem[64] = mem[64] + 256
            mem[_11420] = strategyInfo[stor9[idx].field_0].field_0
            mem[_11420 + 32] = strategyInfo[stor9[idx].field_0].field_256
            mem[_11420 + 64] = strategyInfo[stor9[idx].field_0].field_512
            mem[_11420 + 96] = strategyInfo[stor9[idx].field_0].field_768
            mem[_11420 + 128] = strategyInfo[stor9[idx].field_0].field_1024
            mem[_11420 + 160] = strategyInfo[stor9[idx].field_0].field_1280
            mem[_11420 + 192] = strategyInfo[stor9[idx].field_0].field_1536
            mem[_11420 + 224] = strategyInfo[stor9[idx].field_0].field_1792
            mem[mem[64] + 4] = this.address
            require ext_code.size(strategyInfo[stor9[idx].field_0].field_256)
            staticcall strategyInfo[stor9[idx].field_0].field_256.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _11448 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _11470 = mem[_11448]
            if mem[_11448]:
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 36] = strategyInfo[stor9[idx].field_0].field_1792
                mem[mem[64] + 68] = _11470
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = 0
                mem[mem[64] + 164] = this.address
                mem[mem[64] + 196] = block.timestamp + 60
                require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                call strategyInfo[stor9[idx].field_0].field_0.removeLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, address arg6, uint256 arg7) with:
                     gas gas_remaining wei
                    args strategyInfo[stor9[idx].field_0].field_1536, strategyInfo[stor9[idx].field_0].field_1792, _11470, 0, 0, address(this.address), block.timestamp + 60
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                _11605 = mem[64]
                mem[mem[64]] = 2
                mem[64] = mem[64] + 96
                mem[_11605 + 32 len 64] = call.data[calldata.size len 64]
                if 1 >= mem[_11605]:
                    revert with 0, 50
                mem[_11605 + 64] = stor21
                if stor21 == strategyInfo[stor9[idx].field_0].field_1536:
                    if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1280)
                        staticcall strategyInfo[stor9[idx].field_0].field_1280.SUSHI() with:
                                gas gas_remaining wei
                        mem[_11605 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                        mem[_11605 + ceil32(return_data.size) + 96] = 2
                        mem[_11605 + ceil32(return_data.size) + 128] = address(ext_call.return_data[0])
                        mem[_11605 + ceil32(return_data.size) + 160] = stor21
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_11605 + ceil32(return_data.size) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_11605 + (2 * ceil32(return_data.size)) + 196] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args mem[_11605 + (2 * ceil32(return_data.size)) + 196 len ceil32(return_data.size) + 32]
                        mem[_11605 + (2 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_11605 + (4 * ceil32(return_data.size)) + 196] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args mem[_11605 + (4 * ceil32(return_data.size)) + 196 len (5 * ceil32(return_data.size)) + 32]
                        mem[_11605 + (4 * ceil32(return_data.size)) + 192] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_11605 + (6 * ceil32(return_data.size)) + 192] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_11605 + (6 * ceil32(return_data.size)) + 196] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_11605 + (6 * ceil32(return_data.size)) + 228] = 64
                        mem[_11605 + (6 * ceil32(return_data.size)) + 260] = 2
                        s = 0
                        t = _11605 + ceil32(return_data.size) + 128
                        u = _11605 + (6 * ceil32(return_data.size)) + 292
                        while s < 2:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, Array(len=2, data=mem[_11605 + (6 * ceil32(return_data.size)) + 292 len 64])
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_11605 + (6 * ceil32(return_data.size)) + 192 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _11605 + (7 * ceil32(return_data.size)) + 192
                        require return_data.size >= 32
                        _15686 = mem[_11605 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_11605 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _11605 + (6 * ceil32(return_data.size)) + mem[_11605 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 223 < _11605 + (6 * ceil32(return_data.size)) + return_data.size + 192
                        _15712 = mem[_11605 + (6 * ceil32(return_data.size)) + mem[_11605 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]
                        if mem[_11605 + (6 * ceil32(return_data.size)) + mem[_11605 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_11605 + (6 * ceil32(return_data.size)) + mem[_11605 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 1 < 0 or _11605 + (7 * ceil32(return_data.size)) + ceil32(32 * mem[_11605 + (6 * ceil32(return_data.size)) + mem[_11605 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 193 > test266151307():
                            revert with 0, 65
                        mem[64] = _11605 + (7 * ceil32(return_data.size)) + ceil32(32 * mem[_11605 + (6 * ceil32(return_data.size)) + mem[_11605 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]) + 193
                        mem[_11605 + (7 * ceil32(return_data.size)) + 192] = mem[_11605 + (6 * ceil32(return_data.size)) + mem[_11605 + (6 * ceil32(return_data.size)) + 192 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 192]
                        require _15686 + (32 * _15712) + 32 <= return_data.size
                        t = _11605 + (7 * ceil32(return_data.size)) + 224
                        s = _11605 + (6 * ceil32(return_data.size)) + _15686 + 224
                        while s < _11605 + (6 * ceil32(return_data.size)) + _15686 + (32 * _15712) + 224:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _15712:
                            revert with 0, 50
                        _19574 = mem[_11605 + (7 * ceil32(return_data.size)) + 256]
                        if mem[_11605 + (7 * ceil32(return_data.size)) + 256] and 5 > -1 / mem[_11605 + (7 * ceil32(return_data.size)) + 256]:
                            revert with 0, 17
                        if 5 * mem[_11605 + (7 * ceil32(return_data.size)) + 256] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if mem[_11605 + (7 * ceil32(return_data.size)) + 256] < 5000 * mem[_11605 + (7 * ceil32(return_data.size)) + 256] / 10^6:
                            revert with 0, 17
                        _19804 = mem[_11420]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(ext_call.return_data[0]))
                        staticcall address(ext_call.return_data[0]).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19926 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _19974 = mem[_19926]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _19974
                        mem[mem[64] + 36] = _19574 - (5000 * _19574 / 10^6)
                        mem[mem[64] + 68] = 160
                        mem[mem[64] + 164] = 2
                        s = 0
                        t = _11605 + ceil32(return_data.size) + 128
                        u = mem[64] + 196
                        while s < 2:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(address(_19804))
                        call address(_19804).swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _19974, _19574 - (5000 * _19574 / 10^6), Array(len=2, data=mem[mem[64] + 196 len 64]), address(this.address), block.timestamp + 60
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22830 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22874 = mem[_22830]
                        require mem[_22830] <= test266151307()
                        require _22830 + mem[_22830] + 31 < _22830 + return_data.size
                        _22914 = mem[_22830 + mem[_22830]]
                        if mem[_22830 + mem[_22830]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_22830 + mem[_22830]]) + 1 < 0 or _22830 + ceil32(return_data.size) + ceil32(32 * mem[_22830 + mem[_22830]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _22830 + ceil32(return_data.size) + ceil32(32 * mem[_22830 + mem[_22830]]) + 1
                        mem[_22830 + ceil32(return_data.size)] = _22914
                        require _22874 + (32 * _22914) + 32 <= return_data.size
                        t = _22830 + ceil32(return_data.size) + 32
                        s = _22830 + _22874 + 32
                        while s < _22830 + _22874 + (32 * _22914) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                    else:
                        if 0 >= mem[_11605]:
                            revert with 0, 50
                        mem[_11605 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                                gas gas_remaining wei
                        mem[_11605 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_11605 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_11605 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_11605 + (2 * ceil32(return_data.size)) + 100] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args strategyInfo[stor9[idx].field_0].field_0
                        mem[_11605 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _11605 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_11605 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_11605 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_11605 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_11605 + (4 * ceil32(return_data.size)) + 164] = mem[_11605]
                        s = 0
                        t = _11605 + 32
                        u = _11605 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_11605]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _11605 + (4 * ceil32(return_data.size)) + (32 * mem[_11605]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _15653 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _15687 = mem[_15653]
                        require mem[_15653] <= test266151307()
                        require _15653 + mem[_15653] + 31 < _15653 + return_data.size
                        _15713 = mem[_15653 + mem[_15653]]
                        if mem[_15653 + mem[_15653]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_15653 + mem[_15653]]) + 1 < 0 or _15653 + ceil32(return_data.size) + ceil32(32 * mem[_15653 + mem[_15653]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _15653 + ceil32(return_data.size) + ceil32(32 * mem[_15653 + mem[_15653]]) + 1
                        mem[_15653 + ceil32(return_data.size)] = _15713
                        require _15687 + (32 * _15713) + 32 <= return_data.size
                        t = _15653 + ceil32(return_data.size) + 32
                        s = _15653 + _15687 + 32
                        while s < _15653 + _15687 + (32 * _15713) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _15713:
                            revert with 0, 50
                        _19575 = mem[_15653 + ceil32(return_data.size) + 64]
                        if mem[_15653 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_15653 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if 5 * mem[_15653 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if mem[_15653 + ceil32(return_data.size) + 64] < 5000 * mem[_15653 + ceil32(return_data.size) + 64] / 10^6:
                            revert with 0, 17
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1792)
                        staticcall strategyInfo[stor9[idx].field_0].field_1792.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19927 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _19975 = mem[_19927]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _19975
                        mem[mem[64] + 36] = _19575 - (5000 * _19575 / 10^6)
                        mem[mem[64] + 68] = 160
                        _20097 = mem[_11605]
                        mem[mem[64] + 164] = mem[_11605]
                        s = 0
                        t = _11605 + 32
                        u = mem[64] + 196
                        while s < _20097:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        call strategyInfo[stor9[idx].field_0].field_0.swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _19975, _19575 - (5000 * _19575 / 10^6), 160, address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _20097) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22831 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _22875 = mem[_22831]
                        require mem[_22831] <= test266151307()
                        require _22831 + mem[_22831] + 31 < _22831 + return_data.size
                        _22915 = mem[_22831 + mem[_22831]]
                        if mem[_22831 + mem[_22831]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_22831 + mem[_22831]]) + 1 < 0 or _22831 + ceil32(return_data.size) + ceil32(32 * mem[_22831 + mem[_22831]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _22831 + ceil32(return_data.size) + ceil32(32 * mem[_22831 + mem[_22831]]) + 1
                        mem[_22831 + ceil32(return_data.size)] = _22915
                        require _22875 + (32 * _22915) + 32 <= return_data.size
                        t = _22831 + ceil32(return_data.size) + 32
                        s = _22831 + _22875 + 32
                        while s < _22831 + _22875 + (32 * _22915) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(mem[_11420 + 172 len 20])
                        staticcall mem[_11420 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25718 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25764 = mem[_25718]
                        require mem[_25718] == mem[_25718 + 12 len 20]
                        _25824 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_25824]:
                            revert with 0, 50
                        mem[_25824 + 32] = address(_25764)
                        if 1 >= mem[_25824]:
                            revert with 0, 50
                        mem[_25824 + 64] = stor21
                        _25876 = mem[_11420]
                        require ext_code.size(address(_25764))
                        staticcall address(_25764).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_25824 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_25824 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_25764))
                        staticcall address(_25764).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_25824 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_25824 + (2 * ceil32(return_data.size)) + 100] = address(_25876)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_25876)
                        mem[_25824 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _25824 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_25824 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_25824 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_25824 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_25824 + (4 * ceil32(return_data.size)) + 164] = mem[_25824]
                        s = 0
                        t = _25824 + 32
                        u = _25824 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_25824]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_25876))
                        staticcall address(_25876).getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, 64, mem[_25824 + (4 * ceil32(return_data.size)) + 164 len (32 * mem[_25824]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_25824 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _25824 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _27276 = mem[_25824 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_25824 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _25824 + (4 * ceil32(return_data.size)) + mem[_25824 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 127 < _25824 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _27302 = mem[_25824 + (4 * ceil32(return_data.size)) + mem[_25824 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        if mem[_25824 + (4 * ceil32(return_data.size)) + mem[_25824 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_25824 + (4 * ceil32(return_data.size)) + mem[_25824 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 1 < 0 or _25824 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_25824 + (4 * ceil32(return_data.size)) + mem[_25824 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _25824 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_25824 + (4 * ceil32(return_data.size)) + mem[_25824 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97
                        mem[_25824 + (6 * ceil32(return_data.size)) + 96] = mem[_25824 + (4 * ceil32(return_data.size)) + mem[_25824 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        require _27276 + (32 * _27302) + 32 <= return_data.size
                        t = _25824 + (6 * ceil32(return_data.size)) + 128
                        s = _25824 + (4 * ceil32(return_data.size)) + _27276 + 128
                        while s < _25824 + (4 * ceil32(return_data.size)) + _27276 + (32 * _27302) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _27302:
                            revert with 0, 50
                        _28238 = mem[_25824 + (6 * ceil32(return_data.size)) + 160]
                        if mem[_25824 + (6 * ceil32(return_data.size)) + 160] and 5 > -1 / mem[_25824 + (6 * ceil32(return_data.size)) + 160]:
                            revert with 0, 17
                        if 5 * mem[_25824 + (6 * ceil32(return_data.size)) + 160] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if mem[_25824 + (6 * ceil32(return_data.size)) + 160] < 5000 * mem[_25824 + (6 * ceil32(return_data.size)) + 160] / 10^6:
                            revert with 0, 17
                        _28331 = mem[_11420]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25764))
                        staticcall address(_25764).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28388 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28410 = mem[_28388]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28410
                        mem[mem[64] + 36] = _28238 - (5000 * _28238 / 10^6)
                        mem[mem[64] + 68] = 160
                        _28430 = mem[_25824]
                        mem[mem[64] + 164] = mem[_25824]
                        s = 0
                        t = _25824 + 32
                        u = mem[64] + 196
                        while s < _28430:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(address(_28331))
                        call address(_28331).swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _28410, _28238 - (5000 * _28238 / 10^6), 160, address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _28430) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28630 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28652 = mem[_28630]
                        require mem[_28630] <= test266151307()
                        require _28630 + mem[_28630] + 31 < _28630 + return_data.size
                        _28674 = mem[_28630 + mem[_28630]]
                        if mem[_28630 + mem[_28630]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28630 + mem[_28630]]) + 1 < 0 or _28630 + ceil32(return_data.size) + ceil32(32 * mem[_28630 + mem[_28630]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28630 + ceil32(return_data.size) + ceil32(32 * mem[_28630 + mem[_28630]]) + 1
                        mem[_28630 + ceil32(return_data.size)] = _28674
                        require _28652 + (32 * _28674) + 32 <= return_data.size
                        t = _28630 + ceil32(return_data.size) + 32
                        s = _28630 + _28652 + 32
                        while s < _28630 + _28652 + (32 * _28674) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                else:
                    if 0 >= mem[_11605]:
                        revert with 0, 50
                    mem[_11605 + 32] = strategyInfo[stor9[idx].field_0].field_1536
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                            gas gas_remaining wei
                    mem[_11605 + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    mem[_11605 + ceil32(return_data.size) + 100] = this.address
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_11605 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                        revert with 0, 17
                    if not ext_call.return_data[0]:
                        revert with 0, 18
                    mem[_11605 + (2 * ceil32(return_data.size)) + 100] = strategyInfo[stor9[idx].field_0].field_0
                    require ext_code.size(stor21)
                    staticcall stor21.0x70a08231 with:
                            gas gas_remaining wei
                           args strategyInfo[stor9[idx].field_0].field_0
                    mem[_11605 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _11605 + (4 * ceil32(return_data.size)) + 96
                    require return_data.size >= 32
                    if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                        revert with 0, 17
                    mem[_11605 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                    mem[_11605 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                    mem[_11605 + (4 * ceil32(return_data.size)) + 132] = 64
                    mem[_11605 + (4 * ceil32(return_data.size)) + 164] = mem[_11605]
                    s = 0
                    t = _11605 + 32
                    u = _11605 + (4 * ceil32(return_data.size)) + 196
                    while s < mem[_11605]:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    staticcall strategyInfo[stor9[idx].field_0].field_0.mem[mem[64] len 4] with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4 len _11605 + (4 * ceil32(return_data.size)) + (32 * mem[_11605]) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _15654 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _15688 = mem[_15654]
                    require mem[_15654] <= test266151307()
                    require _15654 + mem[_15654] + 31 < _15654 + return_data.size
                    _15714 = mem[_15654 + mem[_15654]]
                    if mem[_15654 + mem[_15654]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_15654 + mem[_15654]]) + 1 < 0 or _15654 + ceil32(return_data.size) + ceil32(32 * mem[_15654 + mem[_15654]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _15654 + ceil32(return_data.size) + ceil32(32 * mem[_15654 + mem[_15654]]) + 1
                    mem[_15654 + ceil32(return_data.size)] = _15714
                    require _15688 + (32 * _15714) + 32 <= return_data.size
                    t = _15654 + ceil32(return_data.size) + 32
                    s = _15654 + _15688 + 32
                    while s < _15654 + _15688 + (32 * _15714) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if 1 >= _15714:
                        revert with 0, 50
                    _19576 = mem[_15654 + ceil32(return_data.size) + 64]
                    if mem[_15654 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_15654 + ceil32(return_data.size) + 64]:
                        revert with 0, 17
                    if 5 * mem[_15654 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                        revert with 0, 17
                    if mem[_15654 + ceil32(return_data.size) + 64] < 5000 * mem[_15654 + ceil32(return_data.size) + 64] / 10^6:
                        revert with 0, 17
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                    staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19928 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _19976 = mem[_19928]
                    if 60 > !block.timestamp:
                        revert with 0, 17
                    mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = _19976
                    mem[mem[64] + 36] = _19576 - (5000 * _19576 / 10^6)
                    mem[mem[64] + 68] = 160
                    _20098 = mem[_11605]
                    mem[mem[64] + 164] = mem[_11605]
                    s = 0
                    t = _11605 + 32
                    u = mem[64] + 196
                    while s < _20098:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[mem[64] + 100] = this.address
                    mem[mem[64] + 132] = block.timestamp + 60
                    require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                    call strategyInfo[stor9[idx].field_0].field_0.swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args _19976, _19576 - (5000 * _19576 / 10^6), 160, address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _20098) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22832 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _22876 = mem[_22832]
                    require mem[_22832] <= test266151307()
                    require _22832 + mem[_22832] + 31 < _22832 + return_data.size
                    _22916 = mem[_22832 + mem[_22832]]
                    if mem[_22832 + mem[_22832]] > test266151307():
                        revert with 0, 65
                    if ceil32(32 * mem[_22832 + mem[_22832]]) + 1 < 0 or _22832 + ceil32(return_data.size) + ceil32(32 * mem[_22832 + mem[_22832]]) + 1 > test266151307():
                        revert with 0, 65
                    mem[64] = _22832 + ceil32(return_data.size) + ceil32(32 * mem[_22832 + mem[_22832]]) + 1
                    mem[_22832 + ceil32(return_data.size)] = _22916
                    require _22876 + (32 * _22916) + 32 <= return_data.size
                    t = _22832 + ceil32(return_data.size) + 32
                    s = _22832 + _22876 + 32
                    while s < _22832 + _22876 + (32 * _22916) + 32:
                        mem[t] = mem[s]
                        t = t + 32
                        s = s + 32
                        continue 
                    if stor21 == strategyInfo[stor9[idx].field_0].field_1792:
                        require ext_code.size(mem[_11420 + 172 len 20])
                        staticcall mem[_11420 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25741 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25791 = mem[_25741]
                        require mem[_25741] == mem[_25741 + 12 len 20]
                        _25851 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_25851]:
                            revert with 0, 50
                        mem[_25851 + 32] = address(_25791)
                        if 1 >= mem[_25851]:
                            revert with 0, 50
                        mem[_25851 + 64] = stor21
                        _25880 = mem[_11420]
                        require ext_code.size(address(_25791))
                        staticcall address(_25791).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_25851 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_25851 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_25791))
                        staticcall address(_25791).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_25851 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_25851 + (2 * ceil32(return_data.size)) + 100] = address(_25880)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_25880)
                        mem[_25851 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _25851 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_25851 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_25851 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_25851 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_25851 + (4 * ceil32(return_data.size)) + 164] = mem[_25851]
                        s = 0
                        t = _25851 + 32
                        u = _25851 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_25851]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_25880))
                        staticcall address(_25880).mem[mem[64] len 4] with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4 len _25851 + (4 * ceil32(return_data.size)) + (32 * mem[_25851]) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27231 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27277 = mem[_27231]
                        require mem[_27231] <= test266151307()
                        require _27231 + mem[_27231] + 31 < _27231 + return_data.size
                        _27303 = mem[_27231 + mem[_27231]]
                        if mem[_27231 + mem[_27231]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27231 + mem[_27231]]) + 1 < 0 or _27231 + ceil32(return_data.size) + ceil32(32 * mem[_27231 + mem[_27231]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27231 + ceil32(return_data.size) + ceil32(32 * mem[_27231 + mem[_27231]]) + 1
                        mem[_27231 + ceil32(return_data.size)] = _27303
                        require _27277 + (32 * _27303) + 32 <= return_data.size
                        t = _27231 + ceil32(return_data.size) + 32
                        s = _27231 + _27277 + 32
                        while s < _27231 + _27277 + (32 * _27303) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _27303:
                            revert with 0, 50
                        _28239 = mem[_27231 + ceil32(return_data.size) + 64]
                        if mem[_27231 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_27231 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if 5 * mem[_27231 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if mem[_27231 + ceil32(return_data.size) + 64] < 5000 * mem[_27231 + ceil32(return_data.size) + 64] / 10^6:
                            revert with 0, 17
                        _28332 = mem[_11420]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_25791))
                        staticcall address(_25791).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28389 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28411 = mem[_28389]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28411
                        mem[mem[64] + 36] = _28239 - (5000 * _28239 / 10^6)
                        mem[mem[64] + 68] = 160
                        _28431 = mem[_25851]
                        mem[mem[64] + 164] = mem[_25851]
                        s = 0
                        t = _25851 + 32
                        u = mem[64] + 196
                        while s < _28431:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(address(_28332))
                        call address(_28332).swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _28411, _28239 - (5000 * _28239 / 10^6), 160, address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _28431) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28631 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28653 = mem[_28631]
                        require mem[_28631] <= test266151307()
                        require _28631 + mem[_28631] + 31 < _28631 + return_data.size
                        _28675 = mem[_28631 + mem[_28631]]
                        if mem[_28631 + mem[_28631]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28631 + mem[_28631]]) + 1 < 0 or _28631 + ceil32(return_data.size) + ceil32(32 * mem[_28631 + mem[_28631]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28631 + ceil32(return_data.size) + ceil32(32 * mem[_28631 + mem[_28631]]) + 1
                        mem[_28631 + ceil32(return_data.size)] = _28675
                        require _28653 + (32 * _28675) + 32 <= return_data.size
                        t = _28631 + ceil32(return_data.size) + 32
                        s = _28631 + _28653 + 32
                        while s < _28631 + _28653 + (32 * _28675) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                    else:
                        if 0 >= mem[_11605]:
                            revert with 0, 50
                        mem[_11605 + 32] = strategyInfo[stor9[idx].field_0].field_1792
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x18160ddd with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25742 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25792 = mem[_25742]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1536)
                        staticcall strategyInfo[stor9[idx].field_0].field_1536.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _25826 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _25878 = mem[_25826]
                        if mem[_25826] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not _25792:
                            revert with 0, 18
                        mem[mem[64] + 4] = strategyInfo[stor9[idx].field_0].field_0
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args strategyInfo[stor9[idx].field_0].field_0
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _26108 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _26124 = mem[_26108]
                        if 10^12 * _25878 / _25792 and mem[_26108] > -1 / 10^12 * _25878 / _25792:
                            revert with 0, 17
                        mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 10^12 * _25878 / _25792 * _26124 / 10^12
                        mem[mem[64] + 36] = 64
                        _26200 = mem[_11605]
                        mem[mem[64] + 68] = mem[_11605]
                        s = 0
                        t = _11605 + 32
                        u = mem[64] + 100
                        while s < _26200:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        staticcall strategyInfo[stor9[idx].field_0].field_0.getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * _25878 / _25792 * _26124 / 10^12, 64, mem[mem[64] + 68 len (32 * _26200) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _27232 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _27278 = mem[_27232]
                        require mem[_27232] <= test266151307()
                        require _27232 + mem[_27232] + 31 < _27232 + return_data.size
                        _27304 = mem[_27232 + mem[_27232]]
                        if mem[_27232 + mem[_27232]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_27232 + mem[_27232]]) + 1 < 0 or _27232 + ceil32(return_data.size) + ceil32(32 * mem[_27232 + mem[_27232]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _27232 + ceil32(return_data.size) + ceil32(32 * mem[_27232 + mem[_27232]]) + 1
                        mem[_27232 + ceil32(return_data.size)] = _27304
                        require _27278 + (32 * _27304) + 32 <= return_data.size
                        t = _27232 + ceil32(return_data.size) + 32
                        s = _27232 + _27278 + 32
                        while s < _27232 + _27278 + (32 * _27304) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _27304:
                            revert with 0, 50
                        _28240 = mem[_27232 + ceil32(return_data.size) + 64]
                        if mem[_27232 + ceil32(return_data.size) + 64] and 5 > -1 / mem[_27232 + ceil32(return_data.size) + 64]:
                            revert with 0, 17
                        if 5 * mem[_27232 + ceil32(return_data.size) + 64] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if mem[_27232 + ceil32(return_data.size) + 64] < 5000 * mem[_27232 + ceil32(return_data.size) + 64] / 10^6:
                            revert with 0, 17
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_1792)
                        staticcall strategyInfo[stor9[idx].field_0].field_1792.0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28390 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28412 = mem[_28390]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28412
                        mem[mem[64] + 36] = _28240 - (5000 * _28240 / 10^6)
                        mem[mem[64] + 68] = 160
                        _28432 = mem[_11605]
                        mem[mem[64] + 164] = mem[_11605]
                        s = 0
                        t = _11605 + 32
                        u = mem[64] + 196
                        while s < _28432:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 60
                        require ext_code.size(strategyInfo[stor9[idx].field_0].field_0)
                        call strategyInfo[stor9[idx].field_0].field_0.swapExactTokensForETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _28412, _28240 - (5000 * _28240 / 10^6), 160, address(this.address), block.timestamp + 60, mem[mem[64] + 164 len (32 * _28432) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28632 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28654 = mem[_28632]
                        require mem[_28632] <= test266151307()
                        require _28632 + mem[_28632] + 31 < _28632 + return_data.size
                        _28676 = mem[_28632 + mem[_28632]]
                        if mem[_28632 + mem[_28632]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28632 + mem[_28632]]) + 1 < 0 or _28632 + ceil32(return_data.size) + ceil32(32 * mem[_28632 + mem[_28632]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28632 + ceil32(return_data.size) + ceil32(32 * mem[_28632 + mem[_28632]]) + 1
                        mem[_28632 + ceil32(return_data.size)] = _28676
                        require _28654 + (32 * _28676) + 32 <= return_data.size
                        t = _28632 + ceil32(return_data.size) + 32
                        s = _28632 + _28654 + 32
                        while s < _28632 + _28654 + (32 * _28676) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        require ext_code.size(mem[_11420 + 172 len 20])
                        staticcall mem[_11420 + 172 len 20].SUSHI() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28794 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28796 = mem[_28794]
                        require mem[_28794] == mem[_28794 + 12 len 20]
                        _28799 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        if 0 >= mem[_28799]:
                            revert with 0, 50
                        mem[_28799 + 32] = address(_28796)
                        if 1 >= mem[_28799]:
                            revert with 0, 50
                        mem[_28799 + 64] = stor21
                        _28804 = mem[_11420]
                        require ext_code.size(address(_28796))
                        staticcall address(_28796).0x18160ddd with:
                                gas gas_remaining wei
                        mem[_28799 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        mem[_28799 + ceil32(return_data.size) + 100] = this.address
                        require ext_code.size(address(_28796))
                        staticcall address(_28796).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_28799 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        if ext_call.return_data[0] > 0x119799812dea11197f27f0f6e885c8ba7eb31f476caf7411a863387:
                            revert with 0, 17
                        if not ext_call.return_data[0]:
                            revert with 0, 18
                        mem[_28799 + (2 * ceil32(return_data.size)) + 100] = address(_28804)
                        require ext_code.size(stor21)
                        staticcall stor21.0x70a08231 with:
                                gas gas_remaining wei
                               args address(_28804)
                        mem[_28799 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _28799 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if 10^12 * ext_call.return_data[0] / ext_call.return_data[0] and ext_call.return_data[0] > -1 / 10^12 * ext_call.return_data[0] / ext_call.return_data[0]:
                            revert with 0, 17
                        mem[_28799 + (4 * ceil32(return_data.size)) + 96] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                        mem[_28799 + (4 * ceil32(return_data.size)) + 100] = 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12
                        mem[_28799 + (4 * ceil32(return_data.size)) + 132] = 64
                        mem[_28799 + (4 * ceil32(return_data.size)) + 164] = mem[_28799]
                        s = 0
                        t = _28799 + 32
                        u = _28799 + (4 * ceil32(return_data.size)) + 196
                        while s < mem[_28799]:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        require ext_code.size(address(_28804))
                        staticcall address(_28804).getAmountsOut(uint256 arg1, address[] arg2) with:
                                gas gas_remaining wei
                               args 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12, 64, mem[_28799 + (4 * ceil32(return_data.size)) + 164 len (32 * mem[_28799]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_28799 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _28799 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _28886 = mem[_28799 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32
                        require mem[_28799 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 <= test266151307()
                        require _28799 + (4 * ceil32(return_data.size)) + mem[_28799 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 127 < _28799 + (4 * ceil32(return_data.size)) + return_data.size + 96
                        _28888 = mem[_28799 + (4 * ceil32(return_data.size)) + mem[_28799 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        if mem[_28799 + (4 * ceil32(return_data.size)) + mem[_28799 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28799 + (4 * ceil32(return_data.size)) + mem[_28799 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 1 < 0 or _28799 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_28799 + (4 * ceil32(return_data.size)) + mem[_28799 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97 > test266151307():
                            revert with 0, 65
                        mem[64] = _28799 + (6 * ceil32(return_data.size)) + ceil32(32 * mem[_28799 + (4 * ceil32(return_data.size)) + mem[_28799 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]) + 97
                        mem[_28799 + (6 * ceil32(return_data.size)) + 96] = mem[_28799 + (4 * ceil32(return_data.size)) + mem[_28799 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, 10^12 * ext_call.return_data[0] / ext_call.return_data[0] * ext_call.return_data[0] / 10^12) >> 32 + 96]
                        require _28886 + (32 * _28888) + 32 <= return_data.size
                        t = _28799 + (6 * ceil32(return_data.size)) + 128
                        s = _28799 + (4 * ceil32(return_data.size)) + _28886 + 128
                        while s < _28799 + (4 * ceil32(return_data.size)) + _28886 + (32 * _28888) + 128:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
                        if 1 >= _28888:
                            revert with 0, 50
                        _28930 = mem[_28799 + (6 * ceil32(return_data.size)) + 160]
                        if mem[_28799 + (6 * ceil32(return_data.size)) + 160] and 5 > -1 / mem[_28799 + (6 * ceil32(return_data.size)) + 160]:
                            revert with 0, 17
                        if 5 * mem[_28799 + (6 * ceil32(return_data.size)) + 160] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                            revert with 0, 17
                        if mem[_28799 + (6 * ceil32(return_data.size)) + 160] < 5000 * mem[_28799 + (6 * ceil32(return_data.size)) + 160] / 10^6:
                            revert with 0, 17
                        _28932 = mem[_11420]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_28796))
                        staticcall address(_28796).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28938 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28940 = mem[_28938]
                        if 60 > !block.timestamp:
                            revert with 0, 17
                        _28942 = mem[64]
                        mem[mem[64]] = 0x18cbafe500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _28940
                        mem[mem[64] + 36] = _28930 - (5000 * _28930 / 10^6)
                        mem[mem[64] + 68] = 160
                        _28944 = mem[_28799]
                        mem[mem[64] + 164] = mem[_28799]
                        s = 0
                        t = _28799 + 32
                        u = mem[64] + 196
                        while s < _28944:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_28942 + 100] = this.address
                        mem[_28942 + 132] = block.timestamp + 60
                        require ext_code.size(address(_28932))
                        call address(_28932).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _28942 + (32 * _28944) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _28964 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _28966 = mem[_28964]
                        require mem[_28964] <= test266151307()
                        require _28964 + mem[_28964] + 31 < _28964 + return_data.size
                        _28968 = mem[_28964 + mem[_28964]]
                        if mem[_28964 + mem[_28964]] > test266151307():
                            revert with 0, 65
                        if ceil32(32 * mem[_28964 + mem[_28964]]) + 1 < 0 or _28964 + ceil32(return_data.size) + ceil32(32 * mem[_28964 + mem[_28964]]) + 1 > test266151307():
                            revert with 0, 65
                        mem[64] = _28964 + ceil32(return_data.size) + ceil32(32 * mem[_28964 + mem[_28964]]) + 1
                        mem[_28964 + ceil32(return_data.size)] = _28968
                        require _28966 + (32 * _28968) + 32 <= return_data.size
                        t = _28964 + ceil32(return_data.size) + 32
                        s = _28964 + _28966 + 32
                        while s < _28964 + _28966 + (32 * _28968) + 32:
                            mem[t] = mem[s]
                            t = t + 32
                            s = s + 32
                            continue 
            if idx == -1:
                revert with 0, 17
            idx = idx + 1
            continue 
        require ext_code.size(address(_3812))
        staticcall address(_3812).token0() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _11434 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _11447 = mem[_11434]
        require mem[_11434] == mem[_11434 + 12 len 20]
        require ext_code.size(address(_3812))
        staticcall address(_3812).token1() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _11514 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _11520 = mem[_11514]
        require mem[_11514] == mem[_11514 + 12 len 20]
        _11597 = mem[64]
        mem[mem[64]] = 2
        mem[64] = mem[64] + 96
        if not mem[_11597]:
            revert with 0, 50
        mem[_11597 + 32] = stor21
        if stor21 == address(_11520):
            if stor21 == address(_3838):
                require ext_code.size(address(_11520))
                staticcall address(_11520).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(_3838))
                staticcall address(_3838).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if not ext_call.return_data[0]:
                    revert with 0, 'Desired value is zero'
                if not ext_call.return_data[0]:
                    revert with 0, 'Desired value is zero'
                require ext_code.size(address(_11520))
                call address(_11520).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_11447), -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require ext_code.size(address(_3838))
                call address(_3838).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_11447), -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                    revert with 0, 17
                if ext_call.return_data[0] and 5 > -1 / ext_call.return_data[0]:
                    revert with 0, 17
                if 5 * ext_call.return_data[0] > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if ext_call.return_data[0] < 5000 * ext_call.return_data[0] / 10^6:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                require ext_code.size(address(_11447))
                call address(_11447).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_11520), address(_3838), ext_call.return_data[0], ext_call.return_data[0], ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), ext_call.return_data[0] - (5000 * ext_call.return_data[0] / 10^6), address(this.address), block.timestamp + 60
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 96
                require ext_code.size(address(_3812))
                staticcall address(_3812).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(_3812))
                call address(_3812).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
            else:
                if 1 >= mem[_11597]:
                    revert with 0, 50
                mem[_11597 + 64] = address(_3838)
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[_11597 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[_11597 + 100] = eth.balance(this.address) / 2
                mem[_11597 + 132] = 128
                mem[_11597 + 228] = mem[_11597]
                idx = 0
                s = _11597 + 32
                t = _11597 + 260
                while idx < mem[_11597]:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[_11597 + 164] = this.address
                mem[_11597 + 196] = block.timestamp + 60
                require ext_code.size(address(_11447))
                call address(_11447).mem[mem[64] len 4] with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _11597 + (32 * mem[_11597]) + -mem[64] + 256]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _15641 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _15667 = mem[_15641]
                require mem[_15641] <= test266151307()
                require _15641 + mem[_15641] + 31 < _15641 + return_data.size
                _15701 = mem[_15641 + mem[_15641]]
                if mem[_15641 + mem[_15641]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_15641 + mem[_15641]]) + 1 < 0 or _15641 + ceil32(return_data.size) + ceil32(32 * mem[_15641 + mem[_15641]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _15641 + ceil32(return_data.size) + ceil32(32 * mem[_15641 + mem[_15641]]) + 1
                mem[_15641 + ceil32(return_data.size)] = _15701
                require _15667 + (32 * _15701) + 32 <= return_data.size
                mem[_15641 + ceil32(return_data.size) + 32 len ceil32(32 * _15701)] = mem[_15641 + _15667 + 32 len ceil32(32 * _15701)]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11520))
                staticcall address(_11520).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19642 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _19682 = mem[_19642]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3838))
                staticcall address(_3838).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19760 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _19766 = mem[_19760]
                if not _19682:
                    revert with 0, 'Desired value is zero'
                if not mem[_19760]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_11447)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_11520))
                call address(_11520).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_11447), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19973 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_19973] == bool(mem[_19973])
                mem[mem[64] + 4] = address(_11447)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_3838))
                call address(_3838).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_11447), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _20078 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_20078] == bool(mem[_20078])
                if _19682 and 5 > -1 / _19682:
                    revert with 0, 17
                if 5 * _19682 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _19682 < 5000 * _19682 / 10^6:
                    revert with 0, 17
                if _19766 and 5 > -1 / _19766:
                    revert with 0, 17
                if 5 * _19766 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _19766 < 5000 * _19766 / 10^6:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _19682
                mem[mem[64] + 100] = _19766
                mem[mem[64] + 132] = _19682 - (5000 * _19682 / 10^6)
                mem[mem[64] + 164] = _19766 - (5000 * _19766 / 10^6)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_11447))
                call address(_11447).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_11520), address(_3838), _19682, _19766, _19682 - (5000 * _19682 / 10^6), _19766 - (5000 * _19766 / 10^6), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3812))
                staticcall address(_3812).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _20673 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _20700 = mem[_20673]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _20700
                require ext_code.size(address(_3812))
                call address(_3812).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _20700
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _20753 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_20753] == bool(mem[_20753])
        else:
            if 1 >= mem[_11597]:
                revert with 0, 50
            mem[_11597 + 64] = address(_11520)
            if 60 > !block.timestamp:
                revert with 0, 17
            mem[_11597 + 96] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
            mem[_11597 + 100] = eth.balance(this.address) / 2
            mem[_11597 + 132] = 128
            mem[_11597 + 228] = mem[_11597]
            idx = 0
            s = _11597 + 32
            t = _11597 + 260
            while idx < mem[_11597]:
                mem[t] = mem[s + 12 len 20]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            mem[_11597 + 164] = this.address
            mem[_11597 + 196] = block.timestamp + 60
            require ext_code.size(address(_11447))
            call address(_11447).mem[mem[64] len 4] with:
               value eth.balance(this.address) / 2 wei
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _11597 + (32 * mem[_11597]) + -mem[64] + 256]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _15642 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _15668 = mem[_15642]
            require mem[_15642] <= test266151307()
            require _15642 + mem[_15642] + 31 < _15642 + return_data.size
            _15702 = mem[_15642 + mem[_15642]]
            if mem[_15642 + mem[_15642]] > test266151307():
                revert with 0, 65
            if ceil32(32 * mem[_15642 + mem[_15642]]) + 1 < 0 or _15642 + ceil32(return_data.size) + ceil32(32 * mem[_15642 + mem[_15642]]) + 1 > test266151307():
                revert with 0, 65
            mem[64] = _15642 + ceil32(return_data.size) + ceil32(32 * mem[_15642 + mem[_15642]]) + 1
            mem[_15642 + ceil32(return_data.size)] = _15702
            require _15668 + (32 * _15702) + 32 <= return_data.size
            mem[_15642 + ceil32(return_data.size) + 32 len ceil32(32 * _15702)] = mem[_15642 + _15668 + 32 len ceil32(32 * _15702)]
            if stor21 == address(_3838):
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11520))
                staticcall address(_11520).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19662 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _19700 = mem[_19662]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3838))
                staticcall address(_3838).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19763 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _19785 = mem[_19763]
                if not _19700:
                    revert with 0, 'Desired value is zero'
                if not mem[_19763]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_11447)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_11520))
                call address(_11520).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_11447), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19995 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_19995] == bool(mem[_19995])
                mem[mem[64] + 4] = address(_11447)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_3838))
                call address(_3838).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_11447), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _20095 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_20095] == bool(mem[_20095])
                if _19700 and 5 > -1 / _19700:
                    revert with 0, 17
                if 5 * _19700 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _19700 < 5000 * _19700 / 10^6:
                    revert with 0, 17
                if _19785 and 5 > -1 / _19785:
                    revert with 0, 17
                if 5 * _19785 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _19785 < 5000 * _19785 / 10^6:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _19700
                mem[mem[64] + 100] = _19785
                mem[mem[64] + 132] = _19700 - (5000 * _19700 / 10^6)
                mem[mem[64] + 164] = _19785 - (5000 * _19785 / 10^6)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_11447))
                call address(_11447).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_11520), address(_3838), _19700, _19785, _19700 - (5000 * _19700 / 10^6), _19785 - (5000 * _19785 / 10^6), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3812))
                staticcall address(_3812).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _20684 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _20714 = mem[_20684]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _20714
                require ext_code.size(address(_3812))
                call address(_3812).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _20714
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _20776 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_20776] == bool(mem[_20776])
            else:
                if 1 >= mem[_11597]:
                    revert with 0, 50
                mem[_11597 + 64] = address(_3838)
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64]] = 0x7ff36ab500000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = eth.balance(this.address) / 2
                mem[mem[64] + 36] = 128
                _19764 = mem[_11597]
                mem[mem[64] + 132] = mem[_11597]
                idx = 0
                s = _11597 + 32
                t = mem[64] + 164
                while idx < _19764:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[mem[64] + 68] = this.address
                mem[mem[64] + 100] = block.timestamp + 60
                require ext_code.size(address(_11447))
                call address(_11447).swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, uint256 arg4) with:
                   value eth.balance(this.address) / 2 wei
                     gas gas_remaining wei
                    args Mask(255, 1, eth.balance(this.address)), 128, address(this.address), block.timestamp + 60, mem[mem[64] + 132 len (32 * _19764) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _22829 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _22873 = mem[_22829]
                require mem[_22829] <= test266151307()
                require _22829 + mem[_22829] + 31 < _22829 + return_data.size
                _22913 = mem[_22829 + mem[_22829]]
                if mem[_22829 + mem[_22829]] > test266151307():
                    revert with 0, 65
                if ceil32(32 * mem[_22829 + mem[_22829]]) + 1 < 0 or _22829 + ceil32(return_data.size) + ceil32(32 * mem[_22829 + mem[_22829]]) + 1 > test266151307():
                    revert with 0, 65
                mem[64] = _22829 + ceil32(return_data.size) + ceil32(32 * mem[_22829 + mem[_22829]]) + 1
                mem[_22829 + ceil32(return_data.size)] = _22913
                require _22873 + (32 * _22913) + 32 <= return_data.size
                mem[_22829 + ceil32(return_data.size) + 32 len ceil32(32 * _22913)] = mem[_22829 + _22873 + 32 len ceil32(32 * _22913)]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11520))
                staticcall address(_11520).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25663 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25717 = mem[_25663]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3838))
                staticcall address(_3838).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _25816 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _25823 = mem[_25816]
                if not _25717:
                    revert with 0, 'Desired value is zero'
                if not mem[_25816]:
                    revert with 0, 'Desired value is zero'
                mem[mem[64] + 4] = address(_11447)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_11520))
                call address(_11520).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_11447), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26047 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26047] == bool(mem[_26047])
                mem[mem[64] + 4] = address(_11447)
                mem[mem[64] + 36] = -1
                require ext_code.size(address(_3838))
                call address(_3838).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_11447), -1
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26122 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26122] == bool(mem[_26122])
                if _25717 and 5 > -1 / _25717:
                    revert with 0, 17
                if 5 * _25717 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _25717 < 5000 * _25717 / 10^6:
                    revert with 0, 17
                if _25823 and 5 > -1 / _25823:
                    revert with 0, 17
                if 5 * _25823 > 0x4189374bc6a7ef9db22d0e5604189374bc6a7ef9db22d0e5604189374bc6a7:
                    revert with 0, 17
                if _25823 < 5000 * _25823 / 10^6:
                    revert with 0, 17
                if 60 > !block.timestamp:
                    revert with 0, 17
                mem[mem[64] + 68] = _25717
                mem[mem[64] + 100] = _25823
                mem[mem[64] + 132] = _25717 - (5000 * _25717 / 10^6)
                mem[mem[64] + 164] = _25823 - (5000 * _25823 / 10^6)
                mem[mem[64] + 196] = this.address
                mem[mem[64] + 228] = block.timestamp + 60
                require ext_code.size(address(_11447))
                call address(_11447).addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7, uint256 arg8) with:
                     gas gas_remaining wei
                    args address(_11520), address(_3838), _25717, _25823, _25717 - (5000 * _25717 / 10^6), _25823 - (5000 * _25823 / 10^6), address(this.address), block.timestamp + 60
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_3812))
                staticcall address(_3812).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26328 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _26334 = mem[_26328]
                mem[mem[64] + 4] = arg1
                mem[mem[64] + 36] = _26334
                require ext_code.size(address(_3812))
                call address(_3812).0xa9059cbb with:
                     gas gas_remaining wei
                    args address(arg1), _26334
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _26353 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_26353] == bool(mem[_26353])
    require ext_code.size(arg1)
    call arg1.0xd389800f with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}



}
