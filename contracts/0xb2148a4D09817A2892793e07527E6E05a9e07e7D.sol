contract main {




// =====================  Runtime code  =====================


address owner;
address sub_f6c6e5e8Address;
address sub_87ced3dcAddress;
address sub_f088996fAddress;
uint16 stor4;
address sub_dbd33e45Address;
uint32 stor5;
address sub_85b374c3Address;
address sub_1458100bAddress;
address sub_1e9b8c59Address;
address sub_33aa2191Address;
address sub_7abd5a1cAddress;
address sub_63f96cf4Address;
address zapAddress;
uint256 sub_ad70d6f6;

function sub_1458100b(?) {
    return sub_1458100bAddress
}

function sub_1e9b8c59(?) {
    return sub_1e9b8c59Address
}

function zap() {
    return zapAddress
}

function sub_33aa2191(?) {
    return sub_33aa2191Address
}

function sub_63f96cf4(?) {
    return sub_63f96cf4Address
}

function sub_7abd5a1c(?) {
    return sub_7abd5a1cAddress
}

function sub_85b374c3(?) {
    return address(sub_85b374c3Address)
}

function sub_87ced3dc(?) {
    return sub_87ced3dcAddress
}

function owner() {
    return owner
}

function sub_ad70d6f6(?) {
    return sub_ad70d6f6
}

function sub_dbd33e45(?) {
    return address(sub_dbd33e45Address)
}

function sub_f088996f(?) {
    return sub_f088996fAddress
}

function sub_f6c6e5e8(?) {
    return sub_f6c6e5e8Address
}

function _fallback() payable {
    revert
}

function renounceOwnership() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function sub_8fe6f47c(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(address(sub_85b374c3Address))
    call address(sub_85b374c3Address).0x23b872dd with:
         gas gas_remaining wei
        args msg.sender, address(this.address), arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
}

function sub_f24666cc(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(address(sub_dbd33e45Address))
    call address(sub_dbd33e45Address).0x23b872dd with:
         gas gas_remaining wei
        args msg.sender, address(this.address), arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    32,
                    38,
                    0xfe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573,
                    mem[202 len 26]
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function unstakeAll() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(sub_f088996fAddress)
    staticcall sub_f088996fAddress.userInfo(uint256 arg1, address arg2) with:
            gas gas_remaining wei
           args 0, this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_code.size(sub_f088996fAddress)
    call sub_f088996fAddress.withdraw(uint256 arg1, uint256 arg2) with:
         gas gas_remaining wei
        args 0, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require ext_code.size(sub_f088996fAddress)
    staticcall sub_f088996fAddress.userInfo(uint256 arg1, address arg2) with:
            gas gas_remaining wei
           args 1, this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 64
    require ext_code.size(sub_f088996fAddress)
    call sub_f088996fAddress.withdraw(uint256 arg1, uint256 arg2) with:
         gas gas_remaining wei
        args 1, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require ext_code.size(sub_63f96cf4Address)
    staticcall sub_63f96cf4Address.canClaimReward(address arg1) with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0]:
        require ext_code.size(sub_63f96cf4Address)
        staticcall sub_63f96cf4Address.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0:
            require ext_code.size(sub_63f96cf4Address)
            staticcall sub_63f96cf4Address.0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(sub_63f96cf4Address)
            call sub_63f96cf4Address.withdraw(uint256 arg1) with:
                 gas gas_remaining wei
                args ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
}

function withdrawAll(address arg1) payable {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(address(sub_85b374c3Address))
    staticcall address(sub_85b374c3Address).0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > 0:
        require ext_code.size(address(sub_85b374c3Address))
        call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(arg1), -1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(sub_85b374c3Address))
        staticcall address(sub_85b374c3Address).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(sub_85b374c3Address))
        call address(sub_85b374c3Address).0xa9059cbb with:
             gas gas_remaining wei
            args address(arg1), ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
    require ext_code.size(address(sub_dbd33e45Address))
    staticcall address(sub_dbd33e45Address).0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > 0:
        require ext_code.size(address(sub_dbd33e45Address))
        call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(arg1), -1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(sub_dbd33e45Address))
        staticcall address(sub_dbd33e45Address).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(sub_dbd33e45Address))
        call address(sub_dbd33e45Address).0xa9059cbb with:
             gas gas_remaining wei
            args address(arg1), ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
    require ext_code.size(sub_1458100bAddress)
    staticcall sub_1458100bAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > 0:
        require ext_code.size(sub_1458100bAddress)
        call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(arg1), -1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(sub_1458100bAddress)
        staticcall sub_1458100bAddress.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(sub_1458100bAddress)
        call sub_1458100bAddress.0xa9059cbb with:
             gas gas_remaining wei
            args address(arg1), ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
    require ext_code.size(sub_1e9b8c59Address)
    staticcall sub_1e9b8c59Address.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > 0:
        require ext_code.size(sub_1e9b8c59Address)
        call sub_1e9b8c59Address.approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(arg1), -1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(sub_1e9b8c59Address)
        staticcall sub_1e9b8c59Address.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(sub_1e9b8c59Address)
        call sub_1e9b8c59Address.0xa9059cbb with:
             gas gas_remaining wei
            args address(arg1), ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
    require ext_code.size(sub_33aa2191Address)
    staticcall sub_33aa2191Address.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > 0:
        require ext_code.size(sub_33aa2191Address)
        call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(arg1), -1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(sub_33aa2191Address)
        staticcall sub_33aa2191Address.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(sub_33aa2191Address)
        call sub_33aa2191Address.0xa9059cbb with:
             gas gas_remaining wei
            args address(arg1), ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
    if eth.balance(this.address) > 0:
        call arg1 with:
           value eth.balance(this.address) wei
             gas 2300 * is_zero(value) wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
}

function stakeAll() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(sub_7abd5a1cAddress)
    staticcall sub_7abd5a1cAddress.consult(address arg1, uint256 arg2) with:
            gas gas_remaining wei
           args address(sub_dbd33e45Address), 10^18
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(sub_dbd33e45Address))
    staticcall address(sub_dbd33e45Address).0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        require ext_code.size(address(sub_85b374c3Address))
        staticcall address(sub_85b374c3Address).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(sub_1e9b8c59Address)
        call sub_1e9b8c59Address.approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args sub_f088996fAddress, -1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(sub_f088996fAddress)
        call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
             gas gas_remaining wei
            args 0
        if not ext_call.success:
            revert with 0, 'tomb-wftm LP deposit failed'
        require ext_code.size(address(sub_85b374c3Address))
        staticcall address(sub_85b374c3Address).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > ext_call.return_data[0]:
            revert with 0, 'SafeMath: subtraction overflow'
        require ext_code.size(address(sub_85b374c3Address))
        staticcall address(sub_85b374c3Address).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0:
            if ext_call.return_data[0]:
                require ext_code.size(sub_33aa2191Address)
                staticcall sub_33aa2191Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(sub_85b374c3Address))
                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args zapAddress, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(sub_1458100bAddress)
                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args zapAddress, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(sub_33aa2191Address)
                call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args zapAddress, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(sub_85b374c3Address))
                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args sub_f6c6e5e8Address, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(sub_1458100bAddress)
                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args sub_f6c6e5e8Address, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(sub_33aa2191Address)
                call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args sub_f6c6e5e8Address, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                emit 0xcdb5839a: ext_call.return_data[0]
                require ext_code.size(zapAddress)
                call zapAddress.0xcee6202c with:
                     gas gas_remaining wei
                    args 0, uint32(stor5), ext_call.return_data[0], sub_33aa2191Address, sub_f6c6e5e8Address, address(this.address)
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(sub_33aa2191Address)
                staticcall sub_33aa2191Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > ext_call.return_data[0]:
                    revert with 0, 'SafeMath: subtraction overflow'
            emit 0x1aa29c48: ext_call.return_data[0], 0
            require ext_code.size(address(sub_85b374c3Address))
            staticcall address(sub_85b374c3Address).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(sub_33aa2191Address)
            call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args sub_f088996fAddress, -1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(sub_f088996fAddress)
            call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args 1, 0
            if not ext_call.success:
                revert with 0, 'tshare-wftm LP deposit failed'
            require ext_code.size(address(sub_85b374c3Address))
            staticcall address(sub_85b374c3Address).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > ext_call.return_data[0]:
                revert with 0, 'SafeMath: subtraction overflow'
            emit 0x8ced237d: 0
    else:
        require ext_code.size(address(sub_dbd33e45Address))
        staticcall address(sub_dbd33e45Address).taxRate() with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(sub_dbd33e45Address))
        staticcall address(sub_dbd33e45Address).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(sub_7abd5a1cAddress)
        staticcall sub_7abd5a1cAddress.consult(address arg1, uint256 arg2) with:
                gas gas_remaining wei
               args address(sub_dbd33e45Address), ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[14 len 18] + eth.balance(this.address) < ext_call.return_data[14 len 18]:
            revert with 0, 'SafeMath: addition overflow'
        if ext_call.return_data[14 len 18] < ext_call.return_data[14 len 18] + eth.balance(this.address) / 2:
            mem[96] = 2
            mem[128] = address(sub_dbd33e45Address)
            mem[160] = sub_1458100bAddress
            require ext_code.size(sub_1458100bAddress)
            call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args sub_f6c6e5e8Address, -1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(sub_dbd33e45Address))
            call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args sub_f6c6e5e8Address, -1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] <= 0:
                revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
            if eth.balance(this.address) <= 0:
                revert with 0, 
                            32,
                            46,
                            0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                            mem[306 len 18]
            emit 0x98a68058: ext_call.return_data[0], eth.balance(this.address)
            mem[192] = 0x791ac94700000000000000000000000000000000000000000000000000000000
            mem[196] = ext_call.return_data[0]
            mem[228] = eth.balance(this.address)
            mem[292] = this.address
            mem[324] = block.timestamp + 60
            mem[260] = 160
            mem[356] = 2
            mem[388 len 0] = None
            require ext_code.size(sub_f6c6e5e8Address)
            call sub_f6c6e5e8Address.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                 gas gas_remaining wei
                args ext_call.return_data[0], eth.balance(this.address), Array(len=2, data=mem[388 len 64]), address(this.address), block.timestamp + 60
            if not ext_call.success:
                if return_data.size < 68:
                    if not return_data.size:
                        mem[224] = 'swap tomb '
                        mem[234 len 0] = None
                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                        mem[64] = 236
                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[240] = 32
                        mem[272] = 0, ext_call.return_data[0 len 28]
                        mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                        if not ext_call.return_data[0 len 28] % 32:
                            revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                        mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                        revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                    mem[192] = return_data.size
                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                    if not mem[ceil32(return_data.size) + 193] % 32:
                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                    revert with 0, 
                                32,
                                mem[ceil32(return_data.size) + 193],
                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                mem[0 len 4] = ext_call.return_data[0 len 4]
                if uint32(mem[4 len 28]) >> 224 != Error(string arg1):
                    if not return_data.size:
                        mem[224] = 'swap tomb '
                        mem[234 len 0] = None
                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                        mem[64] = 236
                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[240] = 32
                        mem[272] = 0, ext_call.return_data[0 len 28]
                        mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                        if not ext_call.return_data[0 len 28] % 32:
                            revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                        mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                        revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                    mem[192] = return_data.size
                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                    if not mem[ceil32(return_data.size) + 193] % 32:
                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                    revert with 0, 
                                32,
                                mem[ceil32(return_data.size) + 193],
                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                mem[192 len return_data.size - 4] = ext_call.return_data[4 len return_data.size - 4]
                if 0, ext_call.return_data[0 len 28] > test266151307() or 0, ext_call.return_data[0 len 28] + 36 > return_data.size:
                    if not return_data.size:
                        mem[224] = 'swap tomb '
                        mem[234 len 0] = None
                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                        mem[64] = 236
                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[240] = 32
                        mem[272] = 0, ext_call.return_data[0 len 28]
                        mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                        if not ext_call.return_data[0 len 28] % 32:
                            revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                        mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                        revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                    mem[192] = return_data.size
                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                    if not mem[ceil32(return_data.size) + 193] % 32:
                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                    revert with 0, 
                                32,
                                mem[ceil32(return_data.size) + 193],
                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                if mem[0, ext_call.return_data[0 len 28] + 192] > test266151307():
                    if not return_data.size:
                        mem[224] = 'swap tomb '
                        mem[234 len 0] = None
                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                        mem[64] = 236
                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[240] = 32
                        mem[272] = 0, ext_call.return_data[0 len 28]
                        mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                        if not ext_call.return_data[0 len 28] % 32:
                            revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                        mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                        revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                    mem[192] = return_data.size
                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                    if not mem[ceil32(return_data.size) + 193] % 32:
                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                    revert with 0, 
                                32,
                                mem[ceil32(return_data.size) + 193],
                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                if 0, ext_call.return_data[0 len 28] + mem[0, ext_call.return_data[0 len 28] + 192] + 32 > return_data.size:
                    if not return_data.size:
                        mem[224] = 'swap tomb '
                        mem[234 len 0] = None
                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                        mem[64] = 236
                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[240] = 32
                        mem[272] = 0, ext_call.return_data[0 len 28]
                        mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                        if not ext_call.return_data[0 len 28] % 32:
                            revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                        mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                        revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                    mem[192] = return_data.size
                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                    if not mem[ceil32(return_data.size) + 193] % 32:
                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                    revert with 0, 
                                32,
                                mem[ceil32(return_data.size) + 193],
                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                mem[64] = 0, ext_call.return_data[0 len 28] + ceil32(mem[0, ext_call.return_data[0 len 28] + 192]) + 224
                if 0, ext_call.return_data[0 len 28] + 192:
                    _1042 = mem[64]
                    mem[mem[64] + 32] = 'swap tomb '
                    _1043 = mem[0, ext_call.return_data[0 len 28] + 192]
                    mem[mem[64] + 42 len floor32(mem[0, ext_call.return_data[0 len 28] + 192])] = mem[0, ext_call.return_data[0 len 28] + 224 len floor32(mem[0, ext_call.return_data[0 len 28] + 192])]
                    mem[mem[64] + floor32(mem[0, ext_call.return_data[0 len 28] + 192]) + -(mem[0, ext_call.return_data[0 len 28] + 192] % 32) + 74 len mem[0, ext_call.return_data[0 len 28] + 192] % 32] = mem[0, ext_call.return_data[0 len 28] + floor32(mem[0, ext_call.return_data[0 len 28] + 192]) + -(mem[0, ext_call.return_data[0 len 28] + 192] % 32) + 256 len mem[0, ext_call.return_data[0 len 28] + 192] % 32]
                    _1660 = mem[64]
                    mem[64] = _1043 + mem[64] + 42
                    mem[_1043 + _1042 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[_1043 + _1042 + 46] = 32
                    mem[_1043 + _1042 + 78] = mem[_1660]
                    _1663 = mem[_1660]
                    mem[_1043 + _1042 + 110 len ceil32(mem[_1660])] = mem[_1660 + 32 len ceil32(mem[_1660])]
                    if not _1663 % 32:
                        revert with 0, 32, mem[_1043 + _1042 + 78 len _1663 + 32]
                    mem[floor32(_1663) + _1043 + _1042 + 110] = mem[floor32(_1663) + _1043 + _1042 + -(_1663 % 32) + 142 len _1663 % 32]
                    revert with 0, 32, mem[_1043 + _1042 + 78 len floor32(_1663) + 64]
                if not return_data.size:
                    _1187 = mem[64]
                    mem[mem[64] + 32] = 'swap tomb '
                    mem[mem[64] + 42 len 0] = None
                    mem[mem[64] + 72 len 2] = uint16(stor4)
                    mem[mem[64] + 42 len 30] = Mask(176, 0, 'swap tomb '), mem[mem[64] + 64 len 8]
                    _1667 = mem[64]
                    mem[64] = mem[64] + 44
                    mem[_1187 + 44] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[_1187 + 48] = 32
                    mem[_1187 + 80] = mem[_1667]
                    _1670 = mem[_1667]
                    mem[_1187 + 112 len ceil32(mem[_1667])] = mem[_1667 + 32 len ceil32(mem[_1667])]
                    if not _1670 % 32:
                        revert with 0, 32, mem[_1187 + 80 len _1670 + 32]
                    mem[floor32(_1670) + _1187 + 112] = mem[floor32(_1670) + _1187 + -(_1670 % 32) + 144 len _1670 % 32]
                    revert with 0, 32, mem[_1187 + 80 len floor32(_1670) + 64]
                _1144 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_1144] = return_data.size
                mem[_1144 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                _1189 = mem[64]
                mem[mem[64] + 32] = 'swap tomb '
                mem[mem[64] + 42 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                mem[mem[64] + floor32(return_data.size) + -(return_data.size % 32) + 74 len return_data.size % 32] = mem[_1144 + floor32(return_data.size) + -(return_data.size % 32) + 64 len return_data.size % 32]
                _1674 = mem[64]
                mem[64] = return_data.size + mem[64] + 42
                mem[return_data.size + _1189 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[return_data.size + _1189 + 46] = 32
                mem[return_data.size + _1189 + 78] = mem[_1674]
                _1677 = mem[_1674]
                mem[return_data.size + _1189 + 110 len ceil32(mem[_1674])] = mem[_1674 + 32 len ceil32(mem[_1674])]
                if not _1677 % 32:
                    revert with memory
                      from mem[64]
                       len _1677 + return_data.size + _1189 + -mem[64] + 110
                mem[floor32(_1677) + return_data.size + _1189 + 110] = mem[floor32(_1677) + return_data.size + _1189 + -(_1677 % 32) + 142 len _1677 % 32]
                revert with memory
                  from mem[64]
                   len floor32(_1677) + return_data.size + _1189 + -mem[64] + 142
            require ext_code.size(address(sub_dbd33e45Address))
            staticcall address(sub_dbd33e45Address).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > ext_call.return_data[0]:
                revert with 0, 'SafeMath: subtraction overflow'
            if 0 > ext_call.return_data[0]:
                revert with 0, 'SafeMath: subtraction overflow'
            if eth.balance(this.address) > eth.balance(this.address):
                revert with 0, 'SafeMath: subtraction overflow'
            emit 0x81e6d68f: ext_call.return_data[0], 0
        else:
            if not Mask(255, 1, ext_call.return_data[0]):
                if ext_call.return_data[0] > 10000:
                    revert with 0, 'SafeMath: subtraction overflow'
                if -ext_call.return_data[0] + 10000:
                    require -ext_call.return_data[0] + 10000
                    if 0 / -ext_call.return_data[0] + 10000:
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                    32,
                                    33,
                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                    mem[197 len 31]
                require ext_code.size(sub_1458100bAddress)
                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args sub_f6c6e5e8Address, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(sub_dbd33e45Address))
                call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args sub_f6c6e5e8Address, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] / 2 <= 0:
                    revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                revert with 0, 
                            32,
                            46,
                            0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                            mem[306 len 18]
            require ext_call.return_data[0] / 2
            if ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 2 != Mask(144, 0, ext_call.return_data[0]):
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if ext_call.return_data[0] > 10000:
                revert with 0, 'SafeMath: subtraction overflow'
            if not -ext_call.return_data[0] + 10000:
                require ext_code.size(sub_1458100bAddress)
                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args sub_f6c6e5e8Address, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(sub_dbd33e45Address))
                call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args sub_f6c6e5e8Address, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] / 2 <= 0:
                    revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                revert with 0, 
                            32,
                            46,
                            0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                            mem[306 len 18]
            require -ext_call.return_data[0] + 10000
            if (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / -ext_call.return_data[0] + 10000 != ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            if not (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000:
                require ext_code.size(sub_1458100bAddress)
                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args sub_f6c6e5e8Address, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(sub_dbd33e45Address))
                call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args sub_f6c6e5e8Address, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] / 2 <= 0:
                    revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                revert with 0, 
                            32,
                            46,
                            0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                            mem[306 len 18]
            require (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000
            if 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 != 8000:
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                            32,
                            33,
                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                            mem[197 len 31]
            mem[96] = 2
            mem[128] = address(sub_dbd33e45Address)
            mem[160] = sub_1458100bAddress
            require ext_code.size(sub_1458100bAddress)
            call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args sub_f6c6e5e8Address, -1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(address(sub_dbd33e45Address))
            call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args sub_f6c6e5e8Address, -1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] / 2 <= 0:
                revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
            if 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000 <= 0:
                revert with 0, 
                            32,
                            46,
                            0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                            mem[306 len 18]
            emit 0x98a68058: Mask(255, 1, ext_call.return_data[0]), 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000
            mem[192] = 0x791ac94700000000000000000000000000000000000000000000000000000000
            mem[196] = ext_call.return_data[0] / 2
            mem[228] = 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000
            mem[292] = this.address
            mem[324] = block.timestamp + 60
            mem[260] = 160
            mem[356] = 2
            mem[388 len 0] = None
            require ext_code.size(sub_f6c6e5e8Address)
            call sub_f6c6e5e8Address.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                 gas gas_remaining wei
                args Mask(255, 1, ext_call.return_data[0]), 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000, Array(len=2, data=mem[388 len 64]), address(this.address), block.timestamp + 60
            if not ext_call.success:
                if return_data.size < 68:
                    if not return_data.size:
                        mem[224] = 'swap tomb '
                        mem[234 len 0] = None
                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                        mem[64] = 236
                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[240] = 32
                        mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                        mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                        if not Mask(5, 32, ext_call.return_data[0]):
                            revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                        mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                        revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                    mem[192] = return_data.size
                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                    if not mem[ceil32(return_data.size) + 193] % 32:
                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                    revert with 0, 
                                32,
                                mem[ceil32(return_data.size) + 193],
                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                mem[0 len 4] = ext_call.return_data[0 len 4]
                if uint32(mem[4 len 28]) >> 224 != Error(string arg1):
                    if not return_data.size:
                        mem[224] = 'swap tomb '
                        mem[234 len 0] = None
                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                        mem[64] = 236
                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[240] = 32
                        mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                        mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                        if not Mask(5, 32, ext_call.return_data[0]):
                            revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                        mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                        revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                    mem[192] = return_data.size
                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                    if not mem[ceil32(return_data.size) + 193] % 32:
                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                    revert with 0, 
                                32,
                                mem[ceil32(return_data.size) + 193],
                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                mem[192 len return_data.size - 4] = ext_call.return_data[4 len return_data.size - 4]
                if 0, Mask(224, 32, ext_call.return_data[0]) >> 32 > test266151307() or 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 36 > return_data.size:
                    if not return_data.size:
                        mem[224] = 'swap tomb '
                        mem[234 len 0] = None
                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                        mem[64] = 236
                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[240] = 32
                        mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                        mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                        if not Mask(5, 32, ext_call.return_data[0]):
                            revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                        mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                        revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                    mem[192] = return_data.size
                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                    if not mem[ceil32(return_data.size) + 193] % 32:
                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                    revert with 0, 
                                32,
                                mem[ceil32(return_data.size) + 193],
                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                if mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] > test266151307():
                    if not return_data.size:
                        mem[224] = 'swap tomb '
                        mem[234 len 0] = None
                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                        mem[64] = 236
                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[240] = 32
                        mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                        mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                        if not Mask(5, 32, ext_call.return_data[0]):
                            revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                        mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                        revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                    mem[192] = return_data.size
                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                    if not mem[ceil32(return_data.size) + 193] % 32:
                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                    revert with 0, 
                                32,
                                mem[ceil32(return_data.size) + 193],
                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                if 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] + 32 > return_data.size:
                    if not return_data.size:
                        mem[224] = 'swap tomb '
                        mem[234 len 0] = None
                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                        mem[64] = 236
                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                        mem[240] = 32
                        mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                        mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                        if not Mask(5, 32, ext_call.return_data[0]):
                            revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                        mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                        revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                    mem[192] = return_data.size
                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                    if not mem[ceil32(return_data.size) + 193] % 32:
                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                    revert with 0, 
                                32,
                                mem[ceil32(return_data.size) + 193],
                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                mem[64] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + ceil32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]) + 224
                if 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192:
                    _1017 = mem[64]
                    mem[mem[64] + 32] = 'swap tomb '
                    _1018 = mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]
                    mem[mem[64] + 42 len floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192])] = mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 224 len floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192])]
                    mem[mem[64] + floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]) + -(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32) + 74 len mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32] = mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]) + -(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32) + 256 len mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32]
                    _1569 = mem[64]
                    mem[64] = _1018 + _1017 + 42
                    mem[_1018 + _1017 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[_1018 + _1017 + 46] = 32
                    mem[_1018 + _1017 + 78] = mem[_1569]
                    _1572 = mem[_1569]
                    mem[_1018 + _1017 + 110 len ceil32(mem[_1569])] = mem[_1569 + 32 len ceil32(mem[_1569])]
                    if not _1572 % 32:
                        revert with 0, 32, mem[_1018 + _1017 + 78 len _1572 + 32]
                    mem[floor32(_1572) + _1018 + _1017 + 110] = mem[floor32(_1572) + _1018 + _1017 + -(_1572 % 32) + 142 len _1572 % 32]
                    revert with 0, 32, mem[_1018 + _1017 + 78 len floor32(_1572) + 64]
                if not return_data.size:
                    _1163 = mem[64]
                    mem[mem[64] + 32] = 'swap tomb '
                    mem[mem[64] + 42 len 0] = None
                    mem[mem[64] + 72 len 2] = uint16(stor4)
                    mem[mem[64] + 42 len 30] = Mask(176, 0, 'swap tomb '), mem[mem[64] + 64 len 8]
                    _1576 = mem[64]
                    mem[64] = mem[64] + 44
                    mem[_1163 + 44] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                    mem[_1163 + 48] = 32
                    mem[_1163 + 80] = mem[_1576]
                    _1579 = mem[_1576]
                    mem[_1163 + 112 len ceil32(mem[_1576])] = mem[_1576 + 32 len ceil32(mem[_1576])]
                    if not _1579 % 32:
                        revert with 0, 32, mem[_1163 + 80 len _1579 + 32]
                    mem[floor32(_1579) + _1163 + 112] = mem[floor32(_1579) + _1163 + -(_1579 % 32) + 144 len _1579 % 32]
                    revert with 0, 32, mem[_1163 + 80 len floor32(_1579) + 64]
                _1118 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_1118] = return_data.size
                mem[_1118 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                _1165 = mem[64]
                mem[mem[64] + 32] = 'swap tomb '
                mem[mem[64] + 42 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                mem[mem[64] + floor32(return_data.size) + -(return_data.size % 32) + 74 len return_data.size % 32] = mem[_1118 + floor32(return_data.size) + -(return_data.size % 32) + 64 len return_data.size % 32]
                _1583 = mem[64]
                mem[64] = return_data.size + mem[64] + 42
                mem[return_data.size + _1165 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                mem[return_data.size + _1165 + 46] = 32
                mem[return_data.size + _1165 + 78] = mem[_1583]
                _1586 = mem[_1583]
                mem[return_data.size + _1165 + 110 len ceil32(mem[_1583])] = mem[_1583 + 32 len ceil32(mem[_1583])]
                if not _1586 % 32:
                    revert with memory
                      from mem[64]
                       len _1586 + return_data.size + _1165 + -mem[64] + 110
                mem[floor32(_1586) + return_data.size + _1165 + 110] = mem[floor32(_1586) + return_data.size + _1165 + -(_1586 % 32) + 142 len _1586 % 32]
                revert with memory
                  from mem[64]
                   len floor32(_1586) + return_data.size + _1165 + -mem[64] + 142
            require ext_code.size(address(sub_dbd33e45Address))
            staticcall address(sub_dbd33e45Address).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > ext_call.return_data[0]:
                revert with 0, 'SafeMath: subtraction overflow'
            if 0 > ext_call.return_data[0]:
                revert with 0, 'SafeMath: subtraction overflow'
            if eth.balance(this.address) > eth.balance(this.address):
                revert with 0, 'SafeMath: subtraction overflow'
            emit 0x81e6d68f: Mask(255, 1, ext_call.return_data[0]), 0
        require ext_code.size(address(sub_85b374c3Address))
        staticcall address(sub_85b374c3Address).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > 0:
            if ext_call.return_data[0]:
                require ext_code.size(sub_33aa2191Address)
                staticcall sub_33aa2191Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(sub_85b374c3Address))
                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args zapAddress, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(sub_1458100bAddress)
                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args zapAddress, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(sub_33aa2191Address)
                call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args zapAddress, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(address(sub_85b374c3Address))
                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args sub_f6c6e5e8Address, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(sub_1458100bAddress)
                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args sub_f6c6e5e8Address, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_code.size(sub_33aa2191Address)
                call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args sub_f6c6e5e8Address, -1
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                emit 0xcdb5839a: ext_call.return_data[0]
                require ext_code.size(zapAddress)
                call zapAddress.0xcee6202c with:
                     gas gas_remaining wei
                    args address(sub_85b374c3Address), ext_call.return_data[0], sub_33aa2191Address, sub_f6c6e5e8Address, this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require ext_code.size(sub_33aa2191Address)
                staticcall sub_33aa2191Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                if ext_call.return_data[0] > ext_call.return_data[0]:
                    revert with 0, 'SafeMath: subtraction overflow'
            emit 0x1aa29c48: ext_call.return_data[0], 0
            require ext_code.size(address(sub_85b374c3Address))
            staticcall address(sub_85b374c3Address).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(sub_33aa2191Address)
            call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args sub_f088996fAddress, -1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_code.size(sub_f088996fAddress)
            call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                 gas gas_remaining wei
                args 1, 0
            if not ext_call.success:
                revert with 0, 'tshare-wftm LP deposit failed'
            require ext_code.size(address(sub_85b374c3Address))
            staticcall address(sub_85b374c3Address).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            if ext_call.return_data[0] > ext_call.return_data[0]:
                revert with 0, 'SafeMath: subtraction overflow'
            emit 0x8ced237d: 0
    require ext_code.size(address(sub_85b374c3Address))
    staticcall address(sub_85b374c3Address).0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0]:
        require ext_code.size(address(sub_85b374c3Address))
        call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args sub_63f96cf4Address, -1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(sub_63f96cf4Address)
        call sub_63f96cf4Address.stake(uint256 arg1) with:
             gas gas_remaining wei
            args ext_call.return_data[0]
        if not ext_call.success:
            revert with 0, 'masonry staking failed'
        emit 0xe4dba445: ext_call.return_data[0]
}

function compound() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    else:
        require ext_code.size(sub_63f96cf4Address)
        staticcall sub_63f96cf4Address.canClaimReward(address arg1) with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        else:
            require return_data.size >= 32
            if not ext_call.return_data[0]:
                if owner != msg.sender:
                    revert with 0, 'Ownable: caller is not the owner'
                else:
                    require ext_code.size(sub_7abd5a1cAddress)
                    staticcall sub_7abd5a1cAddress.consult(address arg1, uint256 arg2) with:
                            gas gas_remaining wei
                           args address(sub_dbd33e45Address), 10^18
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    else:
                        require return_data.size >= 32
                        require ext_code.size(address(sub_dbd33e45Address))
                        staticcall address(sub_dbd33e45Address).0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require return_data.size >= 32
                            if ext_call.return_data[0]:
                                require ext_code.size(address(sub_dbd33e45Address))
                                staticcall address(sub_dbd33e45Address).taxRate() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require ext_code.size(address(sub_dbd33e45Address))
                                    staticcall address(sub_dbd33e45Address).0x70a08231 with:
                                            gas gas_remaining wei
                                           args this.address
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require ext_code.size(sub_7abd5a1cAddress)
                                        staticcall sub_7abd5a1cAddress.consult(address arg1, uint256 arg2) with:
                                                gas gas_remaining wei
                                               args address(sub_dbd33e45Address), ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            if ext_call.return_data[14 len 18] + eth.balance(this.address) < ext_call.return_data[14 len 18]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            else:
                                                if ext_call.return_data[14 len 18] >= ext_call.return_data[14 len 18] + eth.balance(this.address) / 2:
                                                    if Mask(255, 1, ext_call.return_data[0]):
                                                        require ext_call.return_data[0] / 2
                                                        if ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 2 != Mask(144, 0, ext_call.return_data[0]):
                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                        32,
                                                                        33,
                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                        mem[197 len 31]
                                                        else:
                                                            if ext_call.return_data[0] > 10000:
                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                            else:
                                                                if -ext_call.return_data[0] + 10000:
                                                                    require -ext_call.return_data[0] + 10000
                                                                    if (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / -ext_call.return_data[0] + 10000 != ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18:
                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                    32,
                                                                                    33,
                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                    mem[197 len 31]
                                                                    else:
                                                                        if (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000:
                                                                            require (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000
                                                                            if 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 != 8000:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                            32,
                                                                                            33,
                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                            mem[197 len 31]
                                                                            else:
                                                                                mem[96] = 2
                                                                                mem[128] = address(sub_dbd33e45Address)
                                                                                mem[160] = sub_1458100bAddress
                                                                                require ext_code.size(sub_1458100bAddress)
                                                                                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args sub_f6c6e5e8Address, -1
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    require return_data.size >= 32
                                                                                    require ext_code.size(address(sub_dbd33e45Address))
                                                                                    call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args sub_f6c6e5e8Address, -1
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        if ext_call.return_data[0] / 2 <= 0:
                                                                                            revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                        else:
                                                                                            if 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000 <= 0:
                                                                                                revert with 0, 
                                                                                                            32,
                                                                                                            46,
                                                                                                            0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                            mem[306 len 18]
                                                                                            else:
                                                                                                emit 0x98a68058: Mask(255, 1, ext_call.return_data[0]), 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000
                                                                                                mem[192] = 0x791ac94700000000000000000000000000000000000000000000000000000000
                                                                                                mem[196] = ext_call.return_data[0] / 2
                                                                                                mem[228] = 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000
                                                                                                mem[292] = this.address
                                                                                                mem[324] = block.timestamp + 60
                                                                                                mem[260] = 160
                                                                                                mem[356] = 2
                                                                                                mem[388 len 0] = None
                                                                                                require ext_code.size(sub_f6c6e5e8Address)
                                                                                                call sub_f6c6e5e8Address.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args Mask(255, 1, ext_call.return_data[0]), 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000, Array(len=2, data=mem[388 len 64]), address(this.address), block.timestamp + 60
                                                                                                if not ext_call.success:
                                                                                                    if return_data.size >= 68:
                                                                                                        mem[0 len 4] = ext_call.return_data[0 len 4]
                                                                                                        if uint32(mem[4 len 28]) >> 224 == Error(string arg1):
                                                                                                            mem[192 len return_data.size - 4] = ext_call.return_data[4 len return_data.size - 4]
                                                                                                            if 0, Mask(224, 32, ext_call.return_data[0]) >> 32 <= test266151307() and 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 36 <= return_data.size:
                                                                                                                if mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] <= test266151307():
                                                                                                                    if 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] + 32 <= return_data.size:
                                                                                                                        mem[64] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + ceil32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]) + 224
                                                                                                                        if 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192:
                                                                                                                            _4039 = mem[64]
                                                                                                                            mem[mem[64] + 32] = 'swap tomb '
                                                                                                                            _4040 = mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]
                                                                                                                            mem[mem[64] + 42 len floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192])] = mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 224 len floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192])]
                                                                                                                            mem[mem[64] + floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]) + -(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32) + 74 len mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32] = mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]) + -(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32) + 256 len mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32]
                                                                                                                            _6241 = mem[64]
                                                                                                                            mem[64] = _4040 + mem[64] + 42
                                                                                                                            mem[_4040 + _4039 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                            mem[_4040 + _4039 + 46] = 32
                                                                                                                            mem[_4040 + _4039 + 78] = mem[_6241]
                                                                                                                            _6244 = mem[_6241]
                                                                                                                            mem[_4040 + _4039 + 110 len ceil32(mem[_6241])] = mem[_6241 + 32 len ceil32(mem[_6241])]
                                                                                                                            if not _6244 % 32:
                                                                                                                                revert with memory
                                                                                                                                  from mem[64]
                                                                                                                                   len _6244 + _4040 + _4039 + -mem[64] + 110
                                                                                                                            else:
                                                                                                                                mem[floor32(_6244) + _4040 + _4039 + 110] = mem[floor32(_6244) + _4040 + _4039 + -(_6244 % 32) + 142 len _6244 % 32]
                                                                                                                                revert with memory
                                                                                                                                  from mem[64]
                                                                                                                                   len floor32(_6244) + _4040 + _4039 + -mem[64] + 142
                                                                                                                        else:
                                                                                                                            if not return_data.size:
                                                                                                                                _4623 = mem[64]
                                                                                                                                mem[mem[64] + 32] = 'swap tomb '
                                                                                                                                mem[mem[64] + 42 len 0] = None
                                                                                                                                mem[mem[64] + 72 len 2] = uint16(stor4)
                                                                                                                                mem[mem[64] + 42 len 30] = Mask(176, 0, 'swap tomb '), mem[mem[64] + 64 len 8]
                                                                                                                                _6248 = mem[64]
                                                                                                                                mem[64] = mem[64] + 44
                                                                                                                                mem[_4623 + 44] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                mem[_4623 + 48] = 32
                                                                                                                                mem[_4623 + 80] = mem[_6248]
                                                                                                                                _6251 = mem[_6248]
                                                                                                                                mem[_4623 + 112 len ceil32(mem[_6248])] = mem[_6248 + 32 len ceil32(mem[_6248])]
                                                                                                                                if not _6251 % 32:
                                                                                                                                    revert with 0, 32, mem[_4623 + 80 len _6251 + 32]
                                                                                                                                else:
                                                                                                                                    mem[floor32(_6251) + _4623 + 112] = mem[floor32(_6251) + _4623 + -(_6251 % 32) + 144 len _6251 % 32]
                                                                                                                                    revert with 0, 32, mem[_4623 + 80 len floor32(_6251) + 64]
                                                                                                                            else:
                                                                                                                                _4422 = mem[64]
                                                                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                                                                mem[_4422] = return_data.size
                                                                                                                                mem[_4422 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                                _4625 = mem[64]
                                                                                                                                mem[mem[64] + 32] = 'swap tomb '
                                                                                                                                mem[mem[64] + 42 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                                mem[mem[64] + floor32(return_data.size) + -(return_data.size % 32) + 74 len return_data.size % 32] = mem[_4422 + floor32(return_data.size) + -(return_data.size % 32) + 64 len return_data.size % 32]
                                                                                                                                _6255 = mem[64]
                                                                                                                                mem[64] = return_data.size + mem[64] + 42
                                                                                                                                mem[return_data.size + _4625 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                mem[return_data.size + _4625 + 46] = 32
                                                                                                                                mem[return_data.size + _4625 + 78] = mem[_6255]
                                                                                                                                _6258 = mem[_6255]
                                                                                                                                mem[return_data.size + _4625 + 110 len ceil32(mem[_6255])] = mem[_6255 + 32 len ceil32(mem[_6255])]
                                                                                                                                if not _6258 % 32:
                                                                                                                                    revert with memory
                                                                                                                                      from mem[64]
                                                                                                                                       len _6258 + return_data.size + _4625 + -mem[64] + 110
                                                                                                                                else:
                                                                                                                                    mem[floor32(_6258) + return_data.size + _4625 + 110] = mem[floor32(_6258) + return_data.size + _4625 + -(_6258 % 32) + 142 len _6258 % 32]
                                                                                                                                    revert with memory
                                                                                                                                      from mem[64]
                                                                                                                                       len floor32(_6258) + return_data.size + _4625 + -mem[64] + 142
                                                                                                                    else:
                                                                                                                        if not return_data.size:
                                                                                                                            mem[224] = 'swap tomb '
                                                                                                                            mem[234 len 0] = None
                                                                                                                            mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                            mem[64] = 236
                                                                                                                            mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                            mem[240] = 32
                                                                                                                            mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                            mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                            if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                                revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                            else:
                                                                                                                                mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                                revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                        else:
                                                                                                                            mem[192] = return_data.size
                                                                                                                            mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                            mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                            mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                            mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                            if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                                revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                            else:
                                                                                                                                mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                                revert with 0, 
                                                                                                                                            32,
                                                                                                                                            mem[ceil32(return_data.size) + 193],
                                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                                else:
                                                                                                                    if not return_data.size:
                                                                                                                        mem[224] = 'swap tomb '
                                                                                                                        mem[234 len 0] = None
                                                                                                                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                        mem[64] = 236
                                                                                                                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                        mem[240] = 32
                                                                                                                        mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                        mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                        if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                            revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                        else:
                                                                                                                            mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                            revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                    else:
                                                                                                                        mem[192] = return_data.size
                                                                                                                        mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                        mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                        mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                        mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                        if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                            revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                        else:
                                                                                                                            mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                            revert with 0, 
                                                                                                                                        32,
                                                                                                                                        mem[ceil32(return_data.size) + 193],
                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                            else:
                                                                                                                if not return_data.size:
                                                                                                                    mem[224] = 'swap tomb '
                                                                                                                    mem[234 len 0] = None
                                                                                                                    mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                    mem[64] = 236
                                                                                                                    mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                    mem[240] = 32
                                                                                                                    mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                    mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                    if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                        revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                    else:
                                                                                                                        mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                        revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                else:
                                                                                                                    mem[192] = return_data.size
                                                                                                                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                    if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                    else:
                                                                                                                        mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                        revert with 0, 
                                                                                                                                    32,
                                                                                                                                    mem[ceil32(return_data.size) + 193],
                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                        else:
                                                                                                            if not return_data.size:
                                                                                                                mem[224] = 'swap tomb '
                                                                                                                mem[234 len 0] = None
                                                                                                                mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                mem[64] = 236
                                                                                                                mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                mem[240] = 32
                                                                                                                mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                    revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                else:
                                                                                                                    mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                    revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                            else:
                                                                                                                mem[192] = return_data.size
                                                                                                                mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                    revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                else:
                                                                                                                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                    revert with 0, 
                                                                                                                                32,
                                                                                                                                mem[ceil32(return_data.size) + 193],
                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                    else:
                                                                                                        if not return_data.size:
                                                                                                            mem[224] = 'swap tomb '
                                                                                                            mem[234 len 0] = None
                                                                                                            mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                            mem[64] = 236
                                                                                                            mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                            mem[240] = 32
                                                                                                            mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                            mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                            if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                            else:
                                                                                                                mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                        else:
                                                                                                            mem[192] = return_data.size
                                                                                                            mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                            mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                            mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                            mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                            mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                            mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                            mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                            if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                            else:
                                                                                                                mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                revert with 0, 
                                                                                                                            32,
                                                                                                                            mem[ceil32(return_data.size) + 193],
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                else:
                                                                                                    require ext_code.size(address(sub_dbd33e45Address))
                                                                                                    staticcall address(sub_dbd33e45Address).0x70a08231 with:
                                                                                                            gas gas_remaining wei
                                                                                                           args this.address
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        require return_data.size >= 32
                                                                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if 0 > ext_call.return_data[0]:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if eth.balance(this.address) > eth.balance(this.address):
                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                else:
                                                                                                                    emit 0x81e6d68f: Mask(255, 1, ext_call.return_data[0]), 0
                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                            gas gas_remaining wei
                                                                                                                           args this.address
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                    else:
                                                                                                                        require return_data.size >= 32
                                                                                                                        if ext_call.return_data[0] <= 0:
                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                    gas gas_remaining wei
                                                                                                                                   args this.address
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                            else:
                                                                                                                                require return_data.size >= 32
                                                                                                                                if ext_call.return_data[0]:
                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                         gas gas_remaining wei
                                                                                                                                        args sub_63f96cf4Address, -1
                                                                                                                                    if not ext_call.success:
                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                    else:
                                                                                                                                        require return_data.size >= 32
                                                                                                                                        require ext_code.size(sub_63f96cf4Address)
                                                                                                                                        call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                             gas gas_remaining wei
                                                                                                                                            args ext_call.return_data[0]
                                                                                                                                        if not ext_call.success:
                                                                                                                                            revert with 0, 'masonry staking failed'
                                                                                                                                        else:
                                                                                                                                            emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                else:
                                                                                                                        else:
                                                                                                                            if ext_call.return_data[0]:
                                                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                                                staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                                        gas gas_remaining wei
                                                                                                                                       args this.address
                                                                                                                                if not ext_call.success:
                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                else:
                                                                                                                                    require return_data.size >= 32
                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                         gas gas_remaining wei
                                                                                                                                        args zapAddress, -1
                                                                                                                                    if not ext_call.success:
                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                    else:
                                                                                                                                        require return_data.size >= 32
                                                                                                                                        require ext_code.size(sub_1458100bAddress)
                                                                                                                                        call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                                             gas gas_remaining wei
                                                                                                                                            args zapAddress, -1
                                                                                                                                        if not ext_call.success:
                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                        else:
                                                                                                                                            require return_data.size >= 32
                                                                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                                                                            call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                args zapAddress, -1
                                                                                                                                            if not ext_call.success:
                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                            else:
                                                                                                                                                require return_data.size >= 32
                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                    args sub_f6c6e5e8Address, -1
                                                                                                                                                if not ext_call.success:
                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                else:
                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                    require ext_code.size(sub_1458100bAddress)
                                                                                                                                                    call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                        args sub_f6c6e5e8Address, -1
                                                                                                                                                    if not ext_call.success:
                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                    else:
                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                        require ext_code.size(sub_33aa2191Address)
                                                                                                                                                        call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                            args sub_f6c6e5e8Address, -1
                                                                                                                                                        if not ext_call.success:
                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                        else:
                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                            emit 0xcdb5839a: ext_call.return_data[0]
                                                                                                                                                            require ext_code.size(zapAddress)
                                                                                                                                                            call zapAddress.0xcee6202c with:
                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                args address(sub_85b374c3Address), ext_call.return_data[0], sub_33aa2191Address, sub_f6c6e5e8Address, this.address
                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                            else:
                                                                                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                                                                                staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                                                                        gas gas_remaining wei
                                                                                                                                                                       args this.address
                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                else:
                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                                    else:
                                                                                                                                                                        emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                gas gas_remaining wei
                                                                                                                                                                               args this.address
                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                        else:
                                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                                                                                                            call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                                args sub_f088996fAddress, -1
                                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                            else:
                                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                                require ext_code.size(sub_f088996fAddress)
                                                                                                                                                                                call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                                    args 1, 0
                                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                                    revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                                                                                else:
                                                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                            gas gas_remaining wei
                                                                                                                                                                                           args this.address
                                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                    else:
                                                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                                                        else:
                                                                                                                                                                                            emit 0x8ced237d: 0
                                                                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                                    gas gas_remaining wei
                                                                                                                                                                                                   args this.address
                                                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                            else:
                                                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                                                if ext_call.return_data[0]:
                                                                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                                                                        args sub_63f96cf4Address, -1
                                                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                                    else:
                                                                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                                                                        require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                                                                        call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                                                                            args ext_call.return_data[0]
                                                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                                                            revert with 0, 'masonry staking failed'
                                                                                                                                                                                                        else:
                                                                                                                                                                                                            emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                                                                else:
                                                                                                                            else:
                                                                                                                                emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                        gas gas_remaining wei
                                                                                                                                       args this.address
                                                                                                                                if not ext_call.success:
                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                else:
                                                                                                                                    require return_data.size >= 32
                                                                                                                                    require ext_code.size(sub_33aa2191Address)
                                                                                                                                    call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                         gas gas_remaining wei
                                                                                                                                        args sub_f088996fAddress, -1
                                                                                                                                    if not ext_call.success:
                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                    else:
                                                                                                                                        require return_data.size >= 32
                                                                                                                                        require ext_code.size(sub_f088996fAddress)
                                                                                                                                        call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                                             gas gas_remaining wei
                                                                                                                                            args 1, 0
                                                                                                                                        if not ext_call.success:
                                                                                                                                            revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                                        else:
                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                    gas gas_remaining wei
                                                                                                                                                   args this.address
                                                                                                                                            if not ext_call.success:
                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                            else:
                                                                                                                                                require return_data.size >= 32
                                                                                                                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                else:
                                                                                                                                                    emit 0x8ced237d: 0
                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                            gas gas_remaining wei
                                                                                                                                                           args this.address
                                                                                                                                                    if not ext_call.success:
                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                    else:
                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                        if ext_call.return_data[0]:
                                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                            call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                args sub_63f96cf4Address, -1
                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                            else:
                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                                call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                    args ext_call.return_data[0]
                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                    revert with 0, 'masonry staking failed'
                                                                                                                                                                else:
                                                                                                                                                                    emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                        else:
                                                                        else:
                                                                            require ext_code.size(sub_1458100bAddress)
                                                                            call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                 gas gas_remaining wei
                                                                                args sub_f6c6e5e8Address, -1
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            else:
                                                                                require return_data.size >= 32
                                                                                require ext_code.size(address(sub_dbd33e45Address))
                                                                                call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args sub_f6c6e5e8Address, -1
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    require return_data.size >= 32
                                                                                    if ext_call.return_data[0] / 2 <= 0:
                                                                                        revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                    else:
                                                                                        revert with 0, 
                                                                                                    32,
                                                                                                    46,
                                                                                                    0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                    mem[306 len 18]
                                                                else:
                                                                    require ext_code.size(sub_1458100bAddress)
                                                                    call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                         gas gas_remaining wei
                                                                        args sub_f6c6e5e8Address, -1
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        require ext_code.size(address(sub_dbd33e45Address))
                                                                        call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                             gas gas_remaining wei
                                                                            args sub_f6c6e5e8Address, -1
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            if ext_call.return_data[0] / 2 <= 0:
                                                                                revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                            else:
                                                                                revert with 0, 
                                                                                            32,
                                                                                            46,
                                                                                            0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                            mem[306 len 18]
                                                    else:
                                                        if ext_call.return_data[0] > 10000:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        else:
                                                            if -ext_call.return_data[0] + 10000:
                                                                require -ext_call.return_data[0] + 10000
                                                                if 0 / -ext_call.return_data[0] + 10000:
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                32,
                                                                                33,
                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[197 len 31]
                                                                else:
                                                                    require ext_code.size(sub_1458100bAddress)
                                                                    call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                         gas gas_remaining wei
                                                                        args sub_f6c6e5e8Address, -1
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        require ext_code.size(address(sub_dbd33e45Address))
                                                                        call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                             gas gas_remaining wei
                                                                            args sub_f6c6e5e8Address, -1
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            if ext_call.return_data[0] / 2 <= 0:
                                                                                revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                            else:
                                                                                revert with 0, 
                                                                                            32,
                                                                                            46,
                                                                                            0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                            mem[306 len 18]
                                                            else:
                                                                require ext_code.size(sub_1458100bAddress)
                                                                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                     gas gas_remaining wei
                                                                    args sub_f6c6e5e8Address, -1
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    require return_data.size >= 32
                                                                    require ext_code.size(address(sub_dbd33e45Address))
                                                                    call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                         gas gas_remaining wei
                                                                        args sub_f6c6e5e8Address, -1
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        if ext_call.return_data[0] / 2 <= 0:
                                                                            revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                        else:
                                                                            revert with 0, 
                                                                                        32,
                                                                                        46,
                                                                                        0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                        mem[306 len 18]
                                                else:
                                                    mem[96] = 2
                                                    mem[128] = address(sub_dbd33e45Address)
                                                    mem[160] = sub_1458100bAddress
                                                    require ext_code.size(sub_1458100bAddress)
                                                    call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args sub_f6c6e5e8Address, -1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_code.size(address(sub_dbd33e45Address))
                                                        call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args sub_f6c6e5e8Address, -1
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[0] <= 0:
                                                                revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                            else:
                                                                if eth.balance(this.address) <= 0:
                                                                    revert with 0, 
                                                                                32,
                                                                                46,
                                                                                0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                mem[306 len 18]
                                                                else:
                                                                    emit 0x98a68058: ext_call.return_data[0], eth.balance(this.address)
                                                                    mem[192] = 0x791ac94700000000000000000000000000000000000000000000000000000000
                                                                    mem[196] = ext_call.return_data[0]
                                                                    mem[228] = eth.balance(this.address)
                                                                    mem[292] = this.address
                                                                    mem[324] = block.timestamp + 60
                                                                    mem[260] = 160
                                                                    mem[356] = 2
                                                                    mem[388 len 0] = None
                                                                    require ext_code.size(sub_f6c6e5e8Address)
                                                                    call sub_f6c6e5e8Address.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                         gas gas_remaining wei
                                                                        args ext_call.return_data[0], eth.balance(this.address), Array(len=2, data=mem[388 len 64]), address(this.address), block.timestamp + 60
                                                                    if not ext_call.success:
                                                                        if return_data.size >= 68:
                                                                            mem[0 len 4] = ext_call.return_data[0 len 4]
                                                                            if uint32(mem[4 len 28]) >> 224 == Error(string arg1):
                                                                                mem[192 len return_data.size - 4] = ext_call.return_data[4 len return_data.size - 4]
                                                                                if 0, ext_call.return_data[0 len 28] <= test266151307() and 0, ext_call.return_data[0 len 28] + 36 <= return_data.size:
                                                                                    if mem[0, ext_call.return_data[0 len 28] + 192] <= test266151307():
                                                                                        if 0, ext_call.return_data[0 len 28] + mem[0, ext_call.return_data[0 len 28] + 192] + 32 <= return_data.size:
                                                                                            mem[64] = 0, ext_call.return_data[0 len 28] + ceil32(mem[0, ext_call.return_data[0 len 28] + 192]) + 224
                                                                                            if 0, ext_call.return_data[0 len 28] + 192:
                                                                                                _4064 = mem[64]
                                                                                                mem[mem[64] + 32] = 'swap tomb '
                                                                                                _4065 = mem[0, ext_call.return_data[0 len 28] + 192]
                                                                                                mem[mem[64] + 42 len floor32(mem[0, ext_call.return_data[0 len 28] + 192])] = mem[0, ext_call.return_data[0 len 28] + 224 len floor32(mem[0, ext_call.return_data[0 len 28] + 192])]
                                                                                                mem[mem[64] + floor32(mem[0, ext_call.return_data[0 len 28] + 192]) + -(mem[0, ext_call.return_data[0 len 28] + 192] % 32) + 74 len mem[0, ext_call.return_data[0 len 28] + 192] % 32] = mem[0, ext_call.return_data[0 len 28] + floor32(mem[0, ext_call.return_data[0 len 28] + 192]) + -(mem[0, ext_call.return_data[0 len 28] + 192] % 32) + 256 len mem[0, ext_call.return_data[0 len 28] + 192] % 32]
                                                                                                _6332 = mem[64]
                                                                                                mem[64] = _4065 + mem[64] + 42
                                                                                                mem[_4065 + _4064 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                mem[_4065 + _4064 + 46] = 32
                                                                                                mem[_4065 + _4064 + 78] = mem[_6332]
                                                                                                _6335 = mem[_6332]
                                                                                                mem[_4065 + _4064 + 110 len ceil32(mem[_6332])] = mem[_6332 + 32 len ceil32(mem[_6332])]
                                                                                                if not _6335 % 32:
                                                                                                    revert with 0, 32, mem[_4065 + _4064 + 78 len _6335 + 32]
                                                                                                else:
                                                                                                    mem[floor32(_6335) + _4065 + _4064 + 110] = mem[floor32(_6335) + _4065 + _4064 + -(_6335 % 32) + 142 len _6335 % 32]
                                                                                                    revert with 0, 32, mem[_4065 + _4064 + 78 len floor32(_6335) + 64]
                                                                                            else:
                                                                                                if not return_data.size:
                                                                                                    _4647 = mem[64]
                                                                                                    mem[mem[64] + 32] = 'swap tomb '
                                                                                                    mem[mem[64] + 42 len 0] = None
                                                                                                    mem[mem[64] + 72 len 2] = uint16(stor4)
                                                                                                    mem[mem[64] + 42 len 30] = Mask(176, 0, 'swap tomb '), mem[mem[64] + 64 len 8]
                                                                                                    _6339 = mem[64]
                                                                                                    mem[64] = mem[64] + 44
                                                                                                    mem[_4647 + 44] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                    mem[_4647 + 48] = 32
                                                                                                    mem[_4647 + 80] = mem[_6339]
                                                                                                    _6342 = mem[_6339]
                                                                                                    mem[_4647 + 112 len ceil32(mem[_6339])] = mem[_6339 + 32 len ceil32(mem[_6339])]
                                                                                                    if not _6342 % 32:
                                                                                                        revert with 0, 32, mem[_4647 + 80 len _6342 + 32]
                                                                                                    else:
                                                                                                        mem[floor32(_6342) + _4647 + 112] = mem[floor32(_6342) + _4647 + -(_6342 % 32) + 144 len _6342 % 32]
                                                                                                        revert with 0, 32, mem[_4647 + 80 len floor32(_6342) + 64]
                                                                                                else:
                                                                                                    _4448 = mem[64]
                                                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                                    mem[_4448] = return_data.size
                                                                                                    mem[_4448 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                    _4649 = mem[64]
                                                                                                    mem[mem[64] + 32] = 'swap tomb '
                                                                                                    mem[mem[64] + 42 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                    mem[mem[64] + floor32(return_data.size) + -(return_data.size % 32) + 74 len return_data.size % 32] = mem[_4448 + floor32(return_data.size) + -(return_data.size % 32) + 64 len return_data.size % 32]
                                                                                                    _6346 = mem[64]
                                                                                                    mem[64] = return_data.size + mem[64] + 42
                                                                                                    mem[return_data.size + _4649 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                    mem[return_data.size + _4649 + 46] = 32
                                                                                                    mem[return_data.size + _4649 + 78] = mem[_6346]
                                                                                                    _6349 = mem[_6346]
                                                                                                    mem[return_data.size + _4649 + 110 len ceil32(mem[_6346])] = mem[_6346 + 32 len ceil32(mem[_6346])]
                                                                                                    if not _6349 % 32:
                                                                                                        revert with memory
                                                                                                          from mem[64]
                                                                                                           len _6349 + return_data.size + _4649 + -mem[64] + 110
                                                                                                    else:
                                                                                                        mem[floor32(_6349) + return_data.size + _4649 + 110] = mem[floor32(_6349) + return_data.size + _4649 + -(_6349 % 32) + 142 len _6349 % 32]
                                                                                                        revert with memory
                                                                                                          from mem[64]
                                                                                                           len floor32(_6349) + return_data.size + _4649 + -mem[64] + 142
                                                                                        else:
                                                                                            if not return_data.size:
                                                                                                mem[224] = 'swap tomb '
                                                                                                mem[234 len 0] = None
                                                                                                mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                                mem[64] = 236
                                                                                                mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                mem[240] = 32
                                                                                                mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                                mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                                if not ext_call.return_data[0 len 28] % 32:
                                                                                                    revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                                else:
                                                                                                    mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                                    revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                            else:
                                                                                                mem[192] = return_data.size
                                                                                                mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                    revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                else:
                                                                                                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                    revert with 0, 
                                                                                                                32,
                                                                                                                mem[ceil32(return_data.size) + 193],
                                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                    else:
                                                                                        if not return_data.size:
                                                                                            mem[224] = 'swap tomb '
                                                                                            mem[234 len 0] = None
                                                                                            mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                            mem[64] = 236
                                                                                            mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                            mem[240] = 32
                                                                                            mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                            mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                            if not ext_call.return_data[0 len 28] % 32:
                                                                                                revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                            else:
                                                                                                mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                                revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                        else:
                                                                                            mem[192] = return_data.size
                                                                                            mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                            mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                            mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                            mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                            mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                            mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                            mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                            if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                            else:
                                                                                                mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                revert with 0, 
                                                                                                            32,
                                                                                                            mem[ceil32(return_data.size) + 193],
                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                else:
                                                                                    if not return_data.size:
                                                                                        mem[224] = 'swap tomb '
                                                                                        mem[234 len 0] = None
                                                                                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                        mem[64] = 236
                                                                                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[240] = 32
                                                                                        mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                        mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                        if not ext_call.return_data[0 len 28] % 32:
                                                                                            revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                        else:
                                                                                            mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                            revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                    else:
                                                                                        mem[192] = return_data.size
                                                                                        mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                        mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                        mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                        mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                        mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                        mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                        if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                            revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                        else:
                                                                                            mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                            revert with 0, 
                                                                                                        32,
                                                                                                        mem[ceil32(return_data.size) + 193],
                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                            else:
                                                                                if not return_data.size:
                                                                                    mem[224] = 'swap tomb '
                                                                                    mem[234 len 0] = None
                                                                                    mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                    mem[64] = 236
                                                                                    mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[240] = 32
                                                                                    mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                    mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                    if not ext_call.return_data[0 len 28] % 32:
                                                                                        revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                    else:
                                                                                        mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                        revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                else:
                                                                                    mem[192] = return_data.size
                                                                                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                    if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                    else:
                                                                                        mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                        revert with 0, 
                                                                                                    32,
                                                                                                    mem[ceil32(return_data.size) + 193],
                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                        else:
                                                                            if not return_data.size:
                                                                                mem[224] = 'swap tomb '
                                                                                mem[234 len 0] = None
                                                                                mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                mem[64] = 236
                                                                                mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[240] = 32
                                                                                mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                if not ext_call.return_data[0 len 28] % 32:
                                                                                    revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                else:
                                                                                    mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                    revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                            else:
                                                                                mem[192] = return_data.size
                                                                                mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                    revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                else:
                                                                                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                    revert with 0, 
                                                                                                32,
                                                                                                mem[ceil32(return_data.size) + 193],
                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                    else:
                                                                        require ext_code.size(address(sub_dbd33e45Address))
                                                                        staticcall address(sub_dbd33e45Address).0x70a08231 with:
                                                                                gas gas_remaining wei
                                                                               args this.address
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                            else:
                                                                                if 0 > ext_call.return_data[0]:
                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                else:
                                                                                    if eth.balance(this.address) > eth.balance(this.address):
                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                    else:
                                                                                        emit 0x81e6d68f: ext_call.return_data[0], 0
                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                gas gas_remaining wei
                                                                                               args this.address
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            if ext_call.return_data[0] <= 0:
                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                        gas gas_remaining wei
                                                                                                       args this.address
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    require return_data.size >= 32
                                                                                                    if ext_call.return_data[0]:
                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                        call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args sub_63f96cf4Address, -1
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            require return_data.size >= 32
                                                                                                            require ext_code.size(sub_63f96cf4Address)
                                                                                                            call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args ext_call.return_data[0]
                                                                                                            if not ext_call.success:
                                                                                                                revert with 0, 'masonry staking failed'
                                                                                                            else:
                                                                                                                emit 0xe4dba445: ext_call.return_data[0]
                                                                                                    else:
                                                                                            else:
                                                                                                if ext_call.return_data[0]:
                                                                                                    require ext_code.size(sub_33aa2191Address)
                                                                                                    staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                            gas gas_remaining wei
                                                                                                           args this.address
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        require return_data.size >= 32
                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                        call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args zapAddress, -1
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            require return_data.size >= 32
                                                                                                            require ext_code.size(sub_1458100bAddress)
                                                                                                            call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args zapAddress, -1
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            else:
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                                call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args zapAddress, -1
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                else:
                                                                                                                    require return_data.size >= 32
                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args sub_f6c6e5e8Address, -1
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                    else:
                                                                                                                        require return_data.size >= 32
                                                                                                                        require ext_code.size(sub_1458100bAddress)
                                                                                                                        call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                             gas gas_remaining wei
                                                                                                                            args sub_f6c6e5e8Address, -1
                                                                                                                        if not ext_call.success:
                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                        else:
                                                                                                                            require return_data.size >= 32
                                                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                                                            call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                 gas gas_remaining wei
                                                                                                                                args sub_f6c6e5e8Address, -1
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                            else:
                                                                                                                                require return_data.size >= 32
                                                                                                                                emit 0xcdb5839a: ext_call.return_data[0]
                                                                                                                                require ext_code.size(zapAddress)
                                                                                                                                call zapAddress.0xcee6202c with:
                                                                                                                                     gas gas_remaining wei
                                                                                                                                    args address(sub_85b374c3Address), ext_call.return_data[0], sub_33aa2191Address, sub_f6c6e5e8Address, this.address
                                                                                                                                if not ext_call.success:
                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                else:
                                                                                                                                    require ext_code.size(sub_33aa2191Address)
                                                                                                                                    staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                                            gas gas_remaining wei
                                                                                                                                           args this.address
                                                                                                                                    if not ext_call.success:
                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                    else:
                                                                                                                                        require return_data.size >= 32
                                                                                                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                        else:
                                                                                                                                            emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                    gas gas_remaining wei
                                                                                                                                                   args this.address
                                                                                                                                            if not ext_call.success:
                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                            else:
                                                                                                                                                require return_data.size >= 32
                                                                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                                                                call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                    args sub_f088996fAddress, -1
                                                                                                                                                if not ext_call.success:
                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                else:
                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                    require ext_code.size(sub_f088996fAddress)
                                                                                                                                                    call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                        args 1, 0
                                                                                                                                                    if not ext_call.success:
                                                                                                                                                        revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                                                    else:
                                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                gas gas_remaining wei
                                                                                                                                                               args this.address
                                                                                                                                                        if not ext_call.success:
                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                        else:
                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                            else:
                                                                                                                                                                emit 0x8ced237d: 0
                                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                        gas gas_remaining wei
                                                                                                                                                                       args this.address
                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                else:
                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                    if ext_call.return_data[0]:
                                                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                        call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                                            args sub_63f96cf4Address, -1
                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                        else:
                                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                                            require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                                            call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                                args ext_call.return_data[0]
                                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                                revert with 0, 'masonry staking failed'
                                                                                                                                                                            else:
                                                                                                                                                                                emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                                    else:
                                                                                                else:
                                                                                                    emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                            gas gas_remaining wei
                                                                                                           args this.address
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        require return_data.size >= 32
                                                                                                        require ext_code.size(sub_33aa2191Address)
                                                                                                        call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args sub_f088996fAddress, -1
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            require return_data.size >= 32
                                                                                                            require ext_code.size(sub_f088996fAddress)
                                                                                                            call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args 1, 0
                                                                                                            if not ext_call.success:
                                                                                                                revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                            else:
                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                        gas gas_remaining wei
                                                                                                                       args this.address
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                else:
                                                                                                                    require return_data.size >= 32
                                                                                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                    else:
                                                                                                                        emit 0x8ced237d: 0
                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                gas gas_remaining wei
                                                                                                                               args this.address
                                                                                                                        if not ext_call.success:
                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                        else:
                                                                                                                            require return_data.size >= 32
                                                                                                                            if ext_call.return_data[0]:
                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                     gas gas_remaining wei
                                                                                                                                    args sub_63f96cf4Address, -1
                                                                                                                                if not ext_call.success:
                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                else:
                                                                                                                                    require return_data.size >= 32
                                                                                                                                    require ext_code.size(sub_63f96cf4Address)
                                                                                                                                    call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                         gas gas_remaining wei
                                                                                                                                        args ext_call.return_data[0]
                                                                                                                                    if not ext_call.success:
                                                                                                                                        revert with 0, 'masonry staking failed'
                                                                                                                                    else:
                                                                                                                                        emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                            else:
                            else:
                                require ext_code.size(address(sub_85b374c3Address))
                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require ext_code.size(sub_1e9b8c59Address)
                                    call sub_1e9b8c59Address.approve(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args sub_f088996fAddress, -1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require ext_code.size(sub_f088996fAddress)
                                        call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args 0
                                        if not ext_call.success:
                                            revert with 0, 'tomb-wftm LP deposit failed'
                                        else:
                                            require ext_code.size(address(sub_85b374c3Address))
                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                else:
                                                    require ext_code.size(address(sub_85b374c3Address))
                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] <= 0:
                                                            require ext_code.size(address(sub_85b374c3Address))
                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                require return_data.size >= 32
                                                                if ext_call.return_data[0]:
                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                         gas gas_remaining wei
                                                                        args sub_63f96cf4Address, -1
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        require ext_code.size(sub_63f96cf4Address)
                                                                        call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                             gas gas_remaining wei
                                                                            args ext_call.return_data[0]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'masonry staking failed'
                                                                        else:
                                                                            emit 0xe4dba445: ext_call.return_data[0]
                                                                else:
                                                        else:
                                                            if ext_call.return_data[0]:
                                                                require ext_code.size(sub_33aa2191Address)
                                                                staticcall sub_33aa2191Address.0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    require return_data.size >= 32
                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                         gas gas_remaining wei
                                                                        args zapAddress, -1
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        require ext_code.size(sub_1458100bAddress)
                                                                        call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                             gas gas_remaining wei
                                                                            args zapAddress, -1
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            require ext_code.size(sub_33aa2191Address)
                                                                            call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                 gas gas_remaining wei
                                                                                args zapAddress, -1
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            else:
                                                                                require return_data.size >= 32
                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args sub_f6c6e5e8Address, -1
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    require return_data.size >= 32
                                                                                    require ext_code.size(sub_1458100bAddress)
                                                                                    call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args sub_f6c6e5e8Address, -1
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        require ext_code.size(sub_33aa2191Address)
                                                                                        call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                             gas gas_remaining wei
                                                                                            args sub_f6c6e5e8Address, -1
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            emit 0xcdb5839a: ext_call.return_data[0]
                                                                                            require ext_code.size(zapAddress)
                                                                                            call zapAddress.0xcee6202c with:
                                                                                                 gas gas_remaining wei
                                                                                                args 0, uint32(stor5), ext_call.return_data[0], sub_33aa2191Address, sub_f6c6e5e8Address, address(this.address)
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            else:
                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                        gas gas_remaining wei
                                                                                                       args this.address
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    require return_data.size >= 32
                                                                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                gas gas_remaining wei
                                                                                                               args this.address
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            require return_data.size >= 32
                                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                                            call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args sub_f088996fAddress, -1
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            else:
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_code.size(sub_f088996fAddress)
                                                                                                                call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args 1, 0
                                                                                                                if not ext_call.success:
                                                                                                                    revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                else:
                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                            gas gas_remaining wei
                                                                                                                           args this.address
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                    else:
                                                                                                                        require return_data.size >= 32
                                                                                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                        else:
                                                                                                                            emit 0x8ced237d: 0
                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                    gas gas_remaining wei
                                                                                                                                   args this.address
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                            else:
                                                                                                                                require return_data.size >= 32
                                                                                                                                if ext_call.return_data[0]:
                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                         gas gas_remaining wei
                                                                                                                                        args sub_63f96cf4Address, -1
                                                                                                                                    if not ext_call.success:
                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                    else:
                                                                                                                                        require return_data.size >= 32
                                                                                                                                        require ext_code.size(sub_63f96cf4Address)
                                                                                                                                        call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                             gas gas_remaining wei
                                                                                                                                            args ext_call.return_data[0]
                                                                                                                                        if not ext_call.success:
                                                                                                                                            revert with 0, 'masonry staking failed'
                                                                                                                                        else:
                                                                                                                                            emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                else:
                                                            else:
                                                                emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    require return_data.size >= 32
                                                                    require ext_code.size(sub_33aa2191Address)
                                                                    call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                         gas gas_remaining wei
                                                                        args sub_f088996fAddress, -1
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        require ext_code.size(sub_f088996fAddress)
                                                                        call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                             gas gas_remaining wei
                                                                            args 1, 0
                                                                        if not ext_call.success:
                                                                            revert with 0, 'tshare-wftm LP deposit failed'
                                                                        else:
                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                    gas gas_remaining wei
                                                                                   args this.address
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            else:
                                                                                require return_data.size >= 32
                                                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                else:
                                                                                    emit 0x8ced237d: 0
                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                            gas gas_remaining wei
                                                                                           args this.address
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        if ext_call.return_data[0]:
                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                            call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                 gas gas_remaining wei
                                                                                                args sub_63f96cf4Address, -1
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            else:
                                                                                                require return_data.size >= 32
                                                                                                require ext_code.size(sub_63f96cf4Address)
                                                                                                call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args ext_call.return_data[0]
                                                                                                if not ext_call.success:
                                                                                                    revert with 0, 'masonry staking failed'
                                                                                                else:
                                                                                                    emit 0xe4dba445: ext_call.return_data[0]
                                                                                        else:
            else:
                require ext_code.size(sub_63f96cf4Address)
                staticcall sub_63f96cf4Address.0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                else:
                    require return_data.size >= 32
                    if ext_call.return_data[0] <= 0:
                        if owner != msg.sender:
                            revert with 0, 'Ownable: caller is not the owner'
                        else:
                            require ext_code.size(sub_7abd5a1cAddress)
                            staticcall sub_7abd5a1cAddress.consult(address arg1, uint256 arg2) with:
                                    gas gas_remaining wei
                                   args address(sub_dbd33e45Address), 10^18
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            else:
                                require return_data.size >= 32
                                require ext_code.size(address(sub_dbd33e45Address))
                                staticcall address(sub_dbd33e45Address).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    if ext_call.return_data[0]:
                                        require ext_code.size(address(sub_dbd33e45Address))
                                        staticcall address(sub_dbd33e45Address).taxRate() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_code.size(address(sub_dbd33e45Address))
                                            staticcall address(sub_dbd33e45Address).0x70a08231 with:
                                                    gas gas_remaining wei
                                                   args this.address
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_code.size(sub_7abd5a1cAddress)
                                                staticcall sub_7abd5a1cAddress.consult(address arg1, uint256 arg2) with:
                                                        gas gas_remaining wei
                                                       args address(sub_dbd33e45Address), ext_call.return_data[0]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    if ext_call.return_data[14 len 18] + eth.balance(this.address) < ext_call.return_data[14 len 18]:
                                                        revert with 0, 'SafeMath: addition overflow'
                                                    else:
                                                        if ext_call.return_data[14 len 18] >= ext_call.return_data[14 len 18] + eth.balance(this.address) / 2:
                                                            if Mask(255, 1, ext_call.return_data[0]):
                                                                require ext_call.return_data[0] / 2
                                                                if ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 2 != Mask(144, 0, ext_call.return_data[0]):
                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                32,
                                                                                33,
                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                mem[197 len 31]
                                                                else:
                                                                    if ext_call.return_data[0] > 10000:
                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                    else:
                                                                        if -ext_call.return_data[0] + 10000:
                                                                            require -ext_call.return_data[0] + 10000
                                                                            if (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / -ext_call.return_data[0] + 10000 != ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18:
                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                            32,
                                                                                            33,
                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                            mem[197 len 31]
                                                                            else:
                                                                                if (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000:
                                                                                    require (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000
                                                                                    if 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 != 8000:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        mem[96] = 2
                                                                                        mem[128] = address(sub_dbd33e45Address)
                                                                                        mem[160] = sub_1458100bAddress
                                                                                        require ext_code.size(sub_1458100bAddress)
                                                                                        call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                             gas gas_remaining wei
                                                                                            args sub_f6c6e5e8Address, -1
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            require ext_code.size(address(sub_dbd33e45Address))
                                                                                            call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                                 gas gas_remaining wei
                                                                                                args sub_f6c6e5e8Address, -1
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            else:
                                                                                                require return_data.size >= 32
                                                                                                if ext_call.return_data[0] / 2 <= 0:
                                                                                                    revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                                else:
                                                                                                    if 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000 <= 0:
                                                                                                        revert with 0, 
                                                                                                                    32,
                                                                                                                    46,
                                                                                                                    0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                                    mem[306 len 18]
                                                                                                    else:
                                                                                                        emit 0x98a68058: Mask(255, 1, ext_call.return_data[0]), 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000
                                                                                                        mem[192] = 0x791ac94700000000000000000000000000000000000000000000000000000000
                                                                                                        mem[196] = ext_call.return_data[0] / 2
                                                                                                        mem[228] = 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000
                                                                                                        mem[292] = this.address
                                                                                                        mem[324] = block.timestamp + 60
                                                                                                        mem[260] = 160
                                                                                                        mem[356] = 2
                                                                                                        mem[388 len 0] = None
                                                                                                        require ext_code.size(sub_f6c6e5e8Address)
                                                                                                        call sub_f6c6e5e8Address.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args Mask(255, 1, ext_call.return_data[0]), 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000, Array(len=2, data=mem[388 len 64]), address(this.address), block.timestamp + 60
                                                                                                        if not ext_call.success:
                                                                                                            if return_data.size >= 68:
                                                                                                                mem[0 len 4] = ext_call.return_data[0 len 4]
                                                                                                                if uint32(mem[4 len 28]) >> 224 == Error(string arg1):
                                                                                                                    mem[192 len return_data.size - 4] = ext_call.return_data[4 len return_data.size - 4]
                                                                                                                    if 0, Mask(224, 32, ext_call.return_data[0]) >> 32 <= test266151307() and 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 36 <= return_data.size:
                                                                                                                        if mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] <= test266151307():
                                                                                                                            if 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] + 32 <= return_data.size:
                                                                                                                                mem[64] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + ceil32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]) + 224
                                                                                                                                if 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192:
                                                                                                                                    _4089 = mem[64]
                                                                                                                                    mem[mem[64] + 32] = 'swap tomb '
                                                                                                                                    _4090 = mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]
                                                                                                                                    mem[mem[64] + 42 len floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192])] = mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 224 len floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192])]
                                                                                                                                    mem[mem[64] + floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]) + -(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32) + 74 len mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32] = mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]) + -(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32) + 256 len mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32]
                                                                                                                                    _6423 = mem[64]
                                                                                                                                    mem[64] = _4090 + mem[64] + 42
                                                                                                                                    mem[_4090 + _4089 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                    mem[_4090 + _4089 + 46] = 32
                                                                                                                                    mem[_4090 + _4089 + 78] = mem[_6423]
                                                                                                                                    _6426 = mem[_6423]
                                                                                                                                    mem[_4090 + _4089 + 110 len ceil32(mem[_6423])] = mem[_6423 + 32 len ceil32(mem[_6423])]
                                                                                                                                    if not _6426 % 32:
                                                                                                                                        revert with memory
                                                                                                                                          from mem[64]
                                                                                                                                           len _6426 + _4090 + _4089 + -mem[64] + 110
                                                                                                                                    else:
                                                                                                                                        mem[floor32(_6426) + _4090 + _4089 + 110] = mem[floor32(_6426) + _4090 + _4089 + -(_6426 % 32) + 142 len _6426 % 32]
                                                                                                                                        revert with memory
                                                                                                                                          from mem[64]
                                                                                                                                           len floor32(_6426) + _4090 + _4089 + -mem[64] + 142
                                                                                                                                else:
                                                                                                                                    if not return_data.size:
                                                                                                                                        _4671 = mem[64]
                                                                                                                                        mem[mem[64] + 32] = 'swap tomb '
                                                                                                                                        mem[mem[64] + 42 len 0] = None
                                                                                                                                        mem[mem[64] + 72 len 2] = uint16(stor4)
                                                                                                                                        mem[mem[64] + 42 len 30] = Mask(176, 0, 'swap tomb '), mem[mem[64] + 64 len 8]
                                                                                                                                        _6430 = mem[64]
                                                                                                                                        mem[64] = mem[64] + 44
                                                                                                                                        mem[_4671 + 44] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                        mem[_4671 + 48] = 32
                                                                                                                                        mem[_4671 + 80] = mem[_6430]
                                                                                                                                        _6433 = mem[_6430]
                                                                                                                                        mem[_4671 + 112 len ceil32(mem[_6430])] = mem[_6430 + 32 len ceil32(mem[_6430])]
                                                                                                                                        if not _6433 % 32:
                                                                                                                                            revert with 0, 32, mem[_4671 + 80 len _6433 + 32]
                                                                                                                                        else:
                                                                                                                                            mem[floor32(_6433) + _4671 + 112] = mem[floor32(_6433) + _4671 + -(_6433 % 32) + 144 len _6433 % 32]
                                                                                                                                            revert with 0, 32, mem[_4671 + 80 len floor32(_6433) + 64]
                                                                                                                                    else:
                                                                                                                                        _4474 = mem[64]
                                                                                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                                                                        mem[_4474] = return_data.size
                                                                                                                                        mem[_4474 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                                        _4673 = mem[64]
                                                                                                                                        mem[mem[64] + 32] = 'swap tomb '
                                                                                                                                        mem[mem[64] + 42 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                                        mem[mem[64] + floor32(return_data.size) + -(return_data.size % 32) + 74 len return_data.size % 32] = mem[_4474 + floor32(return_data.size) + -(return_data.size % 32) + 64 len return_data.size % 32]
                                                                                                                                        _6437 = mem[64]
                                                                                                                                        mem[64] = return_data.size + mem[64] + 42
                                                                                                                                        mem[return_data.size + _4673 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                        mem[return_data.size + _4673 + 46] = 32
                                                                                                                                        mem[return_data.size + _4673 + 78] = mem[_6437]
                                                                                                                                        _6440 = mem[_6437]
                                                                                                                                        mem[return_data.size + _4673 + 110 len ceil32(mem[_6437])] = mem[_6437 + 32 len ceil32(mem[_6437])]
                                                                                                                                        if not _6440 % 32:
                                                                                                                                            revert with memory
                                                                                                                                              from mem[64]
                                                                                                                                               len _6440 + return_data.size + _4673 + -mem[64] + 110
                                                                                                                                        else:
                                                                                                                                            mem[floor32(_6440) + return_data.size + _4673 + 110] = mem[floor32(_6440) + return_data.size + _4673 + -(_6440 % 32) + 142 len _6440 % 32]
                                                                                                                                            revert with memory
                                                                                                                                              from mem[64]
                                                                                                                                               len floor32(_6440) + return_data.size + _4673 + -mem[64] + 142
                                                                                                                            else:
                                                                                                                                if not return_data.size:
                                                                                                                                    mem[224] = 'swap tomb '
                                                                                                                                    mem[234 len 0] = None
                                                                                                                                    mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                                    mem[64] = 236
                                                                                                                                    mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                    mem[240] = 32
                                                                                                                                    mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                                    mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                                    if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                                        revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                                    else:
                                                                                                                                        mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                                        revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                                else:
                                                                                                                                    mem[192] = return_data.size
                                                                                                                                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                                    if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                                    else:
                                                                                                                                        mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                                        revert with 0, 
                                                                                                                                                    32,
                                                                                                                                                    mem[ceil32(return_data.size) + 193],
                                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                                        else:
                                                                                                                            if not return_data.size:
                                                                                                                                mem[224] = 'swap tomb '
                                                                                                                                mem[234 len 0] = None
                                                                                                                                mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                                mem[64] = 236
                                                                                                                                mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                mem[240] = 32
                                                                                                                                mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                                mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                                if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                                    revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                                else:
                                                                                                                                    mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                                    revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                            else:
                                                                                                                                mem[192] = return_data.size
                                                                                                                                mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                                mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                                mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                                mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                                if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                                    revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                                else:
                                                                                                                                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                                    revert with 0, 
                                                                                                                                                32,
                                                                                                                                                mem[ceil32(return_data.size) + 193],
                                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                                    else:
                                                                                                                        if not return_data.size:
                                                                                                                            mem[224] = 'swap tomb '
                                                                                                                            mem[234 len 0] = None
                                                                                                                            mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                            mem[64] = 236
                                                                                                                            mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                            mem[240] = 32
                                                                                                                            mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                            mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                            if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                                revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                            else:
                                                                                                                                mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                                revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                        else:
                                                                                                                            mem[192] = return_data.size
                                                                                                                            mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                            mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                            mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                            mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                            if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                                revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                            else:
                                                                                                                                mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                                revert with 0, 
                                                                                                                                            32,
                                                                                                                                            mem[ceil32(return_data.size) + 193],
                                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                                else:
                                                                                                                    if not return_data.size:
                                                                                                                        mem[224] = 'swap tomb '
                                                                                                                        mem[234 len 0] = None
                                                                                                                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                        mem[64] = 236
                                                                                                                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                        mem[240] = 32
                                                                                                                        mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                        mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                        if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                            revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                        else:
                                                                                                                            mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                            revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                    else:
                                                                                                                        mem[192] = return_data.size
                                                                                                                        mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                        mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                        mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                        mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                        if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                            revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                        else:
                                                                                                                            mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                            revert with 0, 
                                                                                                                                        32,
                                                                                                                                        mem[ceil32(return_data.size) + 193],
                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                            else:
                                                                                                                if not return_data.size:
                                                                                                                    mem[224] = 'swap tomb '
                                                                                                                    mem[234 len 0] = None
                                                                                                                    mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                    mem[64] = 236
                                                                                                                    mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                    mem[240] = 32
                                                                                                                    mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                    mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                    if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                        revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                    else:
                                                                                                                        mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                        revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                else:
                                                                                                                    mem[192] = return_data.size
                                                                                                                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                    if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                    else:
                                                                                                                        mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                        revert with 0, 
                                                                                                                                    32,
                                                                                                                                    mem[ceil32(return_data.size) + 193],
                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                        else:
                                                                                                            require ext_code.size(address(sub_dbd33e45Address))
                                                                                                            staticcall address(sub_dbd33e45Address).0x70a08231 with:
                                                                                                                    gas gas_remaining wei
                                                                                                                   args this.address
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            else:
                                                                                                                require return_data.size >= 32
                                                                                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                else:
                                                                                                                    if 0 > ext_call.return_data[0]:
                                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                    else:
                                                                                                                        if eth.balance(this.address) > eth.balance(this.address):
                                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                        else:
                                                                                                                            emit 0x81e6d68f: Mask(255, 1, ext_call.return_data[0]), 0
                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                    gas gas_remaining wei
                                                                                                                                   args this.address
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                            else:
                                                                                                                                require return_data.size >= 32
                                                                                                                                if ext_call.return_data[0] <= 0:
                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                            gas gas_remaining wei
                                                                                                                                           args this.address
                                                                                                                                    if not ext_call.success:
                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                    else:
                                                                                                                                        require return_data.size >= 32
                                                                                                                                        if ext_call.return_data[0]:
                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                            call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                args sub_63f96cf4Address, -1
                                                                                                                                            if not ext_call.success:
                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                            else:
                                                                                                                                                require return_data.size >= 32
                                                                                                                                                require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                    args ext_call.return_data[0]
                                                                                                                                                if not ext_call.success:
                                                                                                                                                    revert with 0, 'masonry staking failed'
                                                                                                                                                else:
                                                                                                                                                    emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                        else:
                                                                                                                                else:
                                                                                                                                    if ext_call.return_data[0]:
                                                                                                                                        require ext_code.size(sub_33aa2191Address)
                                                                                                                                        staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                                                gas gas_remaining wei
                                                                                                                                               args this.address
                                                                                                                                        if not ext_call.success:
                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                        else:
                                                                                                                                            require return_data.size >= 32
                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                            call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                args zapAddress, -1
                                                                                                                                            if not ext_call.success:
                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                            else:
                                                                                                                                                require return_data.size >= 32
                                                                                                                                                require ext_code.size(sub_1458100bAddress)
                                                                                                                                                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                    args zapAddress, -1
                                                                                                                                                if not ext_call.success:
                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                else:
                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                    require ext_code.size(sub_33aa2191Address)
                                                                                                                                                    call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                        args zapAddress, -1
                                                                                                                                                    if not ext_call.success:
                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                    else:
                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                        call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                            args sub_f6c6e5e8Address, -1
                                                                                                                                                        if not ext_call.success:
                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                        else:
                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                            require ext_code.size(sub_1458100bAddress)
                                                                                                                                                            call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                args sub_f6c6e5e8Address, -1
                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                            else:
                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                                                                                call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                    args sub_f6c6e5e8Address, -1
                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                else:
                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                    emit 0xcdb5839a: ext_call.return_data[0]
                                                                                                                                                                    require ext_code.size(zapAddress)
                                                                                                                                                                    call zapAddress.0xcee6202c with:
                                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                                        args address(sub_85b374c3Address), ext_call.return_data[0], sub_33aa2191Address, sub_f6c6e5e8Address, this.address
                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                    else:
                                                                                                                                                                        require ext_code.size(sub_33aa2191Address)
                                                                                                                                                                        staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                                                                                gas gas_remaining wei
                                                                                                                                                                               args this.address
                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                        else:
                                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                                            else:
                                                                                                                                                                                emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                        gas gas_remaining wei
                                                                                                                                                                                       args this.address
                                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                else:
                                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                                    require ext_code.size(sub_33aa2191Address)
                                                                                                                                                                                    call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                                                        args sub_f088996fAddress, -1
                                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                    else:
                                                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                                                        require ext_code.size(sub_f088996fAddress)
                                                                                                                                                                                        call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                                                            args 1, 0
                                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                                            revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                                                                                        else:
                                                                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                                    gas gas_remaining wei
                                                                                                                                                                                                   args this.address
                                                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                            else:
                                                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                                                                else:
                                                                                                                                                                                                    emit 0x8ced237d: 0
                                                                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                                            gas gas_remaining wei
                                                                                                                                                                                                           args this.address
                                                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                                    else:
                                                                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                                                                        if ext_call.return_data[0]:
                                                                                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                                            call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                                                                args sub_63f96cf4Address, -1
                                                                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                                            else:
                                                                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                                                                require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                                                                                call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                                                                    args ext_call.return_data[0]
                                                                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                                                                    revert with 0, 'masonry staking failed'
                                                                                                                                                                                                                else:
                                                                                                                                                                                                                    emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                                                                        else:
                                                                                                                                    else:
                                                                                                                                        emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                gas gas_remaining wei
                                                                                                                                               args this.address
                                                                                                                                        if not ext_call.success:
                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                        else:
                                                                                                                                            require return_data.size >= 32
                                                                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                                                                            call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                args sub_f088996fAddress, -1
                                                                                                                                            if not ext_call.success:
                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                            else:
                                                                                                                                                require return_data.size >= 32
                                                                                                                                                require ext_code.size(sub_f088996fAddress)
                                                                                                                                                call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                    args 1, 0
                                                                                                                                                if not ext_call.success:
                                                                                                                                                    revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                                                else:
                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                            gas gas_remaining wei
                                                                                                                                                           args this.address
                                                                                                                                                    if not ext_call.success:
                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                    else:
                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                        else:
                                                                                                                                                            emit 0x8ced237d: 0
                                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                    gas gas_remaining wei
                                                                                                                                                                   args this.address
                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                            else:
                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                if ext_call.return_data[0]:
                                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                                        args sub_63f96cf4Address, -1
                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                    else:
                                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                                        require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                                        call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                                            args ext_call.return_data[0]
                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                            revert with 0, 'masonry staking failed'
                                                                                                                                                                        else:
                                                                                                                                                                            emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                                else:
                                                                                else:
                                                                                    require ext_code.size(sub_1458100bAddress)
                                                                                    call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args sub_f6c6e5e8Address, -1
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        require ext_code.size(address(sub_dbd33e45Address))
                                                                                        call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                             gas gas_remaining wei
                                                                                            args sub_f6c6e5e8Address, -1
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            if ext_call.return_data[0] / 2 <= 0:
                                                                                                revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                            else:
                                                                                                revert with 0, 
                                                                                                            32,
                                                                                                            46,
                                                                                                            0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                            mem[306 len 18]
                                                                        else:
                                                                            require ext_code.size(sub_1458100bAddress)
                                                                            call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                 gas gas_remaining wei
                                                                                args sub_f6c6e5e8Address, -1
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            else:
                                                                                require return_data.size >= 32
                                                                                require ext_code.size(address(sub_dbd33e45Address))
                                                                                call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args sub_f6c6e5e8Address, -1
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    require return_data.size >= 32
                                                                                    if ext_call.return_data[0] / 2 <= 0:
                                                                                        revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                    else:
                                                                                        revert with 0, 
                                                                                                    32,
                                                                                                    46,
                                                                                                    0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                    mem[306 len 18]
                                                            else:
                                                                if ext_call.return_data[0] > 10000:
                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                else:
                                                                    if -ext_call.return_data[0] + 10000:
                                                                        require -ext_call.return_data[0] + 10000
                                                                        if 0 / -ext_call.return_data[0] + 10000:
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                        32,
                                                                                        33,
                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                        mem[197 len 31]
                                                                        else:
                                                                            require ext_code.size(sub_1458100bAddress)
                                                                            call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                 gas gas_remaining wei
                                                                                args sub_f6c6e5e8Address, -1
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            else:
                                                                                require return_data.size >= 32
                                                                                require ext_code.size(address(sub_dbd33e45Address))
                                                                                call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args sub_f6c6e5e8Address, -1
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    require return_data.size >= 32
                                                                                    if ext_call.return_data[0] / 2 <= 0:
                                                                                        revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                    else:
                                                                                        revert with 0, 
                                                                                                    32,
                                                                                                    46,
                                                                                                    0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                    mem[306 len 18]
                                                                    else:
                                                                        require ext_code.size(sub_1458100bAddress)
                                                                        call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                             gas gas_remaining wei
                                                                            args sub_f6c6e5e8Address, -1
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            require ext_code.size(address(sub_dbd33e45Address))
                                                                            call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                 gas gas_remaining wei
                                                                                args sub_f6c6e5e8Address, -1
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            else:
                                                                                require return_data.size >= 32
                                                                                if ext_call.return_data[0] / 2 <= 0:
                                                                                    revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                else:
                                                                                    revert with 0, 
                                                                                                32,
                                                                                                46,
                                                                                                0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                mem[306 len 18]
                                                        else:
                                                            mem[96] = 2
                                                            mem[128] = address(sub_dbd33e45Address)
                                                            mem[160] = sub_1458100bAddress
                                                            require ext_code.size(sub_1458100bAddress)
                                                            call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                 gas gas_remaining wei
                                                                args sub_f6c6e5e8Address, -1
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                require return_data.size >= 32
                                                                require ext_code.size(address(sub_dbd33e45Address))
                                                                call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                     gas gas_remaining wei
                                                                    args sub_f6c6e5e8Address, -1
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    require return_data.size >= 32
                                                                    if ext_call.return_data[0] <= 0:
                                                                        revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                    else:
                                                                        if eth.balance(this.address) <= 0:
                                                                            revert with 0, 
                                                                                        32,
                                                                                        46,
                                                                                        0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                        mem[306 len 18]
                                                                        else:
                                                                            emit 0x98a68058: ext_call.return_data[0], eth.balance(this.address)
                                                                            mem[192] = 0x791ac94700000000000000000000000000000000000000000000000000000000
                                                                            mem[196] = ext_call.return_data[0]
                                                                            mem[228] = eth.balance(this.address)
                                                                            mem[292] = this.address
                                                                            mem[324] = block.timestamp + 60
                                                                            mem[260] = 160
                                                                            mem[356] = 2
                                                                            mem[388 len 0] = None
                                                                            require ext_code.size(sub_f6c6e5e8Address)
                                                                            call sub_f6c6e5e8Address.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                 gas gas_remaining wei
                                                                                args ext_call.return_data[0], eth.balance(this.address), Array(len=2, data=mem[388 len 64]), address(this.address), block.timestamp + 60
                                                                            if not ext_call.success:
                                                                                if return_data.size >= 68:
                                                                                    mem[0 len 4] = ext_call.return_data[0 len 4]
                                                                                    if uint32(mem[4 len 28]) >> 224 == Error(string arg1):
                                                                                        mem[192 len return_data.size - 4] = ext_call.return_data[4 len return_data.size - 4]
                                                                                        if 0, ext_call.return_data[0 len 28] <= test266151307() and 0, ext_call.return_data[0 len 28] + 36 <= return_data.size:
                                                                                            if mem[0, ext_call.return_data[0 len 28] + 192] <= test266151307():
                                                                                                if 0, ext_call.return_data[0 len 28] + mem[0, ext_call.return_data[0 len 28] + 192] + 32 <= return_data.size:
                                                                                                    mem[64] = 0, ext_call.return_data[0 len 28] + ceil32(mem[0, ext_call.return_data[0 len 28] + 192]) + 224
                                                                                                    if 0, ext_call.return_data[0 len 28] + 192:
                                                                                                        _4114 = mem[64]
                                                                                                        mem[mem[64] + 32] = 'swap tomb '
                                                                                                        _4115 = mem[0, ext_call.return_data[0 len 28] + 192]
                                                                                                        mem[mem[64] + 42 len floor32(mem[0, ext_call.return_data[0 len 28] + 192])] = mem[0, ext_call.return_data[0 len 28] + 224 len floor32(mem[0, ext_call.return_data[0 len 28] + 192])]
                                                                                                        mem[mem[64] + floor32(mem[0, ext_call.return_data[0 len 28] + 192]) + -(mem[0, ext_call.return_data[0 len 28] + 192] % 32) + 74 len mem[0, ext_call.return_data[0 len 28] + 192] % 32] = mem[0, ext_call.return_data[0 len 28] + floor32(mem[0, ext_call.return_data[0 len 28] + 192]) + -(mem[0, ext_call.return_data[0 len 28] + 192] % 32) + 256 len mem[0, ext_call.return_data[0 len 28] + 192] % 32]
                                                                                                        _6514 = mem[64]
                                                                                                        mem[64] = _4115 + mem[64] + 42
                                                                                                        mem[_4115 + _4114 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                        mem[_4115 + _4114 + 46] = 32
                                                                                                        mem[_4115 + _4114 + 78] = mem[_6514]
                                                                                                        _6517 = mem[_6514]
                                                                                                        mem[_4115 + _4114 + 110 len ceil32(mem[_6514])] = mem[_6514 + 32 len ceil32(mem[_6514])]
                                                                                                        if not _6517 % 32:
                                                                                                            revert with 0, 32, mem[_4115 + _4114 + 78 len _6517 + 32]
                                                                                                        else:
                                                                                                            mem[floor32(_6517) + _4115 + _4114 + 110] = mem[floor32(_6517) + _4115 + _4114 + -(_6517 % 32) + 142 len _6517 % 32]
                                                                                                            revert with 0, 32, mem[_4115 + _4114 + 78 len floor32(_6517) + 64]
                                                                                                    else:
                                                                                                        if not return_data.size:
                                                                                                            _4695 = mem[64]
                                                                                                            mem[mem[64] + 32] = 'swap tomb '
                                                                                                            mem[mem[64] + 42 len 0] = None
                                                                                                            mem[mem[64] + 72 len 2] = uint16(stor4)
                                                                                                            mem[mem[64] + 42 len 30] = Mask(176, 0, 'swap tomb '), mem[mem[64] + 64 len 8]
                                                                                                            _6521 = mem[64]
                                                                                                            mem[64] = mem[64] + 44
                                                                                                            mem[_4695 + 44] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                            mem[_4695 + 48] = 32
                                                                                                            mem[_4695 + 80] = mem[_6521]
                                                                                                            _6524 = mem[_6521]
                                                                                                            mem[_4695 + 112 len ceil32(mem[_6521])] = mem[_6521 + 32 len ceil32(mem[_6521])]
                                                                                                            if not _6524 % 32:
                                                                                                                revert with 0, 32, mem[_4695 + 80 len _6524 + 32]
                                                                                                            else:
                                                                                                                mem[floor32(_6524) + _4695 + 112] = mem[floor32(_6524) + _4695 + -(_6524 % 32) + 144 len _6524 % 32]
                                                                                                                revert with 0, 32, mem[_4695 + 80 len floor32(_6524) + 64]
                                                                                                        else:
                                                                                                            _4500 = mem[64]
                                                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                                            mem[_4500] = return_data.size
                                                                                                            mem[_4500 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                            _4697 = mem[64]
                                                                                                            mem[mem[64] + 32] = 'swap tomb '
                                                                                                            mem[mem[64] + 42 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                            mem[mem[64] + floor32(return_data.size) + -(return_data.size % 32) + 74 len return_data.size % 32] = mem[_4500 + floor32(return_data.size) + -(return_data.size % 32) + 64 len return_data.size % 32]
                                                                                                            _6528 = mem[64]
                                                                                                            mem[64] = return_data.size + mem[64] + 42
                                                                                                            mem[return_data.size + _4697 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                            mem[return_data.size + _4697 + 46] = 32
                                                                                                            mem[return_data.size + _4697 + 78] = mem[_6528]
                                                                                                            _6531 = mem[_6528]
                                                                                                            mem[return_data.size + _4697 + 110 len ceil32(mem[_6528])] = mem[_6528 + 32 len ceil32(mem[_6528])]
                                                                                                            if not _6531 % 32:
                                                                                                                revert with memory
                                                                                                                  from mem[64]
                                                                                                                   len _6531 + return_data.size + _4697 + -mem[64] + 110
                                                                                                            else:
                                                                                                                mem[floor32(_6531) + return_data.size + _4697 + 110] = mem[floor32(_6531) + return_data.size + _4697 + -(_6531 % 32) + 142 len _6531 % 32]
                                                                                                                revert with memory
                                                                                                                  from mem[64]
                                                                                                                   len floor32(_6531) + return_data.size + _4697 + -mem[64] + 142
                                                                                                else:
                                                                                                    if not return_data.size:
                                                                                                        mem[224] = 'swap tomb '
                                                                                                        mem[234 len 0] = None
                                                                                                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                                        mem[64] = 236
                                                                                                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                        mem[240] = 32
                                                                                                        mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                                        mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                                        if not ext_call.return_data[0 len 28] % 32:
                                                                                                            revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                                        else:
                                                                                                            mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                                            revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                                    else:
                                                                                                        mem[192] = return_data.size
                                                                                                        mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                        mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                        mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                        mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                        mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                        mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                        mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                        if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                            revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                        else:
                                                                                                            mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                            revert with 0, 
                                                                                                                        32,
                                                                                                                        mem[ceil32(return_data.size) + 193],
                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                            else:
                                                                                                if not return_data.size:
                                                                                                    mem[224] = 'swap tomb '
                                                                                                    mem[234 len 0] = None
                                                                                                    mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                                    mem[64] = 236
                                                                                                    mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                    mem[240] = 32
                                                                                                    mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                                    mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                                    if not ext_call.return_data[0 len 28] % 32:
                                                                                                        revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                                    else:
                                                                                                        mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                                        revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                                else:
                                                                                                    mem[192] = return_data.size
                                                                                                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                    if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                    else:
                                                                                                        mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                        revert with 0, 
                                                                                                                    32,
                                                                                                                    mem[ceil32(return_data.size) + 193],
                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                        else:
                                                                                            if not return_data.size:
                                                                                                mem[224] = 'swap tomb '
                                                                                                mem[234 len 0] = None
                                                                                                mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                                mem[64] = 236
                                                                                                mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                mem[240] = 32
                                                                                                mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                                mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                                if not ext_call.return_data[0 len 28] % 32:
                                                                                                    revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                                else:
                                                                                                    mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                                    revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                            else:
                                                                                                mem[192] = return_data.size
                                                                                                mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                    revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                else:
                                                                                                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                    revert with 0, 
                                                                                                                32,
                                                                                                                mem[ceil32(return_data.size) + 193],
                                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                    else:
                                                                                        if not return_data.size:
                                                                                            mem[224] = 'swap tomb '
                                                                                            mem[234 len 0] = None
                                                                                            mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                            mem[64] = 236
                                                                                            mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                            mem[240] = 32
                                                                                            mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                            mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                            if not ext_call.return_data[0 len 28] % 32:
                                                                                                revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                            else:
                                                                                                mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                                revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                        else:
                                                                                            mem[192] = return_data.size
                                                                                            mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                            mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                            mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                            mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                            mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                            mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                            mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                            if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                            else:
                                                                                                mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                revert with 0, 
                                                                                                            32,
                                                                                                            mem[ceil32(return_data.size) + 193],
                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                else:
                                                                                    if not return_data.size:
                                                                                        mem[224] = 'swap tomb '
                                                                                        mem[234 len 0] = None
                                                                                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                        mem[64] = 236
                                                                                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[240] = 32
                                                                                        mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                        mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                        if not ext_call.return_data[0 len 28] % 32:
                                                                                            revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                        else:
                                                                                            mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                            revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                    else:
                                                                                        mem[192] = return_data.size
                                                                                        mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                        mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                        mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                        mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                        mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                        mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                        if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                            revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                        else:
                                                                                            mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                            revert with 0, 
                                                                                                        32,
                                                                                                        mem[ceil32(return_data.size) + 193],
                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                            else:
                                                                                require ext_code.size(address(sub_dbd33e45Address))
                                                                                staticcall address(sub_dbd33e45Address).0x70a08231 with:
                                                                                        gas gas_remaining wei
                                                                                       args this.address
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    require return_data.size >= 32
                                                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                    else:
                                                                                        if 0 > ext_call.return_data[0]:
                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                        else:
                                                                                            if eth.balance(this.address) > eth.balance(this.address):
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                emit 0x81e6d68f: ext_call.return_data[0], 0
                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                        gas gas_remaining wei
                                                                                                       args this.address
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    require return_data.size >= 32
                                                                                                    if ext_call.return_data[0] <= 0:
                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                gas gas_remaining wei
                                                                                                               args this.address
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            require return_data.size >= 32
                                                                                                            if ext_call.return_data[0]:
                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args sub_63f96cf4Address, -1
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                else:
                                                                                                                    require return_data.size >= 32
                                                                                                                    require ext_code.size(sub_63f96cf4Address)
                                                                                                                    call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args ext_call.return_data[0]
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with 0, 'masonry staking failed'
                                                                                                                    else:
                                                                                                                        emit 0xe4dba445: ext_call.return_data[0]
                                                                                                            else:
                                                                                                    else:
                                                                                                        if ext_call.return_data[0]:
                                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                                            staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                    gas gas_remaining wei
                                                                                                                   args this.address
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            else:
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args zapAddress, -1
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                else:
                                                                                                                    require return_data.size >= 32
                                                                                                                    require ext_code.size(sub_1458100bAddress)
                                                                                                                    call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args zapAddress, -1
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                    else:
                                                                                                                        require return_data.size >= 32
                                                                                                                        require ext_code.size(sub_33aa2191Address)
                                                                                                                        call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                             gas gas_remaining wei
                                                                                                                            args zapAddress, -1
                                                                                                                        if not ext_call.success:
                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                        else:
                                                                                                                            require return_data.size >= 32
                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                            call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                 gas gas_remaining wei
                                                                                                                                args sub_f6c6e5e8Address, -1
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                            else:
                                                                                                                                require return_data.size >= 32
                                                                                                                                require ext_code.size(sub_1458100bAddress)
                                                                                                                                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                                     gas gas_remaining wei
                                                                                                                                    args sub_f6c6e5e8Address, -1
                                                                                                                                if not ext_call.success:
                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                else:
                                                                                                                                    require return_data.size >= 32
                                                                                                                                    require ext_code.size(sub_33aa2191Address)
                                                                                                                                    call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                         gas gas_remaining wei
                                                                                                                                        args sub_f6c6e5e8Address, -1
                                                                                                                                    if not ext_call.success:
                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                    else:
                                                                                                                                        require return_data.size >= 32
                                                                                                                                        emit 0xcdb5839a: ext_call.return_data[0]
                                                                                                                                        require ext_code.size(zapAddress)
                                                                                                                                        call zapAddress.0xcee6202c with:
                                                                                                                                             gas gas_remaining wei
                                                                                                                                            args address(sub_85b374c3Address), ext_call.return_data[0], sub_33aa2191Address, sub_f6c6e5e8Address, this.address
                                                                                                                                        if not ext_call.success:
                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                        else:
                                                                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                                                                            staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                                                    gas gas_remaining wei
                                                                                                                                                   args this.address
                                                                                                                                            if not ext_call.success:
                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                            else:
                                                                                                                                                require return_data.size >= 32
                                                                                                                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                else:
                                                                                                                                                    emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                            gas gas_remaining wei
                                                                                                                                                           args this.address
                                                                                                                                                    if not ext_call.success:
                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                    else:
                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                        require ext_code.size(sub_33aa2191Address)
                                                                                                                                                        call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                            args sub_f088996fAddress, -1
                                                                                                                                                        if not ext_call.success:
                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                        else:
                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                            require ext_code.size(sub_f088996fAddress)
                                                                                                                                                            call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                args 1, 0
                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                                                            else:
                                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                        gas gas_remaining wei
                                                                                                                                                                       args this.address
                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                else:
                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                                    else:
                                                                                                                                                                        emit 0x8ced237d: 0
                                                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                gas gas_remaining wei
                                                                                                                                                                               args this.address
                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                        else:
                                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                                            if ext_call.return_data[0]:
                                                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                                    args sub_63f96cf4Address, -1
                                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                else:
                                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                                    require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                                                    call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                                                        args ext_call.return_data[0]
                                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                                        revert with 0, 'masonry staking failed'
                                                                                                                                                                                    else:
                                                                                                                                                                                        emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                                            else:
                                                                                                        else:
                                                                                                            emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                    gas gas_remaining wei
                                                                                                                   args this.address
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            else:
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                                call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args sub_f088996fAddress, -1
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                else:
                                                                                                                    require return_data.size >= 32
                                                                                                                    require ext_code.size(sub_f088996fAddress)
                                                                                                                    call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args 1, 0
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                    else:
                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                gas gas_remaining wei
                                                                                                                               args this.address
                                                                                                                        if not ext_call.success:
                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                        else:
                                                                                                                            require return_data.size >= 32
                                                                                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                            else:
                                                                                                                                emit 0x8ced237d: 0
                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                        gas gas_remaining wei
                                                                                                                                       args this.address
                                                                                                                                if not ext_call.success:
                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                else:
                                                                                                                                    require return_data.size >= 32
                                                                                                                                    if ext_call.return_data[0]:
                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                        call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                             gas gas_remaining wei
                                                                                                                                            args sub_63f96cf4Address, -1
                                                                                                                                        if not ext_call.success:
                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                        else:
                                                                                                                                            require return_data.size >= 32
                                                                                                                                            require ext_code.size(sub_63f96cf4Address)
                                                                                                                                            call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                args ext_call.return_data[0]
                                                                                                                                            if not ext_call.success:
                                                                                                                                                revert with 0, 'masonry staking failed'
                                                                                                                                            else:
                                                                                                                                                emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                    else:
                                    else:
                                        require ext_code.size(address(sub_85b374c3Address))
                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            require ext_code.size(sub_1e9b8c59Address)
                                            call sub_1e9b8c59Address.approve(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args sub_f088996fAddress, -1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                require return_data.size >= 32
                                                require ext_code.size(sub_f088996fAddress)
                                                call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args 0
                                                if not ext_call.success:
                                                    revert with 0, 'tomb-wftm LP deposit failed'
                                                else:
                                                    require ext_code.size(address(sub_85b374c3Address))
                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                        else:
                                                            require ext_code.size(address(sub_85b374c3Address))
                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                require return_data.size >= 32
                                                                if ext_call.return_data[0] <= 0:
                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                            gas gas_remaining wei
                                                                           args this.address
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        if ext_call.return_data[0]:
                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                            call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                 gas gas_remaining wei
                                                                                args sub_63f96cf4Address, -1
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            else:
                                                                                require return_data.size >= 32
                                                                                require ext_code.size(sub_63f96cf4Address)
                                                                                call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                     gas gas_remaining wei
                                                                                    args ext_call.return_data[0]
                                                                                if not ext_call.success:
                                                                                    revert with 0, 'masonry staking failed'
                                                                                else:
                                                                                    emit 0xe4dba445: ext_call.return_data[0]
                                                                        else:
                                                                else:
                                                                    if ext_call.return_data[0]:
                                                                        require ext_code.size(sub_33aa2191Address)
                                                                        staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                gas gas_remaining wei
                                                                               args this.address
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                            call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                 gas gas_remaining wei
                                                                                args zapAddress, -1
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            else:
                                                                                require return_data.size >= 32
                                                                                require ext_code.size(sub_1458100bAddress)
                                                                                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args zapAddress, -1
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    require return_data.size >= 32
                                                                                    require ext_code.size(sub_33aa2191Address)
                                                                                    call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args zapAddress, -1
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                        call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                             gas gas_remaining wei
                                                                                            args sub_f6c6e5e8Address, -1
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            require ext_code.size(sub_1458100bAddress)
                                                                                            call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                 gas gas_remaining wei
                                                                                                args sub_f6c6e5e8Address, -1
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            else:
                                                                                                require return_data.size >= 32
                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args sub_f6c6e5e8Address, -1
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    require return_data.size >= 32
                                                                                                    emit 0xcdb5839a: ext_call.return_data[0]
                                                                                                    require ext_code.size(zapAddress)
                                                                                                    call zapAddress.0xcee6202c with:
                                                                                                         gas gas_remaining wei
                                                                                                        args 0, uint32(stor5), ext_call.return_data[0], sub_33aa2191Address, sub_f6c6e5e8Address, address(this.address)
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        require ext_code.size(sub_33aa2191Address)
                                                                                                        staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                gas gas_remaining wei
                                                                                                               args this.address
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            require return_data.size >= 32
                                                                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                        gas gas_remaining wei
                                                                                                                       args this.address
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                else:
                                                                                                                    require return_data.size >= 32
                                                                                                                    require ext_code.size(sub_33aa2191Address)
                                                                                                                    call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args sub_f088996fAddress, -1
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                    else:
                                                                                                                        require return_data.size >= 32
                                                                                                                        require ext_code.size(sub_f088996fAddress)
                                                                                                                        call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                             gas gas_remaining wei
                                                                                                                            args 1, 0
                                                                                                                        if not ext_call.success:
                                                                                                                            revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                        else:
                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                    gas gas_remaining wei
                                                                                                                                   args this.address
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                            else:
                                                                                                                                require return_data.size >= 32
                                                                                                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                else:
                                                                                                                                    emit 0x8ced237d: 0
                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                            gas gas_remaining wei
                                                                                                                                           args this.address
                                                                                                                                    if not ext_call.success:
                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                    else:
                                                                                                                                        require return_data.size >= 32
                                                                                                                                        if ext_call.return_data[0]:
                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                            call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                args sub_63f96cf4Address, -1
                                                                                                                                            if not ext_call.success:
                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                            else:
                                                                                                                                                require return_data.size >= 32
                                                                                                                                                require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                    args ext_call.return_data[0]
                                                                                                                                                if not ext_call.success:
                                                                                                                                                    revert with 0, 'masonry staking failed'
                                                                                                                                                else:
                                                                                                                                                    emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                        else:
                                                                    else:
                                                                        emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                gas gas_remaining wei
                                                                               args this.address
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            require ext_code.size(sub_33aa2191Address)
                                                                            call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                 gas gas_remaining wei
                                                                                args sub_f088996fAddress, -1
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            else:
                                                                                require return_data.size >= 32
                                                                                require ext_code.size(sub_f088996fAddress)
                                                                                call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args 1, 0
                                                                                if not ext_call.success:
                                                                                    revert with 0, 'tshare-wftm LP deposit failed'
                                                                                else:
                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                            gas gas_remaining wei
                                                                                           args this.address
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                        else:
                                                                                            emit 0x8ced237d: 0
                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                    gas gas_remaining wei
                                                                                                   args this.address
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            else:
                                                                                                require return_data.size >= 32
                                                                                                if ext_call.return_data[0]:
                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args sub_63f96cf4Address, -1
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        require return_data.size >= 32
                                                                                                        require ext_code.size(sub_63f96cf4Address)
                                                                                                        call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args ext_call.return_data[0]
                                                                                                        if not ext_call.success:
                                                                                                            revert with 0, 'masonry staking failed'
                                                                                                        else:
                                                                                                            emit 0xe4dba445: ext_call.return_data[0]
                                                                                                else:
                    else:
                        require ext_code.size(sub_7abd5a1cAddress)
                        staticcall sub_7abd5a1cAddress.consult(address arg1, uint256 arg2) with:
                                gas gas_remaining wei
                               args address(sub_dbd33e45Address), 10^18
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        else:
                            require return_data.size >= 32
                            if ext_call.return_data[14 len 18] <= sub_ad70d6f6:
                                if owner != msg.sender:
                                    revert with 0, 'Ownable: caller is not the owner'
                                else:
                                    require ext_code.size(sub_7abd5a1cAddress)
                                    staticcall sub_7abd5a1cAddress.consult(address arg1, uint256 arg2) with:
                                            gas gas_remaining wei
                                           args address(sub_dbd33e45Address), 10^18
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require return_data.size >= 32
                                        require ext_code.size(address(sub_dbd33e45Address))
                                        staticcall address(sub_dbd33e45Address).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            if ext_call.return_data[0]:
                                                require ext_code.size(address(sub_dbd33e45Address))
                                                staticcall address(sub_dbd33e45Address).taxRate() with:
                                                        gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_code.size(address(sub_dbd33e45Address))
                                                    staticcall address(sub_dbd33e45Address).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_code.size(sub_7abd5a1cAddress)
                                                        staticcall sub_7abd5a1cAddress.consult(address arg1, uint256 arg2) with:
                                                                gas gas_remaining wei
                                                               args address(sub_dbd33e45Address), ext_call.return_data[0]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            require return_data.size >= 32
                                                            if ext_call.return_data[14 len 18] + eth.balance(this.address) < ext_call.return_data[14 len 18]:
                                                                revert with 0, 'SafeMath: addition overflow'
                                                            else:
                                                                if ext_call.return_data[14 len 18] >= ext_call.return_data[14 len 18] + eth.balance(this.address) / 2:
                                                                    if Mask(255, 1, ext_call.return_data[0]):
                                                                        require ext_call.return_data[0] / 2
                                                                        if ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 2 != Mask(144, 0, ext_call.return_data[0]):
                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                        32,
                                                                                        33,
                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                        mem[197 len 31]
                                                                        else:
                                                                            if ext_call.return_data[0] > 10000:
                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                            else:
                                                                                if -ext_call.return_data[0] + 10000:
                                                                                    require -ext_call.return_data[0] + 10000
                                                                                    if (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / -ext_call.return_data[0] + 10000 != ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18:
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000:
                                                                                            require (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000
                                                                                            if 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 != 8000:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                mem[96] = 2
                                                                                                mem[128] = address(sub_dbd33e45Address)
                                                                                                mem[160] = sub_1458100bAddress
                                                                                                require ext_code.size(sub_1458100bAddress)
                                                                                                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args sub_f6c6e5e8Address, -1
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    require return_data.size >= 32
                                                                                                    require ext_code.size(address(sub_dbd33e45Address))
                                                                                                    call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args sub_f6c6e5e8Address, -1
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        require return_data.size >= 32
                                                                                                        if ext_call.return_data[0] / 2 <= 0:
                                                                                                            revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                                        else:
                                                                                                            if 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000 <= 0:
                                                                                                                revert with 0, 
                                                                                                                            32,
                                                                                                                            46,
                                                                                                                            0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                                            mem[306 len 18]
                                                                                                            else:
                                                                                                                emit 0x98a68058: Mask(255, 1, ext_call.return_data[0]), 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000
                                                                                                                mem[192] = 0x791ac94700000000000000000000000000000000000000000000000000000000
                                                                                                                mem[196] = ext_call.return_data[0] / 2
                                                                                                                mem[228] = 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000
                                                                                                                mem[292] = this.address
                                                                                                                mem[324] = block.timestamp + 60
                                                                                                                mem[260] = 160
                                                                                                                mem[356] = 2
                                                                                                                mem[388 len 0] = None
                                                                                                                require ext_code.size(sub_f6c6e5e8Address)
                                                                                                                call sub_f6c6e5e8Address.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args Mask(255, 1, ext_call.return_data[0]), 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000, Array(len=2, data=mem[388 len 64]), address(this.address), block.timestamp + 60
                                                                                                                if not ext_call.success:
                                                                                                                    if return_data.size >= 68:
                                                                                                                        mem[0 len 4] = ext_call.return_data[0 len 4]
                                                                                                                        if uint32(mem[4 len 28]) >> 224 == Error(string arg1):
                                                                                                                            mem[192 len return_data.size - 4] = ext_call.return_data[4 len return_data.size - 4]
                                                                                                                            if 0, Mask(224, 32, ext_call.return_data[0]) >> 32 <= test266151307() and 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 36 <= return_data.size:
                                                                                                                                if mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] <= test266151307():
                                                                                                                                    if 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] + 32 <= return_data.size:
                                                                                                                                        mem[64] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + ceil32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]) + 224
                                                                                                                                        if 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192:
                                                                                                                                            _4139 = mem[64]
                                                                                                                                            mem[mem[64] + 32] = 'swap tomb '
                                                                                                                                            _4140 = mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]
                                                                                                                                            mem[mem[64] + 42 len floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192])] = mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 224 len floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192])]
                                                                                                                                            mem[mem[64] + floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]) + -(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32) + 74 len mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32] = mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]) + -(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32) + 256 len mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32]
                                                                                                                                            _6605 = mem[64]
                                                                                                                                            mem[64] = _4140 + _4139 + 42
                                                                                                                                            mem[_4140 + _4139 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                            mem[_4140 + _4139 + 46] = 32
                                                                                                                                            mem[_4140 + _4139 + 78] = mem[_6605]
                                                                                                                                            _6608 = mem[_6605]
                                                                                                                                            mem[_4140 + _4139 + 110 len ceil32(mem[_6605])] = mem[_6605 + 32 len ceil32(mem[_6605])]
                                                                                                                                            if not _6608 % 32:
                                                                                                                                                revert with 0, 32, mem[_4140 + _4139 + 78 len _6608 + 32]
                                                                                                                                            else:
                                                                                                                                                mem[floor32(_6608) + _4140 + _4139 + 110] = mem[floor32(_6608) + _4140 + _4139 + -(_6608 % 32) + 142 len _6608 % 32]
                                                                                                                                                revert with 0, 32, mem[_4140 + _4139 + 78 len floor32(_6608) + 64]
                                                                                                                                        else:
                                                                                                                                            if not return_data.size:
                                                                                                                                                _4719 = mem[64]
                                                                                                                                                mem[mem[64] + 32] = 'swap tomb '
                                                                                                                                                mem[mem[64] + 42 len 0] = None
                                                                                                                                                mem[mem[64] + 72 len 2] = uint16(stor4)
                                                                                                                                                mem[mem[64] + 42 len 30] = Mask(176, 0, 'swap tomb '), mem[mem[64] + 64 len 8]
                                                                                                                                                _6612 = mem[64]
                                                                                                                                                mem[64] = mem[64] + 44
                                                                                                                                                mem[_4719 + 44] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                                mem[_4719 + 48] = 32
                                                                                                                                                mem[_4719 + 80] = mem[_6612]
                                                                                                                                                _6615 = mem[_6612]
                                                                                                                                                mem[_4719 + 112 len ceil32(mem[_6612])] = mem[_6612 + 32 len ceil32(mem[_6612])]
                                                                                                                                                if not _6615 % 32:
                                                                                                                                                    revert with 0, 32, mem[_4719 + 80 len _6615 + 32]
                                                                                                                                                else:
                                                                                                                                                    mem[floor32(_6615) + _4719 + 112] = mem[floor32(_6615) + _4719 + -(_6615 % 32) + 144 len _6615 % 32]
                                                                                                                                                    revert with 0, 32, mem[_4719 + 80 len floor32(_6615) + 64]
                                                                                                                                            else:
                                                                                                                                                _4526 = mem[64]
                                                                                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                                                                                mem[_4526] = return_data.size
                                                                                                                                                mem[_4526 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                                                _4721 = mem[64]
                                                                                                                                                mem[mem[64] + 32] = 'swap tomb '
                                                                                                                                                mem[mem[64] + 42 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                                                mem[mem[64] + floor32(return_data.size) + -(return_data.size % 32) + 74 len return_data.size % 32] = mem[_4526 + floor32(return_data.size) + -(return_data.size % 32) + 64 len return_data.size % 32]
                                                                                                                                                _6619 = mem[64]
                                                                                                                                                mem[64] = return_data.size + mem[64] + 42
                                                                                                                                                mem[return_data.size + _4721 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                                mem[return_data.size + _4721 + 46] = 32
                                                                                                                                                mem[return_data.size + _4721 + 78] = mem[_6619]
                                                                                                                                                _6622 = mem[_6619]
                                                                                                                                                mem[return_data.size + _4721 + 110 len ceil32(mem[_6619])] = mem[_6619 + 32 len ceil32(mem[_6619])]
                                                                                                                                                if not _6622 % 32:
                                                                                                                                                    revert with memory
                                                                                                                                                      from mem[64]
                                                                                                                                                       len _6622 + return_data.size + _4721 + -mem[64] + 110
                                                                                                                                                else:
                                                                                                                                                    mem[floor32(_6622) + return_data.size + _4721 + 110] = mem[floor32(_6622) + return_data.size + _4721 + -(_6622 % 32) + 142 len _6622 % 32]
                                                                                                                                                    revert with memory
                                                                                                                                                      from mem[64]
                                                                                                                                                       len floor32(_6622) + return_data.size + _4721 + -mem[64] + 142
                                                                                                                                    else:
                                                                                                                                        if not return_data.size:
                                                                                                                                            mem[224] = 'swap tomb '
                                                                                                                                            mem[234 len 0] = None
                                                                                                                                            mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                                            mem[64] = 236
                                                                                                                                            mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                            mem[240] = 32
                                                                                                                                            mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                                            mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                                            if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                                                revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                                            else:
                                                                                                                                                mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                                                revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                                        else:
                                                                                                                                            mem[192] = return_data.size
                                                                                                                                            mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                                            mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                                            mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                                            mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                                            if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                                                revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                                            else:
                                                                                                                                                mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                                                revert with 0, 
                                                                                                                                                            32,
                                                                                                                                                            mem[ceil32(return_data.size) + 193],
                                                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                                                else:
                                                                                                                                    if not return_data.size:
                                                                                                                                        mem[224] = 'swap tomb '
                                                                                                                                        mem[234 len 0] = None
                                                                                                                                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                                        mem[64] = 236
                                                                                                                                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                        mem[240] = 32
                                                                                                                                        mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                                        mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                                        if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                                            revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                                        else:
                                                                                                                                            mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                                            revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                                    else:
                                                                                                                                        mem[192] = return_data.size
                                                                                                                                        mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                                        mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                                        mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                                        mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                                        if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                                            revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                                        else:
                                                                                                                                            mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                                            revert with 0, 
                                                                                                                                                        32,
                                                                                                                                                        mem[ceil32(return_data.size) + 193],
                                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                                            else:
                                                                                                                                if not return_data.size:
                                                                                                                                    mem[224] = 'swap tomb '
                                                                                                                                    mem[234 len 0] = None
                                                                                                                                    mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                                    mem[64] = 236
                                                                                                                                    mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                    mem[240] = 32
                                                                                                                                    mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                                    mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                                    if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                                        revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                                    else:
                                                                                                                                        mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                                        revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                                else:
                                                                                                                                    mem[192] = return_data.size
                                                                                                                                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                                    if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                                    else:
                                                                                                                                        mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                                        revert with 0, 
                                                                                                                                                    32,
                                                                                                                                                    mem[ceil32(return_data.size) + 193],
                                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                                        else:
                                                                                                                            if not return_data.size:
                                                                                                                                mem[224] = 'swap tomb '
                                                                                                                                mem[234 len 0] = None
                                                                                                                                mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                                mem[64] = 236
                                                                                                                                mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                mem[240] = 32
                                                                                                                                mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                                mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                                if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                                    revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                                else:
                                                                                                                                    mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                                    revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                            else:
                                                                                                                                mem[192] = return_data.size
                                                                                                                                mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                                mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                                mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                                mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                                if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                                    revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                                else:
                                                                                                                                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                                    revert with 0, 
                                                                                                                                                32,
                                                                                                                                                mem[ceil32(return_data.size) + 193],
                                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                                    else:
                                                                                                                        if not return_data.size:
                                                                                                                            mem[224] = 'swap tomb '
                                                                                                                            mem[234 len 0] = None
                                                                                                                            mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                            mem[64] = 236
                                                                                                                            mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                            mem[240] = 32
                                                                                                                            mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                            mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                            if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                                revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                            else:
                                                                                                                                mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                                revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                        else:
                                                                                                                            mem[192] = return_data.size
                                                                                                                            mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                            mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                            mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                            mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                            if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                                revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                            else:
                                                                                                                                mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                                revert with 0, 
                                                                                                                                            32,
                                                                                                                                            mem[ceil32(return_data.size) + 193],
                                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                                else:
                                                                                                                    require ext_code.size(address(sub_dbd33e45Address))
                                                                                                                    staticcall address(sub_dbd33e45Address).0x70a08231 with:
                                                                                                                            gas gas_remaining wei
                                                                                                                           args this.address
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                    else:
                                                                                                                        require return_data.size >= 32
                                                                                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                        else:
                                                                                                                            if 0 > ext_call.return_data[0]:
                                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                            else:
                                                                                                                                if eth.balance(this.address) > eth.balance(this.address):
                                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                else:
                                                                                                                                    emit 0x81e6d68f: Mask(255, 1, ext_call.return_data[0]), 0
                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                            gas gas_remaining wei
                                                                                                                                           args this.address
                                                                                                                                    if not ext_call.success:
                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                    else:
                                                                                                                                        require return_data.size >= 32
                                                                                                                                        if ext_call.return_data[0] <= 0:
                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                    gas gas_remaining wei
                                                                                                                                                   args this.address
                                                                                                                                            if not ext_call.success:
                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                            else:
                                                                                                                                                require return_data.size >= 32
                                                                                                                                                if ext_call.return_data[0]:
                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                        args sub_63f96cf4Address, -1
                                                                                                                                                    if not ext_call.success:
                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                    else:
                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                        require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                        call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                            args ext_call.return_data[0]
                                                                                                                                                        if not ext_call.success:
                                                                                                                                                            revert with 0, 'masonry staking failed'
                                                                                                                                                        else:
                                                                                                                                                            emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                else:
                                                                                                                                        else:
                                                                                                                                            if ext_call.return_data[0]:
                                                                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                                                                staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                                                        gas gas_remaining wei
                                                                                                                                                       args this.address
                                                                                                                                                if not ext_call.success:
                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                else:
                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                        args zapAddress, -1
                                                                                                                                                    if not ext_call.success:
                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                    else:
                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                        require ext_code.size(sub_1458100bAddress)
                                                                                                                                                        call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                            args zapAddress, -1
                                                                                                                                                        if not ext_call.success:
                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                        else:
                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                                                                                            call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                args zapAddress, -1
                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                            else:
                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                    args sub_f6c6e5e8Address, -1
                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                else:
                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                    require ext_code.size(sub_1458100bAddress)
                                                                                                                                                                    call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                                        args sub_f6c6e5e8Address, -1
                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                    else:
                                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                                        require ext_code.size(sub_33aa2191Address)
                                                                                                                                                                        call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                                            args sub_f6c6e5e8Address, -1
                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                        else:
                                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                                            emit 0xcdb5839a: ext_call.return_data[0]
                                                                                                                                                                            require ext_code.size(zapAddress)
                                                                                                                                                                            call zapAddress.0xcee6202c with:
                                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                                args address(sub_85b374c3Address), ext_call.return_data[0], sub_33aa2191Address, sub_f6c6e5e8Address, this.address
                                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                            else:
                                                                                                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                                                                                                staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                                                                                        gas gas_remaining wei
                                                                                                                                                                                       args this.address
                                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                else:
                                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                                                    else:
                                                                                                                                                                                        emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                                gas gas_remaining wei
                                                                                                                                                                                               args this.address
                                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                        else:
                                                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                                                                                                                            call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                                                args sub_f088996fAddress, -1
                                                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                            else:
                                                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                                                require ext_code.size(sub_f088996fAddress)
                                                                                                                                                                                                call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                                                    args 1, 0
                                                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                                                    revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                                                                                                else:
                                                                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                                            gas gas_remaining wei
                                                                                                                                                                                                           args this.address
                                                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                                    else:
                                                                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                                                                        else:
                                                                                                                                                                                                            emit 0x8ced237d: 0
                                                                                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                                                    gas gas_remaining wei
                                                                                                                                                                                                                   args this.address
                                                                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                                            else:
                                                                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                                                                if ext_call.return_data[0]:
                                                                                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                                                                                        args sub_63f96cf4Address, -1
                                                                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                                                    else:
                                                                                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                                                                                        require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                                                                                        call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                                                                                            args ext_call.return_data[0]
                                                                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                                                                            revert with 0, 'masonry staking failed'
                                                                                                                                                                                                                        else:
                                                                                                                                                                                                                            emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                                                                                else:
                                                                                                                                            else:
                                                                                                                                                emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                        gas gas_remaining wei
                                                                                                                                                       args this.address
                                                                                                                                                if not ext_call.success:
                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                else:
                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                    require ext_code.size(sub_33aa2191Address)
                                                                                                                                                    call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                        args sub_f088996fAddress, -1
                                                                                                                                                    if not ext_call.success:
                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                    else:
                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                        require ext_code.size(sub_f088996fAddress)
                                                                                                                                                        call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                            args 1, 0
                                                                                                                                                        if not ext_call.success:
                                                                                                                                                            revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                                                        else:
                                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                    gas gas_remaining wei
                                                                                                                                                                   args this.address
                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                            else:
                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                                else:
                                                                                                                                                                    emit 0x8ced237d: 0
                                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                            gas gas_remaining wei
                                                                                                                                                                           args this.address
                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                    else:
                                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                                        if ext_call.return_data[0]:
                                                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                            call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                                args sub_63f96cf4Address, -1
                                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                            else:
                                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                                require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                                                call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                                    args ext_call.return_data[0]
                                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                                    revert with 0, 'masonry staking failed'
                                                                                                                                                                                else:
                                                                                                                                                                                    emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                                        else:
                                                                                        else:
                                                                                            require ext_code.size(sub_1458100bAddress)
                                                                                            call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                 gas gas_remaining wei
                                                                                                args sub_f6c6e5e8Address, -1
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            else:
                                                                                                require return_data.size >= 32
                                                                                                require ext_code.size(address(sub_dbd33e45Address))
                                                                                                call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args sub_f6c6e5e8Address, -1
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    require return_data.size >= 32
                                                                                                    if ext_call.return_data[0] / 2 <= 0:
                                                                                                        revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                                    else:
                                                                                                        revert with 0, 
                                                                                                                    32,
                                                                                                                    46,
                                                                                                                    0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                                    mem[306 len 18]
                                                                                else:
                                                                                    require ext_code.size(sub_1458100bAddress)
                                                                                    call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args sub_f6c6e5e8Address, -1
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        require ext_code.size(address(sub_dbd33e45Address))
                                                                                        call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                             gas gas_remaining wei
                                                                                            args sub_f6c6e5e8Address, -1
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            if ext_call.return_data[0] / 2 <= 0:
                                                                                                revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                            else:
                                                                                                revert with 0, 
                                                                                                            32,
                                                                                                            46,
                                                                                                            0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                            mem[306 len 18]
                                                                    else:
                                                                        if ext_call.return_data[0] > 10000:
                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                        else:
                                                                            if -ext_call.return_data[0] + 10000:
                                                                                require -ext_call.return_data[0] + 10000
                                                                                if 0 / -ext_call.return_data[0] + 10000:
                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                32,
                                                                                                33,
                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                mem[197 len 31]
                                                                                else:
                                                                                    require ext_code.size(sub_1458100bAddress)
                                                                                    call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args sub_f6c6e5e8Address, -1
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        require ext_code.size(address(sub_dbd33e45Address))
                                                                                        call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                             gas gas_remaining wei
                                                                                            args sub_f6c6e5e8Address, -1
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            if ext_call.return_data[0] / 2 <= 0:
                                                                                                revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                            else:
                                                                                                revert with 0, 
                                                                                                            32,
                                                                                                            46,
                                                                                                            0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                            mem[306 len 18]
                                                                            else:
                                                                                require ext_code.size(sub_1458100bAddress)
                                                                                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args sub_f6c6e5e8Address, -1
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    require return_data.size >= 32
                                                                                    require ext_code.size(address(sub_dbd33e45Address))
                                                                                    call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args sub_f6c6e5e8Address, -1
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        if ext_call.return_data[0] / 2 <= 0:
                                                                                            revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                        else:
                                                                                            revert with 0, 
                                                                                                        32,
                                                                                                        46,
                                                                                                        0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                        mem[306 len 18]
                                                                else:
                                                                    mem[96] = 2
                                                                    mem[128] = address(sub_dbd33e45Address)
                                                                    mem[160] = sub_1458100bAddress
                                                                    require ext_code.size(sub_1458100bAddress)
                                                                    call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                         gas gas_remaining wei
                                                                        args sub_f6c6e5e8Address, -1
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        require ext_code.size(address(sub_dbd33e45Address))
                                                                        call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                             gas gas_remaining wei
                                                                            args sub_f6c6e5e8Address, -1
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            if ext_call.return_data[0] <= 0:
                                                                                revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                            else:
                                                                                if eth.balance(this.address) <= 0:
                                                                                    revert with 0, 
                                                                                                32,
                                                                                                46,
                                                                                                0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                mem[306 len 18]
                                                                                else:
                                                                                    emit 0x98a68058: ext_call.return_data[0], eth.balance(this.address)
                                                                                    mem[192] = 0x791ac94700000000000000000000000000000000000000000000000000000000
                                                                                    mem[196] = ext_call.return_data[0]
                                                                                    mem[228] = eth.balance(this.address)
                                                                                    mem[292] = this.address
                                                                                    mem[324] = block.timestamp + 60
                                                                                    mem[260] = 160
                                                                                    mem[356] = 2
                                                                                    mem[388 len 0] = None
                                                                                    require ext_code.size(sub_f6c6e5e8Address)
                                                                                    call sub_f6c6e5e8Address.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                         gas gas_remaining wei
                                                                                        args ext_call.return_data[0], eth.balance(this.address), Array(len=2, data=mem[388 len 64]), address(this.address), block.timestamp + 60
                                                                                    if not ext_call.success:
                                                                                        if return_data.size >= 68:
                                                                                            mem[0 len 4] = ext_call.return_data[0 len 4]
                                                                                            if uint32(mem[4 len 28]) >> 224 == Error(string arg1):
                                                                                                mem[192 len return_data.size - 4] = ext_call.return_data[4 len return_data.size - 4]
                                                                                                if 0, ext_call.return_data[0 len 28] <= test266151307() and 0, ext_call.return_data[0 len 28] + 36 <= return_data.size:
                                                                                                    if mem[0, ext_call.return_data[0 len 28] + 192] <= test266151307():
                                                                                                        if 0, ext_call.return_data[0 len 28] + mem[0, ext_call.return_data[0 len 28] + 192] + 32 <= return_data.size:
                                                                                                            mem[64] = 0, ext_call.return_data[0 len 28] + ceil32(mem[0, ext_call.return_data[0 len 28] + 192]) + 224
                                                                                                            if 0, ext_call.return_data[0 len 28] + 192:
                                                                                                                _4164 = mem[64]
                                                                                                                mem[mem[64] + 32] = 'swap tomb '
                                                                                                                _4165 = mem[0, ext_call.return_data[0 len 28] + 192]
                                                                                                                mem[mem[64] + 42 len floor32(mem[0, ext_call.return_data[0 len 28] + 192])] = mem[0, ext_call.return_data[0 len 28] + 224 len floor32(mem[0, ext_call.return_data[0 len 28] + 192])]
                                                                                                                mem[mem[64] + floor32(mem[0, ext_call.return_data[0 len 28] + 192]) + -(mem[0, ext_call.return_data[0 len 28] + 192] % 32) + 74 len mem[0, ext_call.return_data[0 len 28] + 192] % 32] = mem[0, ext_call.return_data[0 len 28] + floor32(mem[0, ext_call.return_data[0 len 28] + 192]) + -(mem[0, ext_call.return_data[0 len 28] + 192] % 32) + 256 len mem[0, ext_call.return_data[0 len 28] + 192] % 32]
                                                                                                                _6696 = mem[64]
                                                                                                                mem[64] = _4165 + mem[64] + 42
                                                                                                                mem[_4165 + _4164 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                mem[_4165 + _4164 + 46] = 32
                                                                                                                mem[_4165 + _4164 + 78] = mem[_6696]
                                                                                                                _6699 = mem[_6696]
                                                                                                                mem[_4165 + _4164 + 110 len ceil32(mem[_6696])] = mem[_6696 + 32 len ceil32(mem[_6696])]
                                                                                                                if not _6699 % 32:
                                                                                                                    revert with memory
                                                                                                                      from mem[64]
                                                                                                                       len _6699 + _4165 + _4164 + -mem[64] + 110
                                                                                                                else:
                                                                                                                    mem[floor32(_6699) + _4165 + _4164 + 110] = mem[floor32(_6699) + _4165 + _4164 + -(_6699 % 32) + 142 len _6699 % 32]
                                                                                                                    revert with memory
                                                                                                                      from mem[64]
                                                                                                                       len floor32(_6699) + _4165 + _4164 + -mem[64] + 142
                                                                                                            else:
                                                                                                                if not return_data.size:
                                                                                                                    _4743 = mem[64]
                                                                                                                    mem[mem[64] + 32] = 'swap tomb '
                                                                                                                    mem[mem[64] + 42 len 0] = None
                                                                                                                    mem[mem[64] + 72 len 2] = uint16(stor4)
                                                                                                                    mem[mem[64] + 42 len 30] = Mask(176, 0, 'swap tomb '), mem[mem[64] + 64 len 8]
                                                                                                                    _6703 = mem[64]
                                                                                                                    mem[64] = mem[64] + 44
                                                                                                                    mem[_4743 + 44] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                    mem[_4743 + 48] = 32
                                                                                                                    mem[_4743 + 80] = mem[_6703]
                                                                                                                    _6706 = mem[_6703]
                                                                                                                    mem[_4743 + 112 len ceil32(mem[_6703])] = mem[_6703 + 32 len ceil32(mem[_6703])]
                                                                                                                    if not _6706 % 32:
                                                                                                                        revert with 0, 32, mem[_4743 + 80 len _6706 + 32]
                                                                                                                    else:
                                                                                                                        mem[floor32(_6706) + _4743 + 112] = mem[floor32(_6706) + _4743 + -(_6706 % 32) + 144 len _6706 % 32]
                                                                                                                        revert with 0, 32, mem[_4743 + 80 len floor32(_6706) + 64]
                                                                                                                else:
                                                                                                                    _4552 = mem[64]
                                                                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                                                    mem[_4552] = return_data.size
                                                                                                                    mem[_4552 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                    _4745 = mem[64]
                                                                                                                    mem[mem[64] + 32] = 'swap tomb '
                                                                                                                    mem[mem[64] + 42 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                    mem[mem[64] + floor32(return_data.size) + -(return_data.size % 32) + 74 len return_data.size % 32] = mem[_4552 + floor32(return_data.size) + -(return_data.size % 32) + 64 len return_data.size % 32]
                                                                                                                    _6710 = mem[64]
                                                                                                                    mem[64] = return_data.size + mem[64] + 42
                                                                                                                    mem[return_data.size + _4745 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                    mem[return_data.size + _4745 + 46] = 32
                                                                                                                    mem[return_data.size + _4745 + 78] = mem[_6710]
                                                                                                                    _6713 = mem[_6710]
                                                                                                                    mem[return_data.size + _4745 + 110 len ceil32(mem[_6710])] = mem[_6710 + 32 len ceil32(mem[_6710])]
                                                                                                                    if not _6713 % 32:
                                                                                                                        revert with 0, 32, mem[return_data.size + _4745 + 78 len _6713 + 32]
                                                                                                                    else:
                                                                                                                        mem[floor32(_6713) + return_data.size + _4745 + 110] = mem[floor32(_6713) + return_data.size + _4745 + -(_6713 % 32) + 142 len _6713 % 32]
                                                                                                                        revert with 0, 32, mem[return_data.size + _4745 + 78 len floor32(_6713) + 64]
                                                                                                        else:
                                                                                                            if not return_data.size:
                                                                                                                mem[224] = 'swap tomb '
                                                                                                                mem[234 len 0] = None
                                                                                                                mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                                                mem[64] = 236
                                                                                                                mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                mem[240] = 32
                                                                                                                mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                                                mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                                                if not ext_call.return_data[0 len 28] % 32:
                                                                                                                    revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                                                else:
                                                                                                                    mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                                                    revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                                            else:
                                                                                                                mem[192] = return_data.size
                                                                                                                mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                    revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                else:
                                                                                                                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                    revert with 0, 
                                                                                                                                32,
                                                                                                                                mem[ceil32(return_data.size) + 193],
                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                    else:
                                                                                                        if not return_data.size:
                                                                                                            mem[224] = 'swap tomb '
                                                                                                            mem[234 len 0] = None
                                                                                                            mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                                            mem[64] = 236
                                                                                                            mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                            mem[240] = 32
                                                                                                            mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                                            mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                                            if not ext_call.return_data[0 len 28] % 32:
                                                                                                                revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                                            else:
                                                                                                                mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                                                revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                                        else:
                                                                                                            mem[192] = return_data.size
                                                                                                            mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                            mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                            mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                            mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                            mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                            mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                            mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                            if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                            else:
                                                                                                                mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                revert with 0, 
                                                                                                                            32,
                                                                                                                            mem[ceil32(return_data.size) + 193],
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                else:
                                                                                                    if not return_data.size:
                                                                                                        mem[224] = 'swap tomb '
                                                                                                        mem[234 len 0] = None
                                                                                                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                                        mem[64] = 236
                                                                                                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                        mem[240] = 32
                                                                                                        mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                                        mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                                        if not ext_call.return_data[0 len 28] % 32:
                                                                                                            revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                                        else:
                                                                                                            mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                                            revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                                    else:
                                                                                                        mem[192] = return_data.size
                                                                                                        mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                        mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                        mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                        mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                        mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                        mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                        mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                        if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                            revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                        else:
                                                                                                            mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                            revert with 0, 
                                                                                                                        32,
                                                                                                                        mem[ceil32(return_data.size) + 193],
                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                            else:
                                                                                                if not return_data.size:
                                                                                                    mem[224] = 'swap tomb '
                                                                                                    mem[234 len 0] = None
                                                                                                    mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                                    mem[64] = 236
                                                                                                    mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                    mem[240] = 32
                                                                                                    mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                                    mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                                    if not ext_call.return_data[0 len 28] % 32:
                                                                                                        revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                                    else:
                                                                                                        mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                                        revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                                else:
                                                                                                    mem[192] = return_data.size
                                                                                                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                    if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                    else:
                                                                                                        mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                        revert with 0, 
                                                                                                                    32,
                                                                                                                    mem[ceil32(return_data.size) + 193],
                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                        else:
                                                                                            if not return_data.size:
                                                                                                mem[224] = 'swap tomb '
                                                                                                mem[234 len 0] = None
                                                                                                mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                                mem[64] = 236
                                                                                                mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                mem[240] = 32
                                                                                                mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                                mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                                if not ext_call.return_data[0 len 28] % 32:
                                                                                                    revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                                else:
                                                                                                    mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                                    revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                            else:
                                                                                                mem[192] = return_data.size
                                                                                                mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                    revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                else:
                                                                                                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                    revert with 0, 
                                                                                                                32,
                                                                                                                mem[ceil32(return_data.size) + 193],
                                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                    else:
                                                                                        require ext_code.size(address(sub_dbd33e45Address))
                                                                                        staticcall address(sub_dbd33e45Address).0x70a08231 with:
                                                                                                gas gas_remaining wei
                                                                                               args this.address
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                            else:
                                                                                                if 0 > ext_call.return_data[0]:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    if eth.balance(this.address) > eth.balance(this.address):
                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                    else:
                                                                                                        emit 0x81e6d68f: ext_call.return_data[0], 0
                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                gas gas_remaining wei
                                                                                                               args this.address
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            require return_data.size >= 32
                                                                                                            if ext_call.return_data[0] <= 0:
                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                        gas gas_remaining wei
                                                                                                                       args this.address
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                else:
                                                                                                                    require return_data.size >= 32
                                                                                                                    if ext_call.return_data[0]:
                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                        call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                             gas gas_remaining wei
                                                                                                                            args sub_63f96cf4Address, -1
                                                                                                                        if not ext_call.success:
                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                        else:
                                                                                                                            require return_data.size >= 32
                                                                                                                            require ext_code.size(sub_63f96cf4Address)
                                                                                                                            call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                 gas gas_remaining wei
                                                                                                                                args ext_call.return_data[0]
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with 0, 'masonry staking failed'
                                                                                                                            else:
                                                                                                                                emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                    else:
                                                                                                            else:
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_33aa2191Address)
                                                                                                                    staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                            gas gas_remaining wei
                                                                                                                           args this.address
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                    else:
                                                                                                                        require return_data.size >= 32
                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                        call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                             gas gas_remaining wei
                                                                                                                            args zapAddress, -1
                                                                                                                        if not ext_call.success:
                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                        else:
                                                                                                                            require return_data.size >= 32
                                                                                                                            require ext_code.size(sub_1458100bAddress)
                                                                                                                            call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                                 gas gas_remaining wei
                                                                                                                                args zapAddress, -1
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                            else:
                                                                                                                                require return_data.size >= 32
                                                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                                                call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                     gas gas_remaining wei
                                                                                                                                    args zapAddress, -1
                                                                                                                                if not ext_call.success:
                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                else:
                                                                                                                                    require return_data.size >= 32
                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                         gas gas_remaining wei
                                                                                                                                        args sub_f6c6e5e8Address, -1
                                                                                                                                    if not ext_call.success:
                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                    else:
                                                                                                                                        require return_data.size >= 32
                                                                                                                                        require ext_code.size(sub_1458100bAddress)
                                                                                                                                        call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                                             gas gas_remaining wei
                                                                                                                                            args sub_f6c6e5e8Address, -1
                                                                                                                                        if not ext_call.success:
                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                        else:
                                                                                                                                            require return_data.size >= 32
                                                                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                                                                            call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                args sub_f6c6e5e8Address, -1
                                                                                                                                            if not ext_call.success:
                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                            else:
                                                                                                                                                require return_data.size >= 32
                                                                                                                                                emit 0xcdb5839a: ext_call.return_data[0]
                                                                                                                                                require ext_code.size(zapAddress)
                                                                                                                                                call zapAddress.0xcee6202c with:
                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                    args address(sub_85b374c3Address), ext_call.return_data[0], sub_33aa2191Address, sub_f6c6e5e8Address, this.address
                                                                                                                                                if not ext_call.success:
                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                else:
                                                                                                                                                    require ext_code.size(sub_33aa2191Address)
                                                                                                                                                    staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                                                            gas gas_remaining wei
                                                                                                                                                           args this.address
                                                                                                                                                    if not ext_call.success:
                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                    else:
                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                        else:
                                                                                                                                                            emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                    gas gas_remaining wei
                                                                                                                                                                   args this.address
                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                            else:
                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                                                                                call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                    args sub_f088996fAddress, -1
                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                else:
                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                    require ext_code.size(sub_f088996fAddress)
                                                                                                                                                                    call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                                        args 1, 0
                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                        revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                                                                    else:
                                                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                gas gas_remaining wei
                                                                                                                                                                               args this.address
                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                        else:
                                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                                            else:
                                                                                                                                                                                emit 0x8ced237d: 0
                                                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                        gas gas_remaining wei
                                                                                                                                                                                       args this.address
                                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                else:
                                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                                    if ext_call.return_data[0]:
                                                                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                        call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                                                            args sub_63f96cf4Address, -1
                                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                        else:
                                                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                                                            require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                                                            call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                                                args ext_call.return_data[0]
                                                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                                                revert with 0, 'masonry staking failed'
                                                                                                                                                                                            else:
                                                                                                                                                                                                emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                                                    else:
                                                                                                                else:
                                                                                                                    emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                            gas gas_remaining wei
                                                                                                                           args this.address
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                    else:
                                                                                                                        require return_data.size >= 32
                                                                                                                        require ext_code.size(sub_33aa2191Address)
                                                                                                                        call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                             gas gas_remaining wei
                                                                                                                            args sub_f088996fAddress, -1
                                                                                                                        if not ext_call.success:
                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                        else:
                                                                                                                            require return_data.size >= 32
                                                                                                                            require ext_code.size(sub_f088996fAddress)
                                                                                                                            call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                                 gas gas_remaining wei
                                                                                                                                args 1, 0
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                            else:
                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                        gas gas_remaining wei
                                                                                                                                       args this.address
                                                                                                                                if not ext_call.success:
                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                else:
                                                                                                                                    require return_data.size >= 32
                                                                                                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                    else:
                                                                                                                                        emit 0x8ced237d: 0
                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                gas gas_remaining wei
                                                                                                                                               args this.address
                                                                                                                                        if not ext_call.success:
                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                        else:
                                                                                                                                            require return_data.size >= 32
                                                                                                                                            if ext_call.return_data[0]:
                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                    args sub_63f96cf4Address, -1
                                                                                                                                                if not ext_call.success:
                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                else:
                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                    require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                    call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                        args ext_call.return_data[0]
                                                                                                                                                    if not ext_call.success:
                                                                                                                                                        revert with 0, 'masonry staking failed'
                                                                                                                                                    else:
                                                                                                                                                        emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                            else:
                                            else:
                                                require ext_code.size(address(sub_85b374c3Address))
                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                        gas gas_remaining wei
                                                       args this.address
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_code.size(sub_1e9b8c59Address)
                                                    call sub_1e9b8c59Address.approve(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args sub_f088996fAddress, -1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        require ext_code.size(sub_f088996fAddress)
                                                        call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args 0
                                                        if not ext_call.success:
                                                            revert with 0, 'tomb-wftm LP deposit failed'
                                                        else:
                                                            require ext_code.size(address(sub_85b374c3Address))
                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                require return_data.size >= 32
                                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                else:
                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                            gas gas_remaining wei
                                                                           args this.address
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        if ext_call.return_data[0] <= 0:
                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                    gas gas_remaining wei
                                                                                   args this.address
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            else:
                                                                                require return_data.size >= 32
                                                                                if ext_call.return_data[0]:
                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args sub_63f96cf4Address, -1
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        require ext_code.size(sub_63f96cf4Address)
                                                                                        call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                             gas gas_remaining wei
                                                                                            args ext_call.return_data[0]
                                                                                        if not ext_call.success:
                                                                                            revert with 0, 'masonry staking failed'
                                                                                        else:
                                                                                            emit 0xe4dba445: ext_call.return_data[0]
                                                                                else:
                                                                        else:
                                                                            if ext_call.return_data[0]:
                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                        gas gas_remaining wei
                                                                                       args this.address
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    require return_data.size >= 32
                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args zapAddress, -1
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        require ext_code.size(sub_1458100bAddress)
                                                                                        call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                             gas gas_remaining wei
                                                                                            args zapAddress, -1
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                            call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                 gas gas_remaining wei
                                                                                                args zapAddress, -1
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            else:
                                                                                                require return_data.size >= 32
                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args sub_f6c6e5e8Address, -1
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    require return_data.size >= 32
                                                                                                    require ext_code.size(sub_1458100bAddress)
                                                                                                    call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args sub_f6c6e5e8Address, -1
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        require return_data.size >= 32
                                                                                                        require ext_code.size(sub_33aa2191Address)
                                                                                                        call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args sub_f6c6e5e8Address, -1
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            require return_data.size >= 32
                                                                                                            emit 0xcdb5839a: ext_call.return_data[0]
                                                                                                            require ext_code.size(zapAddress)
                                                                                                            call zapAddress.0xcee6202c with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args 0, uint32(stor5), ext_call.return_data[0], sub_33aa2191Address, sub_f6c6e5e8Address, address(this.address)
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            else:
                                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                                staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                        gas gas_remaining wei
                                                                                                                       args this.address
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                else:
                                                                                                                    require return_data.size >= 32
                                                                                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                    else:
                                                                                                                        emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                gas gas_remaining wei
                                                                                                                               args this.address
                                                                                                                        if not ext_call.success:
                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                        else:
                                                                                                                            require return_data.size >= 32
                                                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                                                            call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                 gas gas_remaining wei
                                                                                                                                args sub_f088996fAddress, -1
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                            else:
                                                                                                                                require return_data.size >= 32
                                                                                                                                require ext_code.size(sub_f088996fAddress)
                                                                                                                                call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                                     gas gas_remaining wei
                                                                                                                                    args 1, 0
                                                                                                                                if not ext_call.success:
                                                                                                                                    revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                                else:
                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                            gas gas_remaining wei
                                                                                                                                           args this.address
                                                                                                                                    if not ext_call.success:
                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                    else:
                                                                                                                                        require return_data.size >= 32
                                                                                                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                        else:
                                                                                                                                            emit 0x8ced237d: 0
                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                    gas gas_remaining wei
                                                                                                                                                   args this.address
                                                                                                                                            if not ext_call.success:
                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                            else:
                                                                                                                                                require return_data.size >= 32
                                                                                                                                                if ext_call.return_data[0]:
                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                        args sub_63f96cf4Address, -1
                                                                                                                                                    if not ext_call.success:
                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                    else:
                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                        require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                        call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                            args ext_call.return_data[0]
                                                                                                                                                        if not ext_call.success:
                                                                                                                                                            revert with 0, 'masonry staking failed'
                                                                                                                                                        else:
                                                                                                                                                            emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                else:
                                                                            else:
                                                                                emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                        gas gas_remaining wei
                                                                                       args this.address
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    require return_data.size >= 32
                                                                                    require ext_code.size(sub_33aa2191Address)
                                                                                    call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args sub_f088996fAddress, -1
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        require ext_code.size(sub_f088996fAddress)
                                                                                        call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                             gas gas_remaining wei
                                                                                            args 1, 0
                                                                                        if not ext_call.success:
                                                                                            revert with 0, 'tshare-wftm LP deposit failed'
                                                                                        else:
                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                    gas gas_remaining wei
                                                                                                   args this.address
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            else:
                                                                                                require return_data.size >= 32
                                                                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                else:
                                                                                                    emit 0x8ced237d: 0
                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                            gas gas_remaining wei
                                                                                                           args this.address
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        require return_data.size >= 32
                                                                                                        if ext_call.return_data[0]:
                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                            call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args sub_63f96cf4Address, -1
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            else:
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_code.size(sub_63f96cf4Address)
                                                                                                                call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args ext_call.return_data[0]
                                                                                                                if not ext_call.success:
                                                                                                                    revert with 0, 'masonry staking failed'
                                                                                                                else:
                                                                                                                    emit 0xe4dba445: ext_call.return_data[0]
                                                                                                        else:
                            else:
                                require ext_code.size(address(sub_85b374c3Address))
                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                        gas gas_remaining wei
                                       args this.address
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    require return_data.size >= 32
                                    require ext_code.size(sub_63f96cf4Address)
                                    call sub_63f96cf4Address.claimReward() with:
                                         gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        require ext_code.size(address(sub_85b374c3Address))
                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                gas gas_remaining wei
                                               args this.address
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            require return_data.size >= 32
                                            if owner != msg.sender:
                                                revert with 0, 'Ownable: caller is not the owner'
                                            else:
                                                require ext_code.size(sub_7abd5a1cAddress)
                                                staticcall sub_7abd5a1cAddress.consult(address arg1, uint256 arg2) with:
                                                        gas gas_remaining wei
                                                       args address(sub_dbd33e45Address), 10^18
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    require return_data.size >= 32
                                                    require ext_code.size(address(sub_dbd33e45Address))
                                                    staticcall address(sub_dbd33e45Address).0x70a08231 with:
                                                            gas gas_remaining wei
                                                           args this.address
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        require return_data.size >= 32
                                                        if ext_call.return_data[0]:
                                                            require ext_code.size(address(sub_dbd33e45Address))
                                                            staticcall address(sub_dbd33e45Address).taxRate() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                require return_data.size >= 32
                                                                require ext_code.size(address(sub_dbd33e45Address))
                                                                staticcall address(sub_dbd33e45Address).0x70a08231 with:
                                                                        gas gas_remaining wei
                                                                       args this.address
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    require return_data.size >= 32
                                                                    require ext_code.size(sub_7abd5a1cAddress)
                                                                    staticcall sub_7abd5a1cAddress.consult(address arg1, uint256 arg2) with:
                                                                            gas gas_remaining wei
                                                                           args address(sub_dbd33e45Address), ext_call.return_data[0]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        require return_data.size >= 32
                                                                        if ext_call.return_data[14 len 18] + eth.balance(this.address) < ext_call.return_data[14 len 18]:
                                                                            revert with 0, 'SafeMath: addition overflow'
                                                                        else:
                                                                            if ext_call.return_data[14 len 18] >= ext_call.return_data[14 len 18] + eth.balance(this.address) / 2:
                                                                                if Mask(255, 1, ext_call.return_data[0]):
                                                                                    require ext_call.return_data[0] / 2
                                                                                    if ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / ext_call.return_data[0] / 2 != Mask(144, 0, ext_call.return_data[0]):
                                                                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                    32,
                                                                                                    33,
                                                                                                    0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                    mem[197 len 31]
                                                                                    else:
                                                                                        if ext_call.return_data[0] > 10000:
                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                        else:
                                                                                            if -ext_call.return_data[0] + 10000:
                                                                                                require -ext_call.return_data[0] + 10000
                                                                                                if (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / -ext_call.return_data[0] + 10000 != ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18:
                                                                                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                32,
                                                                                                                33,
                                                                                                                0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                mem[197 len 31]
                                                                                                else:
                                                                                                    if (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000:
                                                                                                        require (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000
                                                                                                        if 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 != 8000:
                                                                                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                                        32,
                                                                                                                        33,
                                                                                                                        0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                                        mem[197 len 31]
                                                                                                        else:
                                                                                                            mem[96] = 2
                                                                                                            mem[128] = address(sub_dbd33e45Address)
                                                                                                            mem[160] = sub_1458100bAddress
                                                                                                            require ext_code.size(sub_1458100bAddress)
                                                                                                            call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args sub_f6c6e5e8Address, -1
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            else:
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_code.size(address(sub_dbd33e45Address))
                                                                                                                call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args sub_f6c6e5e8Address, -1
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                else:
                                                                                                                    require return_data.size >= 32
                                                                                                                    if ext_call.return_data[0] / 2 <= 0:
                                                                                                                        revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                                                    else:
                                                                                                                        if 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000 <= 0:
                                                                                                                            revert with 0, 
                                                                                                                                        32,
                                                                                                                                        46,
                                                                                                                                        0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                                                        mem[306 len 18]
                                                                                                                        else:
                                                                                                                            emit 0x98a68058: Mask(255, 1, ext_call.return_data[0]), 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000
                                                                                                                            mem[192] = 0x791ac94700000000000000000000000000000000000000000000000000000000
                                                                                                                            mem[196] = ext_call.return_data[0] / 2
                                                                                                                            mem[228] = 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000
                                                                                                                            mem[292] = this.address
                                                                                                                            mem[324] = block.timestamp + 60
                                                                                                                            mem[260] = 160
                                                                                                                            mem[356] = 2
                                                                                                                            mem[388 len 0] = None
                                                                                                                            require ext_code.size(sub_f6c6e5e8Address)
                                                                                                                            call sub_f6c6e5e8Address.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                                                                 gas gas_remaining wei
                                                                                                                                args Mask(255, 1, ext_call.return_data[0]), 8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000, Array(len=2, data=mem[388 len 64]), address(this.address), block.timestamp + 60
                                                                                                                            if not ext_call.success:
                                                                                                                                if return_data.size >= 68:
                                                                                                                                    mem[0 len 4] = ext_call.return_data[0 len 4]
                                                                                                                                    if uint32(mem[4 len 28]) >> 224 == Error(string arg1):
                                                                                                                                        mem[192 len return_data.size - 4] = ext_call.return_data[4 len return_data.size - 4]
                                                                                                                                        if 0, Mask(224, 32, ext_call.return_data[0]) >> 32 <= test266151307() and 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 36 <= return_data.size:
                                                                                                                                            if mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] <= test266151307():
                                                                                                                                                if 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] + 32 <= return_data.size:
                                                                                                                                                    mem[64] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + ceil32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]) + 224
                                                                                                                                                    if 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192:
                                                                                                                                                        _4189 = mem[64]
                                                                                                                                                        mem[mem[64] + 32] = 'swap tomb '
                                                                                                                                                        _4190 = mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]
                                                                                                                                                        mem[mem[64] + 42 len floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192])] = mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 224 len floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192])]
                                                                                                                                                        mem[mem[64] + floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]) + -(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32) + 74 len mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32] = mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + floor32(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192]) + -(mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32) + 256 len mem[0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 192] % 32]
                                                                                                                                                        _6787 = mem[64]
                                                                                                                                                        mem[64] = _4190 + _4189 + 42
                                                                                                                                                        mem[_4190 + _4189 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                                        mem[_4190 + _4189 + 46] = 32
                                                                                                                                                        mem[_4190 + _4189 + 78] = mem[_6787]
                                                                                                                                                        _6790 = mem[_6787]
                                                                                                                                                        mem[_4190 + _4189 + 110 len ceil32(mem[_6787])] = mem[_6787 + 32 len ceil32(mem[_6787])]
                                                                                                                                                        if not _6790 % 32:
                                                                                                                                                            revert with 0, 32, mem[_4190 + _4189 + 78 len _6790 + 32]
                                                                                                                                                        else:
                                                                                                                                                            mem[floor32(_6790) + _4190 + _4189 + 110] = mem[floor32(_6790) + _4190 + _4189 + -(_6790 % 32) + 142 len _6790 % 32]
                                                                                                                                                            revert with 0, 32, mem[_4190 + _4189 + 78 len floor32(_6790) + 64]
                                                                                                                                                    else:
                                                                                                                                                        if not return_data.size:
                                                                                                                                                            _4767 = mem[64]
                                                                                                                                                            mem[mem[64] + 32] = 'swap tomb '
                                                                                                                                                            mem[mem[64] + 42 len 0] = None
                                                                                                                                                            mem[mem[64] + 72 len 2] = uint16(stor4)
                                                                                                                                                            mem[mem[64] + 42 len 30] = Mask(176, 0, 'swap tomb '), mem[mem[64] + 64 len 8]
                                                                                                                                                            _6794 = mem[64]
                                                                                                                                                            mem[64] = mem[64] + 44
                                                                                                                                                            mem[_4767 + 44] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                                            mem[_4767 + 48] = 32
                                                                                                                                                            mem[_4767 + 80] = mem[_6794]
                                                                                                                                                            _6797 = mem[_6794]
                                                                                                                                                            mem[_4767 + 112 len ceil32(mem[_6794])] = mem[_6794 + 32 len ceil32(mem[_6794])]
                                                                                                                                                            if not _6797 % 32:
                                                                                                                                                                revert with 0, 32, mem[_4767 + 80 len _6797 + 32]
                                                                                                                                                            else:
                                                                                                                                                                mem[floor32(_6797) + _4767 + 112] = mem[floor32(_6797) + _4767 + -(_6797 % 32) + 144 len _6797 % 32]
                                                                                                                                                                revert with 0, 32, mem[_4767 + 80 len floor32(_6797) + 64]
                                                                                                                                                        else:
                                                                                                                                                            _4578 = mem[64]
                                                                                                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                                                                                            mem[_4578] = return_data.size
                                                                                                                                                            mem[_4578 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                                                            _4769 = mem[64]
                                                                                                                                                            mem[mem[64] + 32] = 'swap tomb '
                                                                                                                                                            mem[mem[64] + 42 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                                                            mem[mem[64] + floor32(return_data.size) + -(return_data.size % 32) + 74 len return_data.size % 32] = mem[_4578 + floor32(return_data.size) + -(return_data.size % 32) + 64 len return_data.size % 32]
                                                                                                                                                            _6801 = mem[64]
                                                                                                                                                            mem[64] = return_data.size + mem[64] + 42
                                                                                                                                                            mem[return_data.size + _4769 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                                            mem[return_data.size + _4769 + 46] = 32
                                                                                                                                                            mem[return_data.size + _4769 + 78] = mem[_6801]
                                                                                                                                                            _6804 = mem[_6801]
                                                                                                                                                            mem[return_data.size + _4769 + 110 len ceil32(mem[_6801])] = mem[_6801 + 32 len ceil32(mem[_6801])]
                                                                                                                                                            if not _6804 % 32:
                                                                                                                                                                revert with 0, 32, mem[return_data.size + _4769 + 78 len _6804 + 32]
                                                                                                                                                            else:
                                                                                                                                                                mem[floor32(_6804) + return_data.size + _4769 + 110] = mem[floor32(_6804) + return_data.size + _4769 + -(_6804 % 32) + 142 len _6804 % 32]
                                                                                                                                                                revert with 0, 32, mem[return_data.size + _4769 + 78 len floor32(_6804) + 64]
                                                                                                                                                else:
                                                                                                                                                    if not return_data.size:
                                                                                                                                                        mem[224] = 'swap tomb '
                                                                                                                                                        mem[234 len 0] = None
                                                                                                                                                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                                                        mem[64] = 236
                                                                                                                                                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                                        mem[240] = 32
                                                                                                                                                        mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                                                        mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                                                        if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                                                            revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                                                        else:
                                                                                                                                                            mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                                                            revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                                                    else:
                                                                                                                                                        mem[192] = return_data.size
                                                                                                                                                        mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                                                        mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                                                        mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                                                        mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                                                        if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                                                            revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                                                        else:
                                                                                                                                                            mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                                                            revert with 0, 
                                                                                                                                                                        32,
                                                                                                                                                                        mem[ceil32(return_data.size) + 193],
                                                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                                                            else:
                                                                                                                                                if not return_data.size:
                                                                                                                                                    mem[224] = 'swap tomb '
                                                                                                                                                    mem[234 len 0] = None
                                                                                                                                                    mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                                                    mem[64] = 236
                                                                                                                                                    mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                                    mem[240] = 32
                                                                                                                                                    mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                                                    mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                                                    if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                                                        revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                                                    else:
                                                                                                                                                        mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                                                        revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                                                else:
                                                                                                                                                    mem[192] = return_data.size
                                                                                                                                                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                                                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                                                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                                                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                                                    if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                                                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                                                    else:
                                                                                                                                                        mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                                                        revert with 0, 
                                                                                                                                                                    32,
                                                                                                                                                                    mem[ceil32(return_data.size) + 193],
                                                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                                                        else:
                                                                                                                                            if not return_data.size:
                                                                                                                                                mem[224] = 'swap tomb '
                                                                                                                                                mem[234 len 0] = None
                                                                                                                                                mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                                                mem[64] = 236
                                                                                                                                                mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                                mem[240] = 32
                                                                                                                                                mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                                                mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                                                if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                                                    revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                                                else:
                                                                                                                                                    mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                                                    revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                                            else:
                                                                                                                                                mem[192] = return_data.size
                                                                                                                                                mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                                                mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                                                mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                                                mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                                                if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                                                    revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                                                else:
                                                                                                                                                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                                                    revert with 0, 
                                                                                                                                                                32,
                                                                                                                                                                mem[ceil32(return_data.size) + 193],
                                                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                                                    else:
                                                                                                                                        if not return_data.size:
                                                                                                                                            mem[224] = 'swap tomb '
                                                                                                                                            mem[234 len 0] = None
                                                                                                                                            mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                                            mem[64] = 236
                                                                                                                                            mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                            mem[240] = 32
                                                                                                                                            mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                                            mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                                            if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                                                revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                                            else:
                                                                                                                                                mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                                                revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                                        else:
                                                                                                                                            mem[192] = return_data.size
                                                                                                                                            mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                                            mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                                            mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                                            mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                                            if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                                                revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                                            else:
                                                                                                                                                mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                                                revert with 0, 
                                                                                                                                                            32,
                                                                                                                                                            mem[ceil32(return_data.size) + 193],
                                                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                                                else:
                                                                                                                                    if not return_data.size:
                                                                                                                                        mem[224] = 'swap tomb '
                                                                                                                                        mem[234 len 0] = None
                                                                                                                                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(8000 * (10000 * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) - (ext_call.return_data[0] * ext_call.return_data[0] / 2 * Mask(144, 0, ext_call.return_data[0]) / 10^18) / 10000 / 10000), 0) >> 16
                                                                                                                                        mem[64] = 236
                                                                                                                                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                        mem[240] = 32
                                                                                                                                        mem[272] = 0, Mask(224, 32, ext_call.return_data[0]) >> 32
                                                                                                                                        mem[304 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)] = mem[224 len ceil32(0, Mask(224, 32, ext_call.return_data[0]) >> 32)]
                                                                                                                                        if not Mask(5, 32, ext_call.return_data[0]):
                                                                                                                                            revert with 0, 32, mem[272 len 0, Mask(224, 32, ext_call.return_data[0]) >> 32 + 32]
                                                                                                                                        else:
                                                                                                                                            mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 304] = mem[floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + -(Mask(5, 32, ext_call.return_data[0]) >> 32) + 336 len Mask(5, 32, ext_call.return_data[0]) >> 32]
                                                                                                                                            revert with 0, 32, mem[272 len floor32(0, Mask(224, 32, ext_call.return_data[0]) >> 32) + 64]
                                                                                                                                    else:
                                                                                                                                        mem[192] = return_data.size
                                                                                                                                        mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                                        mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                                        mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                                        mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                                        if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                                            revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                                        else:
                                                                                                                                            mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                                            revert with 0, 
                                                                                                                                                        32,
                                                                                                                                                        mem[ceil32(return_data.size) + 193],
                                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                                            else:
                                                                                                                                require ext_code.size(address(sub_dbd33e45Address))
                                                                                                                                staticcall address(sub_dbd33e45Address).0x70a08231 with:
                                                                                                                                        gas gas_remaining wei
                                                                                                                                       args this.address
                                                                                                                                if not ext_call.success:
                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                else:
                                                                                                                                    require return_data.size >= 32
                                                                                                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                    else:
                                                                                                                                        if 0 > ext_call.return_data[0]:
                                                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                        else:
                                                                                                                                            if eth.balance(this.address) > eth.balance(this.address):
                                                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                            else:
                                                                                                                                                emit 0x81e6d68f: Mask(255, 1, ext_call.return_data[0]), 0
                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                        gas gas_remaining wei
                                                                                                                                                       args this.address
                                                                                                                                                if not ext_call.success:
                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                else:
                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                    if ext_call.return_data[0] <= 0:
                                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                gas gas_remaining wei
                                                                                                                                                               args this.address
                                                                                                                                                        if not ext_call.success:
                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                        else:
                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                            if ext_call.return_data[0]:
                                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                    args sub_63f96cf4Address, -1
                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                else:
                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                    require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                                    call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                                        args ext_call.return_data[0]
                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                        revert with 0, 'masonry staking failed'
                                                                                                                                                                    else:
                                                                                                                                                                        emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                            else:
                                                                                                                                                    else:
                                                                                                                                                        if ext_call.return_data[0]:
                                                                                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                                                                                            staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                                                                    gas gas_remaining wei
                                                                                                                                                                   args this.address
                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                            else:
                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                    args zapAddress, -1
                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                else:
                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                    require ext_code.size(sub_1458100bAddress)
                                                                                                                                                                    call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                                        args zapAddress, -1
                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                    else:
                                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                                        require ext_code.size(sub_33aa2191Address)
                                                                                                                                                                        call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                                            args zapAddress, -1
                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                        else:
                                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                            call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                                args sub_f6c6e5e8Address, -1
                                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                            else:
                                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                                require ext_code.size(sub_1458100bAddress)
                                                                                                                                                                                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                                    args sub_f6c6e5e8Address, -1
                                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                else:
                                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                                    require ext_code.size(sub_33aa2191Address)
                                                                                                                                                                                    call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                                                        args sub_f6c6e5e8Address, -1
                                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                    else:
                                                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                                                        emit 0xcdb5839a: ext_call.return_data[0]
                                                                                                                                                                                        require ext_code.size(zapAddress)
                                                                                                                                                                                        call zapAddress.0xcee6202c with:
                                                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                                                            args address(sub_85b374c3Address), ext_call.return_data[0], sub_33aa2191Address, sub_f6c6e5e8Address, this.address
                                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                        else:
                                                                                                                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                                                                                                                            staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                                                                                                    gas gas_remaining wei
                                                                                                                                                                                                   args this.address
                                                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                            else:
                                                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                                                                else:
                                                                                                                                                                                                    emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                                            gas gas_remaining wei
                                                                                                                                                                                                           args this.address
                                                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                                    else:
                                                                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                                                                        require ext_code.size(sub_33aa2191Address)
                                                                                                                                                                                                        call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                                                                            args sub_f088996fAddress, -1
                                                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                                        else:
                                                                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                                                                            require ext_code.size(sub_f088996fAddress)
                                                                                                                                                                                                            call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                                                                args 1, 0
                                                                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                                                                revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                                                                                                            else:
                                                                                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                                                        gas gas_remaining wei
                                                                                                                                                                                                                       args this.address
                                                                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                                                else:
                                                                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                                                                                    else:
                                                                                                                                                                                                                        emit 0x8ced237d: 0
                                                                                                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                                                                gas gas_remaining wei
                                                                                                                                                                                                                               args this.address
                                                                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                                                        else:
                                                                                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                                                                                            if ext_call.return_data[0]:
                                                                                                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                                                                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                                                                                    args sub_63f96cf4Address, -1
                                                                                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                                                                else:
                                                                                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                                                                                    require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                                                                                                    call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                                                                                                        args ext_call.return_data[0]
                                                                                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                                                                                        revert with 0, 'masonry staking failed'
                                                                                                                                                                                                                                    else:
                                                                                                                                                                                                                                        emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                                                                                            else:
                                                                                                                                                        else:
                                                                                                                                                            emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                    gas gas_remaining wei
                                                                                                                                                                   args this.address
                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                            else:
                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                                                                                call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                    args sub_f088996fAddress, -1
                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                else:
                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                    require ext_code.size(sub_f088996fAddress)
                                                                                                                                                                    call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                                        args 1, 0
                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                        revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                                                                    else:
                                                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                gas gas_remaining wei
                                                                                                                                                                               args this.address
                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                        else:
                                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                                            else:
                                                                                                                                                                                emit 0x8ced237d: 0
                                                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                        gas gas_remaining wei
                                                                                                                                                                                       args this.address
                                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                else:
                                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                                    if ext_call.return_data[0]:
                                                                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                        call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                                                            args sub_63f96cf4Address, -1
                                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                        else:
                                                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                                                            require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                                                            call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                                                args ext_call.return_data[0]
                                                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                                                revert with 0, 'masonry staking failed'
                                                                                                                                                                                            else:
                                                                                                                                                                                                emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                                                    else:
                                                                                                    else:
                                                                                                        require ext_code.size(sub_1458100bAddress)
                                                                                                        call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args sub_f6c6e5e8Address, -1
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            require return_data.size >= 32
                                                                                                            require ext_code.size(address(sub_dbd33e45Address))
                                                                                                            call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args sub_f6c6e5e8Address, -1
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            else:
                                                                                                                require return_data.size >= 32
                                                                                                                if ext_call.return_data[0] / 2 <= 0:
                                                                                                                    revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                                                else:
                                                                                                                    revert with 0, 
                                                                                                                                32,
                                                                                                                                46,
                                                                                                                                0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                                                mem[306 len 18]
                                                                                            else:
                                                                                                require ext_code.size(sub_1458100bAddress)
                                                                                                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args sub_f6c6e5e8Address, -1
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    require return_data.size >= 32
                                                                                                    require ext_code.size(address(sub_dbd33e45Address))
                                                                                                    call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args sub_f6c6e5e8Address, -1
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        require return_data.size >= 32
                                                                                                        if ext_call.return_data[0] / 2 <= 0:
                                                                                                            revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                                        else:
                                                                                                            revert with 0, 
                                                                                                                        32,
                                                                                                                        46,
                                                                                                                        0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                                        mem[306 len 18]
                                                                                else:
                                                                                    if ext_call.return_data[0] > 10000:
                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                    else:
                                                                                        if -ext_call.return_data[0] + 10000:
                                                                                            require -ext_call.return_data[0] + 10000
                                                                                            if 0 / -ext_call.return_data[0] + 10000:
                                                                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                                                                            32,
                                                                                                            33,
                                                                                                            0x73536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                                                                            mem[197 len 31]
                                                                                            else:
                                                                                                require ext_code.size(sub_1458100bAddress)
                                                                                                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args sub_f6c6e5e8Address, -1
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    require return_data.size >= 32
                                                                                                    require ext_code.size(address(sub_dbd33e45Address))
                                                                                                    call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args sub_f6c6e5e8Address, -1
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        require return_data.size >= 32
                                                                                                        if ext_call.return_data[0] / 2 <= 0:
                                                                                                            revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                                        else:
                                                                                                            revert with 0, 
                                                                                                                        32,
                                                                                                                        46,
                                                                                                                        0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                                        mem[306 len 18]
                                                                                        else:
                                                                                            require ext_code.size(sub_1458100bAddress)
                                                                                            call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                 gas gas_remaining wei
                                                                                                args sub_f6c6e5e8Address, -1
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            else:
                                                                                                require return_data.size >= 32
                                                                                                require ext_code.size(address(sub_dbd33e45Address))
                                                                                                call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args sub_f6c6e5e8Address, -1
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    require return_data.size >= 32
                                                                                                    if ext_call.return_data[0] / 2 <= 0:
                                                                                                        revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                                    else:
                                                                                                        revert with 0, 
                                                                                                                    32,
                                                                                                                    46,
                                                                                                                    0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                                    mem[306 len 18]
                                                                            else:
                                                                                mem[96] = 2
                                                                                mem[128] = address(sub_dbd33e45Address)
                                                                                mem[160] = sub_1458100bAddress
                                                                                require ext_code.size(sub_1458100bAddress)
                                                                                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args sub_f6c6e5e8Address, -1
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    require return_data.size >= 32
                                                                                    require ext_code.size(address(sub_dbd33e45Address))
                                                                                    call address(sub_dbd33e45Address).approve(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args sub_f6c6e5e8Address, -1
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        require return_data.size >= 32
                                                                                        if ext_call.return_data[0] <= 0:
                                                                                            revert with 0, 32, 42, 0x6f73656c6c20746f6d6220616d6f756e74206d7573742062652067726561746572207468616e207a6572, mem[302 len 22]
                                                                                        else:
                                                                                            if eth.balance(this.address) <= 0:
                                                                                                revert with 0, 
                                                                                                            32,
                                                                                                            46,
                                                                                                            0x7772656365697665466d74416d7420616d6f756e74206d7573742062652067726561746572207468616e207a6572,
                                                                                                            mem[306 len 18]
                                                                                            else:
                                                                                                emit 0x98a68058: ext_call.return_data[0], eth.balance(this.address)
                                                                                                mem[192] = 0x791ac94700000000000000000000000000000000000000000000000000000000
                                                                                                mem[196] = ext_call.return_data[0]
                                                                                                mem[228] = eth.balance(this.address)
                                                                                                mem[292] = this.address
                                                                                                mem[324] = block.timestamp + 60
                                                                                                mem[260] = 160
                                                                                                mem[356] = 2
                                                                                                mem[388 len 0] = None
                                                                                                require ext_code.size(sub_f6c6e5e8Address)
                                                                                                call sub_f6c6e5e8Address.swapExactTokensForETHSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args ext_call.return_data[0], eth.balance(this.address), Array(len=2, data=mem[388 len 64]), address(this.address), block.timestamp + 60
                                                                                                if not ext_call.success:
                                                                                                    if return_data.size >= 68:
                                                                                                        mem[0 len 4] = ext_call.return_data[0 len 4]
                                                                                                        if uint32(mem[4 len 28]) >> 224 == Error(string arg1):
                                                                                                            mem[192 len return_data.size - 4] = ext_call.return_data[4 len return_data.size - 4]
                                                                                                            if 0, ext_call.return_data[0 len 28] <= test266151307() and 0, ext_call.return_data[0 len 28] + 36 <= return_data.size:
                                                                                                                if mem[0, ext_call.return_data[0 len 28] + 192] <= test266151307():
                                                                                                                    if 0, ext_call.return_data[0 len 28] + mem[0, ext_call.return_data[0 len 28] + 192] + 32 <= return_data.size:
                                                                                                                        mem[64] = 0, ext_call.return_data[0 len 28] + ceil32(mem[0, ext_call.return_data[0 len 28] + 192]) + 224
                                                                                                                        if 0, ext_call.return_data[0 len 28] + 192:
                                                                                                                            _4214 = mem[64]
                                                                                                                            mem[mem[64] + 32] = 'swap tomb '
                                                                                                                            _4215 = mem[0, ext_call.return_data[0 len 28] + 192]
                                                                                                                            mem[mem[64] + 42 len floor32(mem[0, ext_call.return_data[0 len 28] + 192])] = mem[0, ext_call.return_data[0 len 28] + 224 len floor32(mem[0, ext_call.return_data[0 len 28] + 192])]
                                                                                                                            mem[mem[64] + floor32(mem[0, ext_call.return_data[0 len 28] + 192]) + -(mem[0, ext_call.return_data[0 len 28] + 192] % 32) + 74 len mem[0, ext_call.return_data[0 len 28] + 192] % 32] = mem[0, ext_call.return_data[0 len 28] + floor32(mem[0, ext_call.return_data[0 len 28] + 192]) + -(mem[0, ext_call.return_data[0 len 28] + 192] % 32) + 256 len mem[0, ext_call.return_data[0 len 28] + 192] % 32]
                                                                                                                            _6878 = mem[64]
                                                                                                                            mem[64] = _4215 + mem[64] + 42
                                                                                                                            mem[_4215 + _4214 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                            mem[_4215 + _4214 + 46] = 32
                                                                                                                            mem[_4215 + _4214 + 78] = mem[_6878]
                                                                                                                            _6881 = mem[_6878]
                                                                                                                            mem[_4215 + _4214 + 110 len ceil32(mem[_6878])] = mem[_6878 + 32 len ceil32(mem[_6878])]
                                                                                                                            if not _6881 % 32:
                                                                                                                                revert with memory
                                                                                                                                  from mem[64]
                                                                                                                                   len _6881 + _4215 + _4214 + -mem[64] + 110
                                                                                                                            else:
                                                                                                                                mem[floor32(_6881) + _4215 + _4214 + 110] = mem[floor32(_6881) + _4215 + _4214 + -(_6881 % 32) + 142 len _6881 % 32]
                                                                                                                                revert with memory
                                                                                                                                  from mem[64]
                                                                                                                                   len floor32(_6881) + _4215 + _4214 + -mem[64] + 142
                                                                                                                        else:
                                                                                                                            if not return_data.size:
                                                                                                                                _4791 = mem[64]
                                                                                                                                mem[mem[64] + 32] = 'swap tomb '
                                                                                                                                mem[mem[64] + 42 len 0] = None
                                                                                                                                mem[mem[64] + 72 len 2] = uint16(stor4)
                                                                                                                                mem[mem[64] + 42 len 30] = Mask(176, 0, 'swap tomb '), mem[mem[64] + 64 len 8]
                                                                                                                                _6885 = mem[64]
                                                                                                                                mem[64] = mem[64] + 44
                                                                                                                                mem[_4791 + 44] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                mem[_4791 + 48] = 32
                                                                                                                                mem[_4791 + 80] = mem[_6885]
                                                                                                                                _6888 = mem[_6885]
                                                                                                                                mem[_4791 + 112 len ceil32(mem[_6885])] = mem[_6885 + 32 len ceil32(mem[_6885])]
                                                                                                                                if not _6888 % 32:
                                                                                                                                    revert with 0, 32, mem[_4791 + 80 len _6888 + 32]
                                                                                                                                else:
                                                                                                                                    mem[floor32(_6888) + _4791 + 112] = mem[floor32(_6888) + _4791 + -(_6888 % 32) + 144 len _6888 % 32]
                                                                                                                                    revert with 0, 32, mem[_4791 + 80 len floor32(_6888) + 64]
                                                                                                                            else:
                                                                                                                                _4604 = mem[64]
                                                                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                                                                mem[_4604] = return_data.size
                                                                                                                                mem[_4604 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                                _4793 = mem[64]
                                                                                                                                mem[mem[64] + 32] = 'swap tomb '
                                                                                                                                mem[mem[64] + 42 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                                mem[mem[64] + floor32(return_data.size) + -(return_data.size % 32) + 74 len return_data.size % 32] = mem[_4604 + floor32(return_data.size) + -(return_data.size % 32) + 64 len return_data.size % 32]
                                                                                                                                _6892 = mem[64]
                                                                                                                                mem[64] = return_data.size + mem[64] + 42
                                                                                                                                mem[return_data.size + _4793 + 42] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                                mem[return_data.size + _4793 + 46] = 32
                                                                                                                                mem[return_data.size + _4793 + 78] = mem[_6892]
                                                                                                                                _6895 = mem[_6892]
                                                                                                                                mem[return_data.size + _4793 + 110 len ceil32(mem[_6892])] = mem[_6892 + 32 len ceil32(mem[_6892])]
                                                                                                                                if not _6895 % 32:
                                                                                                                                    revert with 0, 32, mem[return_data.size + _4793 + 78 len _6895 + 32]
                                                                                                                                else:
                                                                                                                                    mem[floor32(_6895) + return_data.size + _4793 + 110] = mem[floor32(_6895) + return_data.size + _4793 + -(_6895 % 32) + 142 len _6895 % 32]
                                                                                                                                    revert with 0, 32, mem[return_data.size + _4793 + 78 len floor32(_6895) + 64]
                                                                                                                    else:
                                                                                                                        if not return_data.size:
                                                                                                                            mem[224] = 'swap tomb '
                                                                                                                            mem[234 len 0] = None
                                                                                                                            mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                                                            mem[64] = 236
                                                                                                                            mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                            mem[240] = 32
                                                                                                                            mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                                                            mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                                                            if not ext_call.return_data[0 len 28] % 32:
                                                                                                                                revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                                                            else:
                                                                                                                                mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                                                                revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                                                        else:
                                                                                                                            mem[192] = return_data.size
                                                                                                                            mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                            mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                            mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                            mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                            if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                                revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                            else:
                                                                                                                                mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                                revert with 0, 
                                                                                                                                            32,
                                                                                                                                            mem[ceil32(return_data.size) + 193],
                                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                                else:
                                                                                                                    if not return_data.size:
                                                                                                                        mem[224] = 'swap tomb '
                                                                                                                        mem[234 len 0] = None
                                                                                                                        mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                                                        mem[64] = 236
                                                                                                                        mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                        mem[240] = 32
                                                                                                                        mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                                                        mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                                                        if not ext_call.return_data[0 len 28] % 32:
                                                                                                                            revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                                                        else:
                                                                                                                            mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                                                            revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                                                    else:
                                                                                                                        mem[192] = return_data.size
                                                                                                                        mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                        mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                        mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                        mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                        if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                            revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                        else:
                                                                                                                            mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                            revert with 0, 
                                                                                                                                        32,
                                                                                                                                        mem[ceil32(return_data.size) + 193],
                                                                                                                                        mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                            else:
                                                                                                                if not return_data.size:
                                                                                                                    mem[224] = 'swap tomb '
                                                                                                                    mem[234 len 0] = None
                                                                                                                    mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                                                    mem[64] = 236
                                                                                                                    mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                    mem[240] = 32
                                                                                                                    mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                                                    mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                                                    if not ext_call.return_data[0 len 28] % 32:
                                                                                                                        revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                                                    else:
                                                                                                                        mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                                                        revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                                                else:
                                                                                                                    mem[192] = return_data.size
                                                                                                                    mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                    mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                    mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                    mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                    if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                        revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                    else:
                                                                                                                        mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                        revert with 0, 
                                                                                                                                    32,
                                                                                                                                    mem[ceil32(return_data.size) + 193],
                                                                                                                                    mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                        else:
                                                                                                            if not return_data.size:
                                                                                                                mem[224] = 'swap tomb '
                                                                                                                mem[234 len 0] = None
                                                                                                                mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                                                mem[64] = 236
                                                                                                                mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                mem[240] = 32
                                                                                                                mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                                                mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                                                if not ext_call.return_data[0 len 28] % 32:
                                                                                                                    revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                                                else:
                                                                                                                    mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                                                    revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                                            else:
                                                                                                                mem[192] = return_data.size
                                                                                                                mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                                mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                                mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                                mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                                mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                                mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                                mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                                if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                    revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                                else:
                                                                                                                    mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                    revert with 0, 
                                                                                                                                32,
                                                                                                                                mem[ceil32(return_data.size) + 193],
                                                                                                                                mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                    else:
                                                                                                        if not return_data.size:
                                                                                                            mem[224] = 'swap tomb '
                                                                                                            mem[234 len 0] = None
                                                                                                            mem[234 len 30] = Mask(240, 16, Mask(176, 0, 'swap tomb '), uint32(eth.balance(this.address)), 0) >> 16
                                                                                                            mem[64] = 236
                                                                                                            mem[236] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                            mem[240] = 32
                                                                                                            mem[272] = 0, ext_call.return_data[0 len 28]
                                                                                                            mem[304 len ceil32(0, ext_call.return_data[0 len 28])] = mem[224 len ceil32(0, ext_call.return_data[0 len 28])]
                                                                                                            if not ext_call.return_data[0 len 28] % 32:
                                                                                                                revert with 0, 32, mem[272 len 0, ext_call.return_data[0 len 28] + 32]
                                                                                                            else:
                                                                                                                mem[floor32(0, ext_call.return_data[0 len 28]) + 304] = mem[floor32(0, ext_call.return_data[0 len 28]) + -(ext_call.return_data[0 len 28] % 32) + 336 len ext_call.return_data[0 len 28] % 32]
                                                                                                                revert with 0, 32, mem[272 len floor32(0, ext_call.return_data[0 len 28]) + 64]
                                                                                                        else:
                                                                                                            mem[192] = return_data.size
                                                                                                            mem[224 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                                            mem[ceil32(return_data.size) + 225] = 'swap tomb '
                                                                                                            mem[ceil32(return_data.size) + 235 len floor32(return_data.size)] = ext_call.return_data[0 len floor32(return_data.size)]
                                                                                                            mem[ceil32(return_data.size) + floor32(return_data.size) + -(return_data.size % 32) + 267 len return_data.size % 32] = mem[floor32(return_data.size) + -(return_data.size % 32) + 256 len return_data.size % 32]
                                                                                                            mem[return_data.size + ceil32(return_data.size) + 235] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                                            mem[return_data.size + ceil32(return_data.size) + 239] = 32
                                                                                                            mem[return_data.size + ceil32(return_data.size) + 271] = mem[ceil32(return_data.size) + 193]
                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len ceil32(mem[ceil32(return_data.size) + 193])] = mem[ceil32(return_data.size) + 225 len ceil32(mem[ceil32(return_data.size) + 193])]
                                                                                                            if not mem[ceil32(return_data.size) + 193] % 32:
                                                                                                                revert with 0, 32, mem[return_data.size + ceil32(return_data.size) + 271 len mem[ceil32(return_data.size) + 193] + 32]
                                                                                                            else:
                                                                                                                mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + 303] = mem[floor32(mem[ceil32(return_data.size) + 193]) + return_data.size + ceil32(return_data.size) + -(mem[ceil32(return_data.size) + 193] % 32) + 335 len mem[ceil32(return_data.size) + 193] % 32]
                                                                                                                revert with 0, 
                                                                                                                            32,
                                                                                                                            mem[ceil32(return_data.size) + 193],
                                                                                                                            mem[return_data.size + ceil32(return_data.size) + 303 len floor32(mem[ceil32(return_data.size) + 193]) + 32]
                                                                                                else:
                                                                                                    require ext_code.size(address(sub_dbd33e45Address))
                                                                                                    staticcall address(sub_dbd33e45Address).0x70a08231 with:
                                                                                                            gas gas_remaining wei
                                                                                                           args this.address
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        require return_data.size >= 32
                                                                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                        else:
                                                                                                            if 0 > ext_call.return_data[0]:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                if eth.balance(this.address) > eth.balance(this.address):
                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                else:
                                                                                                                    emit 0x81e6d68f: ext_call.return_data[0], 0
                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                            gas gas_remaining wei
                                                                                                                           args this.address
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                    else:
                                                                                                                        require return_data.size >= 32
                                                                                                                        if ext_call.return_data[0] <= 0:
                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                    gas gas_remaining wei
                                                                                                                                   args this.address
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                            else:
                                                                                                                                require return_data.size >= 32
                                                                                                                                if ext_call.return_data[0]:
                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                         gas gas_remaining wei
                                                                                                                                        args sub_63f96cf4Address, -1
                                                                                                                                    if not ext_call.success:
                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                    else:
                                                                                                                                        require return_data.size >= 32
                                                                                                                                        require ext_code.size(sub_63f96cf4Address)
                                                                                                                                        call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                             gas gas_remaining wei
                                                                                                                                            args ext_call.return_data[0]
                                                                                                                                        if not ext_call.success:
                                                                                                                                            revert with 0, 'masonry staking failed'
                                                                                                                                        else:
                                                                                                                                            emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                else:
                                                                                                                        else:
                                                                                                                            if ext_call.return_data[0]:
                                                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                                                staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                                        gas gas_remaining wei
                                                                                                                                       args this.address
                                                                                                                                if not ext_call.success:
                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                else:
                                                                                                                                    require return_data.size >= 32
                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                         gas gas_remaining wei
                                                                                                                                        args zapAddress, -1
                                                                                                                                    if not ext_call.success:
                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                    else:
                                                                                                                                        require return_data.size >= 32
                                                                                                                                        require ext_code.size(sub_1458100bAddress)
                                                                                                                                        call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                                             gas gas_remaining wei
                                                                                                                                            args zapAddress, -1
                                                                                                                                        if not ext_call.success:
                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                        else:
                                                                                                                                            require return_data.size >= 32
                                                                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                                                                            call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                args zapAddress, -1
                                                                                                                                            if not ext_call.success:
                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                            else:
                                                                                                                                                require return_data.size >= 32
                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                    args sub_f6c6e5e8Address, -1
                                                                                                                                                if not ext_call.success:
                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                else:
                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                    require ext_code.size(sub_1458100bAddress)
                                                                                                                                                    call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                        args sub_f6c6e5e8Address, -1
                                                                                                                                                    if not ext_call.success:
                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                    else:
                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                        require ext_code.size(sub_33aa2191Address)
                                                                                                                                                        call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                            args sub_f6c6e5e8Address, -1
                                                                                                                                                        if not ext_call.success:
                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                        else:
                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                            emit 0xcdb5839a: ext_call.return_data[0]
                                                                                                                                                            require ext_code.size(zapAddress)
                                                                                                                                                            call zapAddress.0xcee6202c with:
                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                args address(sub_85b374c3Address), ext_call.return_data[0], sub_33aa2191Address, sub_f6c6e5e8Address, this.address
                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                            else:
                                                                                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                                                                                staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                                                                        gas gas_remaining wei
                                                                                                                                                                       args this.address
                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                else:
                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                                    else:
                                                                                                                                                                        emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                gas gas_remaining wei
                                                                                                                                                                               args this.address
                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                        else:
                                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                                                                                                            call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                                args sub_f088996fAddress, -1
                                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                            else:
                                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                                require ext_code.size(sub_f088996fAddress)
                                                                                                                                                                                call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                                    args 1, 0
                                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                                    revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                                                                                else:
                                                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                            gas gas_remaining wei
                                                                                                                                                                                           args this.address
                                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                    else:
                                                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                                                        if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                                                            revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                                                        else:
                                                                                                                                                                                            emit 0x8ced237d: 0
                                                                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                                                    gas gas_remaining wei
                                                                                                                                                                                                   args this.address
                                                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                            else:
                                                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                                                if ext_call.return_data[0]:
                                                                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                                                    call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                                                                        args sub_63f96cf4Address, -1
                                                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                                                    else:
                                                                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                                                                        require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                                                                        call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                                                                             gas gas_remaining wei
                                                                                                                                                                                                            args ext_call.return_data[0]
                                                                                                                                                                                                        if not ext_call.success:
                                                                                                                                                                                                            revert with 0, 'masonry staking failed'
                                                                                                                                                                                                        else:
                                                                                                                                                                                                            emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                                                                else:
                                                                                                                            else:
                                                                                                                                emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                        gas gas_remaining wei
                                                                                                                                       args this.address
                                                                                                                                if not ext_call.success:
                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                else:
                                                                                                                                    require return_data.size >= 32
                                                                                                                                    require ext_code.size(sub_33aa2191Address)
                                                                                                                                    call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                         gas gas_remaining wei
                                                                                                                                        args sub_f088996fAddress, -1
                                                                                                                                    if not ext_call.success:
                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                    else:
                                                                                                                                        require return_data.size >= 32
                                                                                                                                        require ext_code.size(sub_f088996fAddress)
                                                                                                                                        call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                                             gas gas_remaining wei
                                                                                                                                            args 1, 0
                                                                                                                                        if not ext_call.success:
                                                                                                                                            revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                                        else:
                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                    gas gas_remaining wei
                                                                                                                                                   args this.address
                                                                                                                                            if not ext_call.success:
                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                            else:
                                                                                                                                                require return_data.size >= 32
                                                                                                                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                else:
                                                                                                                                                    emit 0x8ced237d: 0
                                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                            gas gas_remaining wei
                                                                                                                                                           args this.address
                                                                                                                                                    if not ext_call.success:
                                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                    else:
                                                                                                                                                        require return_data.size >= 32
                                                                                                                                                        if ext_call.return_data[0]:
                                                                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                            call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                                args sub_63f96cf4Address, -1
                                                                                                                                                            if not ext_call.success:
                                                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                            else:
                                                                                                                                                                require return_data.size >= 32
                                                                                                                                                                require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                                call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                    args ext_call.return_data[0]
                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                    revert with 0, 'masonry staking failed'
                                                                                                                                                                else:
                                                                                                                                                                    emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                        else:
                                                        else:
                                                            require ext_code.size(address(sub_85b374c3Address))
                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                    gas gas_remaining wei
                                                                   args this.address
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                require return_data.size >= 32
                                                                require ext_code.size(sub_1e9b8c59Address)
                                                                call sub_1e9b8c59Address.approve(address arg1, uint256 arg2) with:
                                                                     gas gas_remaining wei
                                                                    args sub_f088996fAddress, -1
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    require return_data.size >= 32
                                                                    require ext_code.size(sub_f088996fAddress)
                                                                    call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                         gas gas_remaining wei
                                                                        args 0
                                                                    if not ext_call.success:
                                                                        revert with 0, 'tomb-wftm LP deposit failed'
                                                                    else:
                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                gas gas_remaining wei
                                                                               args this.address
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            require return_data.size >= 32
                                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                            else:
                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                        gas gas_remaining wei
                                                                                       args this.address
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    require return_data.size >= 32
                                                                                    if ext_call.return_data[0] <= 0:
                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                gas gas_remaining wei
                                                                                               args this.address
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            require return_data.size >= 32
                                                                                            if ext_call.return_data[0]:
                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args sub_63f96cf4Address, -1
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    require return_data.size >= 32
                                                                                                    require ext_code.size(sub_63f96cf4Address)
                                                                                                    call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args ext_call.return_data[0]
                                                                                                    if not ext_call.success:
                                                                                                        revert with 0, 'masonry staking failed'
                                                                                                    else:
                                                                                                        emit 0xe4dba445: ext_call.return_data[0]
                                                                                            else:
                                                                                    else:
                                                                                        if ext_call.return_data[0]:
                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                            staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                    gas gas_remaining wei
                                                                                                   args this.address
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            else:
                                                                                                require return_data.size >= 32
                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args zapAddress, -1
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    require return_data.size >= 32
                                                                                                    require ext_code.size(sub_1458100bAddress)
                                                                                                    call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args zapAddress, -1
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        require return_data.size >= 32
                                                                                                        require ext_code.size(sub_33aa2191Address)
                                                                                                        call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args zapAddress, -1
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            require return_data.size >= 32
                                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                                            call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args sub_f6c6e5e8Address, -1
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            else:
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_code.size(sub_1458100bAddress)
                                                                                                                call sub_1458100bAddress.approve(address arg1, uint256 arg2) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args sub_f6c6e5e8Address, -1
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                else:
                                                                                                                    require return_data.size >= 32
                                                                                                                    require ext_code.size(sub_33aa2191Address)
                                                                                                                    call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args sub_f6c6e5e8Address, -1
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                    else:
                                                                                                                        require return_data.size >= 32
                                                                                                                        emit 0xcdb5839a: ext_call.return_data[0]
                                                                                                                        require ext_code.size(zapAddress)
                                                                                                                        call zapAddress.0xcee6202c with:
                                                                                                                             gas gas_remaining wei
                                                                                                                            args 0, uint32(stor5), ext_call.return_data[0], sub_33aa2191Address, sub_f6c6e5e8Address, address(this.address)
                                                                                                                        if not ext_call.success:
                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                        else:
                                                                                                                            require ext_code.size(sub_33aa2191Address)
                                                                                                                            staticcall sub_33aa2191Address.0x70a08231 with:
                                                                                                                                    gas gas_remaining wei
                                                                                                                                   args this.address
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                                            else:
                                                                                                                                require return_data.size >= 32
                                                                                                                                if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                    revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                else:
                                                                                                                                    emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                                                                    require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                    staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                            gas gas_remaining wei
                                                                                                                                           args this.address
                                                                                                                                    if not ext_call.success:
                                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                    else:
                                                                                                                                        require return_data.size >= 32
                                                                                                                                        require ext_code.size(sub_33aa2191Address)
                                                                                                                                        call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                                                             gas gas_remaining wei
                                                                                                                                            args sub_f088996fAddress, -1
                                                                                                                                        if not ext_call.success:
                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                        else:
                                                                                                                                            require return_data.size >= 32
                                                                                                                                            require ext_code.size(sub_f088996fAddress)
                                                                                                                                            call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                                                                 gas gas_remaining wei
                                                                                                                                                args 1, 0
                                                                                                                                            if not ext_call.success:
                                                                                                                                                revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                                                            else:
                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                        gas gas_remaining wei
                                                                                                                                                       args this.address
                                                                                                                                                if not ext_call.success:
                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                else:
                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                    if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                                                        revert with 0, 'SafeMath: subtraction overflow'
                                                                                                                                                    else:
                                                                                                                                                        emit 0x8ced237d: 0
                                                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                                                                gas gas_remaining wei
                                                                                                                                                               args this.address
                                                                                                                                                        if not ext_call.success:
                                                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                        else:
                                                                                                                                                            require return_data.size >= 32
                                                                                                                                                            if ext_call.return_data[0]:
                                                                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                                                                call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                                                                     gas gas_remaining wei
                                                                                                                                                                    args sub_63f96cf4Address, -1
                                                                                                                                                                if not ext_call.success:
                                                                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                                                                else:
                                                                                                                                                                    require return_data.size >= 32
                                                                                                                                                                    require ext_code.size(sub_63f96cf4Address)
                                                                                                                                                                    call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                                                         gas gas_remaining wei
                                                                                                                                                                        args ext_call.return_data[0]
                                                                                                                                                                    if not ext_call.success:
                                                                                                                                                                        revert with 0, 'masonry staking failed'
                                                                                                                                                                    else:
                                                                                                                                                                        emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                                                            else:
                                                                                        else:
                                                                                            emit 0x1aa29c48: ext_call.return_data[0], 0
                                                                                            require ext_code.size(address(sub_85b374c3Address))
                                                                                            staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                    gas gas_remaining wei
                                                                                                   args this.address
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            else:
                                                                                                require return_data.size >= 32
                                                                                                require ext_code.size(sub_33aa2191Address)
                                                                                                call sub_33aa2191Address.approve(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args sub_f088996fAddress, -1
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    require return_data.size >= 32
                                                                                                    require ext_code.size(sub_f088996fAddress)
                                                                                                    call sub_f088996fAddress.deposit(uint256 arg1, uint256 arg2) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args 1, 0
                                                                                                    if not ext_call.success:
                                                                                                        revert with 0, 'tshare-wftm LP deposit failed'
                                                                                                    else:
                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                        staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                gas gas_remaining wei
                                                                                                               args this.address
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            require return_data.size >= 32
                                                                                                            if ext_call.return_data[0] > ext_call.return_data[0]:
                                                                                                                revert with 0, 'SafeMath: subtraction overflow'
                                                                                                            else:
                                                                                                                emit 0x8ced237d: 0
                                                                                                                require ext_code.size(address(sub_85b374c3Address))
                                                                                                                staticcall address(sub_85b374c3Address).0x70a08231 with:
                                                                                                                        gas gas_remaining wei
                                                                                                                       args this.address
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                else:
                                                                                                                    require return_data.size >= 32
                                                                                                                    if ext_call.return_data[0]:
                                                                                                                        require ext_code.size(address(sub_85b374c3Address))
                                                                                                                        call address(sub_85b374c3Address).approve(address arg1, uint256 arg2) with:
                                                                                                                             gas gas_remaining wei
                                                                                                                            args sub_63f96cf4Address, -1
                                                                                                                        if not ext_call.success:
                                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                                        else:
                                                                                                                            require return_data.size >= 32
                                                                                                                            require ext_code.size(sub_63f96cf4Address)
                                                                                                                            call sub_63f96cf4Address.stake(uint256 arg1) with:
                                                                                                                                 gas gas_remaining wei
                                                                                                                                args ext_call.return_data[0]
                                                                                                                            if not ext_call.success:
                                                                                                                                revert with 0, 'masonry staking failed'
                                                                                                                            else:
                                                                                                                                emit 0xe4dba445: ext_call.return_data[0]
                                                                                                                    else:
}



}
